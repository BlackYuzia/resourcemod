// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: networkbasetypes.proto

#include "networkbasetypes.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
        template <typename>
PROTOBUF_CONSTEXPR CMsgVector::CMsgVector(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.x_)*/ 0,
      /*decltype(_impl_.y_)*/ 0,
      /*decltype(_impl_.z_)*/ 0,
      /*decltype(_impl_.w_)*/ 0,
    } {}
struct CMsgVectorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgVectorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgVectorDefaultTypeInternal() {}
  union {
    CMsgVector _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgVectorDefaultTypeInternal _CMsgVector_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgVector2D::CMsgVector2D(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.x_)*/ 0,
      /*decltype(_impl_.y_)*/ 0,
    } {}
struct CMsgVector2DDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgVector2DDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgVector2DDefaultTypeInternal() {}
  union {
    CMsgVector2D _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgVector2DDefaultTypeInternal _CMsgVector2D_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgQAngle::CMsgQAngle(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.x_)*/ 0,
      /*decltype(_impl_.y_)*/ 0,
      /*decltype(_impl_.z_)*/ 0,
    } {}
struct CMsgQAngleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgQAngleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgQAngleDefaultTypeInternal() {}
  union {
    CMsgQAngle _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgQAngleDefaultTypeInternal _CMsgQAngle_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgQuaternion::CMsgQuaternion(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.x_)*/ 0,
      /*decltype(_impl_.y_)*/ 0,
      /*decltype(_impl_.z_)*/ 0,
      /*decltype(_impl_.w_)*/ 0,
    } {}
struct CMsgQuaternionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgQuaternionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgQuaternionDefaultTypeInternal() {}
  union {
    CMsgQuaternion _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgQuaternionDefaultTypeInternal _CMsgQuaternion_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgTransform::CMsgTransform(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.position_)*/ nullptr,
      /*decltype(_impl_.orientation_)*/ nullptr,
      /*decltype(_impl_.scale_)*/ 0,
    } {}
struct CMsgTransformDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgTransformDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgTransformDefaultTypeInternal() {}
  union {
    CMsgTransform _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgTransformDefaultTypeInternal _CMsgTransform_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgRGBA::CMsgRGBA(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.r_)*/ 0,
      /*decltype(_impl_.g_)*/ 0,
      /*decltype(_impl_.b_)*/ 0,
      /*decltype(_impl_.a_)*/ 0,
    } {}
struct CMsgRGBADefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgRGBADefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgRGBADefaultTypeInternal() {}
  union {
    CMsgRGBA _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgRGBADefaultTypeInternal _CMsgRGBA_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgPlayerInfo::CMsgPlayerInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.xuid_)*/ ::uint64_t{0u},
      /*decltype(_impl_.steamid_)*/ ::uint64_t{0u},
      /*decltype(_impl_.userid_)*/ 0,
      /*decltype(_impl_.fakeplayer_)*/ false,
      /*decltype(_impl_.ishltv_)*/ false,
    } {}
struct CMsgPlayerInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgPlayerInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgPlayerInfoDefaultTypeInternal() {}
  union {
    CMsgPlayerInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgPlayerInfoDefaultTypeInternal _CMsgPlayerInfo_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CEntityMsg::CEntityMsg(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.target_entity_)*/ 16777215u,
    } {}
struct CEntityMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CEntityMsgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CEntityMsgDefaultTypeInternal() {}
  union {
    CEntityMsg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CEntityMsgDefaultTypeInternal _CEntityMsg_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsg_CVars_CVar::CMsg_CVars_CVar(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.value_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct CMsg_CVars_CVarDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsg_CVars_CVarDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsg_CVars_CVarDefaultTypeInternal() {}
  union {
    CMsg_CVars_CVar _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsg_CVars_CVarDefaultTypeInternal _CMsg_CVars_CVar_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsg_CVars::CMsg_CVars(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.cvars_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CMsg_CVarsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsg_CVarsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsg_CVarsDefaultTypeInternal() {}
  union {
    CMsg_CVars _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsg_CVarsDefaultTypeInternal _CMsg_CVars_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR CNETMsg_NOP::CNETMsg_NOP(::_pbi::ConstantInitialized) {}
struct CNETMsg_NOPDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CNETMsg_NOPDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CNETMsg_NOPDefaultTypeInternal() {}
  union {
    CNETMsg_NOP _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CNETMsg_NOPDefaultTypeInternal _CNETMsg_NOP_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CNETMsg_SplitScreenUser::CNETMsg_SplitScreenUser(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.slot_)*/ 0,
    } {}
struct CNETMsg_SplitScreenUserDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CNETMsg_SplitScreenUserDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CNETMsg_SplitScreenUserDefaultTypeInternal() {}
  union {
    CNETMsg_SplitScreenUser _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CNETMsg_SplitScreenUserDefaultTypeInternal _CNETMsg_SplitScreenUser_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CNETMsg_Disconnect::CNETMsg_Disconnect(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.reason_)*/ 0,
    } {}
struct CNETMsg_DisconnectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CNETMsg_DisconnectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CNETMsg_DisconnectDefaultTypeInternal() {}
  union {
    CNETMsg_Disconnect _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CNETMsg_DisconnectDefaultTypeInternal _CNETMsg_Disconnect_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CNETMsg_Tick::CNETMsg_Tick(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.tick_)*/ 0u,
      /*decltype(_impl_.host_frametime_)*/ 0u,
      /*decltype(_impl_.host_frametime_std_deviation_)*/ 0u,
      /*decltype(_impl_.host_computationtime_)*/ 0u,
      /*decltype(_impl_.host_computationtime_std_deviation_)*/ 0u,
      /*decltype(_impl_.host_framestarttime_std_deviation_)*/ 0u,
      /*decltype(_impl_.host_loss_)*/ 0u,
      /*decltype(_impl_.host_unfiltered_frametime_)*/ 0u,
      /*decltype(_impl_.hltv_replay_flags_)*/ 0u,
    } {}
struct CNETMsg_TickDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CNETMsg_TickDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CNETMsg_TickDefaultTypeInternal() {}
  union {
    CNETMsg_Tick _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CNETMsg_TickDefaultTypeInternal _CNETMsg_Tick_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CNETMsg_StringCmd::CNETMsg_StringCmd(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.command_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.prediction_sync_)*/ 0u,
    } {}
struct CNETMsg_StringCmdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CNETMsg_StringCmdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CNETMsg_StringCmdDefaultTypeInternal() {}
  union {
    CNETMsg_StringCmd _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CNETMsg_StringCmdDefaultTypeInternal _CNETMsg_StringCmd_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CNETMsg_SetConVar::CNETMsg_SetConVar(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.convars_)*/ nullptr,
    } {}
struct CNETMsg_SetConVarDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CNETMsg_SetConVarDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CNETMsg_SetConVarDefaultTypeInternal() {}
  union {
    CNETMsg_SetConVar _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CNETMsg_SetConVarDefaultTypeInternal _CNETMsg_SetConVar_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CNETMsg_SignonState::CNETMsg_SignonState(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.players_networkids_)*/ {},
      /*decltype(_impl_.map_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.addons_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.signon_state_)*/ 0,
      /*decltype(_impl_.spawn_count_)*/ 0u,
      /*decltype(_impl_.num_server_players_)*/ 0u,
    } {}
struct CNETMsg_SignonStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CNETMsg_SignonStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CNETMsg_SignonStateDefaultTypeInternal() {}
  union {
    CNETMsg_SignonState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CNETMsg_SignonStateDefaultTypeInternal _CNETMsg_SignonState_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_GameEvent_key_t::CSVCMsg_GameEvent_key_t(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.val_string_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.type_)*/ 0,
      /*decltype(_impl_.val_float_)*/ 0,
      /*decltype(_impl_.val_long_)*/ 0,
      /*decltype(_impl_.val_short_)*/ 0,
      /*decltype(_impl_.val_byte_)*/ 0,
      /*decltype(_impl_.val_bool_)*/ false,
      /*decltype(_impl_.val_uint64_)*/ ::uint64_t{0u},
    } {}
struct CSVCMsg_GameEvent_key_tDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_GameEvent_key_tDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_GameEvent_key_tDefaultTypeInternal() {}
  union {
    CSVCMsg_GameEvent_key_t _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_GameEvent_key_tDefaultTypeInternal _CSVCMsg_GameEvent_key_t_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_GameEvent::CSVCMsg_GameEvent(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.keys_)*/ {},
      /*decltype(_impl_.event_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.eventid_)*/ 0,
    } {}
struct CSVCMsg_GameEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_GameEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_GameEventDefaultTypeInternal() {}
  union {
    CSVCMsg_GameEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_GameEventDefaultTypeInternal _CSVCMsg_GameEvent_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsgList_GameEvents_event_t::CSVCMsgList_GameEvents_event_t(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.event_)*/ nullptr,
      /*decltype(_impl_.tick_)*/ 0,
    } {}
struct CSVCMsgList_GameEvents_event_tDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsgList_GameEvents_event_tDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsgList_GameEvents_event_tDefaultTypeInternal() {}
  union {
    CSVCMsgList_GameEvents_event_t _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsgList_GameEvents_event_tDefaultTypeInternal _CSVCMsgList_GameEvents_event_t_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsgList_GameEvents::CSVCMsgList_GameEvents(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.events_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CSVCMsgList_GameEventsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsgList_GameEventsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsgList_GameEventsDefaultTypeInternal() {}
  union {
    CSVCMsgList_GameEvents _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsgList_GameEventsDefaultTypeInternal _CSVCMsgList_GameEvents_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CNETMsg_SpawnGroup_Load::CNETMsg_SpawnGroup_Load(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.worldname_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.entitylumpname_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.entityfiltername_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.spawngroupmanifest_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.localnamefixup_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.parentnamefixup_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.savegamefilename_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.worldgroupname_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.world_offset_pos_)*/ nullptr,
      /*decltype(_impl_.world_offset_angle_)*/ nullptr,
      /*decltype(_impl_.spawngrouphandle_)*/ 0u,
      /*decltype(_impl_.spawngroupownerhandle_)*/ 0u,
      /*decltype(_impl_.flags_)*/ 0u,
      /*decltype(_impl_.tickcount_)*/ 0,
      /*decltype(_impl_.manifestloadpriority_)*/ 0,
      /*decltype(_impl_.worldgroupid_)*/ 0u,
      /*decltype(_impl_.manifestincomplete_)*/ false,
      /*decltype(_impl_.leveltransition_)*/ false,
      /*decltype(_impl_.creationsequence_)*/ 0u,
      /*decltype(_impl_.spawngroupparenthandle_)*/ 0u,
    } {}
struct CNETMsg_SpawnGroup_LoadDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CNETMsg_SpawnGroup_LoadDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CNETMsg_SpawnGroup_LoadDefaultTypeInternal() {}
  union {
    CNETMsg_SpawnGroup_Load _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CNETMsg_SpawnGroup_LoadDefaultTypeInternal _CNETMsg_SpawnGroup_Load_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CNETMsg_SpawnGroup_ManifestUpdate::CNETMsg_SpawnGroup_ManifestUpdate(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.spawngroupmanifest_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.spawngrouphandle_)*/ 0u,
      /*decltype(_impl_.manifestincomplete_)*/ false,
    } {}
struct CNETMsg_SpawnGroup_ManifestUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CNETMsg_SpawnGroup_ManifestUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CNETMsg_SpawnGroup_ManifestUpdateDefaultTypeInternal() {}
  union {
    CNETMsg_SpawnGroup_ManifestUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CNETMsg_SpawnGroup_ManifestUpdateDefaultTypeInternal _CNETMsg_SpawnGroup_ManifestUpdate_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CNETMsg_SpawnGroup_SetCreationTick::CNETMsg_SpawnGroup_SetCreationTick(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.spawngrouphandle_)*/ 0u,
      /*decltype(_impl_.tickcount_)*/ 0,
      /*decltype(_impl_.creationsequence_)*/ 0u,
    } {}
struct CNETMsg_SpawnGroup_SetCreationTickDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CNETMsg_SpawnGroup_SetCreationTickDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CNETMsg_SpawnGroup_SetCreationTickDefaultTypeInternal() {}
  union {
    CNETMsg_SpawnGroup_SetCreationTick _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CNETMsg_SpawnGroup_SetCreationTickDefaultTypeInternal _CNETMsg_SpawnGroup_SetCreationTick_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CNETMsg_SpawnGroup_Unload::CNETMsg_SpawnGroup_Unload(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.spawngrouphandle_)*/ 0u,
      /*decltype(_impl_.flags_)*/ 0u,
      /*decltype(_impl_.tickcount_)*/ 0,
    } {}
struct CNETMsg_SpawnGroup_UnloadDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CNETMsg_SpawnGroup_UnloadDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CNETMsg_SpawnGroup_UnloadDefaultTypeInternal() {}
  union {
    CNETMsg_SpawnGroup_Unload _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CNETMsg_SpawnGroup_UnloadDefaultTypeInternal _CNETMsg_SpawnGroup_Unload_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CNETMsg_SpawnGroup_LoadCompleted::CNETMsg_SpawnGroup_LoadCompleted(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.spawngrouphandle_)*/ 0u,
    } {}
struct CNETMsg_SpawnGroup_LoadCompletedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CNETMsg_SpawnGroup_LoadCompletedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CNETMsg_SpawnGroup_LoadCompletedDefaultTypeInternal() {}
  union {
    CNETMsg_SpawnGroup_LoadCompleted _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CNETMsg_SpawnGroup_LoadCompletedDefaultTypeInternal _CNETMsg_SpawnGroup_LoadCompleted_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_GameSessionConfiguration::CSVCMsg_GameSessionConfiguration(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.hostname_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.savegamename_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.s1_mapname_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.gamemode_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.server_ip_address_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.data_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.previouslevel_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.landmarkname_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.is_multiplayer_)*/ false,
      /*decltype(_impl_.is_loadsavegame_)*/ false,
      /*decltype(_impl_.is_background_map_)*/ false,
      /*decltype(_impl_.is_headless_)*/ false,
      /*decltype(_impl_.min_client_limit_)*/ 0u,
      /*decltype(_impl_.max_client_limit_)*/ 0u,
      /*decltype(_impl_.max_clients_)*/ 0u,
      /*decltype(_impl_.tick_interval_)*/ 0u,
      /*decltype(_impl_.is_localonly_)*/ false,
      /*decltype(_impl_.no_steam_server_)*/ false,
      /*decltype(_impl_.is_transition_)*/ false,
    } {}
struct CSVCMsg_GameSessionConfigurationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_GameSessionConfigurationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_GameSessionConfigurationDefaultTypeInternal() {}
  union {
    CSVCMsg_GameSessionConfiguration _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_GameSessionConfigurationDefaultTypeInternal _CSVCMsg_GameSessionConfiguration_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CNETMsg_DebugOverlay::CNETMsg_DebugOverlay(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.vectors_)*/ {},
      /*decltype(_impl_.colors_)*/ {},
      /*decltype(_impl_.dimensions_)*/ {},
      /*decltype(_impl_.times_)*/ {},
      /*decltype(_impl_.bools_)*/ {},
      /*decltype(_impl_.uint64s_)*/ {},
      /*decltype(_impl_.strings_)*/ {},
      /*decltype(_impl_.etype_)*/ 0,
    } {}
struct CNETMsg_DebugOverlayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CNETMsg_DebugOverlayDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CNETMsg_DebugOverlayDefaultTypeInternal() {}
  union {
    CNETMsg_DebugOverlay _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CNETMsg_DebugOverlayDefaultTypeInternal _CNETMsg_DebugOverlay_default_instance_;
static ::_pb::Metadata file_level_metadata_networkbasetypes_2eproto[28];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_networkbasetypes_2eproto[3];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_networkbasetypes_2eproto = nullptr;
const ::uint32_t TableStruct_networkbasetypes_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::CMsgVector, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgVector, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgVector, _impl_.x_),
    PROTOBUF_FIELD_OFFSET(::CMsgVector, _impl_.y_),
    PROTOBUF_FIELD_OFFSET(::CMsgVector, _impl_.z_),
    PROTOBUF_FIELD_OFFSET(::CMsgVector, _impl_.w_),
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::CMsgVector2D, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgVector2D, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgVector2D, _impl_.x_),
    PROTOBUF_FIELD_OFFSET(::CMsgVector2D, _impl_.y_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::CMsgQAngle, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgQAngle, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgQAngle, _impl_.x_),
    PROTOBUF_FIELD_OFFSET(::CMsgQAngle, _impl_.y_),
    PROTOBUF_FIELD_OFFSET(::CMsgQAngle, _impl_.z_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::CMsgQuaternion, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgQuaternion, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgQuaternion, _impl_.x_),
    PROTOBUF_FIELD_OFFSET(::CMsgQuaternion, _impl_.y_),
    PROTOBUF_FIELD_OFFSET(::CMsgQuaternion, _impl_.z_),
    PROTOBUF_FIELD_OFFSET(::CMsgQuaternion, _impl_.w_),
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::CMsgTransform, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgTransform, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgTransform, _impl_.position_),
    PROTOBUF_FIELD_OFFSET(::CMsgTransform, _impl_.scale_),
    PROTOBUF_FIELD_OFFSET(::CMsgTransform, _impl_.orientation_),
    0,
    2,
    1,
    PROTOBUF_FIELD_OFFSET(::CMsgRGBA, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgRGBA, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgRGBA, _impl_.r_),
    PROTOBUF_FIELD_OFFSET(::CMsgRGBA, _impl_.g_),
    PROTOBUF_FIELD_OFFSET(::CMsgRGBA, _impl_.b_),
    PROTOBUF_FIELD_OFFSET(::CMsgRGBA, _impl_.a_),
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::CMsgPlayerInfo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgPlayerInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgPlayerInfo, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::CMsgPlayerInfo, _impl_.xuid_),
    PROTOBUF_FIELD_OFFSET(::CMsgPlayerInfo, _impl_.userid_),
    PROTOBUF_FIELD_OFFSET(::CMsgPlayerInfo, _impl_.steamid_),
    PROTOBUF_FIELD_OFFSET(::CMsgPlayerInfo, _impl_.fakeplayer_),
    PROTOBUF_FIELD_OFFSET(::CMsgPlayerInfo, _impl_.ishltv_),
    0,
    1,
    3,
    2,
    4,
    5,
    PROTOBUF_FIELD_OFFSET(::CEntityMsg, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CEntityMsg, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CEntityMsg, _impl_.target_entity_),
    0,
    PROTOBUF_FIELD_OFFSET(::CMsg_CVars_CVar, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsg_CVars_CVar, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsg_CVars_CVar, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::CMsg_CVars_CVar, _impl_.value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CMsg_CVars, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsg_CVars, _impl_.cvars_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CNETMsg_NOP, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SplitScreenUser, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SplitScreenUser, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SplitScreenUser, _impl_.slot_),
    0,
    PROTOBUF_FIELD_OFFSET(::CNETMsg_Disconnect, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_Disconnect, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CNETMsg_Disconnect, _impl_.reason_),
    0,
    PROTOBUF_FIELD_OFFSET(::CNETMsg_Tick, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_Tick, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CNETMsg_Tick, _impl_.tick_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_Tick, _impl_.host_frametime_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_Tick, _impl_.host_frametime_std_deviation_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_Tick, _impl_.host_computationtime_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_Tick, _impl_.host_computationtime_std_deviation_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_Tick, _impl_.host_framestarttime_std_deviation_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_Tick, _impl_.host_loss_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_Tick, _impl_.host_unfiltered_frametime_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_Tick, _impl_.hltv_replay_flags_),
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    PROTOBUF_FIELD_OFFSET(::CNETMsg_StringCmd, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_StringCmd, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CNETMsg_StringCmd, _impl_.command_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_StringCmd, _impl_.prediction_sync_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SetConVar, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SetConVar, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SetConVar, _impl_.convars_),
    0,
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SignonState, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SignonState, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SignonState, _impl_.signon_state_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SignonState, _impl_.spawn_count_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SignonState, _impl_.num_server_players_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SignonState, _impl_.players_networkids_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SignonState, _impl_.map_name_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SignonState, _impl_.addons_),
    2,
    3,
    4,
    ~0u,
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameEvent_key_t, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameEvent_key_t, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameEvent_key_t, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameEvent_key_t, _impl_.val_string_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameEvent_key_t, _impl_.val_float_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameEvent_key_t, _impl_.val_long_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameEvent_key_t, _impl_.val_short_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameEvent_key_t, _impl_.val_byte_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameEvent_key_t, _impl_.val_bool_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameEvent_key_t, _impl_.val_uint64_),
    1,
    0,
    2,
    3,
    4,
    5,
    6,
    7,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameEvent, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameEvent, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameEvent, _impl_.event_name_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameEvent, _impl_.eventid_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameEvent, _impl_.keys_),
    0,
    1,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::CSVCMsgList_GameEvents_event_t, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsgList_GameEvents_event_t, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsgList_GameEvents_event_t, _impl_.tick_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsgList_GameEvents_event_t, _impl_.event_),
    1,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CSVCMsgList_GameEvents, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsgList_GameEvents, _impl_.events_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, _impl_.worldname_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, _impl_.entitylumpname_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, _impl_.entityfiltername_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, _impl_.spawngrouphandle_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, _impl_.spawngroupownerhandle_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, _impl_.world_offset_pos_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, _impl_.world_offset_angle_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, _impl_.spawngroupmanifest_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, _impl_.flags_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, _impl_.tickcount_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, _impl_.manifestincomplete_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, _impl_.localnamefixup_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, _impl_.parentnamefixup_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, _impl_.manifestloadpriority_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, _impl_.worldgroupid_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, _impl_.creationsequence_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, _impl_.savegamefilename_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, _impl_.spawngroupparenthandle_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, _impl_.leveltransition_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, _impl_.worldgroupname_),
    0,
    1,
    2,
    10,
    11,
    8,
    9,
    3,
    12,
    13,
    16,
    4,
    5,
    14,
    15,
    18,
    6,
    19,
    17,
    7,
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_ManifestUpdate, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_ManifestUpdate, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_ManifestUpdate, _impl_.spawngrouphandle_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_ManifestUpdate, _impl_.spawngroupmanifest_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_ManifestUpdate, _impl_.manifestincomplete_),
    1,
    0,
    2,
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_SetCreationTick, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_SetCreationTick, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_SetCreationTick, _impl_.spawngrouphandle_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_SetCreationTick, _impl_.tickcount_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_SetCreationTick, _impl_.creationsequence_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_Unload, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_Unload, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_Unload, _impl_.spawngrouphandle_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_Unload, _impl_.flags_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_Unload, _impl_.tickcount_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_LoadCompleted, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_LoadCompleted, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CNETMsg_SpawnGroup_LoadCompleted, _impl_.spawngrouphandle_),
    0,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, _impl_.is_multiplayer_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, _impl_.is_loadsavegame_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, _impl_.is_background_map_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, _impl_.is_headless_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, _impl_.min_client_limit_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, _impl_.max_client_limit_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, _impl_.max_clients_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, _impl_.tick_interval_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, _impl_.hostname_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, _impl_.savegamename_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, _impl_.s1_mapname_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, _impl_.gamemode_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, _impl_.server_ip_address_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, _impl_.data_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, _impl_.is_localonly_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, _impl_.no_steam_server_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, _impl_.is_transition_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, _impl_.previouslevel_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, _impl_.landmarkname_),
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    0,
    1,
    2,
    3,
    4,
    5,
    16,
    17,
    18,
    6,
    7,
    PROTOBUF_FIELD_OFFSET(::CNETMsg_DebugOverlay, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_DebugOverlay, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CNETMsg_DebugOverlay, _impl_.etype_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_DebugOverlay, _impl_.vectors_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_DebugOverlay, _impl_.colors_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_DebugOverlay, _impl_.dimensions_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_DebugOverlay, _impl_.times_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_DebugOverlay, _impl_.bools_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_DebugOverlay, _impl_.uint64s_),
    PROTOBUF_FIELD_OFFSET(::CNETMsg_DebugOverlay, _impl_.strings_),
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 12, -1, sizeof(::CMsgVector)},
        {16, 26, -1, sizeof(::CMsgVector2D)},
        {28, 39, -1, sizeof(::CMsgQAngle)},
        {42, 54, -1, sizeof(::CMsgQuaternion)},
        {58, 69, -1, sizeof(::CMsgTransform)},
        {72, 84, -1, sizeof(::CMsgRGBA)},
        {88, 102, -1, sizeof(::CMsgPlayerInfo)},
        {108, 117, -1, sizeof(::CEntityMsg)},
        {118, 128, -1, sizeof(::CMsg_CVars_CVar)},
        {130, -1, -1, sizeof(::CMsg_CVars)},
        {139, -1, -1, sizeof(::CNETMsg_NOP)},
        {147, 156, -1, sizeof(::CNETMsg_SplitScreenUser)},
        {157, 166, -1, sizeof(::CNETMsg_Disconnect)},
        {167, 184, -1, sizeof(::CNETMsg_Tick)},
        {193, 203, -1, sizeof(::CNETMsg_StringCmd)},
        {205, 214, -1, sizeof(::CNETMsg_SetConVar)},
        {215, 229, -1, sizeof(::CNETMsg_SignonState)},
        {235, 251, -1, sizeof(::CSVCMsg_GameEvent_key_t)},
        {259, 270, -1, sizeof(::CSVCMsg_GameEvent)},
        {273, 283, -1, sizeof(::CSVCMsgList_GameEvents_event_t)},
        {285, -1, -1, sizeof(::CSVCMsgList_GameEvents)},
        {294, 322, -1, sizeof(::CNETMsg_SpawnGroup_Load)},
        {342, 353, -1, sizeof(::CNETMsg_SpawnGroup_ManifestUpdate)},
        {356, 367, -1, sizeof(::CNETMsg_SpawnGroup_SetCreationTick)},
        {370, 381, -1, sizeof(::CNETMsg_SpawnGroup_Unload)},
        {384, 393, -1, sizeof(::CNETMsg_SpawnGroup_LoadCompleted)},
        {394, 421, -1, sizeof(::CSVCMsg_GameSessionConfiguration)},
        {440, 456, -1, sizeof(::CNETMsg_DebugOverlay)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_CMsgVector_default_instance_._instance,
    &::_CMsgVector2D_default_instance_._instance,
    &::_CMsgQAngle_default_instance_._instance,
    &::_CMsgQuaternion_default_instance_._instance,
    &::_CMsgTransform_default_instance_._instance,
    &::_CMsgRGBA_default_instance_._instance,
    &::_CMsgPlayerInfo_default_instance_._instance,
    &::_CEntityMsg_default_instance_._instance,
    &::_CMsg_CVars_CVar_default_instance_._instance,
    &::_CMsg_CVars_default_instance_._instance,
    &::_CNETMsg_NOP_default_instance_._instance,
    &::_CNETMsg_SplitScreenUser_default_instance_._instance,
    &::_CNETMsg_Disconnect_default_instance_._instance,
    &::_CNETMsg_Tick_default_instance_._instance,
    &::_CNETMsg_StringCmd_default_instance_._instance,
    &::_CNETMsg_SetConVar_default_instance_._instance,
    &::_CNETMsg_SignonState_default_instance_._instance,
    &::_CSVCMsg_GameEvent_key_t_default_instance_._instance,
    &::_CSVCMsg_GameEvent_default_instance_._instance,
    &::_CSVCMsgList_GameEvents_event_t_default_instance_._instance,
    &::_CSVCMsgList_GameEvents_default_instance_._instance,
    &::_CNETMsg_SpawnGroup_Load_default_instance_._instance,
    &::_CNETMsg_SpawnGroup_ManifestUpdate_default_instance_._instance,
    &::_CNETMsg_SpawnGroup_SetCreationTick_default_instance_._instance,
    &::_CNETMsg_SpawnGroup_Unload_default_instance_._instance,
    &::_CNETMsg_SpawnGroup_LoadCompleted_default_instance_._instance,
    &::_CSVCMsg_GameSessionConfiguration_default_instance_._instance,
    &::_CNETMsg_DebugOverlay_default_instance_._instance,
};
const char descriptor_table_protodef_networkbasetypes_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\026networkbasetypes.proto\032\030network_connec"
    "tion.proto\"8\n\nCMsgVector\022\t\n\001x\030\001 \001(\002\022\t\n\001y"
    "\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\022\t\n\001w\030\004 \001(\002\"$\n\014CMsgVect"
    "or2D\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\"-\n\nCMsgQAngle"
    "\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"<\n\016CMs"
    "gQuaternion\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003"
    " \001(\002\022\t\n\001w\030\004 \001(\002\"c\n\rCMsgTransform\022\035\n\010posi"
    "tion\030\001 \001(\0132\013.CMsgVector\022\r\n\005scale\030\002 \001(\002\022$"
    "\n\013orientation\030\003 \001(\0132\017.CMsgQuaternion\"6\n\010"
    "CMsgRGBA\022\t\n\001r\030\001 \001(\005\022\t\n\001g\030\002 \001(\005\022\t\n\001b\030\003 \001("
    "\005\022\t\n\001a\030\004 \001(\005\"q\n\016CMsgPlayerInfo\022\014\n\004name\030\001"
    " \001(\t\022\014\n\004xuid\030\002 \001(\006\022\016\n\006userid\030\003 \001(\005\022\017\n\007st"
    "eamid\030\004 \001(\006\022\022\n\nfakeplayer\030\005 \001(\010\022\016\n\006ishlt"
    "v\030\006 \001(\010\"-\n\nCEntityMsg\022\037\n\rtarget_entity\030\001"
    " \001(\r:\01016777215\"R\n\nCMsg_CVars\022\037\n\005cvars\030\001 "
    "\003(\0132\020.CMsg_CVars.CVar\032#\n\004CVar\022\014\n\004name\030\001 "
    "\001(\t\022\r\n\005value\030\002 \001(\t\"\r\n\013CNETMsg_NOP\"\'\n\027CNE"
    "TMsg_SplitScreenUser\022\014\n\004slot\030\001 \001(\005\"^\n\022CN"
    "ETMsg_Disconnect\022H\n\006reason\030\002 \001(\0162\034.ENetw"
    "orkDisconnectionReason:\032NETWORK_DISCONNE"
    "CT_INVALID\"\240\002\n\014CNETMsg_Tick\022\014\n\004tick\030\001 \001("
    "\r\022\026\n\016host_frametime\030\002 \001(\r\022$\n\034host_framet"
    "ime_std_deviation\030\003 \001(\r\022\034\n\024host_computat"
    "iontime\030\004 \001(\r\022*\n\"host_computationtime_st"
    "d_deviation\030\005 \001(\r\022)\n!host_framestarttime"
    "_std_deviation\030\006 \001(\r\022\021\n\thost_loss\030\007 \001(\r\022"
    "!\n\031host_unfiltered_frametime\030\010 \001(\r\022\031\n\021hl"
    "tv_replay_flags\030\t \001(\r\"=\n\021CNETMsg_StringC"
    "md\022\017\n\007command\030\001 \001(\t\022\027\n\017prediction_sync\030\002"
    " \001(\r\"1\n\021CNETMsg_SetConVar\022\034\n\007convars\030\001 \001"
    "(\0132\013.CMsg_CVars\"\274\001\n\023CNETMsg_SignonState\022"
    "6\n\014signon_state\030\001 \001(\0162\016.SignonState_t:\020S"
    "IGNONSTATE_NONE\022\023\n\013spawn_count\030\002 \001(\r\022\032\n\022"
    "num_server_players\030\003 \001(\r\022\032\n\022players_netw"
    "orkids\030\004 \003(\t\022\020\n\010map_name\030\005 \001(\t\022\016\n\006addons"
    "\030\006 \001(\t\"\374\001\n\021CSVCMsg_GameEvent\022\022\n\nevent_na"
    "me\030\001 \001(\t\022\017\n\007eventid\030\002 \001(\005\022&\n\004keys\030\003 \003(\0132"
    "\030.CSVCMsg_GameEvent.key_t\032\231\001\n\005key_t\022\014\n\004t"
    "ype\030\001 \001(\005\022\022\n\nval_string\030\002 \001(\t\022\021\n\tval_flo"
    "at\030\003 \001(\002\022\020\n\010val_long\030\004 \001(\005\022\021\n\tval_short\030"
    "\005 \001(\005\022\020\n\010val_byte\030\006 \001(\005\022\020\n\010val_bool\030\007 \001("
    "\010\022\022\n\nval_uint64\030\010 \001(\004\"\205\001\n\026CSVCMsgList_Ga"
    "meEvents\022/\n\006events\030\001 \003(\0132\037.CSVCMsgList_G"
    "ameEvents.event_t\032:\n\007event_t\022\014\n\004tick\030\001 \001"
    "(\005\022!\n\005event\030\002 \001(\0132\022.CSVCMsg_GameEvent\"\253\004"
    "\n\027CNETMsg_SpawnGroup_Load\022\021\n\tworldname\030\001"
    " \001(\t\022\026\n\016entitylumpname\030\002 \001(\t\022\030\n\020entityfi"
    "ltername\030\003 \001(\t\022\030\n\020spawngrouphandle\030\004 \001(\r"
    "\022\035\n\025spawngroupownerhandle\030\005 \001(\r\022%\n\020world"
    "_offset_pos\030\006 \001(\0132\013.CMsgVector\022\'\n\022world_"
    "offset_angle\030\007 \001(\0132\013.CMsgQAngle\022\032\n\022spawn"
    "groupmanifest\030\010 \001(\014\022\r\n\005flags\030\t \001(\r\022\021\n\tti"
    "ckcount\030\n \001(\005\022\032\n\022manifestincomplete\030\013 \001("
    "\010\022\026\n\016localnamefixup\030\014 \001(\t\022\027\n\017parentnamef"
    "ixup\030\r \001(\t\022\034\n\024manifestloadpriority\030\016 \001(\005"
    "\022\024\n\014worldgroupid\030\017 \001(\r\022\030\n\020creationsequen"
    "ce\030\020 \001(\r\022\030\n\020savegamefilename\030\021 \001(\t\022\036\n\026sp"
    "awngroupparenthandle\030\022 \001(\r\022\027\n\017leveltrans"
    "ition\030\023 \001(\010\022\026\n\016worldgroupname\030\024 \001(\t\"u\n!C"
    "NETMsg_SpawnGroup_ManifestUpdate\022\030\n\020spaw"
    "ngrouphandle\030\001 \001(\r\022\032\n\022spawngroupmanifest"
    "\030\002 \001(\014\022\032\n\022manifestincomplete\030\003 \001(\010\"k\n\"CN"
    "ETMsg_SpawnGroup_SetCreationTick\022\030\n\020spaw"
    "ngrouphandle\030\001 \001(\r\022\021\n\ttickcount\030\002 \001(\005\022\030\n"
    "\020creationsequence\030\003 \001(\r\"W\n\031CNETMsg_Spawn"
    "Group_Unload\022\030\n\020spawngrouphandle\030\001 \001(\r\022\r"
    "\n\005flags\030\002 \001(\r\022\021\n\ttickcount\030\003 \001(\005\"<\n CNET"
    "Msg_SpawnGroup_LoadCompleted\022\030\n\020spawngro"
    "uphandle\030\001 \001(\r\"\315\003\n CSVCMsg_GameSessionCo"
    "nfiguration\022\026\n\016is_multiplayer\030\001 \001(\010\022\027\n\017i"
    "s_loadsavegame\030\002 \001(\010\022\031\n\021is_background_ma"
    "p\030\003 \001(\010\022\023\n\013is_headless\030\004 \001(\010\022\030\n\020min_clie"
    "nt_limit\030\005 \001(\r\022\030\n\020max_client_limit\030\006 \001(\r"
    "\022\023\n\013max_clients\030\007 \001(\r\022\025\n\rtick_interval\030\010"
    " \001(\007\022\020\n\010hostname\030\t \001(\t\022\024\n\014savegamename\030\n"
    " \001(\t\022\022\n\ns1_mapname\030\013 \001(\t\022\020\n\010gamemode\030\014 \001"
    "(\t\022\031\n\021server_ip_address\030\r \001(\t\022\014\n\004data\030\016 "
    "\001(\014\022\024\n\014is_localonly\030\017 \001(\010\022\027\n\017no_steam_se"
    "rver\030\023 \001(\010\022\025\n\ris_transition\030\020 \001(\010\022\025\n\rpre"
    "viouslevel\030\021 \001(\t\022\024\n\014landmarkname\030\022 \001(\t\"\262"
    "\001\n\024CNETMsg_DebugOverlay\022\r\n\005etype\030\001 \001(\005\022\034"
    "\n\007vectors\030\002 \003(\0132\013.CMsgVector\022\031\n\006colors\030\003"
    " \003(\0132\t.CMsgRGBA\022\022\n\ndimensions\030\004 \003(\002\022\r\n\005t"
    "imes\030\005 \003(\002\022\r\n\005bools\030\006 \003(\010\022\017\n\007uint64s\030\007 \003"
    "(\004\022\017\n\007strings\030\010 \003(\t*\324\001\n\rSignonState_t\022\024\n"
    "\020SIGNONSTATE_NONE\020\000\022\031\n\025SIGNONSTATE_CHALL"
    "ENGE\020\001\022\031\n\025SIGNONSTATE_CONNECTED\020\002\022\023\n\017SIG"
    "NONSTATE_NEW\020\003\022\030\n\024SIGNONSTATE_PRESPAWN\020\004"
    "\022\025\n\021SIGNONSTATE_SPAWN\020\005\022\024\n\020SIGNONSTATE_F"
    "ULL\020\006\022\033\n\027SIGNONSTATE_CHANGELEVEL\020\007*\304\002\n\014N"
    "ET_Messages\022\013\n\007net_NOP\020\000\022\022\n\016net_Disconne"
    "ct\020\001\022\027\n\023net_SplitScreenUser\020\003\022\014\n\010net_Tic"
    "k\020\004\022\021\n\rnet_StringCmd\020\005\022\021\n\rnet_SetConVar\020"
    "\006\022\023\n\017net_SignonState\020\007\022\027\n\023net_SpawnGroup"
    "_Load\020\010\022!\n\035net_SpawnGroup_ManifestUpdate"
    "\020\t\022\"\n\036net_SpawnGroup_SetCreationTick\020\013\022\031"
    "\n\025net_SpawnGroup_Unload\020\014\022 \n\034net_SpawnGr"
    "oup_LoadCompleted\020\r\022\024\n\020net_DebugOverlay\020"
    "\017*\314\002\n\021SpawnGroupFlags_t\022\'\n#SPAWN_GROUP_L"
    "OAD_ENTITIES_FROM_SAVE\020\001\022#\n\037SPAWN_GROUP_"
    "DONT_SPAWN_ENTITIES\020\002\022!\n\035SPAWN_GROUP_SYN"
    "CHRONOUS_SPAWN\020\004\022&\n\"SPAWN_GROUP_IS_INITI"
    "AL_SPAWN_GROUP\020\010\022+\n\'SPAWN_GROUP_CREATE_C"
    "LIENT_ONLY_ENTITIES\020\020\022\"\n\036SPAWN_GROUP_BLO"
    "CK_UNTIL_LOADED\020@\022$\n\037SPAWN_GROUP_LOAD_ST"
    "REAMING_DATA\020\200\001\022\'\n\"SPAWN_GROUP_CREATE_NE"
    "W_SCENE_WORLD\020\200\002"
};
static const ::_pbi::DescriptorTable* const descriptor_table_networkbasetypes_2eproto_deps[1] =
    {
        &::descriptor_table_network_5fconnection_2eproto,
};
static ::absl::once_flag descriptor_table_networkbasetypes_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_networkbasetypes_2eproto = {
    false,
    false,
    4256,
    descriptor_table_protodef_networkbasetypes_2eproto,
    "networkbasetypes.proto",
    &descriptor_table_networkbasetypes_2eproto_once,
    descriptor_table_networkbasetypes_2eproto_deps,
    1,
    28,
    schemas,
    file_default_instances,
    TableStruct_networkbasetypes_2eproto::offsets,
    file_level_metadata_networkbasetypes_2eproto,
    file_level_enum_descriptors_networkbasetypes_2eproto,
    file_level_service_descriptors_networkbasetypes_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_networkbasetypes_2eproto_getter() {
  return &descriptor_table_networkbasetypes_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_networkbasetypes_2eproto(&descriptor_table_networkbasetypes_2eproto);
const ::google::protobuf::EnumDescriptor* SignonState_t_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_networkbasetypes_2eproto);
  return file_level_enum_descriptors_networkbasetypes_2eproto[0];
}
bool SignonState_t_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* NET_Messages_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_networkbasetypes_2eproto);
  return file_level_enum_descriptors_networkbasetypes_2eproto[1];
}
bool NET_Messages_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 11:
    case 12:
    case 13:
    case 15:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* SpawnGroupFlags_t_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_networkbasetypes_2eproto);
  return file_level_enum_descriptors_networkbasetypes_2eproto[2];
}
bool SpawnGroupFlags_t_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 64:
    case 128:
    case 256:
      return true;
    default:
      return false;
  }
}
// ===================================================================

class CMsgVector::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgVector>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgVector, _impl_._has_bits_);
  static void set_has_x(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_y(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_z(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_w(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CMsgVector::CMsgVector(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgVector)
}
CMsgVector::CMsgVector(const CMsgVector& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgVector)
}
inline void CMsgVector::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.x_){0},
      decltype(_impl_.y_){0},
      decltype(_impl_.z_){0},
      decltype(_impl_.w_){0},
  };
}
CMsgVector::~CMsgVector() {
  // @@protoc_insertion_point(destructor:CMsgVector)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgVector::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CMsgVector::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgVector::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgVector)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.w_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.w_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgVector::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> CMsgVector::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgVector, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgVector_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional float w = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgVector, _impl_.w_)}},
    // optional float x = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgVector, _impl_.x_)}},
    // optional float y = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgVector, _impl_.y_)}},
    // optional float z = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgVector, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional float x = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgVector, _impl_.x_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float y = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgVector, _impl_.y_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float z = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgVector, _impl_.z_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float w = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgVector, _impl_.w_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgVector::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgVector)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional float x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_x(), target);
  }

  // optional float y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_y(), target);
  }

  // optional float z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_z(), target);
  }

  // optional float w = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_w(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgVector)
  return target;
}

::size_t CMsgVector::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgVector)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional float x = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 5;
    }

    // optional float y = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }

    // optional float z = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

    // optional float w = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgVector::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgVector::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgVector::GetClassData() const { return &_class_data_; }


void CMsgVector::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgVector*>(&to_msg);
  auto& from = static_cast<const CMsgVector&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgVector)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.x_ = from._impl_.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.y_ = from._impl_.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.z_ = from._impl_.z_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.w_ = from._impl_.w_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgVector::CopyFrom(const CMsgVector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgVector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgVector::IsInitialized() const {
  return true;
}

void CMsgVector::InternalSwap(CMsgVector* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgVector, _impl_.w_)
      + sizeof(CMsgVector::_impl_.w_)
      - PROTOBUF_FIELD_OFFSET(CMsgVector, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata CMsgVector::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networkbasetypes_2eproto_getter, &descriptor_table_networkbasetypes_2eproto_once,
      file_level_metadata_networkbasetypes_2eproto[0]);
}
// ===================================================================

class CMsgVector2D::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgVector2D>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgVector2D, _impl_._has_bits_);
  static void set_has_x(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_y(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgVector2D::CMsgVector2D(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgVector2D)
}
CMsgVector2D::CMsgVector2D(const CMsgVector2D& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgVector2D)
}
inline void CMsgVector2D::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.x_){0},
      decltype(_impl_.y_){0},
  };
}
CMsgVector2D::~CMsgVector2D() {
  // @@protoc_insertion_point(destructor:CMsgVector2D)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgVector2D::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CMsgVector2D::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgVector2D::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgVector2D)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.y_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.y_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgVector2D::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> CMsgVector2D::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgVector2D, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgVector2D_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional float y = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgVector2D, _impl_.y_)}},
    // optional float x = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgVector2D, _impl_.x_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional float x = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgVector2D, _impl_.x_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float y = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgVector2D, _impl_.y_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgVector2D::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgVector2D)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional float x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_x(), target);
  }

  // optional float y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_y(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgVector2D)
  return target;
}

::size_t CMsgVector2D::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgVector2D)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional float x = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 5;
    }

    // optional float y = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgVector2D::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgVector2D::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgVector2D::GetClassData() const { return &_class_data_; }


void CMsgVector2D::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgVector2D*>(&to_msg);
  auto& from = static_cast<const CMsgVector2D&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgVector2D)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.x_ = from._impl_.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.y_ = from._impl_.y_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgVector2D::CopyFrom(const CMsgVector2D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgVector2D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgVector2D::IsInitialized() const {
  return true;
}

void CMsgVector2D::InternalSwap(CMsgVector2D* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgVector2D, _impl_.y_)
      + sizeof(CMsgVector2D::_impl_.y_)
      - PROTOBUF_FIELD_OFFSET(CMsgVector2D, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata CMsgVector2D::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networkbasetypes_2eproto_getter, &descriptor_table_networkbasetypes_2eproto_once,
      file_level_metadata_networkbasetypes_2eproto[1]);
}
// ===================================================================

class CMsgQAngle::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgQAngle>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgQAngle, _impl_._has_bits_);
  static void set_has_x(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_y(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_z(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgQAngle::CMsgQAngle(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgQAngle)
}
CMsgQAngle::CMsgQAngle(const CMsgQAngle& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgQAngle)
}
inline void CMsgQAngle::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.x_){0},
      decltype(_impl_.y_){0},
      decltype(_impl_.z_){0},
  };
}
CMsgQAngle::~CMsgQAngle() {
  // @@protoc_insertion_point(destructor:CMsgQAngle)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgQAngle::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CMsgQAngle::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgQAngle::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgQAngle)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.z_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgQAngle::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> CMsgQAngle::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgQAngle, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgQAngle_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional float x = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgQAngle, _impl_.x_)}},
    // optional float y = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgQAngle, _impl_.y_)}},
    // optional float z = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgQAngle, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional float x = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgQAngle, _impl_.x_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float y = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgQAngle, _impl_.y_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float z = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgQAngle, _impl_.z_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgQAngle::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgQAngle)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional float x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_x(), target);
  }

  // optional float y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_y(), target);
  }

  // optional float z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgQAngle)
  return target;
}

::size_t CMsgQAngle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgQAngle)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional float x = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 5;
    }

    // optional float y = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }

    // optional float z = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgQAngle::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgQAngle::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgQAngle::GetClassData() const { return &_class_data_; }


void CMsgQAngle::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgQAngle*>(&to_msg);
  auto& from = static_cast<const CMsgQAngle&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgQAngle)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.x_ = from._impl_.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.y_ = from._impl_.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.z_ = from._impl_.z_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgQAngle::CopyFrom(const CMsgQAngle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgQAngle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgQAngle::IsInitialized() const {
  return true;
}

void CMsgQAngle::InternalSwap(CMsgQAngle* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgQAngle, _impl_.z_)
      + sizeof(CMsgQAngle::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(CMsgQAngle, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata CMsgQAngle::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networkbasetypes_2eproto_getter, &descriptor_table_networkbasetypes_2eproto_once,
      file_level_metadata_networkbasetypes_2eproto[2]);
}
// ===================================================================

class CMsgQuaternion::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgQuaternion>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgQuaternion, _impl_._has_bits_);
  static void set_has_x(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_y(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_z(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_w(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CMsgQuaternion::CMsgQuaternion(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgQuaternion)
}
CMsgQuaternion::CMsgQuaternion(const CMsgQuaternion& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgQuaternion)
}
inline void CMsgQuaternion::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.x_){0},
      decltype(_impl_.y_){0},
      decltype(_impl_.z_){0},
      decltype(_impl_.w_){0},
  };
}
CMsgQuaternion::~CMsgQuaternion() {
  // @@protoc_insertion_point(destructor:CMsgQuaternion)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgQuaternion::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CMsgQuaternion::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgQuaternion::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgQuaternion)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.w_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.w_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgQuaternion::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> CMsgQuaternion::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgQuaternion, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgQuaternion_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional float w = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgQuaternion, _impl_.w_)}},
    // optional float x = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgQuaternion, _impl_.x_)}},
    // optional float y = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgQuaternion, _impl_.y_)}},
    // optional float z = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgQuaternion, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional float x = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgQuaternion, _impl_.x_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float y = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgQuaternion, _impl_.y_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float z = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgQuaternion, _impl_.z_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float w = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgQuaternion, _impl_.w_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgQuaternion::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgQuaternion)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional float x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_x(), target);
  }

  // optional float y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_y(), target);
  }

  // optional float z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_z(), target);
  }

  // optional float w = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_w(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgQuaternion)
  return target;
}

::size_t CMsgQuaternion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgQuaternion)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional float x = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 5;
    }

    // optional float y = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }

    // optional float z = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

    // optional float w = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgQuaternion::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgQuaternion::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgQuaternion::GetClassData() const { return &_class_data_; }


void CMsgQuaternion::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgQuaternion*>(&to_msg);
  auto& from = static_cast<const CMsgQuaternion&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgQuaternion)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.x_ = from._impl_.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.y_ = from._impl_.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.z_ = from._impl_.z_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.w_ = from._impl_.w_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgQuaternion::CopyFrom(const CMsgQuaternion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgQuaternion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgQuaternion::IsInitialized() const {
  return true;
}

void CMsgQuaternion::InternalSwap(CMsgQuaternion* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgQuaternion, _impl_.w_)
      + sizeof(CMsgQuaternion::_impl_.w_)
      - PROTOBUF_FIELD_OFFSET(CMsgQuaternion, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata CMsgQuaternion::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networkbasetypes_2eproto_getter, &descriptor_table_networkbasetypes_2eproto_once,
      file_level_metadata_networkbasetypes_2eproto[3]);
}
// ===================================================================

class CMsgTransform::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgTransform>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgTransform, _impl_._has_bits_);
  static const ::CMsgVector& position(const CMsgTransform* msg);
  static void set_has_position(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::CMsgQuaternion& orientation(const CMsgTransform* msg);
  static void set_has_orientation(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::CMsgVector& CMsgTransform::_Internal::position(const CMsgTransform* msg) {
  return *msg->_impl_.position_;
}
const ::CMsgQuaternion& CMsgTransform::_Internal::orientation(const CMsgTransform* msg) {
  return *msg->_impl_.orientation_;
}
CMsgTransform::CMsgTransform(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgTransform)
}
CMsgTransform::CMsgTransform(const CMsgTransform& from) : ::google::protobuf::Message() {
  CMsgTransform* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.position_){nullptr},
      decltype(_impl_.orientation_){nullptr},
      decltype(_impl_.scale_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.position_ = new ::CMsgVector(*from._impl_.position_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.orientation_ = new ::CMsgQuaternion(*from._impl_.orientation_);
  }
  _this->_impl_.scale_ = from._impl_.scale_;

  // @@protoc_insertion_point(copy_constructor:CMsgTransform)
}
inline void CMsgTransform::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.position_){nullptr},
      decltype(_impl_.orientation_){nullptr},
      decltype(_impl_.scale_){0},
  };
}
CMsgTransform::~CMsgTransform() {
  // @@protoc_insertion_point(destructor:CMsgTransform)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgTransform::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.position_;
  if (this != internal_default_instance()) delete _impl_.orientation_;
}
void CMsgTransform::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgTransform::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgTransform)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.orientation_ != nullptr);
      _impl_.orientation_->Clear();
    }
  }
  _impl_.scale_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgTransform::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> CMsgTransform::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgTransform, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgTransform_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CMsgVector position = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgTransform, _impl_.position_)}},
    // optional float scale = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgTransform, _impl_.scale_)}},
    // optional .CMsgQuaternion orientation = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgTransform, _impl_.orientation_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVector position = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgTransform, _impl_.position_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional float scale = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgTransform, _impl_.scale_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional .CMsgQuaternion orientation = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgTransform, _impl_.orientation_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgVector>()},
    {::_pbi::TcParser::GetTable<::CMsgQuaternion>()},
  }}, {{
  }},
};

::uint8_t* CMsgTransform::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgTransform)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgVector position = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::position(this),
        _Internal::position(this).GetCachedSize(), target, stream);
  }

  // optional float scale = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_scale(), target);
  }

  // optional .CMsgQuaternion orientation = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::orientation(this),
        _Internal::orientation(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgTransform)
  return target;
}

::size_t CMsgTransform::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgTransform)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .CMsgVector position = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.position_);
    }

    // optional .CMsgQuaternion orientation = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.orientation_);
    }

    // optional float scale = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgTransform::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgTransform::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgTransform::GetClassData() const { return &_class_data_; }


void CMsgTransform::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgTransform*>(&to_msg);
  auto& from = static_cast<const CMsgTransform&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgTransform)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_position()->::CMsgVector::MergeFrom(
          from._internal_position());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_orientation()->::CMsgQuaternion::MergeFrom(
          from._internal_orientation());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.scale_ = from._impl_.scale_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgTransform::CopyFrom(const CMsgTransform& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgTransform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgTransform::IsInitialized() const {
  return true;
}

void CMsgTransform::InternalSwap(CMsgTransform* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgTransform, _impl_.scale_)
      + sizeof(CMsgTransform::_impl_.scale_)
      - PROTOBUF_FIELD_OFFSET(CMsgTransform, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::google::protobuf::Metadata CMsgTransform::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networkbasetypes_2eproto_getter, &descriptor_table_networkbasetypes_2eproto_once,
      file_level_metadata_networkbasetypes_2eproto[4]);
}
// ===================================================================

class CMsgRGBA::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgRGBA>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgRGBA, _impl_._has_bits_);
  static void set_has_r(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_g(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_b(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_a(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CMsgRGBA::CMsgRGBA(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgRGBA)
}
CMsgRGBA::CMsgRGBA(const CMsgRGBA& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgRGBA)
}
inline void CMsgRGBA::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.r_){0},
      decltype(_impl_.g_){0},
      decltype(_impl_.b_){0},
      decltype(_impl_.a_){0},
  };
}
CMsgRGBA::~CMsgRGBA() {
  // @@protoc_insertion_point(destructor:CMsgRGBA)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgRGBA::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CMsgRGBA::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgRGBA::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgRGBA)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.r_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.a_) -
        reinterpret_cast<char*>(&_impl_.r_)) + sizeof(_impl_.a_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgRGBA::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> CMsgRGBA::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgRGBA, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgRGBA_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 a = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgRGBA, _impl_.a_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgRGBA, _impl_.a_)}},
    // optional int32 r = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgRGBA, _impl_.r_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgRGBA, _impl_.r_)}},
    // optional int32 g = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgRGBA, _impl_.g_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgRGBA, _impl_.g_)}},
    // optional int32 b = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgRGBA, _impl_.b_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgRGBA, _impl_.b_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 r = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgRGBA, _impl_.r_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 g = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgRGBA, _impl_.g_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 b = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgRGBA, _impl_.b_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 a = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgRGBA, _impl_.a_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgRGBA::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRGBA)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 r = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_r(), target);
  }

  // optional int32 g = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_g(), target);
  }

  // optional int32 b = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_b(), target);
  }

  // optional int32 a = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_a(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRGBA)
  return target;
}

::size_t CMsgRGBA::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgRGBA)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional int32 r = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_r());
    }

    // optional int32 g = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_g());
    }

    // optional int32 b = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_b());
    }

    // optional int32 a = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_a());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgRGBA::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgRGBA::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgRGBA::GetClassData() const { return &_class_data_; }


void CMsgRGBA::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgRGBA*>(&to_msg);
  auto& from = static_cast<const CMsgRGBA&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgRGBA)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.r_ = from._impl_.r_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.g_ = from._impl_.g_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.b_ = from._impl_.b_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.a_ = from._impl_.a_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgRGBA::CopyFrom(const CMsgRGBA& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgRGBA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgRGBA::IsInitialized() const {
  return true;
}

void CMsgRGBA::InternalSwap(CMsgRGBA* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgRGBA, _impl_.a_)
      + sizeof(CMsgRGBA::_impl_.a_)
      - PROTOBUF_FIELD_OFFSET(CMsgRGBA, _impl_.r_)>(
          reinterpret_cast<char*>(&_impl_.r_),
          reinterpret_cast<char*>(&other->_impl_.r_));
}

::google::protobuf::Metadata CMsgRGBA::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networkbasetypes_2eproto_getter, &descriptor_table_networkbasetypes_2eproto_once,
      file_level_metadata_networkbasetypes_2eproto[5]);
}
// ===================================================================

class CMsgPlayerInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgPlayerInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgPlayerInfo, _impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_xuid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_userid(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_fakeplayer(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_ishltv(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

CMsgPlayerInfo::CMsgPlayerInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgPlayerInfo)
}
CMsgPlayerInfo::CMsgPlayerInfo(const CMsgPlayerInfo& from) : ::google::protobuf::Message() {
  CMsgPlayerInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.xuid_){},
      decltype(_impl_.steamid_){},
      decltype(_impl_.userid_){},
      decltype(_impl_.fakeplayer_){},
      decltype(_impl_.ishltv_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.xuid_, &from._impl_.xuid_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.ishltv_) -
    reinterpret_cast<char*>(&_impl_.xuid_)) + sizeof(_impl_.ishltv_));

  // @@protoc_insertion_point(copy_constructor:CMsgPlayerInfo)
}
inline void CMsgPlayerInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.xuid_){::uint64_t{0u}},
      decltype(_impl_.steamid_){::uint64_t{0u}},
      decltype(_impl_.userid_){0},
      decltype(_impl_.fakeplayer_){false},
      decltype(_impl_.ishltv_){false},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CMsgPlayerInfo::~CMsgPlayerInfo() {
  // @@protoc_insertion_point(destructor:CMsgPlayerInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgPlayerInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}
void CMsgPlayerInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgPlayerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgPlayerInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000003eu) {
    ::memset(&_impl_.xuid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.ishltv_) -
        reinterpret_cast<char*>(&_impl_.xuid_)) + sizeof(_impl_.ishltv_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgPlayerInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 27, 2> CMsgPlayerInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgPlayerInfo, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgPlayerInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgPlayerInfo, _impl_.name_)}},
    // optional fixed64 xuid = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgPlayerInfo, _impl_.xuid_)}},
    // optional int32 userid = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgPlayerInfo, _impl_.userid_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgPlayerInfo, _impl_.userid_)}},
    // optional fixed64 steamid = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgPlayerInfo, _impl_.steamid_)}},
    // optional bool fakeplayer = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgPlayerInfo, _impl_.fakeplayer_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgPlayerInfo, _impl_.fakeplayer_)}},
    // optional bool ishltv = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgPlayerInfo, _impl_.ishltv_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgPlayerInfo, _impl_.ishltv_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgPlayerInfo, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional fixed64 xuid = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgPlayerInfo, _impl_.xuid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional int32 userid = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgPlayerInfo, _impl_.userid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional fixed64 steamid = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgPlayerInfo, _impl_.steamid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional bool fakeplayer = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgPlayerInfo, _impl_.fakeplayer_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool ishltv = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgPlayerInfo, _impl_.ishltv_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\16\4\0\0\0\0\0\0"
    "CMsgPlayerInfo"
    "name"
  }},
};

::uint8_t* CMsgPlayerInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgPlayerInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgPlayerInfo.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional fixed64 xuid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        2, this->_internal_xuid(), target);
  }

  // optional int32 userid = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_userid(), target);
  }

  // optional fixed64 steamid = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        4, this->_internal_steamid(), target);
  }

  // optional bool fakeplayer = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_fakeplayer(), target);
  }

  // optional bool ishltv = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_ishltv(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgPlayerInfo)
  return target;
}

::size_t CMsgPlayerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgPlayerInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }

    // optional fixed64 xuid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }

    // optional fixed64 steamid = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 9;
    }

    // optional int32 userid = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_userid());
    }

    // optional bool fakeplayer = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2;
    }

    // optional bool ishltv = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgPlayerInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgPlayerInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgPlayerInfo::GetClassData() const { return &_class_data_; }


void CMsgPlayerInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgPlayerInfo*>(&to_msg);
  auto& from = static_cast<const CMsgPlayerInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgPlayerInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.xuid_ = from._impl_.xuid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.steamid_ = from._impl_.steamid_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.userid_ = from._impl_.userid_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.fakeplayer_ = from._impl_.fakeplayer_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.ishltv_ = from._impl_.ishltv_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgPlayerInfo::CopyFrom(const CMsgPlayerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgPlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgPlayerInfo::IsInitialized() const {
  return true;
}

void CMsgPlayerInfo::InternalSwap(CMsgPlayerInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgPlayerInfo, _impl_.ishltv_)
      + sizeof(CMsgPlayerInfo::_impl_.ishltv_)
      - PROTOBUF_FIELD_OFFSET(CMsgPlayerInfo, _impl_.xuid_)>(
          reinterpret_cast<char*>(&_impl_.xuid_),
          reinterpret_cast<char*>(&other->_impl_.xuid_));
}

::google::protobuf::Metadata CMsgPlayerInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networkbasetypes_2eproto_getter, &descriptor_table_networkbasetypes_2eproto_once,
      file_level_metadata_networkbasetypes_2eproto[6]);
}
// ===================================================================

class CEntityMsg::_Internal {
 public:
  using HasBits = decltype(std::declval<CEntityMsg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CEntityMsg, _impl_._has_bits_);
  static void set_has_target_entity(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CEntityMsg::CEntityMsg(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CEntityMsg)
}
CEntityMsg::CEntityMsg(const CEntityMsg& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CEntityMsg)
}
inline void CEntityMsg::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.target_entity_){16777215u},
  };
}
CEntityMsg::~CEntityMsg() {
  // @@protoc_insertion_point(destructor:CEntityMsg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CEntityMsg::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CEntityMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CEntityMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:CEntityMsg)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.target_entity_ = 16777215u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CEntityMsg::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CEntityMsg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CEntityMsg, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CEntityMsg_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 target_entity = 1 [default = 16777215];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CEntityMsg, _impl_.target_entity_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CEntityMsg, _impl_.target_entity_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 target_entity = 1 [default = 16777215];
    {PROTOBUF_FIELD_OFFSET(CEntityMsg, _impl_.target_entity_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CEntityMsg::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CEntityMsg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 target_entity = 1 [default = 16777215];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_target_entity(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CEntityMsg)
  return target;
}

::size_t CEntityMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CEntityMsg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 target_entity = 1 [default = 16777215];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_target_entity());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CEntityMsg::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CEntityMsg::MergeImpl
};
const ::google::protobuf::Message::ClassData*CEntityMsg::GetClassData() const { return &_class_data_; }


void CEntityMsg::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CEntityMsg*>(&to_msg);
  auto& from = static_cast<const CEntityMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CEntityMsg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_target_entity(from._internal_target_entity());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CEntityMsg::CopyFrom(const CEntityMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CEntityMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CEntityMsg::IsInitialized() const {
  return true;
}

void CEntityMsg::InternalSwap(CEntityMsg* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.target_entity_, other->_impl_.target_entity_);
}

::google::protobuf::Metadata CEntityMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networkbasetypes_2eproto_getter, &descriptor_table_networkbasetypes_2eproto_once,
      file_level_metadata_networkbasetypes_2eproto[7]);
}
// ===================================================================

class CMsg_CVars_CVar::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsg_CVars_CVar>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsg_CVars_CVar, _impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsg_CVars_CVar::CMsg_CVars_CVar(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsg_CVars.CVar)
}
CMsg_CVars_CVar::CMsg_CVars_CVar(const CMsg_CVars_CVar& from) : ::google::protobuf::Message() {
  CMsg_CVars_CVar* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.value_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.value_.Set(from._internal_value(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:CMsg_CVars.CVar)
}
inline void CMsg_CVars_CVar::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.value_){},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CMsg_CVars_CVar::~CMsg_CVars_CVar() {
  // @@protoc_insertion_point(destructor:CMsg_CVars.CVar)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsg_CVars_CVar::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.value_.Destroy();
}
void CMsg_CVars_CVar::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsg_CVars_CVar::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsg_CVars.CVar)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.value_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsg_CVars_CVar::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 33, 2> CMsg_CVars_CVar::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsg_CVars_CVar, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsg_CVars_CVar_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string value = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CMsg_CVars_CVar, _impl_.value_)}},
    // optional string name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsg_CVars_CVar, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(CMsg_CVars_CVar, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string value = 2;
    {PROTOBUF_FIELD_OFFSET(CMsg_CVars_CVar, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\17\4\5\0\0\0\0\0"
    "CMsg_CVars.CVar"
    "name"
    "value"
  }},
};

::uint8_t* CMsg_CVars_CVar::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsg_CVars.CVar)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsg_CVars.CVar.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_value();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsg_CVars.CVar.value");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsg_CVars.CVar)
  return target;
}

::size_t CMsg_CVars_CVar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsg_CVars.CVar)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }

    // optional string value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_value());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsg_CVars_CVar::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsg_CVars_CVar::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsg_CVars_CVar::GetClassData() const { return &_class_data_; }


void CMsg_CVars_CVar::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsg_CVars_CVar*>(&to_msg);
  auto& from = static_cast<const CMsg_CVars_CVar&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsg_CVars.CVar)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_value(from._internal_value());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsg_CVars_CVar::CopyFrom(const CMsg_CVars_CVar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsg_CVars.CVar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsg_CVars_CVar::IsInitialized() const {
  return true;
}

void CMsg_CVars_CVar::InternalSwap(CMsg_CVars_CVar* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, lhs_arena,
                                       &other->_impl_.value_, rhs_arena);
}

::google::protobuf::Metadata CMsg_CVars_CVar::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networkbasetypes_2eproto_getter, &descriptor_table_networkbasetypes_2eproto_once,
      file_level_metadata_networkbasetypes_2eproto[8]);
}
// ===================================================================

class CMsg_CVars::_Internal {
 public:
};

CMsg_CVars::CMsg_CVars(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsg_CVars)
}
CMsg_CVars::CMsg_CVars(const CMsg_CVars& from) : ::google::protobuf::Message() {
  CMsg_CVars* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.cvars_){from._impl_.cvars_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CMsg_CVars)
}
inline void CMsg_CVars::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.cvars_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
CMsg_CVars::~CMsg_CVars() {
  // @@protoc_insertion_point(destructor:CMsg_CVars)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsg_CVars::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.cvars_.~RepeatedPtrField();
}
void CMsg_CVars::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsg_CVars::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsg_CVars)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_cvars()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsg_CVars::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CMsg_CVars::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsg_CVars_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .CMsg_CVars.CVar cvars = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CMsg_CVars, _impl_.cvars_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .CMsg_CVars.CVar cvars = 1;
    {PROTOBUF_FIELD_OFFSET(CMsg_CVars, _impl_.cvars_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsg_CVars_CVar>()},
  }}, {{
  }},
};

::uint8_t* CMsg_CVars::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsg_CVars)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .CMsg_CVars.CVar cvars = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_cvars_size()); i < n; i++) {
    const auto& repfield = this->_internal_cvars().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsg_CVars)
  return target;
}

::size_t CMsg_CVars::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsg_CVars)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsg_CVars.CVar cvars = 1;
  total_size += 1UL * this->_internal_cvars_size();
  for (const auto& msg : this->_internal_cvars()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsg_CVars::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsg_CVars::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsg_CVars::GetClassData() const { return &_class_data_; }


void CMsg_CVars::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsg_CVars*>(&to_msg);
  auto& from = static_cast<const CMsg_CVars&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsg_CVars)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_cvars()->MergeFrom(from._internal_cvars());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsg_CVars::CopyFrom(const CMsg_CVars& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsg_CVars)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsg_CVars::IsInitialized() const {
  return true;
}

void CMsg_CVars::InternalSwap(CMsg_CVars* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.cvars_.InternalSwap(&other->_impl_.cvars_);
}

::google::protobuf::Metadata CMsg_CVars::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networkbasetypes_2eproto_getter, &descriptor_table_networkbasetypes_2eproto_once,
      file_level_metadata_networkbasetypes_2eproto[9]);
}
// ===================================================================

class CNETMsg_NOP::_Internal {
 public:
};

CNETMsg_NOP::CNETMsg_NOP(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:CNETMsg_NOP)
}
CNETMsg_NOP::CNETMsg_NOP(const CNETMsg_NOP& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  CNETMsg_NOP* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CNETMsg_NOP)
}




const ::google::protobuf::Message::ClassData CNETMsg_NOP::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*CNETMsg_NOP::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata CNETMsg_NOP::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networkbasetypes_2eproto_getter, &descriptor_table_networkbasetypes_2eproto_once,
      file_level_metadata_networkbasetypes_2eproto[10]);
}
// ===================================================================

class CNETMsg_SplitScreenUser::_Internal {
 public:
  using HasBits = decltype(std::declval<CNETMsg_SplitScreenUser>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CNETMsg_SplitScreenUser, _impl_._has_bits_);
  static void set_has_slot(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CNETMsg_SplitScreenUser::CNETMsg_SplitScreenUser(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CNETMsg_SplitScreenUser)
}
CNETMsg_SplitScreenUser::CNETMsg_SplitScreenUser(const CNETMsg_SplitScreenUser& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CNETMsg_SplitScreenUser)
}
inline void CNETMsg_SplitScreenUser::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.slot_){0},
  };
}
CNETMsg_SplitScreenUser::~CNETMsg_SplitScreenUser() {
  // @@protoc_insertion_point(destructor:CNETMsg_SplitScreenUser)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CNETMsg_SplitScreenUser::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CNETMsg_SplitScreenUser::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CNETMsg_SplitScreenUser::Clear() {
// @@protoc_insertion_point(message_clear_start:CNETMsg_SplitScreenUser)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.slot_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CNETMsg_SplitScreenUser::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CNETMsg_SplitScreenUser::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CNETMsg_SplitScreenUser, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CNETMsg_SplitScreenUser_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 slot = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CNETMsg_SplitScreenUser, _impl_.slot_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SplitScreenUser, _impl_.slot_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 slot = 1;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SplitScreenUser, _impl_.slot_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CNETMsg_SplitScreenUser::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CNETMsg_SplitScreenUser)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 slot = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_slot(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CNETMsg_SplitScreenUser)
  return target;
}

::size_t CNETMsg_SplitScreenUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CNETMsg_SplitScreenUser)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 slot = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_slot());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CNETMsg_SplitScreenUser::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CNETMsg_SplitScreenUser::MergeImpl
};
const ::google::protobuf::Message::ClassData*CNETMsg_SplitScreenUser::GetClassData() const { return &_class_data_; }


void CNETMsg_SplitScreenUser::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CNETMsg_SplitScreenUser*>(&to_msg);
  auto& from = static_cast<const CNETMsg_SplitScreenUser&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CNETMsg_SplitScreenUser)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_slot(from._internal_slot());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CNETMsg_SplitScreenUser::CopyFrom(const CNETMsg_SplitScreenUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CNETMsg_SplitScreenUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CNETMsg_SplitScreenUser::IsInitialized() const {
  return true;
}

void CNETMsg_SplitScreenUser::InternalSwap(CNETMsg_SplitScreenUser* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.slot_, other->_impl_.slot_);
}

::google::protobuf::Metadata CNETMsg_SplitScreenUser::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networkbasetypes_2eproto_getter, &descriptor_table_networkbasetypes_2eproto_once,
      file_level_metadata_networkbasetypes_2eproto[11]);
}
// ===================================================================

class CNETMsg_Disconnect::_Internal {
 public:
  using HasBits = decltype(std::declval<CNETMsg_Disconnect>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CNETMsg_Disconnect, _impl_._has_bits_);
  static void set_has_reason(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CNETMsg_Disconnect::CNETMsg_Disconnect(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CNETMsg_Disconnect)
}
CNETMsg_Disconnect::CNETMsg_Disconnect(const CNETMsg_Disconnect& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CNETMsg_Disconnect)
}
inline void CNETMsg_Disconnect::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.reason_){0},
  };
}
CNETMsg_Disconnect::~CNETMsg_Disconnect() {
  // @@protoc_insertion_point(destructor:CNETMsg_Disconnect)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CNETMsg_Disconnect::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CNETMsg_Disconnect::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CNETMsg_Disconnect::Clear() {
// @@protoc_insertion_point(message_clear_start:CNETMsg_Disconnect)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reason_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CNETMsg_Disconnect::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CNETMsg_Disconnect::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CNETMsg_Disconnect, _impl_._has_bits_),
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CNETMsg_Disconnect_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .ENetworkDisconnectionReason reason = 2 [default = NETWORK_DISCONNECT_INVALID];
    {::_pbi::TcParser::FastEvS1,
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_Disconnect, _impl_.reason_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .ENetworkDisconnectionReason reason = 2 [default = NETWORK_DISCONNECT_INVALID];
    {PROTOBUF_FIELD_OFFSET(CNETMsg_Disconnect, _impl_.reason_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
  }}, {{
    {::ENetworkDisconnectionReason_IsValid},
  }}, {{
  }},
};

::uint8_t* CNETMsg_Disconnect::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CNETMsg_Disconnect)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ENetworkDisconnectionReason reason = 2 [default = NETWORK_DISCONNECT_INVALID];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_reason(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CNETMsg_Disconnect)
  return target;
}

::size_t CNETMsg_Disconnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CNETMsg_Disconnect)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ENetworkDisconnectionReason reason = 2 [default = NETWORK_DISCONNECT_INVALID];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_reason());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CNETMsg_Disconnect::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CNETMsg_Disconnect::MergeImpl
};
const ::google::protobuf::Message::ClassData*CNETMsg_Disconnect::GetClassData() const { return &_class_data_; }


void CNETMsg_Disconnect::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CNETMsg_Disconnect*>(&to_msg);
  auto& from = static_cast<const CNETMsg_Disconnect&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CNETMsg_Disconnect)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_reason(from._internal_reason());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CNETMsg_Disconnect::CopyFrom(const CNETMsg_Disconnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CNETMsg_Disconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CNETMsg_Disconnect::IsInitialized() const {
  return true;
}

void CNETMsg_Disconnect::InternalSwap(CNETMsg_Disconnect* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.reason_, other->_impl_.reason_);
}

::google::protobuf::Metadata CNETMsg_Disconnect::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networkbasetypes_2eproto_getter, &descriptor_table_networkbasetypes_2eproto_once,
      file_level_metadata_networkbasetypes_2eproto[12]);
}
// ===================================================================

class CNETMsg_Tick::_Internal {
 public:
  using HasBits = decltype(std::declval<CNETMsg_Tick>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CNETMsg_Tick, _impl_._has_bits_);
  static void set_has_tick(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_host_frametime(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_host_frametime_std_deviation(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_host_computationtime(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_host_computationtime_std_deviation(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_host_framestarttime_std_deviation(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_host_loss(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_host_unfiltered_frametime(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_hltv_replay_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
};

CNETMsg_Tick::CNETMsg_Tick(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CNETMsg_Tick)
}
CNETMsg_Tick::CNETMsg_Tick(const CNETMsg_Tick& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CNETMsg_Tick)
}
inline void CNETMsg_Tick::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.tick_){0u},
      decltype(_impl_.host_frametime_){0u},
      decltype(_impl_.host_frametime_std_deviation_){0u},
      decltype(_impl_.host_computationtime_){0u},
      decltype(_impl_.host_computationtime_std_deviation_){0u},
      decltype(_impl_.host_framestarttime_std_deviation_){0u},
      decltype(_impl_.host_loss_){0u},
      decltype(_impl_.host_unfiltered_frametime_){0u},
      decltype(_impl_.hltv_replay_flags_){0u},
  };
}
CNETMsg_Tick::~CNETMsg_Tick() {
  // @@protoc_insertion_point(destructor:CNETMsg_Tick)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CNETMsg_Tick::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CNETMsg_Tick::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CNETMsg_Tick::Clear() {
// @@protoc_insertion_point(message_clear_start:CNETMsg_Tick)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.tick_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.host_unfiltered_frametime_) -
        reinterpret_cast<char*>(&_impl_.tick_)) + sizeof(_impl_.host_unfiltered_frametime_));
  }
  _impl_.hltv_replay_flags_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CNETMsg_Tick::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 0, 2> CNETMsg_Tick::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CNETMsg_Tick, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CNETMsg_Tick_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 tick = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CNETMsg_Tick, _impl_.tick_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_Tick, _impl_.tick_)}},
    // optional uint32 host_frametime = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CNETMsg_Tick, _impl_.host_frametime_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_Tick, _impl_.host_frametime_)}},
    // optional uint32 host_frametime_std_deviation = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CNETMsg_Tick, _impl_.host_frametime_std_deviation_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_Tick, _impl_.host_frametime_std_deviation_)}},
    // optional uint32 host_computationtime = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CNETMsg_Tick, _impl_.host_computationtime_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_Tick, _impl_.host_computationtime_)}},
    // optional uint32 host_computationtime_std_deviation = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CNETMsg_Tick, _impl_.host_computationtime_std_deviation_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_Tick, _impl_.host_computationtime_std_deviation_)}},
    // optional uint32 host_framestarttime_std_deviation = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CNETMsg_Tick, _impl_.host_framestarttime_std_deviation_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_Tick, _impl_.host_framestarttime_std_deviation_)}},
    // optional uint32 host_loss = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CNETMsg_Tick, _impl_.host_loss_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_Tick, _impl_.host_loss_)}},
    // optional uint32 host_unfiltered_frametime = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CNETMsg_Tick, _impl_.host_unfiltered_frametime_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_Tick, _impl_.host_unfiltered_frametime_)}},
    // optional uint32 hltv_replay_flags = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CNETMsg_Tick, _impl_.hltv_replay_flags_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_Tick, _impl_.hltv_replay_flags_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 tick = 1;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_Tick, _impl_.tick_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 host_frametime = 2;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_Tick, _impl_.host_frametime_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 host_frametime_std_deviation = 3;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_Tick, _impl_.host_frametime_std_deviation_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 host_computationtime = 4;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_Tick, _impl_.host_computationtime_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 host_computationtime_std_deviation = 5;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_Tick, _impl_.host_computationtime_std_deviation_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 host_framestarttime_std_deviation = 6;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_Tick, _impl_.host_framestarttime_std_deviation_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 host_loss = 7;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_Tick, _impl_.host_loss_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 host_unfiltered_frametime = 8;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_Tick, _impl_.host_unfiltered_frametime_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 hltv_replay_flags = 9;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_Tick, _impl_.hltv_replay_flags_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CNETMsg_Tick::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CNETMsg_Tick)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 tick = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_tick(), target);
  }

  // optional uint32 host_frametime = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_host_frametime(), target);
  }

  // optional uint32 host_frametime_std_deviation = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_host_frametime_std_deviation(), target);
  }

  // optional uint32 host_computationtime = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_host_computationtime(), target);
  }

  // optional uint32 host_computationtime_std_deviation = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_host_computationtime_std_deviation(), target);
  }

  // optional uint32 host_framestarttime_std_deviation = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_host_framestarttime_std_deviation(), target);
  }

  // optional uint32 host_loss = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_host_loss(), target);
  }

  // optional uint32 host_unfiltered_frametime = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this->_internal_host_unfiltered_frametime(), target);
  }

  // optional uint32 hltv_replay_flags = 9;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this->_internal_hltv_replay_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CNETMsg_Tick)
  return target;
}

::size_t CNETMsg_Tick::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CNETMsg_Tick)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional uint32 tick = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_tick());
    }

    // optional uint32 host_frametime = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_host_frametime());
    }

    // optional uint32 host_frametime_std_deviation = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_host_frametime_std_deviation());
    }

    // optional uint32 host_computationtime = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_host_computationtime());
    }

    // optional uint32 host_computationtime_std_deviation = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_host_computationtime_std_deviation());
    }

    // optional uint32 host_framestarttime_std_deviation = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_host_framestarttime_std_deviation());
    }

    // optional uint32 host_loss = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_host_loss());
    }

    // optional uint32 host_unfiltered_frametime = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_host_unfiltered_frametime());
    }

  }
  // optional uint32 hltv_replay_flags = 9;
  if (cached_has_bits & 0x00000100u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_hltv_replay_flags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CNETMsg_Tick::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CNETMsg_Tick::MergeImpl
};
const ::google::protobuf::Message::ClassData*CNETMsg_Tick::GetClassData() const { return &_class_data_; }


void CNETMsg_Tick::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CNETMsg_Tick*>(&to_msg);
  auto& from = static_cast<const CNETMsg_Tick&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CNETMsg_Tick)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.tick_ = from._impl_.tick_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.host_frametime_ = from._impl_.host_frametime_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.host_frametime_std_deviation_ = from._impl_.host_frametime_std_deviation_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.host_computationtime_ = from._impl_.host_computationtime_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.host_computationtime_std_deviation_ = from._impl_.host_computationtime_std_deviation_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.host_framestarttime_std_deviation_ = from._impl_.host_framestarttime_std_deviation_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.host_loss_ = from._impl_.host_loss_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.host_unfiltered_frametime_ = from._impl_.host_unfiltered_frametime_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_internal_set_hltv_replay_flags(from._internal_hltv_replay_flags());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CNETMsg_Tick::CopyFrom(const CNETMsg_Tick& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CNETMsg_Tick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CNETMsg_Tick::IsInitialized() const {
  return true;
}

void CNETMsg_Tick::InternalSwap(CNETMsg_Tick* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CNETMsg_Tick, _impl_.hltv_replay_flags_)
      + sizeof(CNETMsg_Tick::_impl_.hltv_replay_flags_)
      - PROTOBUF_FIELD_OFFSET(CNETMsg_Tick, _impl_.tick_)>(
          reinterpret_cast<char*>(&_impl_.tick_),
          reinterpret_cast<char*>(&other->_impl_.tick_));
}

::google::protobuf::Metadata CNETMsg_Tick::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networkbasetypes_2eproto_getter, &descriptor_table_networkbasetypes_2eproto_once,
      file_level_metadata_networkbasetypes_2eproto[13]);
}
// ===================================================================

class CNETMsg_StringCmd::_Internal {
 public:
  using HasBits = decltype(std::declval<CNETMsg_StringCmd>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CNETMsg_StringCmd, _impl_._has_bits_);
  static void set_has_command(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_prediction_sync(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CNETMsg_StringCmd::CNETMsg_StringCmd(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CNETMsg_StringCmd)
}
CNETMsg_StringCmd::CNETMsg_StringCmd(const CNETMsg_StringCmd& from) : ::google::protobuf::Message() {
  CNETMsg_StringCmd* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.command_){},
      decltype(_impl_.prediction_sync_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.command_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.command_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.command_.Set(from._internal_command(), _this->GetArenaForAllocation());
  }
  _this->_impl_.prediction_sync_ = from._impl_.prediction_sync_;

  // @@protoc_insertion_point(copy_constructor:CNETMsg_StringCmd)
}
inline void CNETMsg_StringCmd::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.command_){},
      decltype(_impl_.prediction_sync_){0u},
  };
  _impl_.command_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.command_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CNETMsg_StringCmd::~CNETMsg_StringCmd() {
  // @@protoc_insertion_point(destructor:CNETMsg_StringCmd)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CNETMsg_StringCmd::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.command_.Destroy();
}
void CNETMsg_StringCmd::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CNETMsg_StringCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:CNETMsg_StringCmd)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.command_.ClearNonDefaultToEmpty();
  }
  _impl_.prediction_sync_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CNETMsg_StringCmd::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 33, 2> CNETMsg_StringCmd::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CNETMsg_StringCmd, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CNETMsg_StringCmd_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 prediction_sync = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CNETMsg_StringCmd, _impl_.prediction_sync_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_StringCmd, _impl_.prediction_sync_)}},
    // optional string command = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_StringCmd, _impl_.command_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string command = 1;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_StringCmd, _impl_.command_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 prediction_sync = 2;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_StringCmd, _impl_.prediction_sync_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\21\7\0\0\0\0\0\0"
    "CNETMsg_StringCmd"
    "command"
  }},
};

::uint8_t* CNETMsg_StringCmd::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CNETMsg_StringCmd)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string command = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_command();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CNETMsg_StringCmd.command");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional uint32 prediction_sync = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_prediction_sync(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CNETMsg_StringCmd)
  return target;
}

::size_t CNETMsg_StringCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CNETMsg_StringCmd)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string command = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_command());
    }

    // optional uint32 prediction_sync = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_prediction_sync());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CNETMsg_StringCmd::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CNETMsg_StringCmd::MergeImpl
};
const ::google::protobuf::Message::ClassData*CNETMsg_StringCmd::GetClassData() const { return &_class_data_; }


void CNETMsg_StringCmd::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CNETMsg_StringCmd*>(&to_msg);
  auto& from = static_cast<const CNETMsg_StringCmd&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CNETMsg_StringCmd)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_command(from._internal_command());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.prediction_sync_ = from._impl_.prediction_sync_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CNETMsg_StringCmd::CopyFrom(const CNETMsg_StringCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CNETMsg_StringCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CNETMsg_StringCmd::IsInitialized() const {
  return true;
}

void CNETMsg_StringCmd::InternalSwap(CNETMsg_StringCmd* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.command_, lhs_arena,
                                       &other->_impl_.command_, rhs_arena);
        swap(_impl_.prediction_sync_, other->_impl_.prediction_sync_);
}

::google::protobuf::Metadata CNETMsg_StringCmd::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networkbasetypes_2eproto_getter, &descriptor_table_networkbasetypes_2eproto_once,
      file_level_metadata_networkbasetypes_2eproto[14]);
}
// ===================================================================

class CNETMsg_SetConVar::_Internal {
 public:
  using HasBits = decltype(std::declval<CNETMsg_SetConVar>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CNETMsg_SetConVar, _impl_._has_bits_);
  static const ::CMsg_CVars& convars(const CNETMsg_SetConVar* msg);
  static void set_has_convars(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsg_CVars& CNETMsg_SetConVar::_Internal::convars(const CNETMsg_SetConVar* msg) {
  return *msg->_impl_.convars_;
}
CNETMsg_SetConVar::CNETMsg_SetConVar(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CNETMsg_SetConVar)
}
CNETMsg_SetConVar::CNETMsg_SetConVar(const CNETMsg_SetConVar& from) : ::google::protobuf::Message() {
  CNETMsg_SetConVar* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.convars_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.convars_ = new ::CMsg_CVars(*from._impl_.convars_);
  }

  // @@protoc_insertion_point(copy_constructor:CNETMsg_SetConVar)
}
inline void CNETMsg_SetConVar::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.convars_){nullptr},
  };
}
CNETMsg_SetConVar::~CNETMsg_SetConVar() {
  // @@protoc_insertion_point(destructor:CNETMsg_SetConVar)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CNETMsg_SetConVar::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.convars_;
}
void CNETMsg_SetConVar::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CNETMsg_SetConVar::Clear() {
// @@protoc_insertion_point(message_clear_start:CNETMsg_SetConVar)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.convars_ != nullptr);
    _impl_.convars_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CNETMsg_SetConVar::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CNETMsg_SetConVar::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CNETMsg_SetConVar, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CNETMsg_SetConVar_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .CMsg_CVars convars = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SetConVar, _impl_.convars_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsg_CVars convars = 1;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SetConVar, _impl_.convars_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsg_CVars>()},
  }}, {{
  }},
};

::uint8_t* CNETMsg_SetConVar::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CNETMsg_SetConVar)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsg_CVars convars = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::convars(this),
        _Internal::convars(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CNETMsg_SetConVar)
  return target;
}

::size_t CNETMsg_SetConVar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CNETMsg_SetConVar)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsg_CVars convars = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.convars_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CNETMsg_SetConVar::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CNETMsg_SetConVar::MergeImpl
};
const ::google::protobuf::Message::ClassData*CNETMsg_SetConVar::GetClassData() const { return &_class_data_; }


void CNETMsg_SetConVar::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CNETMsg_SetConVar*>(&to_msg);
  auto& from = static_cast<const CNETMsg_SetConVar&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CNETMsg_SetConVar)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_convars()->::CMsg_CVars::MergeFrom(
        from._internal_convars());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CNETMsg_SetConVar::CopyFrom(const CNETMsg_SetConVar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CNETMsg_SetConVar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CNETMsg_SetConVar::IsInitialized() const {
  return true;
}

void CNETMsg_SetConVar::InternalSwap(CNETMsg_SetConVar* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.convars_, other->_impl_.convars_);
}

::google::protobuf::Metadata CNETMsg_SetConVar::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networkbasetypes_2eproto_getter, &descriptor_table_networkbasetypes_2eproto_once,
      file_level_metadata_networkbasetypes_2eproto[15]);
}
// ===================================================================

class CNETMsg_SignonState::_Internal {
 public:
  using HasBits = decltype(std::declval<CNETMsg_SignonState>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CNETMsg_SignonState, _impl_._has_bits_);
  static void set_has_signon_state(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_spawn_count(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_num_server_players(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_map_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_addons(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CNETMsg_SignonState::CNETMsg_SignonState(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CNETMsg_SignonState)
}
CNETMsg_SignonState::CNETMsg_SignonState(const CNETMsg_SignonState& from) : ::google::protobuf::Message() {
  CNETMsg_SignonState* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.players_networkids_){from._impl_.players_networkids_},
      decltype(_impl_.map_name_){},
      decltype(_impl_.addons_){},
      decltype(_impl_.signon_state_){},
      decltype(_impl_.spawn_count_){},
      decltype(_impl_.num_server_players_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.map_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.map_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.map_name_.Set(from._internal_map_name(), _this->GetArenaForAllocation());
  }
  _impl_.addons_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.addons_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.addons_.Set(from._internal_addons(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.signon_state_, &from._impl_.signon_state_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.num_server_players_) -
    reinterpret_cast<char*>(&_impl_.signon_state_)) + sizeof(_impl_.num_server_players_));

  // @@protoc_insertion_point(copy_constructor:CNETMsg_SignonState)
}
inline void CNETMsg_SignonState::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.players_networkids_){arena},
      decltype(_impl_.map_name_){},
      decltype(_impl_.addons_){},
      decltype(_impl_.signon_state_){0},
      decltype(_impl_.spawn_count_){0u},
      decltype(_impl_.num_server_players_){0u},
  };
  _impl_.map_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.map_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.addons_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.addons_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CNETMsg_SignonState::~CNETMsg_SignonState() {
  // @@protoc_insertion_point(destructor:CNETMsg_SignonState)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CNETMsg_SignonState::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_players_networkids()->~RepeatedPtrField();
  _impl_.map_name_.Destroy();
  _impl_.addons_.Destroy();
}
void CNETMsg_SignonState::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CNETMsg_SignonState::Clear() {
// @@protoc_insertion_point(message_clear_start:CNETMsg_SignonState)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_players_networkids()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.map_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.addons_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&_impl_.signon_state_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.num_server_players_) -
        reinterpret_cast<char*>(&_impl_.signon_state_)) + sizeof(_impl_.num_server_players_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CNETMsg_SignonState::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 60, 2> CNETMsg_SignonState::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CNETMsg_SignonState, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CNETMsg_SignonState_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .SignonState_t signon_state = 1 [default = SIGNONSTATE_NONE];
    {::_pbi::TcParser::FastEr0S1,
     {8, 2, 7, PROTOBUF_FIELD_OFFSET(CNETMsg_SignonState, _impl_.signon_state_)}},
    // optional uint32 spawn_count = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CNETMsg_SignonState, _impl_.spawn_count_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SignonState, _impl_.spawn_count_)}},
    // optional uint32 num_server_players = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CNETMsg_SignonState, _impl_.num_server_players_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SignonState, _impl_.num_server_players_)}},
    // repeated string players_networkids = 4;
    {::_pbi::TcParser::FastSR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SignonState, _impl_.players_networkids_)}},
    // optional string map_name = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SignonState, _impl_.map_name_)}},
    // optional string addons = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 1, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SignonState, _impl_.addons_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SignonState_t signon_state = 1 [default = SIGNONSTATE_NONE];
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SignonState, _impl_.signon_state_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional uint32 spawn_count = 2;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SignonState, _impl_.spawn_count_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 num_server_players = 3;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SignonState, _impl_.num_server_players_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated string players_networkids = 4;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SignonState, _impl_.players_networkids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // optional string map_name = 5;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SignonState, _impl_.map_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string addons = 6;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SignonState, _impl_.addons_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {0, 8},
  }}, {{
    "\23\0\0\0\22\10\6\0"
    "CNETMsg_SignonState"
    "players_networkids"
    "map_name"
    "addons"
  }},
};

::uint8_t* CNETMsg_SignonState::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CNETMsg_SignonState)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SignonState_t signon_state = 1 [default = SIGNONSTATE_NONE];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_signon_state(), target);
  }

  // optional uint32 spawn_count = 2;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_spawn_count(), target);
  }

  // optional uint32 num_server_players = 3;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_num_server_players(), target);
  }

  // repeated string players_networkids = 4;
  for (int i = 0, n = this->_internal_players_networkids_size(); i < n; ++i) {
    const auto& s = this->_internal_players_networkids().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CNETMsg_SignonState.players_networkids");
    target = stream->WriteString(4, s, target);
  }

  // optional string map_name = 5;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_map_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CNETMsg_SignonState.map_name");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // optional string addons = 6;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_addons();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CNETMsg_SignonState.addons");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CNETMsg_SignonState)
  return target;
}

::size_t CNETMsg_SignonState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CNETMsg_SignonState)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string players_networkids = 4;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_players_networkids().size());
  for (int i = 0, n = _internal_players_networkids().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_players_networkids().Get(i));
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string map_name = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_map_name());
    }

    // optional string addons = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_addons());
    }

    // optional .SignonState_t signon_state = 1 [default = SIGNONSTATE_NONE];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_signon_state());
    }

    // optional uint32 spawn_count = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_spawn_count());
    }

    // optional uint32 num_server_players = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_num_server_players());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CNETMsg_SignonState::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CNETMsg_SignonState::MergeImpl
};
const ::google::protobuf::Message::ClassData*CNETMsg_SignonState::GetClassData() const { return &_class_data_; }


void CNETMsg_SignonState::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CNETMsg_SignonState*>(&to_msg);
  auto& from = static_cast<const CNETMsg_SignonState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CNETMsg_SignonState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_players_networkids()->MergeFrom(from._internal_players_networkids());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_map_name(from._internal_map_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_addons(from._internal_addons());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.signon_state_ = from._impl_.signon_state_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.spawn_count_ = from._impl_.spawn_count_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.num_server_players_ = from._impl_.num_server_players_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CNETMsg_SignonState::CopyFrom(const CNETMsg_SignonState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CNETMsg_SignonState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CNETMsg_SignonState::IsInitialized() const {
  return true;
}

void CNETMsg_SignonState::InternalSwap(CNETMsg_SignonState* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.players_networkids_.InternalSwap(&other->_impl_.players_networkids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.map_name_, lhs_arena,
                                       &other->_impl_.map_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.addons_, lhs_arena,
                                       &other->_impl_.addons_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CNETMsg_SignonState, _impl_.num_server_players_)
      + sizeof(CNETMsg_SignonState::_impl_.num_server_players_)
      - PROTOBUF_FIELD_OFFSET(CNETMsg_SignonState, _impl_.signon_state_)>(
          reinterpret_cast<char*>(&_impl_.signon_state_),
          reinterpret_cast<char*>(&other->_impl_.signon_state_));
}

::google::protobuf::Metadata CNETMsg_SignonState::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networkbasetypes_2eproto_getter, &descriptor_table_networkbasetypes_2eproto_once,
      file_level_metadata_networkbasetypes_2eproto[16]);
}
// ===================================================================

class CSVCMsg_GameEvent_key_t::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_GameEvent_key_t>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEvent_key_t, _impl_._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_val_string(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_val_float(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_val_long(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_val_short(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_val_byte(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_val_bool(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_val_uint64(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

CSVCMsg_GameEvent_key_t::CSVCMsg_GameEvent_key_t(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_GameEvent.key_t)
}
CSVCMsg_GameEvent_key_t::CSVCMsg_GameEvent_key_t(const CSVCMsg_GameEvent_key_t& from) : ::google::protobuf::Message() {
  CSVCMsg_GameEvent_key_t* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.val_string_){},
      decltype(_impl_.type_){},
      decltype(_impl_.val_float_){},
      decltype(_impl_.val_long_){},
      decltype(_impl_.val_short_){},
      decltype(_impl_.val_byte_){},
      decltype(_impl_.val_bool_){},
      decltype(_impl_.val_uint64_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.val_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.val_string_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.val_string_.Set(from._internal_val_string(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.type_, &from._impl_.type_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.val_uint64_) -
    reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.val_uint64_));

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_GameEvent.key_t)
}
inline void CSVCMsg_GameEvent_key_t::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.val_string_){},
      decltype(_impl_.type_){0},
      decltype(_impl_.val_float_){0},
      decltype(_impl_.val_long_){0},
      decltype(_impl_.val_short_){0},
      decltype(_impl_.val_byte_){0},
      decltype(_impl_.val_bool_){false},
      decltype(_impl_.val_uint64_){::uint64_t{0u}},
  };
  _impl_.val_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.val_string_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CSVCMsg_GameEvent_key_t::~CSVCMsg_GameEvent_key_t() {
  // @@protoc_insertion_point(destructor:CSVCMsg_GameEvent.key_t)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_GameEvent_key_t::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.val_string_.Destroy();
}
void CSVCMsg_GameEvent_key_t::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_GameEvent_key_t::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_GameEvent.key_t)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.val_string_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&_impl_.type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.val_uint64_) -
        reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.val_uint64_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_GameEvent_key_t::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 50, 2> CSVCMsg_GameEvent_key_t::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEvent_key_t, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CSVCMsg_GameEvent_key_t_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint64 val_uint64 = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CSVCMsg_GameEvent_key_t, _impl_.val_uint64_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEvent_key_t, _impl_.val_uint64_)}},
    // optional int32 type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_GameEvent_key_t, _impl_.type_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEvent_key_t, _impl_.type_)}},
    // optional string val_string = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEvent_key_t, _impl_.val_string_)}},
    // optional float val_float = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEvent_key_t, _impl_.val_float_)}},
    // optional int32 val_long = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_GameEvent_key_t, _impl_.val_long_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEvent_key_t, _impl_.val_long_)}},
    // optional int32 val_short = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_GameEvent_key_t, _impl_.val_short_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEvent_key_t, _impl_.val_short_)}},
    // optional int32 val_byte = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_GameEvent_key_t, _impl_.val_byte_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEvent_key_t, _impl_.val_byte_)}},
    // optional bool val_bool = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CSVCMsg_GameEvent_key_t, _impl_.val_bool_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEvent_key_t, _impl_.val_bool_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 type = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEvent_key_t, _impl_.type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string val_string = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEvent_key_t, _impl_.val_string_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional float val_float = 3;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEvent_key_t, _impl_.val_float_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional int32 val_long = 4;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEvent_key_t, _impl_.val_long_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 val_short = 5;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEvent_key_t, _impl_.val_short_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 val_byte = 6;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEvent_key_t, _impl_.val_byte_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool val_bool = 7;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEvent_key_t, _impl_.val_bool_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint64 val_uint64 = 8;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEvent_key_t, _impl_.val_uint64_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\27\0\12\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "CSVCMsg_GameEvent.key_t"
    "val_string"
  }},
};

::uint8_t* CSVCMsg_GameEvent_key_t::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_GameEvent.key_t)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_type(), target);
  }

  // optional string val_string = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_val_string();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSVCMsg_GameEvent.key_t.val_string");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional float val_float = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_val_float(), target);
  }

  // optional int32 val_long = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_val_long(), target);
  }

  // optional int32 val_short = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_val_short(), target);
  }

  // optional int32 val_byte = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_val_byte(), target);
  }

  // optional bool val_bool = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        7, this->_internal_val_bool(), target);
  }

  // optional uint64 val_uint64 = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        8, this->_internal_val_uint64(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_GameEvent.key_t)
  return target;
}

::size_t CSVCMsg_GameEvent_key_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_GameEvent.key_t)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string val_string = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_val_string());
    }

    // optional int32 type = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_type());
    }

    // optional float val_float = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

    // optional int32 val_long = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_val_long());
    }

    // optional int32 val_short = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_val_short());
    }

    // optional int32 val_byte = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_val_byte());
    }

    // optional bool val_bool = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2;
    }

    // optional uint64 val_uint64 = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_val_uint64());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_GameEvent_key_t::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_GameEvent_key_t::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_GameEvent_key_t::GetClassData() const { return &_class_data_; }


void CSVCMsg_GameEvent_key_t::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_GameEvent_key_t*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_GameEvent_key_t&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_GameEvent.key_t)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_val_string(from._internal_val_string());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.val_float_ = from._impl_.val_float_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.val_long_ = from._impl_.val_long_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.val_short_ = from._impl_.val_short_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.val_byte_ = from._impl_.val_byte_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.val_bool_ = from._impl_.val_bool_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.val_uint64_ = from._impl_.val_uint64_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_GameEvent_key_t::CopyFrom(const CSVCMsg_GameEvent_key_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_GameEvent.key_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_GameEvent_key_t::IsInitialized() const {
  return true;
}

void CSVCMsg_GameEvent_key_t::InternalSwap(CSVCMsg_GameEvent_key_t* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.val_string_, lhs_arena,
                                       &other->_impl_.val_string_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEvent_key_t, _impl_.val_uint64_)
      + sizeof(CSVCMsg_GameEvent_key_t::_impl_.val_uint64_)
      - PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEvent_key_t, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata CSVCMsg_GameEvent_key_t::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networkbasetypes_2eproto_getter, &descriptor_table_networkbasetypes_2eproto_once,
      file_level_metadata_networkbasetypes_2eproto[17]);
}
// ===================================================================

class CSVCMsg_GameEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_GameEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEvent, _impl_._has_bits_);
  static void set_has_event_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_eventid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CSVCMsg_GameEvent::CSVCMsg_GameEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_GameEvent)
}
CSVCMsg_GameEvent::CSVCMsg_GameEvent(const CSVCMsg_GameEvent& from) : ::google::protobuf::Message() {
  CSVCMsg_GameEvent* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.keys_){from._impl_.keys_},
      decltype(_impl_.event_name_){},
      decltype(_impl_.eventid_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.event_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.event_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.event_name_.Set(from._internal_event_name(), _this->GetArenaForAllocation());
  }
  _this->_impl_.eventid_ = from._impl_.eventid_;

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_GameEvent)
}
inline void CSVCMsg_GameEvent::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.keys_){arena},
      decltype(_impl_.event_name_){},
      decltype(_impl_.eventid_){0},
  };
  _impl_.event_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.event_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CSVCMsg_GameEvent::~CSVCMsg_GameEvent() {
  // @@protoc_insertion_point(destructor:CSVCMsg_GameEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_GameEvent::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.keys_.~RepeatedPtrField();
  _impl_.event_name_.Destroy();
}
void CSVCMsg_GameEvent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_GameEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_GameEvent)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_keys()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.event_name_.ClearNonDefaultToEmpty();
  }
  _impl_.eventid_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_GameEvent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 36, 2> CSVCMsg_GameEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEvent, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CSVCMsg_GameEvent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string event_name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEvent, _impl_.event_name_)}},
    // optional int32 eventid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_GameEvent, _impl_.eventid_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEvent, _impl_.eventid_)}},
    // repeated .CSVCMsg_GameEvent.key_t keys = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEvent, _impl_.keys_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string event_name = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEvent, _impl_.event_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 eventid = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEvent, _impl_.eventid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated .CSVCMsg_GameEvent.key_t keys = 3;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEvent, _impl_.keys_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CSVCMsg_GameEvent_key_t>()},
  }}, {{
    "\21\12\0\0\0\0\0\0"
    "CSVCMsg_GameEvent"
    "event_name"
  }},
};

::uint8_t* CSVCMsg_GameEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_GameEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string event_name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_event_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSVCMsg_GameEvent.event_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional int32 eventid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_eventid(), target);
  }

  // repeated .CSVCMsg_GameEvent.key_t keys = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_keys_size()); i < n; i++) {
    const auto& repfield = this->_internal_keys().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_GameEvent)
  return target;
}

::size_t CSVCMsg_GameEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_GameEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CSVCMsg_GameEvent.key_t keys = 3;
  total_size += 1UL * this->_internal_keys_size();
  for (const auto& msg : this->_internal_keys()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string event_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_event_name());
    }

    // optional int32 eventid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_eventid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_GameEvent::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_GameEvent::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_GameEvent::GetClassData() const { return &_class_data_; }


void CSVCMsg_GameEvent::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_GameEvent*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_GameEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_GameEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_keys()->MergeFrom(from._internal_keys());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_event_name(from._internal_event_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.eventid_ = from._impl_.eventid_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_GameEvent::CopyFrom(const CSVCMsg_GameEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_GameEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_GameEvent::IsInitialized() const {
  return true;
}

void CSVCMsg_GameEvent::InternalSwap(CSVCMsg_GameEvent* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.keys_.InternalSwap(&other->_impl_.keys_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.event_name_, lhs_arena,
                                       &other->_impl_.event_name_, rhs_arena);
        swap(_impl_.eventid_, other->_impl_.eventid_);
}

::google::protobuf::Metadata CSVCMsg_GameEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networkbasetypes_2eproto_getter, &descriptor_table_networkbasetypes_2eproto_once,
      file_level_metadata_networkbasetypes_2eproto[18]);
}
// ===================================================================

class CSVCMsgList_GameEvents_event_t::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsgList_GameEvents_event_t>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsgList_GameEvents_event_t, _impl_._has_bits_);
  static void set_has_tick(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CSVCMsg_GameEvent& event(const CSVCMsgList_GameEvents_event_t* msg);
  static void set_has_event(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CSVCMsg_GameEvent& CSVCMsgList_GameEvents_event_t::_Internal::event(const CSVCMsgList_GameEvents_event_t* msg) {
  return *msg->_impl_.event_;
}
CSVCMsgList_GameEvents_event_t::CSVCMsgList_GameEvents_event_t(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsgList_GameEvents.event_t)
}
CSVCMsgList_GameEvents_event_t::CSVCMsgList_GameEvents_event_t(const CSVCMsgList_GameEvents_event_t& from) : ::google::protobuf::Message() {
  CSVCMsgList_GameEvents_event_t* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.event_){nullptr},
      decltype(_impl_.tick_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.event_ = new ::CSVCMsg_GameEvent(*from._impl_.event_);
  }
  _this->_impl_.tick_ = from._impl_.tick_;

  // @@protoc_insertion_point(copy_constructor:CSVCMsgList_GameEvents.event_t)
}
inline void CSVCMsgList_GameEvents_event_t::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.event_){nullptr},
      decltype(_impl_.tick_){0},
  };
}
CSVCMsgList_GameEvents_event_t::~CSVCMsgList_GameEvents_event_t() {
  // @@protoc_insertion_point(destructor:CSVCMsgList_GameEvents.event_t)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsgList_GameEvents_event_t::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.event_;
}
void CSVCMsgList_GameEvents_event_t::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsgList_GameEvents_event_t::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsgList_GameEvents.event_t)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.event_ != nullptr);
    _impl_.event_->Clear();
  }
  _impl_.tick_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsgList_GameEvents_event_t::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> CSVCMsgList_GameEvents_event_t::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsgList_GameEvents_event_t, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CSVCMsgList_GameEvents_event_t_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .CSVCMsg_GameEvent event = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsgList_GameEvents_event_t, _impl_.event_)}},
    // optional int32 tick = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsgList_GameEvents_event_t, _impl_.tick_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsgList_GameEvents_event_t, _impl_.tick_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 tick = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsgList_GameEvents_event_t, _impl_.tick_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .CSVCMsg_GameEvent event = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsgList_GameEvents_event_t, _impl_.event_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CSVCMsg_GameEvent>()},
  }}, {{
  }},
};

::uint8_t* CSVCMsgList_GameEvents_event_t::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsgList_GameEvents.event_t)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 tick = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_tick(), target);
  }

  // optional .CSVCMsg_GameEvent event = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::event(this),
        _Internal::event(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsgList_GameEvents.event_t)
  return target;
}

::size_t CSVCMsgList_GameEvents_event_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsgList_GameEvents.event_t)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CSVCMsg_GameEvent event = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.event_);
    }

    // optional int32 tick = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_tick());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsgList_GameEvents_event_t::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsgList_GameEvents_event_t::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsgList_GameEvents_event_t::GetClassData() const { return &_class_data_; }


void CSVCMsgList_GameEvents_event_t::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsgList_GameEvents_event_t*>(&to_msg);
  auto& from = static_cast<const CSVCMsgList_GameEvents_event_t&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsgList_GameEvents.event_t)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_event()->::CSVCMsg_GameEvent::MergeFrom(
          from._internal_event());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.tick_ = from._impl_.tick_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsgList_GameEvents_event_t::CopyFrom(const CSVCMsgList_GameEvents_event_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsgList_GameEvents.event_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsgList_GameEvents_event_t::IsInitialized() const {
  return true;
}

void CSVCMsgList_GameEvents_event_t::InternalSwap(CSVCMsgList_GameEvents_event_t* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSVCMsgList_GameEvents_event_t, _impl_.tick_)
      + sizeof(CSVCMsgList_GameEvents_event_t::_impl_.tick_)
      - PROTOBUF_FIELD_OFFSET(CSVCMsgList_GameEvents_event_t, _impl_.event_)>(
          reinterpret_cast<char*>(&_impl_.event_),
          reinterpret_cast<char*>(&other->_impl_.event_));
}

::google::protobuf::Metadata CSVCMsgList_GameEvents_event_t::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networkbasetypes_2eproto_getter, &descriptor_table_networkbasetypes_2eproto_once,
      file_level_metadata_networkbasetypes_2eproto[19]);
}
// ===================================================================

class CSVCMsgList_GameEvents::_Internal {
 public:
};

CSVCMsgList_GameEvents::CSVCMsgList_GameEvents(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsgList_GameEvents)
}
CSVCMsgList_GameEvents::CSVCMsgList_GameEvents(const CSVCMsgList_GameEvents& from) : ::google::protobuf::Message() {
  CSVCMsgList_GameEvents* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.events_){from._impl_.events_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CSVCMsgList_GameEvents)
}
inline void CSVCMsgList_GameEvents::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.events_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
CSVCMsgList_GameEvents::~CSVCMsgList_GameEvents() {
  // @@protoc_insertion_point(destructor:CSVCMsgList_GameEvents)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsgList_GameEvents::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.events_.~RepeatedPtrField();
}
void CSVCMsgList_GameEvents::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsgList_GameEvents::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsgList_GameEvents)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_events()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsgList_GameEvents::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CSVCMsgList_GameEvents::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CSVCMsgList_GameEvents_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .CSVCMsgList_GameEvents.event_t events = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CSVCMsgList_GameEvents, _impl_.events_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .CSVCMsgList_GameEvents.event_t events = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsgList_GameEvents, _impl_.events_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CSVCMsgList_GameEvents_event_t>()},
  }}, {{
  }},
};

::uint8_t* CSVCMsgList_GameEvents::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsgList_GameEvents)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .CSVCMsgList_GameEvents.event_t events = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_events_size()); i < n; i++) {
    const auto& repfield = this->_internal_events().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsgList_GameEvents)
  return target;
}

::size_t CSVCMsgList_GameEvents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsgList_GameEvents)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CSVCMsgList_GameEvents.event_t events = 1;
  total_size += 1UL * this->_internal_events_size();
  for (const auto& msg : this->_internal_events()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsgList_GameEvents::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsgList_GameEvents::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsgList_GameEvents::GetClassData() const { return &_class_data_; }


void CSVCMsgList_GameEvents::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsgList_GameEvents*>(&to_msg);
  auto& from = static_cast<const CSVCMsgList_GameEvents&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsgList_GameEvents)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_events()->MergeFrom(from._internal_events());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsgList_GameEvents::CopyFrom(const CSVCMsgList_GameEvents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsgList_GameEvents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsgList_GameEvents::IsInitialized() const {
  return true;
}

void CSVCMsgList_GameEvents::InternalSwap(CSVCMsgList_GameEvents* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.events_.InternalSwap(&other->_impl_.events_);
}

::google::protobuf::Metadata CSVCMsgList_GameEvents::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networkbasetypes_2eproto_getter, &descriptor_table_networkbasetypes_2eproto_once,
      file_level_metadata_networkbasetypes_2eproto[20]);
}
// ===================================================================

class CNETMsg_SpawnGroup_Load::_Internal {
 public:
  using HasBits = decltype(std::declval<CNETMsg_SpawnGroup_Load>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_._has_bits_);
  static void set_has_worldname(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_entitylumpname(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_entityfiltername(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_spawngrouphandle(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_spawngroupownerhandle(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static const ::CMsgVector& world_offset_pos(const CNETMsg_SpawnGroup_Load* msg);
  static void set_has_world_offset_pos(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::CMsgQAngle& world_offset_angle(const CNETMsg_SpawnGroup_Load* msg);
  static void set_has_world_offset_angle(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_spawngroupmanifest(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_tickcount(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_manifestincomplete(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_localnamefixup(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_parentnamefixup(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_manifestloadpriority(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_worldgroupid(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_creationsequence(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_savegamefilename(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_spawngroupparenthandle(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_leveltransition(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_worldgroupname(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

const ::CMsgVector& CNETMsg_SpawnGroup_Load::_Internal::world_offset_pos(const CNETMsg_SpawnGroup_Load* msg) {
  return *msg->_impl_.world_offset_pos_;
}
const ::CMsgQAngle& CNETMsg_SpawnGroup_Load::_Internal::world_offset_angle(const CNETMsg_SpawnGroup_Load* msg) {
  return *msg->_impl_.world_offset_angle_;
}
CNETMsg_SpawnGroup_Load::CNETMsg_SpawnGroup_Load(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CNETMsg_SpawnGroup_Load)
}
CNETMsg_SpawnGroup_Load::CNETMsg_SpawnGroup_Load(const CNETMsg_SpawnGroup_Load& from) : ::google::protobuf::Message() {
  CNETMsg_SpawnGroup_Load* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.worldname_){},
      decltype(_impl_.entitylumpname_){},
      decltype(_impl_.entityfiltername_){},
      decltype(_impl_.spawngroupmanifest_){},
      decltype(_impl_.localnamefixup_){},
      decltype(_impl_.parentnamefixup_){},
      decltype(_impl_.savegamefilename_){},
      decltype(_impl_.worldgroupname_){},
      decltype(_impl_.world_offset_pos_){nullptr},
      decltype(_impl_.world_offset_angle_){nullptr},
      decltype(_impl_.spawngrouphandle_){},
      decltype(_impl_.spawngroupownerhandle_){},
      decltype(_impl_.flags_){},
      decltype(_impl_.tickcount_){},
      decltype(_impl_.manifestloadpriority_){},
      decltype(_impl_.worldgroupid_){},
      decltype(_impl_.manifestincomplete_){},
      decltype(_impl_.leveltransition_){},
      decltype(_impl_.creationsequence_){},
      decltype(_impl_.spawngroupparenthandle_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.worldname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.worldname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.worldname_.Set(from._internal_worldname(), _this->GetArenaForAllocation());
  }
  _impl_.entitylumpname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.entitylumpname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.entitylumpname_.Set(from._internal_entitylumpname(), _this->GetArenaForAllocation());
  }
  _impl_.entityfiltername_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.entityfiltername_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.entityfiltername_.Set(from._internal_entityfiltername(), _this->GetArenaForAllocation());
  }
  _impl_.spawngroupmanifest_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.spawngroupmanifest_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000008u) != 0) {
    _this->_impl_.spawngroupmanifest_.Set(from._internal_spawngroupmanifest(), _this->GetArenaForAllocation());
  }
  _impl_.localnamefixup_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.localnamefixup_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000010u) != 0) {
    _this->_impl_.localnamefixup_.Set(from._internal_localnamefixup(), _this->GetArenaForAllocation());
  }
  _impl_.parentnamefixup_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.parentnamefixup_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000020u) != 0) {
    _this->_impl_.parentnamefixup_.Set(from._internal_parentnamefixup(), _this->GetArenaForAllocation());
  }
  _impl_.savegamefilename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.savegamefilename_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000040u) != 0) {
    _this->_impl_.savegamefilename_.Set(from._internal_savegamefilename(), _this->GetArenaForAllocation());
  }
  _impl_.worldgroupname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.worldgroupname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000080u) != 0) {
    _this->_impl_.worldgroupname_.Set(from._internal_worldgroupname(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000100u) != 0) {
    _this->_impl_.world_offset_pos_ = new ::CMsgVector(*from._impl_.world_offset_pos_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000200u) != 0) {
    _this->_impl_.world_offset_angle_ = new ::CMsgQAngle(*from._impl_.world_offset_angle_);
  }
  ::memcpy(&_impl_.spawngrouphandle_, &from._impl_.spawngrouphandle_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.spawngroupparenthandle_) -
    reinterpret_cast<char*>(&_impl_.spawngrouphandle_)) + sizeof(_impl_.spawngroupparenthandle_));

  // @@protoc_insertion_point(copy_constructor:CNETMsg_SpawnGroup_Load)
}
inline void CNETMsg_SpawnGroup_Load::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.worldname_){},
      decltype(_impl_.entitylumpname_){},
      decltype(_impl_.entityfiltername_){},
      decltype(_impl_.spawngroupmanifest_){},
      decltype(_impl_.localnamefixup_){},
      decltype(_impl_.parentnamefixup_){},
      decltype(_impl_.savegamefilename_){},
      decltype(_impl_.worldgroupname_){},
      decltype(_impl_.world_offset_pos_){nullptr},
      decltype(_impl_.world_offset_angle_){nullptr},
      decltype(_impl_.spawngrouphandle_){0u},
      decltype(_impl_.spawngroupownerhandle_){0u},
      decltype(_impl_.flags_){0u},
      decltype(_impl_.tickcount_){0},
      decltype(_impl_.manifestloadpriority_){0},
      decltype(_impl_.worldgroupid_){0u},
      decltype(_impl_.manifestincomplete_){false},
      decltype(_impl_.leveltransition_){false},
      decltype(_impl_.creationsequence_){0u},
      decltype(_impl_.spawngroupparenthandle_){0u},
  };
  _impl_.worldname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.worldname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.entitylumpname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.entitylumpname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.entityfiltername_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.entityfiltername_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.spawngroupmanifest_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.spawngroupmanifest_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.localnamefixup_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.localnamefixup_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.parentnamefixup_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.parentnamefixup_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.savegamefilename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.savegamefilename_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.worldgroupname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.worldgroupname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CNETMsg_SpawnGroup_Load::~CNETMsg_SpawnGroup_Load() {
  // @@protoc_insertion_point(destructor:CNETMsg_SpawnGroup_Load)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CNETMsg_SpawnGroup_Load::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.worldname_.Destroy();
  _impl_.entitylumpname_.Destroy();
  _impl_.entityfiltername_.Destroy();
  _impl_.spawngroupmanifest_.Destroy();
  _impl_.localnamefixup_.Destroy();
  _impl_.parentnamefixup_.Destroy();
  _impl_.savegamefilename_.Destroy();
  _impl_.worldgroupname_.Destroy();
  if (this != internal_default_instance()) delete _impl_.world_offset_pos_;
  if (this != internal_default_instance()) delete _impl_.world_offset_angle_;
}
void CNETMsg_SpawnGroup_Load::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CNETMsg_SpawnGroup_Load::Clear() {
// @@protoc_insertion_point(message_clear_start:CNETMsg_SpawnGroup_Load)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.worldname_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.entitylumpname_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.entityfiltername_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.spawngroupmanifest_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.localnamefixup_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.parentnamefixup_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      _impl_.savegamefilename_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000080u) {
      _impl_.worldgroupname_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(_impl_.world_offset_pos_ != nullptr);
      _impl_.world_offset_pos_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(_impl_.world_offset_angle_ != nullptr);
      _impl_.world_offset_angle_->Clear();
    }
  }
  if (cached_has_bits & 0x0000fc00u) {
    ::memset(&_impl_.spawngrouphandle_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.worldgroupid_) -
        reinterpret_cast<char*>(&_impl_.spawngrouphandle_)) + sizeof(_impl_.worldgroupid_));
  }
  if (cached_has_bits & 0x000f0000u) {
    ::memset(&_impl_.manifestincomplete_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.spawngroupparenthandle_) -
        reinterpret_cast<char*>(&_impl_.manifestincomplete_)) + sizeof(_impl_.spawngroupparenthandle_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CNETMsg_SpawnGroup_Load::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 20, 2, 146, 2> CNETMsg_SpawnGroup_Load::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_._has_bits_),
    0, // no _extensions_
    20, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4293918720,  // skipmap
    offsetof(decltype(_table_), field_entries),
    20,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CNETMsg_SpawnGroup_Load_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string worldname = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.worldname_)}},
    // optional string entitylumpname = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.entitylumpname_)}},
    // optional string entityfiltername = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.entityfiltername_)}},
    // optional uint32 spawngrouphandle = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CNETMsg_SpawnGroup_Load, _impl_.spawngrouphandle_), 10>(),
     {32, 10, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.spawngrouphandle_)}},
    // optional uint32 spawngroupownerhandle = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CNETMsg_SpawnGroup_Load, _impl_.spawngroupownerhandle_), 11>(),
     {40, 11, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.spawngroupownerhandle_)}},
    // optional .CMsgVector world_offset_pos = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 8, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.world_offset_pos_)}},
    // optional .CMsgQAngle world_offset_angle = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 9, 1, PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.world_offset_angle_)}},
    // optional bytes spawngroupmanifest = 8;
    {::_pbi::TcParser::FastBS1,
     {66, 3, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.spawngroupmanifest_)}},
    // optional uint32 flags = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CNETMsg_SpawnGroup_Load, _impl_.flags_), 12>(),
     {72, 12, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.flags_)}},
    // optional int32 tickcount = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CNETMsg_SpawnGroup_Load, _impl_.tickcount_), 13>(),
     {80, 13, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.tickcount_)}},
    // optional bool manifestincomplete = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CNETMsg_SpawnGroup_Load, _impl_.manifestincomplete_), 16>(),
     {88, 16, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.manifestincomplete_)}},
    // optional string localnamefixup = 12;
    {::_pbi::TcParser::FastSS1,
     {98, 4, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.localnamefixup_)}},
    // optional string parentnamefixup = 13;
    {::_pbi::TcParser::FastSS1,
     {106, 5, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.parentnamefixup_)}},
    // optional int32 manifestloadpriority = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CNETMsg_SpawnGroup_Load, _impl_.manifestloadpriority_), 14>(),
     {112, 14, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.manifestloadpriority_)}},
    // optional uint32 worldgroupid = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CNETMsg_SpawnGroup_Load, _impl_.worldgroupid_), 15>(),
     {120, 15, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.worldgroupid_)}},
    // optional uint32 creationsequence = 16;
    {::_pbi::TcParser::FastV32S2,
     {384, 18, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.creationsequence_)}},
    // optional string savegamefilename = 17;
    {::_pbi::TcParser::FastSS2,
     {394, 6, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.savegamefilename_)}},
    // optional uint32 spawngroupparenthandle = 18;
    {::_pbi::TcParser::FastV32S2,
     {400, 19, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.spawngroupparenthandle_)}},
    // optional bool leveltransition = 19;
    {::_pbi::TcParser::FastV8S2,
     {408, 17, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.leveltransition_)}},
    // optional string worldgroupname = 20;
    {::_pbi::TcParser::FastSS2,
     {418, 7, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.worldgroupname_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string worldname = 1;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.worldname_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string entitylumpname = 2;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.entitylumpname_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string entityfiltername = 3;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.entityfiltername_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 spawngrouphandle = 4;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.spawngrouphandle_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 spawngroupownerhandle = 5;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.spawngroupownerhandle_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .CMsgVector world_offset_pos = 6;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.world_offset_pos_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgQAngle world_offset_angle = 7;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.world_offset_angle_), _Internal::kHasBitsOffset + 9, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bytes spawngroupmanifest = 8;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.spawngroupmanifest_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional uint32 flags = 9;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.flags_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 tickcount = 10;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.tickcount_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool manifestincomplete = 11;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.manifestincomplete_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string localnamefixup = 12;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.localnamefixup_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string parentnamefixup = 13;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.parentnamefixup_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 manifestloadpriority = 14;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.manifestloadpriority_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 worldgroupid = 15;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.worldgroupid_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 creationsequence = 16;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.creationsequence_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string savegamefilename = 17;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.savegamefilename_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 spawngroupparenthandle = 18;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.spawngroupparenthandle_), _Internal::kHasBitsOffset + 19, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bool leveltransition = 19;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.leveltransition_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string worldgroupname = 20;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.worldgroupname_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgVector>()},
    {::_pbi::TcParser::GetTable<::CMsgQAngle>()},
  }}, {{
    "\27\11\16\20\0\0\0\0\0\0\0\0\16\17\0\0\0\20\0\0\16\0\0\0"
    "CNETMsg_SpawnGroup_Load"
    "worldname"
    "entitylumpname"
    "entityfiltername"
    "localnamefixup"
    "parentnamefixup"
    "savegamefilename"
    "worldgroupname"
  }},
};

::uint8_t* CNETMsg_SpawnGroup_Load::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CNETMsg_SpawnGroup_Load)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string worldname = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_worldname();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CNETMsg_SpawnGroup_Load.worldname");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string entitylumpname = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_entitylumpname();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CNETMsg_SpawnGroup_Load.entitylumpname");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string entityfiltername = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_entityfiltername();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CNETMsg_SpawnGroup_Load.entityfiltername");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional uint32 spawngrouphandle = 4;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_spawngrouphandle(), target);
  }

  // optional uint32 spawngroupownerhandle = 5;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_spawngroupownerhandle(), target);
  }

  // optional .CMsgVector world_offset_pos = 6;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::world_offset_pos(this),
        _Internal::world_offset_pos(this).GetCachedSize(), target, stream);
  }

  // optional .CMsgQAngle world_offset_angle = 7;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::world_offset_angle(this),
        _Internal::world_offset_angle(this).GetCachedSize(), target, stream);
  }

  // optional bytes spawngroupmanifest = 8;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_spawngroupmanifest();
    target = stream->WriteBytesMaybeAliased(8, _s, target);
  }

  // optional uint32 flags = 9;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this->_internal_flags(), target);
  }

  // optional int32 tickcount = 10;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<10>(
            stream, this->_internal_tickcount(), target);
  }

  // optional bool manifestincomplete = 11;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        11, this->_internal_manifestincomplete(), target);
  }

  // optional string localnamefixup = 12;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_localnamefixup();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CNETMsg_SpawnGroup_Load.localnamefixup");
    target = stream->WriteStringMaybeAliased(12, _s, target);
  }

  // optional string parentnamefixup = 13;
  if (cached_has_bits & 0x00000020u) {
    const std::string& _s = this->_internal_parentnamefixup();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CNETMsg_SpawnGroup_Load.parentnamefixup");
    target = stream->WriteStringMaybeAliased(13, _s, target);
  }

  // optional int32 manifestloadpriority = 14;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<14>(
            stream, this->_internal_manifestloadpriority(), target);
  }

  // optional uint32 worldgroupid = 15;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        15, this->_internal_worldgroupid(), target);
  }

  // optional uint32 creationsequence = 16;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        16, this->_internal_creationsequence(), target);
  }

  // optional string savegamefilename = 17;
  if (cached_has_bits & 0x00000040u) {
    const std::string& _s = this->_internal_savegamefilename();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CNETMsg_SpawnGroup_Load.savegamefilename");
    target = stream->WriteStringMaybeAliased(17, _s, target);
  }

  // optional uint32 spawngroupparenthandle = 18;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        18, this->_internal_spawngroupparenthandle(), target);
  }

  // optional bool leveltransition = 19;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        19, this->_internal_leveltransition(), target);
  }

  // optional string worldgroupname = 20;
  if (cached_has_bits & 0x00000080u) {
    const std::string& _s = this->_internal_worldgroupname();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CNETMsg_SpawnGroup_Load.worldgroupname");
    target = stream->WriteStringMaybeAliased(20, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CNETMsg_SpawnGroup_Load)
  return target;
}

::size_t CNETMsg_SpawnGroup_Load::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CNETMsg_SpawnGroup_Load)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string worldname = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_worldname());
    }

    // optional string entitylumpname = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_entitylumpname());
    }

    // optional string entityfiltername = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_entityfiltername());
    }

    // optional bytes spawngroupmanifest = 8;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_spawngroupmanifest());
    }

    // optional string localnamefixup = 12;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_localnamefixup());
    }

    // optional string parentnamefixup = 13;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_parentnamefixup());
    }

    // optional string savegamefilename = 17;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_savegamefilename());
    }

    // optional string worldgroupname = 20;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_worldgroupname());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .CMsgVector world_offset_pos = 6;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.world_offset_pos_);
    }

    // optional .CMsgQAngle world_offset_angle = 7;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.world_offset_angle_);
    }

    // optional uint32 spawngrouphandle = 4;
    if (cached_has_bits & 0x00000400u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_spawngrouphandle());
    }

    // optional uint32 spawngroupownerhandle = 5;
    if (cached_has_bits & 0x00000800u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_spawngroupownerhandle());
    }

    // optional uint32 flags = 9;
    if (cached_has_bits & 0x00001000u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_flags());
    }

    // optional int32 tickcount = 10;
    if (cached_has_bits & 0x00002000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_tickcount());
    }

    // optional int32 manifestloadpriority = 14;
    if (cached_has_bits & 0x00004000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_manifestloadpriority());
    }

    // optional uint32 worldgroupid = 15;
    if (cached_has_bits & 0x00008000u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_worldgroupid());
    }

  }
  if (cached_has_bits & 0x000f0000u) {
    // optional bool manifestincomplete = 11;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2;
    }

    // optional bool leveltransition = 19;
    if (cached_has_bits & 0x00020000u) {
      total_size += 3;
    }

    // optional uint32 creationsequence = 16;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_creationsequence());
    }

    // optional uint32 spawngroupparenthandle = 18;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_spawngroupparenthandle());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CNETMsg_SpawnGroup_Load::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CNETMsg_SpawnGroup_Load::MergeImpl
};
const ::google::protobuf::Message::ClassData*CNETMsg_SpawnGroup_Load::GetClassData() const { return &_class_data_; }


void CNETMsg_SpawnGroup_Load::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CNETMsg_SpawnGroup_Load*>(&to_msg);
  auto& from = static_cast<const CNETMsg_SpawnGroup_Load&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CNETMsg_SpawnGroup_Load)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_worldname(from._internal_worldname());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_entitylumpname(from._internal_entitylumpname());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_entityfiltername(from._internal_entityfiltername());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_spawngroupmanifest(from._internal_spawngroupmanifest());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_localnamefixup(from._internal_localnamefixup());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_parentnamefixup(from._internal_parentnamefixup());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_set_savegamefilename(from._internal_savegamefilename());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_set_worldgroupname(from._internal_worldgroupname());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_world_offset_pos()->::CMsgVector::MergeFrom(
          from._internal_world_offset_pos());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_world_offset_angle()->::CMsgQAngle::MergeFrom(
          from._internal_world_offset_angle());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.spawngrouphandle_ = from._impl_.spawngrouphandle_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.spawngroupownerhandle_ = from._impl_.spawngroupownerhandle_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.flags_ = from._impl_.flags_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.tickcount_ = from._impl_.tickcount_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.manifestloadpriority_ = from._impl_.manifestloadpriority_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.worldgroupid_ = from._impl_.worldgroupid_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x000f0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.manifestincomplete_ = from._impl_.manifestincomplete_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.leveltransition_ = from._impl_.leveltransition_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.creationsequence_ = from._impl_.creationsequence_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.spawngroupparenthandle_ = from._impl_.spawngroupparenthandle_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CNETMsg_SpawnGroup_Load::CopyFrom(const CNETMsg_SpawnGroup_Load& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CNETMsg_SpawnGroup_Load)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CNETMsg_SpawnGroup_Load::IsInitialized() const {
  return true;
}

void CNETMsg_SpawnGroup_Load::InternalSwap(CNETMsg_SpawnGroup_Load* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.worldname_, lhs_arena,
                                       &other->_impl_.worldname_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entitylumpname_, lhs_arena,
                                       &other->_impl_.entitylumpname_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entityfiltername_, lhs_arena,
                                       &other->_impl_.entityfiltername_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.spawngroupmanifest_, lhs_arena,
                                       &other->_impl_.spawngroupmanifest_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.localnamefixup_, lhs_arena,
                                       &other->_impl_.localnamefixup_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.parentnamefixup_, lhs_arena,
                                       &other->_impl_.parentnamefixup_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.savegamefilename_, lhs_arena,
                                       &other->_impl_.savegamefilename_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.worldgroupname_, lhs_arena,
                                       &other->_impl_.worldgroupname_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.spawngroupparenthandle_)
      + sizeof(CNETMsg_SpawnGroup_Load::_impl_.spawngroupparenthandle_)
      - PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Load, _impl_.world_offset_pos_)>(
          reinterpret_cast<char*>(&_impl_.world_offset_pos_),
          reinterpret_cast<char*>(&other->_impl_.world_offset_pos_));
}

::google::protobuf::Metadata CNETMsg_SpawnGroup_Load::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networkbasetypes_2eproto_getter, &descriptor_table_networkbasetypes_2eproto_once,
      file_level_metadata_networkbasetypes_2eproto[21]);
}
// ===================================================================

class CNETMsg_SpawnGroup_ManifestUpdate::_Internal {
 public:
  using HasBits = decltype(std::declval<CNETMsg_SpawnGroup_ManifestUpdate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_ManifestUpdate, _impl_._has_bits_);
  static void set_has_spawngrouphandle(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_spawngroupmanifest(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_manifestincomplete(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CNETMsg_SpawnGroup_ManifestUpdate::CNETMsg_SpawnGroup_ManifestUpdate(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CNETMsg_SpawnGroup_ManifestUpdate)
}
CNETMsg_SpawnGroup_ManifestUpdate::CNETMsg_SpawnGroup_ManifestUpdate(const CNETMsg_SpawnGroup_ManifestUpdate& from) : ::google::protobuf::Message() {
  CNETMsg_SpawnGroup_ManifestUpdate* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.spawngroupmanifest_){},
      decltype(_impl_.spawngrouphandle_){},
      decltype(_impl_.manifestincomplete_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.spawngroupmanifest_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.spawngroupmanifest_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.spawngroupmanifest_.Set(from._internal_spawngroupmanifest(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.spawngrouphandle_, &from._impl_.spawngrouphandle_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.manifestincomplete_) -
    reinterpret_cast<char*>(&_impl_.spawngrouphandle_)) + sizeof(_impl_.manifestincomplete_));

  // @@protoc_insertion_point(copy_constructor:CNETMsg_SpawnGroup_ManifestUpdate)
}
inline void CNETMsg_SpawnGroup_ManifestUpdate::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.spawngroupmanifest_){},
      decltype(_impl_.spawngrouphandle_){0u},
      decltype(_impl_.manifestincomplete_){false},
  };
  _impl_.spawngroupmanifest_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.spawngroupmanifest_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CNETMsg_SpawnGroup_ManifestUpdate::~CNETMsg_SpawnGroup_ManifestUpdate() {
  // @@protoc_insertion_point(destructor:CNETMsg_SpawnGroup_ManifestUpdate)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CNETMsg_SpawnGroup_ManifestUpdate::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.spawngroupmanifest_.Destroy();
}
void CNETMsg_SpawnGroup_ManifestUpdate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CNETMsg_SpawnGroup_ManifestUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:CNETMsg_SpawnGroup_ManifestUpdate)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.spawngroupmanifest_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.spawngrouphandle_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.manifestincomplete_) -
        reinterpret_cast<char*>(&_impl_.spawngrouphandle_)) + sizeof(_impl_.manifestincomplete_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CNETMsg_SpawnGroup_ManifestUpdate::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> CNETMsg_SpawnGroup_ManifestUpdate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_ManifestUpdate, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CNETMsg_SpawnGroup_ManifestUpdate_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 spawngrouphandle = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CNETMsg_SpawnGroup_ManifestUpdate, _impl_.spawngrouphandle_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_ManifestUpdate, _impl_.spawngrouphandle_)}},
    // optional bytes spawngroupmanifest = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_ManifestUpdate, _impl_.spawngroupmanifest_)}},
    // optional bool manifestincomplete = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CNETMsg_SpawnGroup_ManifestUpdate, _impl_.manifestincomplete_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_ManifestUpdate, _impl_.manifestincomplete_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 spawngrouphandle = 1;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_ManifestUpdate, _impl_.spawngrouphandle_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bytes spawngroupmanifest = 2;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_ManifestUpdate, _impl_.spawngroupmanifest_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional bool manifestincomplete = 3;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_ManifestUpdate, _impl_.manifestincomplete_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CNETMsg_SpawnGroup_ManifestUpdate::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CNETMsg_SpawnGroup_ManifestUpdate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 spawngrouphandle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_spawngrouphandle(), target);
  }

  // optional bytes spawngroupmanifest = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_spawngroupmanifest();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // optional bool manifestincomplete = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_manifestincomplete(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CNETMsg_SpawnGroup_ManifestUpdate)
  return target;
}

::size_t CNETMsg_SpawnGroup_ManifestUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CNETMsg_SpawnGroup_ManifestUpdate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bytes spawngroupmanifest = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_spawngroupmanifest());
    }

    // optional uint32 spawngrouphandle = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_spawngrouphandle());
    }

    // optional bool manifestincomplete = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CNETMsg_SpawnGroup_ManifestUpdate::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CNETMsg_SpawnGroup_ManifestUpdate::MergeImpl
};
const ::google::protobuf::Message::ClassData*CNETMsg_SpawnGroup_ManifestUpdate::GetClassData() const { return &_class_data_; }


void CNETMsg_SpawnGroup_ManifestUpdate::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CNETMsg_SpawnGroup_ManifestUpdate*>(&to_msg);
  auto& from = static_cast<const CNETMsg_SpawnGroup_ManifestUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CNETMsg_SpawnGroup_ManifestUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_spawngroupmanifest(from._internal_spawngroupmanifest());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.spawngrouphandle_ = from._impl_.spawngrouphandle_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.manifestincomplete_ = from._impl_.manifestincomplete_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CNETMsg_SpawnGroup_ManifestUpdate::CopyFrom(const CNETMsg_SpawnGroup_ManifestUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CNETMsg_SpawnGroup_ManifestUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CNETMsg_SpawnGroup_ManifestUpdate::IsInitialized() const {
  return true;
}

void CNETMsg_SpawnGroup_ManifestUpdate::InternalSwap(CNETMsg_SpawnGroup_ManifestUpdate* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.spawngroupmanifest_, lhs_arena,
                                       &other->_impl_.spawngroupmanifest_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_ManifestUpdate, _impl_.manifestincomplete_)
      + sizeof(CNETMsg_SpawnGroup_ManifestUpdate::_impl_.manifestincomplete_)
      - PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_ManifestUpdate, _impl_.spawngrouphandle_)>(
          reinterpret_cast<char*>(&_impl_.spawngrouphandle_),
          reinterpret_cast<char*>(&other->_impl_.spawngrouphandle_));
}

::google::protobuf::Metadata CNETMsg_SpawnGroup_ManifestUpdate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networkbasetypes_2eproto_getter, &descriptor_table_networkbasetypes_2eproto_once,
      file_level_metadata_networkbasetypes_2eproto[22]);
}
// ===================================================================

class CNETMsg_SpawnGroup_SetCreationTick::_Internal {
 public:
  using HasBits = decltype(std::declval<CNETMsg_SpawnGroup_SetCreationTick>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_SetCreationTick, _impl_._has_bits_);
  static void set_has_spawngrouphandle(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_tickcount(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_creationsequence(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CNETMsg_SpawnGroup_SetCreationTick::CNETMsg_SpawnGroup_SetCreationTick(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CNETMsg_SpawnGroup_SetCreationTick)
}
CNETMsg_SpawnGroup_SetCreationTick::CNETMsg_SpawnGroup_SetCreationTick(const CNETMsg_SpawnGroup_SetCreationTick& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CNETMsg_SpawnGroup_SetCreationTick)
}
inline void CNETMsg_SpawnGroup_SetCreationTick::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.spawngrouphandle_){0u},
      decltype(_impl_.tickcount_){0},
      decltype(_impl_.creationsequence_){0u},
  };
}
CNETMsg_SpawnGroup_SetCreationTick::~CNETMsg_SpawnGroup_SetCreationTick() {
  // @@protoc_insertion_point(destructor:CNETMsg_SpawnGroup_SetCreationTick)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CNETMsg_SpawnGroup_SetCreationTick::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CNETMsg_SpawnGroup_SetCreationTick::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CNETMsg_SpawnGroup_SetCreationTick::Clear() {
// @@protoc_insertion_point(message_clear_start:CNETMsg_SpawnGroup_SetCreationTick)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.spawngrouphandle_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.creationsequence_) -
        reinterpret_cast<char*>(&_impl_.spawngrouphandle_)) + sizeof(_impl_.creationsequence_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CNETMsg_SpawnGroup_SetCreationTick::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> CNETMsg_SpawnGroup_SetCreationTick::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_SetCreationTick, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CNETMsg_SpawnGroup_SetCreationTick_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 spawngrouphandle = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CNETMsg_SpawnGroup_SetCreationTick, _impl_.spawngrouphandle_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_SetCreationTick, _impl_.spawngrouphandle_)}},
    // optional int32 tickcount = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CNETMsg_SpawnGroup_SetCreationTick, _impl_.tickcount_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_SetCreationTick, _impl_.tickcount_)}},
    // optional uint32 creationsequence = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CNETMsg_SpawnGroup_SetCreationTick, _impl_.creationsequence_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_SetCreationTick, _impl_.creationsequence_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 spawngrouphandle = 1;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_SetCreationTick, _impl_.spawngrouphandle_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 tickcount = 2;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_SetCreationTick, _impl_.tickcount_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 creationsequence = 3;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_SetCreationTick, _impl_.creationsequence_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CNETMsg_SpawnGroup_SetCreationTick::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CNETMsg_SpawnGroup_SetCreationTick)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 spawngrouphandle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_spawngrouphandle(), target);
  }

  // optional int32 tickcount = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_tickcount(), target);
  }

  // optional uint32 creationsequence = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_creationsequence(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CNETMsg_SpawnGroup_SetCreationTick)
  return target;
}

::size_t CNETMsg_SpawnGroup_SetCreationTick::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CNETMsg_SpawnGroup_SetCreationTick)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 spawngrouphandle = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_spawngrouphandle());
    }

    // optional int32 tickcount = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_tickcount());
    }

    // optional uint32 creationsequence = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_creationsequence());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CNETMsg_SpawnGroup_SetCreationTick::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CNETMsg_SpawnGroup_SetCreationTick::MergeImpl
};
const ::google::protobuf::Message::ClassData*CNETMsg_SpawnGroup_SetCreationTick::GetClassData() const { return &_class_data_; }


void CNETMsg_SpawnGroup_SetCreationTick::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CNETMsg_SpawnGroup_SetCreationTick*>(&to_msg);
  auto& from = static_cast<const CNETMsg_SpawnGroup_SetCreationTick&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CNETMsg_SpawnGroup_SetCreationTick)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.spawngrouphandle_ = from._impl_.spawngrouphandle_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.tickcount_ = from._impl_.tickcount_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.creationsequence_ = from._impl_.creationsequence_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CNETMsg_SpawnGroup_SetCreationTick::CopyFrom(const CNETMsg_SpawnGroup_SetCreationTick& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CNETMsg_SpawnGroup_SetCreationTick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CNETMsg_SpawnGroup_SetCreationTick::IsInitialized() const {
  return true;
}

void CNETMsg_SpawnGroup_SetCreationTick::InternalSwap(CNETMsg_SpawnGroup_SetCreationTick* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_SetCreationTick, _impl_.creationsequence_)
      + sizeof(CNETMsg_SpawnGroup_SetCreationTick::_impl_.creationsequence_)
      - PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_SetCreationTick, _impl_.spawngrouphandle_)>(
          reinterpret_cast<char*>(&_impl_.spawngrouphandle_),
          reinterpret_cast<char*>(&other->_impl_.spawngrouphandle_));
}

::google::protobuf::Metadata CNETMsg_SpawnGroup_SetCreationTick::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networkbasetypes_2eproto_getter, &descriptor_table_networkbasetypes_2eproto_once,
      file_level_metadata_networkbasetypes_2eproto[23]);
}
// ===================================================================

class CNETMsg_SpawnGroup_Unload::_Internal {
 public:
  using HasBits = decltype(std::declval<CNETMsg_SpawnGroup_Unload>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Unload, _impl_._has_bits_);
  static void set_has_spawngrouphandle(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_tickcount(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CNETMsg_SpawnGroup_Unload::CNETMsg_SpawnGroup_Unload(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CNETMsg_SpawnGroup_Unload)
}
CNETMsg_SpawnGroup_Unload::CNETMsg_SpawnGroup_Unload(const CNETMsg_SpawnGroup_Unload& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CNETMsg_SpawnGroup_Unload)
}
inline void CNETMsg_SpawnGroup_Unload::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.spawngrouphandle_){0u},
      decltype(_impl_.flags_){0u},
      decltype(_impl_.tickcount_){0},
  };
}
CNETMsg_SpawnGroup_Unload::~CNETMsg_SpawnGroup_Unload() {
  // @@protoc_insertion_point(destructor:CNETMsg_SpawnGroup_Unload)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CNETMsg_SpawnGroup_Unload::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CNETMsg_SpawnGroup_Unload::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CNETMsg_SpawnGroup_Unload::Clear() {
// @@protoc_insertion_point(message_clear_start:CNETMsg_SpawnGroup_Unload)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.spawngrouphandle_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.tickcount_) -
        reinterpret_cast<char*>(&_impl_.spawngrouphandle_)) + sizeof(_impl_.tickcount_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CNETMsg_SpawnGroup_Unload::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> CNETMsg_SpawnGroup_Unload::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Unload, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CNETMsg_SpawnGroup_Unload_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 spawngrouphandle = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CNETMsg_SpawnGroup_Unload, _impl_.spawngrouphandle_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Unload, _impl_.spawngrouphandle_)}},
    // optional uint32 flags = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CNETMsg_SpawnGroup_Unload, _impl_.flags_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Unload, _impl_.flags_)}},
    // optional int32 tickcount = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CNETMsg_SpawnGroup_Unload, _impl_.tickcount_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Unload, _impl_.tickcount_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 spawngrouphandle = 1;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Unload, _impl_.spawngrouphandle_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 flags = 2;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Unload, _impl_.flags_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 tickcount = 3;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Unload, _impl_.tickcount_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CNETMsg_SpawnGroup_Unload::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CNETMsg_SpawnGroup_Unload)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 spawngrouphandle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_spawngrouphandle(), target);
  }

  // optional uint32 flags = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_flags(), target);
  }

  // optional int32 tickcount = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_tickcount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CNETMsg_SpawnGroup_Unload)
  return target;
}

::size_t CNETMsg_SpawnGroup_Unload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CNETMsg_SpawnGroup_Unload)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 spawngrouphandle = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_spawngrouphandle());
    }

    // optional uint32 flags = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_flags());
    }

    // optional int32 tickcount = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_tickcount());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CNETMsg_SpawnGroup_Unload::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CNETMsg_SpawnGroup_Unload::MergeImpl
};
const ::google::protobuf::Message::ClassData*CNETMsg_SpawnGroup_Unload::GetClassData() const { return &_class_data_; }


void CNETMsg_SpawnGroup_Unload::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CNETMsg_SpawnGroup_Unload*>(&to_msg);
  auto& from = static_cast<const CNETMsg_SpawnGroup_Unload&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CNETMsg_SpawnGroup_Unload)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.spawngrouphandle_ = from._impl_.spawngrouphandle_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.flags_ = from._impl_.flags_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.tickcount_ = from._impl_.tickcount_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CNETMsg_SpawnGroup_Unload::CopyFrom(const CNETMsg_SpawnGroup_Unload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CNETMsg_SpawnGroup_Unload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CNETMsg_SpawnGroup_Unload::IsInitialized() const {
  return true;
}

void CNETMsg_SpawnGroup_Unload::InternalSwap(CNETMsg_SpawnGroup_Unload* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Unload, _impl_.tickcount_)
      + sizeof(CNETMsg_SpawnGroup_Unload::_impl_.tickcount_)
      - PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_Unload, _impl_.spawngrouphandle_)>(
          reinterpret_cast<char*>(&_impl_.spawngrouphandle_),
          reinterpret_cast<char*>(&other->_impl_.spawngrouphandle_));
}

::google::protobuf::Metadata CNETMsg_SpawnGroup_Unload::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networkbasetypes_2eproto_getter, &descriptor_table_networkbasetypes_2eproto_once,
      file_level_metadata_networkbasetypes_2eproto[24]);
}
// ===================================================================

class CNETMsg_SpawnGroup_LoadCompleted::_Internal {
 public:
  using HasBits = decltype(std::declval<CNETMsg_SpawnGroup_LoadCompleted>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_LoadCompleted, _impl_._has_bits_);
  static void set_has_spawngrouphandle(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CNETMsg_SpawnGroup_LoadCompleted::CNETMsg_SpawnGroup_LoadCompleted(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CNETMsg_SpawnGroup_LoadCompleted)
}
CNETMsg_SpawnGroup_LoadCompleted::CNETMsg_SpawnGroup_LoadCompleted(const CNETMsg_SpawnGroup_LoadCompleted& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CNETMsg_SpawnGroup_LoadCompleted)
}
inline void CNETMsg_SpawnGroup_LoadCompleted::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.spawngrouphandle_){0u},
  };
}
CNETMsg_SpawnGroup_LoadCompleted::~CNETMsg_SpawnGroup_LoadCompleted() {
  // @@protoc_insertion_point(destructor:CNETMsg_SpawnGroup_LoadCompleted)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CNETMsg_SpawnGroup_LoadCompleted::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CNETMsg_SpawnGroup_LoadCompleted::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CNETMsg_SpawnGroup_LoadCompleted::Clear() {
// @@protoc_insertion_point(message_clear_start:CNETMsg_SpawnGroup_LoadCompleted)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.spawngrouphandle_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CNETMsg_SpawnGroup_LoadCompleted::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CNETMsg_SpawnGroup_LoadCompleted::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_LoadCompleted, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CNETMsg_SpawnGroup_LoadCompleted_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 spawngrouphandle = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CNETMsg_SpawnGroup_LoadCompleted, _impl_.spawngrouphandle_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_LoadCompleted, _impl_.spawngrouphandle_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 spawngrouphandle = 1;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_SpawnGroup_LoadCompleted, _impl_.spawngrouphandle_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CNETMsg_SpawnGroup_LoadCompleted::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CNETMsg_SpawnGroup_LoadCompleted)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 spawngrouphandle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_spawngrouphandle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CNETMsg_SpawnGroup_LoadCompleted)
  return target;
}

::size_t CNETMsg_SpawnGroup_LoadCompleted::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CNETMsg_SpawnGroup_LoadCompleted)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 spawngrouphandle = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_spawngrouphandle());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CNETMsg_SpawnGroup_LoadCompleted::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CNETMsg_SpawnGroup_LoadCompleted::MergeImpl
};
const ::google::protobuf::Message::ClassData*CNETMsg_SpawnGroup_LoadCompleted::GetClassData() const { return &_class_data_; }


void CNETMsg_SpawnGroup_LoadCompleted::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CNETMsg_SpawnGroup_LoadCompleted*>(&to_msg);
  auto& from = static_cast<const CNETMsg_SpawnGroup_LoadCompleted&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CNETMsg_SpawnGroup_LoadCompleted)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_spawngrouphandle(from._internal_spawngrouphandle());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CNETMsg_SpawnGroup_LoadCompleted::CopyFrom(const CNETMsg_SpawnGroup_LoadCompleted& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CNETMsg_SpawnGroup_LoadCompleted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CNETMsg_SpawnGroup_LoadCompleted::IsInitialized() const {
  return true;
}

void CNETMsg_SpawnGroup_LoadCompleted::InternalSwap(CNETMsg_SpawnGroup_LoadCompleted* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.spawngrouphandle_, other->_impl_.spawngrouphandle_);
}

::google::protobuf::Metadata CNETMsg_SpawnGroup_LoadCompleted::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networkbasetypes_2eproto_getter, &descriptor_table_networkbasetypes_2eproto_once,
      file_level_metadata_networkbasetypes_2eproto[25]);
}
// ===================================================================

class CSVCMsg_GameSessionConfiguration::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_GameSessionConfiguration>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_._has_bits_);
  static void set_has_is_multiplayer(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_is_loadsavegame(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_is_background_map(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_is_headless(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_min_client_limit(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_max_client_limit(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_max_clients(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_tick_interval(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_hostname(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_savegamename(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_s1_mapname(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_gamemode(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_server_ip_address(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_is_localonly(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_no_steam_server(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_is_transition(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_previouslevel(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_landmarkname(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

CSVCMsg_GameSessionConfiguration::CSVCMsg_GameSessionConfiguration(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_GameSessionConfiguration)
}
CSVCMsg_GameSessionConfiguration::CSVCMsg_GameSessionConfiguration(const CSVCMsg_GameSessionConfiguration& from) : ::google::protobuf::Message() {
  CSVCMsg_GameSessionConfiguration* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.hostname_){},
      decltype(_impl_.savegamename_){},
      decltype(_impl_.s1_mapname_){},
      decltype(_impl_.gamemode_){},
      decltype(_impl_.server_ip_address_){},
      decltype(_impl_.data_){},
      decltype(_impl_.previouslevel_){},
      decltype(_impl_.landmarkname_){},
      decltype(_impl_.is_multiplayer_){},
      decltype(_impl_.is_loadsavegame_){},
      decltype(_impl_.is_background_map_){},
      decltype(_impl_.is_headless_){},
      decltype(_impl_.min_client_limit_){},
      decltype(_impl_.max_client_limit_){},
      decltype(_impl_.max_clients_){},
      decltype(_impl_.tick_interval_){},
      decltype(_impl_.is_localonly_){},
      decltype(_impl_.no_steam_server_){},
      decltype(_impl_.is_transition_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.hostname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.hostname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.hostname_.Set(from._internal_hostname(), _this->GetArenaForAllocation());
  }
  _impl_.savegamename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.savegamename_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.savegamename_.Set(from._internal_savegamename(), _this->GetArenaForAllocation());
  }
  _impl_.s1_mapname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.s1_mapname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.s1_mapname_.Set(from._internal_s1_mapname(), _this->GetArenaForAllocation());
  }
  _impl_.gamemode_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.gamemode_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000008u) != 0) {
    _this->_impl_.gamemode_.Set(from._internal_gamemode(), _this->GetArenaForAllocation());
  }
  _impl_.server_ip_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.server_ip_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000010u) != 0) {
    _this->_impl_.server_ip_address_.Set(from._internal_server_ip_address(), _this->GetArenaForAllocation());
  }
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000020u) != 0) {
    _this->_impl_.data_.Set(from._internal_data(), _this->GetArenaForAllocation());
  }
  _impl_.previouslevel_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.previouslevel_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000040u) != 0) {
    _this->_impl_.previouslevel_.Set(from._internal_previouslevel(), _this->GetArenaForAllocation());
  }
  _impl_.landmarkname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.landmarkname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000080u) != 0) {
    _this->_impl_.landmarkname_.Set(from._internal_landmarkname(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.is_multiplayer_, &from._impl_.is_multiplayer_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.is_transition_) -
    reinterpret_cast<char*>(&_impl_.is_multiplayer_)) + sizeof(_impl_.is_transition_));

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_GameSessionConfiguration)
}
inline void CSVCMsg_GameSessionConfiguration::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.hostname_){},
      decltype(_impl_.savegamename_){},
      decltype(_impl_.s1_mapname_){},
      decltype(_impl_.gamemode_){},
      decltype(_impl_.server_ip_address_){},
      decltype(_impl_.data_){},
      decltype(_impl_.previouslevel_){},
      decltype(_impl_.landmarkname_){},
      decltype(_impl_.is_multiplayer_){false},
      decltype(_impl_.is_loadsavegame_){false},
      decltype(_impl_.is_background_map_){false},
      decltype(_impl_.is_headless_){false},
      decltype(_impl_.min_client_limit_){0u},
      decltype(_impl_.max_client_limit_){0u},
      decltype(_impl_.max_clients_){0u},
      decltype(_impl_.tick_interval_){0u},
      decltype(_impl_.is_localonly_){false},
      decltype(_impl_.no_steam_server_){false},
      decltype(_impl_.is_transition_){false},
  };
  _impl_.hostname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.hostname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.savegamename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.savegamename_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.s1_mapname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.s1_mapname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.gamemode_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.gamemode_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.server_ip_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.server_ip_address_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.previouslevel_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.previouslevel_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.landmarkname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.landmarkname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CSVCMsg_GameSessionConfiguration::~CSVCMsg_GameSessionConfiguration() {
  // @@protoc_insertion_point(destructor:CSVCMsg_GameSessionConfiguration)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_GameSessionConfiguration::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.hostname_.Destroy();
  _impl_.savegamename_.Destroy();
  _impl_.s1_mapname_.Destroy();
  _impl_.gamemode_.Destroy();
  _impl_.server_ip_address_.Destroy();
  _impl_.data_.Destroy();
  _impl_.previouslevel_.Destroy();
  _impl_.landmarkname_.Destroy();
}
void CSVCMsg_GameSessionConfiguration::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_GameSessionConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_GameSessionConfiguration)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.hostname_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.savegamename_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.s1_mapname_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.gamemode_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.server_ip_address_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.data_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      _impl_.previouslevel_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000080u) {
      _impl_.landmarkname_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.is_multiplayer_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.tick_interval_) -
        reinterpret_cast<char*>(&_impl_.is_multiplayer_)) + sizeof(_impl_.tick_interval_));
  }
  if (cached_has_bits & 0x00070000u) {
    ::memset(&_impl_.is_localonly_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_transition_) -
        reinterpret_cast<char*>(&_impl_.is_localonly_)) + sizeof(_impl_.is_transition_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_GameSessionConfiguration::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 19, 0, 137, 2> CSVCMsg_GameSessionConfiguration::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_._has_bits_),
    0, // no _extensions_
    19, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294443008,  // skipmap
    offsetof(decltype(_table_), field_entries),
    19,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CSVCMsg_GameSessionConfiguration_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool is_multiplayer = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CSVCMsg_GameSessionConfiguration, _impl_.is_multiplayer_), 8>(),
     {8, 8, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.is_multiplayer_)}},
    // optional bool is_loadsavegame = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CSVCMsg_GameSessionConfiguration, _impl_.is_loadsavegame_), 9>(),
     {16, 9, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.is_loadsavegame_)}},
    // optional bool is_background_map = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CSVCMsg_GameSessionConfiguration, _impl_.is_background_map_), 10>(),
     {24, 10, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.is_background_map_)}},
    // optional bool is_headless = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CSVCMsg_GameSessionConfiguration, _impl_.is_headless_), 11>(),
     {32, 11, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.is_headless_)}},
    // optional uint32 min_client_limit = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_GameSessionConfiguration, _impl_.min_client_limit_), 12>(),
     {40, 12, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.min_client_limit_)}},
    // optional uint32 max_client_limit = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_GameSessionConfiguration, _impl_.max_client_limit_), 13>(),
     {48, 13, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.max_client_limit_)}},
    // optional uint32 max_clients = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_GameSessionConfiguration, _impl_.max_clients_), 14>(),
     {56, 14, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.max_clients_)}},
    // optional fixed32 tick_interval = 8;
    {::_pbi::TcParser::FastF32S1,
     {69, 15, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.tick_interval_)}},
    // optional string hostname = 9;
    {::_pbi::TcParser::FastSS1,
     {74, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.hostname_)}},
    // optional string savegamename = 10;
    {::_pbi::TcParser::FastSS1,
     {82, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.savegamename_)}},
    // optional string s1_mapname = 11;
    {::_pbi::TcParser::FastSS1,
     {90, 2, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.s1_mapname_)}},
    // optional string gamemode = 12;
    {::_pbi::TcParser::FastSS1,
     {98, 3, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.gamemode_)}},
    // optional string server_ip_address = 13;
    {::_pbi::TcParser::FastSS1,
     {106, 4, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.server_ip_address_)}},
    // optional bytes data = 14;
    {::_pbi::TcParser::FastBS1,
     {114, 5, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.data_)}},
    // optional bool is_localonly = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CSVCMsg_GameSessionConfiguration, _impl_.is_localonly_), 16>(),
     {120, 16, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.is_localonly_)}},
    // optional bool is_transition = 16;
    {::_pbi::TcParser::FastV8S2,
     {384, 18, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.is_transition_)}},
    // optional string previouslevel = 17;
    {::_pbi::TcParser::FastSS2,
     {394, 6, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.previouslevel_)}},
    // optional string landmarkname = 18;
    {::_pbi::TcParser::FastSS2,
     {402, 7, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.landmarkname_)}},
    // optional bool no_steam_server = 19;
    {::_pbi::TcParser::FastV8S2,
     {408, 17, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.no_steam_server_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool is_multiplayer = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.is_multiplayer_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool is_loadsavegame = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.is_loadsavegame_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool is_background_map = 3;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.is_background_map_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool is_headless = 4;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.is_headless_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint32 min_client_limit = 5;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.min_client_limit_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 max_client_limit = 6;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.max_client_limit_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 max_clients = 7;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.max_clients_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional fixed32 tick_interval = 8;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.tick_interval_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional string hostname = 9;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.hostname_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string savegamename = 10;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.savegamename_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string s1_mapname = 11;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.s1_mapname_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string gamemode = 12;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.gamemode_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string server_ip_address = 13;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.server_ip_address_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bytes data = 14;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.data_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional bool is_localonly = 15;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.is_localonly_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool is_transition = 16;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.is_transition_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string previouslevel = 17;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.previouslevel_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string landmarkname = 18;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.landmarkname_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool no_steam_server = 19;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.no_steam_server_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\40\0\0\0\0\0\0\0\0\10\14\12\10\21\0\0\0\15\14\0\0\0\0\0"
    "CSVCMsg_GameSessionConfiguration"
    "hostname"
    "savegamename"
    "s1_mapname"
    "gamemode"
    "server_ip_address"
    "previouslevel"
    "landmarkname"
  }},
};

::uint8_t* CSVCMsg_GameSessionConfiguration::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_GameSessionConfiguration)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool is_multiplayer = 1;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_is_multiplayer(), target);
  }

  // optional bool is_loadsavegame = 2;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_is_loadsavegame(), target);
  }

  // optional bool is_background_map = 3;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_is_background_map(), target);
  }

  // optional bool is_headless = 4;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_is_headless(), target);
  }

  // optional uint32 min_client_limit = 5;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_min_client_limit(), target);
  }

  // optional uint32 max_client_limit = 6;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_max_client_limit(), target);
  }

  // optional uint32 max_clients = 7;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_max_clients(), target);
  }

  // optional fixed32 tick_interval = 8;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        8, this->_internal_tick_interval(), target);
  }

  // optional string hostname = 9;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_hostname();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSVCMsg_GameSessionConfiguration.hostname");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // optional string savegamename = 10;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_savegamename();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSVCMsg_GameSessionConfiguration.savegamename");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // optional string s1_mapname = 11;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_s1_mapname();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSVCMsg_GameSessionConfiguration.s1_mapname");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  // optional string gamemode = 12;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_gamemode();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSVCMsg_GameSessionConfiguration.gamemode");
    target = stream->WriteStringMaybeAliased(12, _s, target);
  }

  // optional string server_ip_address = 13;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_server_ip_address();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSVCMsg_GameSessionConfiguration.server_ip_address");
    target = stream->WriteStringMaybeAliased(13, _s, target);
  }

  // optional bytes data = 14;
  if (cached_has_bits & 0x00000020u) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(14, _s, target);
  }

  // optional bool is_localonly = 15;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        15, this->_internal_is_localonly(), target);
  }

  // optional bool is_transition = 16;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        16, this->_internal_is_transition(), target);
  }

  // optional string previouslevel = 17;
  if (cached_has_bits & 0x00000040u) {
    const std::string& _s = this->_internal_previouslevel();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSVCMsg_GameSessionConfiguration.previouslevel");
    target = stream->WriteStringMaybeAliased(17, _s, target);
  }

  // optional string landmarkname = 18;
  if (cached_has_bits & 0x00000080u) {
    const std::string& _s = this->_internal_landmarkname();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSVCMsg_GameSessionConfiguration.landmarkname");
    target = stream->WriteStringMaybeAliased(18, _s, target);
  }

  // optional bool no_steam_server = 19;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        19, this->_internal_no_steam_server(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_GameSessionConfiguration)
  return target;
}

::size_t CSVCMsg_GameSessionConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_GameSessionConfiguration)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string hostname = 9;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_hostname());
    }

    // optional string savegamename = 10;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_savegamename());
    }

    // optional string s1_mapname = 11;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_s1_mapname());
    }

    // optional string gamemode = 12;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_gamemode());
    }

    // optional string server_ip_address = 13;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_server_ip_address());
    }

    // optional bytes data = 14;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_data());
    }

    // optional string previouslevel = 17;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_previouslevel());
    }

    // optional string landmarkname = 18;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_landmarkname());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional bool is_multiplayer = 1;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2;
    }

    // optional bool is_loadsavegame = 2;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2;
    }

    // optional bool is_background_map = 3;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2;
    }

    // optional bool is_headless = 4;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2;
    }

    // optional uint32 min_client_limit = 5;
    if (cached_has_bits & 0x00001000u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_min_client_limit());
    }

    // optional uint32 max_client_limit = 6;
    if (cached_has_bits & 0x00002000u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_max_client_limit());
    }

    // optional uint32 max_clients = 7;
    if (cached_has_bits & 0x00004000u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_max_clients());
    }

    // optional fixed32 tick_interval = 8;
    if (cached_has_bits & 0x00008000u) {
      total_size += 5;
    }

  }
  if (cached_has_bits & 0x00070000u) {
    // optional bool is_localonly = 15;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2;
    }

    // optional bool no_steam_server = 19;
    if (cached_has_bits & 0x00020000u) {
      total_size += 3;
    }

    // optional bool is_transition = 16;
    if (cached_has_bits & 0x00040000u) {
      total_size += 3;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_GameSessionConfiguration::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_GameSessionConfiguration::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_GameSessionConfiguration::GetClassData() const { return &_class_data_; }


void CSVCMsg_GameSessionConfiguration::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_GameSessionConfiguration*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_GameSessionConfiguration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_GameSessionConfiguration)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_hostname(from._internal_hostname());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_savegamename(from._internal_savegamename());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_s1_mapname(from._internal_s1_mapname());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_gamemode(from._internal_gamemode());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_server_ip_address(from._internal_server_ip_address());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_data(from._internal_data());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_set_previouslevel(from._internal_previouslevel());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_set_landmarkname(from._internal_landmarkname());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.is_multiplayer_ = from._impl_.is_multiplayer_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.is_loadsavegame_ = from._impl_.is_loadsavegame_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.is_background_map_ = from._impl_.is_background_map_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.is_headless_ = from._impl_.is_headless_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.min_client_limit_ = from._impl_.min_client_limit_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.max_client_limit_ = from._impl_.max_client_limit_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.max_clients_ = from._impl_.max_clients_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.tick_interval_ = from._impl_.tick_interval_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00070000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.is_localonly_ = from._impl_.is_localonly_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.no_steam_server_ = from._impl_.no_steam_server_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.is_transition_ = from._impl_.is_transition_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_GameSessionConfiguration::CopyFrom(const CSVCMsg_GameSessionConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_GameSessionConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_GameSessionConfiguration::IsInitialized() const {
  return true;
}

void CSVCMsg_GameSessionConfiguration::InternalSwap(CSVCMsg_GameSessionConfiguration* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hostname_, lhs_arena,
                                       &other->_impl_.hostname_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.savegamename_, lhs_arena,
                                       &other->_impl_.savegamename_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.s1_mapname_, lhs_arena,
                                       &other->_impl_.s1_mapname_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.gamemode_, lhs_arena,
                                       &other->_impl_.gamemode_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.server_ip_address_, lhs_arena,
                                       &other->_impl_.server_ip_address_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, lhs_arena,
                                       &other->_impl_.data_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.previouslevel_, lhs_arena,
                                       &other->_impl_.previouslevel_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.landmarkname_, lhs_arena,
                                       &other->_impl_.landmarkname_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.is_transition_)
      + sizeof(CSVCMsg_GameSessionConfiguration::_impl_.is_transition_)
      - PROTOBUF_FIELD_OFFSET(CSVCMsg_GameSessionConfiguration, _impl_.is_multiplayer_)>(
          reinterpret_cast<char*>(&_impl_.is_multiplayer_),
          reinterpret_cast<char*>(&other->_impl_.is_multiplayer_));
}

::google::protobuf::Metadata CSVCMsg_GameSessionConfiguration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networkbasetypes_2eproto_getter, &descriptor_table_networkbasetypes_2eproto_once,
      file_level_metadata_networkbasetypes_2eproto[26]);
}
// ===================================================================

class CNETMsg_DebugOverlay::_Internal {
 public:
  using HasBits = decltype(std::declval<CNETMsg_DebugOverlay>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CNETMsg_DebugOverlay, _impl_._has_bits_);
  static void set_has_etype(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CNETMsg_DebugOverlay::CNETMsg_DebugOverlay(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CNETMsg_DebugOverlay)
}
CNETMsg_DebugOverlay::CNETMsg_DebugOverlay(const CNETMsg_DebugOverlay& from) : ::google::protobuf::Message() {
  CNETMsg_DebugOverlay* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.vectors_){from._impl_.vectors_},
      decltype(_impl_.colors_){from._impl_.colors_},
      decltype(_impl_.dimensions_){from._impl_.dimensions_},
      decltype(_impl_.times_){from._impl_.times_},
      decltype(_impl_.bools_){from._impl_.bools_},
      decltype(_impl_.uint64s_){from._impl_.uint64s_},
      decltype(_impl_.strings_){from._impl_.strings_},
      decltype(_impl_.etype_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.etype_ = from._impl_.etype_;

  // @@protoc_insertion_point(copy_constructor:CNETMsg_DebugOverlay)
}
inline void CNETMsg_DebugOverlay::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.vectors_){arena},
      decltype(_impl_.colors_){arena},
      decltype(_impl_.dimensions_){arena},
      decltype(_impl_.times_){arena},
      decltype(_impl_.bools_){arena},
      decltype(_impl_.uint64s_){arena},
      decltype(_impl_.strings_){arena},
      decltype(_impl_.etype_){0},
  };
}
CNETMsg_DebugOverlay::~CNETMsg_DebugOverlay() {
  // @@protoc_insertion_point(destructor:CNETMsg_DebugOverlay)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CNETMsg_DebugOverlay::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.vectors_.~RepeatedPtrField();
  _impl_.colors_.~RepeatedPtrField();
  _impl_.dimensions_.~RepeatedField();
  _impl_.times_.~RepeatedField();
  _impl_.bools_.~RepeatedField();
  _impl_.uint64s_.~RepeatedField();
  _internal_mutable_strings()->~RepeatedPtrField();
}
void CNETMsg_DebugOverlay::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CNETMsg_DebugOverlay::Clear() {
// @@protoc_insertion_point(message_clear_start:CNETMsg_DebugOverlay)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_vectors()->Clear();
  _internal_mutable_colors()->Clear();
  _internal_mutable_dimensions()->Clear();
  _internal_mutable_times()->Clear();
  _internal_mutable_bools()->Clear();
  _internal_mutable_uint64s()->Clear();
  _internal_mutable_strings()->Clear();
  _impl_.etype_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CNETMsg_DebugOverlay::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 2, 44, 2> CNETMsg_DebugOverlay::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CNETMsg_DebugOverlay, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CNETMsg_DebugOverlay_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string strings = 8;
    {::_pbi::TcParser::FastSR1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_DebugOverlay, _impl_.strings_)}},
    // optional int32 etype = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CNETMsg_DebugOverlay, _impl_.etype_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_DebugOverlay, _impl_.etype_)}},
    // repeated .CMsgVector vectors = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_DebugOverlay, _impl_.vectors_)}},
    // repeated .CMsgRGBA colors = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(CNETMsg_DebugOverlay, _impl_.colors_)}},
    // repeated float dimensions = 4;
    {::_pbi::TcParser::FastF32R1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_DebugOverlay, _impl_.dimensions_)}},
    // repeated float times = 5;
    {::_pbi::TcParser::FastF32R1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_DebugOverlay, _impl_.times_)}},
    // repeated bool bools = 6;
    {::_pbi::TcParser::FastV8R1,
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_DebugOverlay, _impl_.bools_)}},
    // repeated uint64 uint64s = 7;
    {::_pbi::TcParser::FastV64R1,
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(CNETMsg_DebugOverlay, _impl_.uint64s_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 etype = 1;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_DebugOverlay, _impl_.etype_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated .CMsgVector vectors = 2;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_DebugOverlay, _impl_.vectors_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .CMsgRGBA colors = 3;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_DebugOverlay, _impl_.colors_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated float dimensions = 4;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_DebugOverlay, _impl_.dimensions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFloat)},
    // repeated float times = 5;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_DebugOverlay, _impl_.times_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFloat)},
    // repeated bool bools = 6;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_DebugOverlay, _impl_.bools_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBool)},
    // repeated uint64 uint64s = 7;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_DebugOverlay, _impl_.uint64s_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt64)},
    // repeated string strings = 8;
    {PROTOBUF_FIELD_OFFSET(CNETMsg_DebugOverlay, _impl_.strings_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgVector>()},
    {::_pbi::TcParser::GetTable<::CMsgRGBA>()},
  }}, {{
    "\24\0\0\0\0\0\0\0\7\0\0\0\0\0\0\0"
    "CNETMsg_DebugOverlay"
    "strings"
  }},
};

::uint8_t* CNETMsg_DebugOverlay::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CNETMsg_DebugOverlay)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 etype = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_etype(), target);
  }

  // repeated .CMsgVector vectors = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vectors_size()); i < n; i++) {
    const auto& repfield = this->_internal_vectors().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .CMsgRGBA colors = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_colors_size()); i < n; i++) {
    const auto& repfield = this->_internal_colors().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated float dimensions = 4;
  for (int i = 0, n = this->_internal_dimensions_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_dimensions().Get(i), target);
  }

  // repeated float times = 5;
  for (int i = 0, n = this->_internal_times_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_times().Get(i), target);
  }

  // repeated bool bools = 6;
  for (int i = 0, n = this->_internal_bools_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_bools().Get(i), target);
  }

  // repeated uint64 uint64s = 7;
  for (int i = 0, n = this->_internal_uint64s_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        7, this->_internal_uint64s().Get(i), target);
  }

  // repeated string strings = 8;
  for (int i = 0, n = this->_internal_strings_size(); i < n; ++i) {
    const auto& s = this->_internal_strings().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CNETMsg_DebugOverlay.strings");
    target = stream->WriteString(8, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CNETMsg_DebugOverlay)
  return target;
}

::size_t CNETMsg_DebugOverlay::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CNETMsg_DebugOverlay)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgVector vectors = 2;
  total_size += 1UL * this->_internal_vectors_size();
  for (const auto& msg : this->_internal_vectors()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .CMsgRGBA colors = 3;
  total_size += 1UL * this->_internal_colors_size();
  for (const auto& msg : this->_internal_colors()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated float dimensions = 4;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_dimensions_size())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_dimensions_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated float times = 5;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_times_size())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_times_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated bool bools = 6;
  {
    std::size_t data_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_bools_size())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_bools_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated uint64 uint64s = 7;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt64Size(
        this->_internal_uint64s())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_uint64s_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated string strings = 8;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_strings().size());
  for (int i = 0, n = _internal_strings().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_strings().Get(i));
  }
  // optional int32 etype = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_etype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CNETMsg_DebugOverlay::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CNETMsg_DebugOverlay::MergeImpl
};
const ::google::protobuf::Message::ClassData*CNETMsg_DebugOverlay::GetClassData() const { return &_class_data_; }


void CNETMsg_DebugOverlay::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CNETMsg_DebugOverlay*>(&to_msg);
  auto& from = static_cast<const CNETMsg_DebugOverlay&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CNETMsg_DebugOverlay)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_vectors()->MergeFrom(from._internal_vectors());
  _this->_internal_mutable_colors()->MergeFrom(from._internal_colors());
  _this->_internal_mutable_dimensions()->MergeFrom(from._internal_dimensions());
  _this->_internal_mutable_times()->MergeFrom(from._internal_times());
  _this->_internal_mutable_bools()->MergeFrom(from._internal_bools());
  _this->_internal_mutable_uint64s()->MergeFrom(from._internal_uint64s());
  _this->_internal_mutable_strings()->MergeFrom(from._internal_strings());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_etype(from._internal_etype());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CNETMsg_DebugOverlay::CopyFrom(const CNETMsg_DebugOverlay& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CNETMsg_DebugOverlay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CNETMsg_DebugOverlay::IsInitialized() const {
  return true;
}

void CNETMsg_DebugOverlay::InternalSwap(CNETMsg_DebugOverlay* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.vectors_.InternalSwap(&other->_impl_.vectors_);
  _impl_.colors_.InternalSwap(&other->_impl_.colors_);
  _impl_.dimensions_.InternalSwap(&other->_impl_.dimensions_);
  _impl_.times_.InternalSwap(&other->_impl_.times_);
  _impl_.bools_.InternalSwap(&other->_impl_.bools_);
  _impl_.uint64s_.InternalSwap(&other->_impl_.uint64s_);
  _impl_.strings_.InternalSwap(&other->_impl_.strings_);
        swap(_impl_.etype_, other->_impl_.etype_);
}

::google::protobuf::Metadata CNETMsg_DebugOverlay::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_networkbasetypes_2eproto_getter, &descriptor_table_networkbasetypes_2eproto_once,
      file_level_metadata_networkbasetypes_2eproto[27]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
