// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: demo.proto

#include "demo.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
        template <typename>
PROTOBUF_CONSTEXPR CDemoFileHeader::CDemoFileHeader(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.demo_file_stamp_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.server_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.client_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.map_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.game_directory_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.addons_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.demo_version_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.demo_version_guid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.game_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.network_protocol_)*/ 0,
      /*decltype(_impl_.fullpackets_version_)*/ 0,
      /*decltype(_impl_.allow_clientside_entities_)*/ false,
      /*decltype(_impl_.allow_clientside_particles_)*/ false,
      /*decltype(_impl_.build_num_)*/ 0,
    } {}
struct CDemoFileHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CDemoFileHeaderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CDemoFileHeaderDefaultTypeInternal() {}
  union {
    CDemoFileHeader _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CDemoFileHeaderDefaultTypeInternal _CDemoFileHeader_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CGameInfo_CDotaGameInfo_CPlayerInfo::CGameInfo_CDotaGameInfo_CPlayerInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.hero_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.player_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.steamid_)*/ ::uint64_t{0u},
      /*decltype(_impl_.is_fake_client_)*/ false,
      /*decltype(_impl_.game_team_)*/ 0,
    } {}
struct CGameInfo_CDotaGameInfo_CPlayerInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CGameInfo_CDotaGameInfo_CPlayerInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CGameInfo_CDotaGameInfo_CPlayerInfoDefaultTypeInternal() {}
  union {
    CGameInfo_CDotaGameInfo_CPlayerInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CGameInfo_CDotaGameInfo_CPlayerInfoDefaultTypeInternal _CGameInfo_CDotaGameInfo_CPlayerInfo_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CGameInfo_CDotaGameInfo_CHeroSelectEvent::CGameInfo_CDotaGameInfo_CHeroSelectEvent(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.is_pick_)*/ false,
      /*decltype(_impl_.team_)*/ 0u,
      /*decltype(_impl_.hero_id_)*/ 0u,
    } {}
struct CGameInfo_CDotaGameInfo_CHeroSelectEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CGameInfo_CDotaGameInfo_CHeroSelectEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CGameInfo_CDotaGameInfo_CHeroSelectEventDefaultTypeInternal() {}
  union {
    CGameInfo_CDotaGameInfo_CHeroSelectEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CGameInfo_CDotaGameInfo_CHeroSelectEventDefaultTypeInternal _CGameInfo_CDotaGameInfo_CHeroSelectEvent_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CGameInfo_CDotaGameInfo::CGameInfo_CDotaGameInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.player_info_)*/ {},
      /*decltype(_impl_.picks_bans_)*/ {},
      /*decltype(_impl_.radiant_team_tag_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.dire_team_tag_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.match_id_)*/ ::uint64_t{0u},
      /*decltype(_impl_.game_mode_)*/ 0,
      /*decltype(_impl_.game_winner_)*/ 0,
      /*decltype(_impl_.leagueid_)*/ 0u,
      /*decltype(_impl_.radiant_team_id_)*/ 0u,
      /*decltype(_impl_.dire_team_id_)*/ 0u,
      /*decltype(_impl_.end_time_)*/ 0u,
    } {}
struct CGameInfo_CDotaGameInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CGameInfo_CDotaGameInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CGameInfo_CDotaGameInfoDefaultTypeInternal() {}
  union {
    CGameInfo_CDotaGameInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CGameInfo_CDotaGameInfoDefaultTypeInternal _CGameInfo_CDotaGameInfo_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CGameInfo::CGameInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.dota_)*/ nullptr,
    } {}
struct CGameInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CGameInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CGameInfoDefaultTypeInternal() {}
  union {
    CGameInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CGameInfoDefaultTypeInternal _CGameInfo_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CDemoFileInfo::CDemoFileInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.game_info_)*/ nullptr,
      /*decltype(_impl_.playback_time_)*/ 0,
      /*decltype(_impl_.playback_ticks_)*/ 0,
      /*decltype(_impl_.playback_frames_)*/ 0,
    } {}
struct CDemoFileInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CDemoFileInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CDemoFileInfoDefaultTypeInternal() {}
  union {
    CDemoFileInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CDemoFileInfoDefaultTypeInternal _CDemoFileInfo_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CDemoPacket::CDemoPacket(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.data_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct CDemoPacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CDemoPacketDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CDemoPacketDefaultTypeInternal() {}
  union {
    CDemoPacket _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CDemoPacketDefaultTypeInternal _CDemoPacket_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CDemoFullPacket::CDemoFullPacket(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.string_table_)*/ nullptr,
      /*decltype(_impl_.packet_)*/ nullptr,
    } {}
struct CDemoFullPacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CDemoFullPacketDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CDemoFullPacketDefaultTypeInternal() {}
  union {
    CDemoFullPacket _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CDemoFullPacketDefaultTypeInternal _CDemoFullPacket_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CDemoSaveGame::CDemoSaveGame(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.data_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.steam_id_)*/ ::uint64_t{0u},
      /*decltype(_impl_.signature_)*/ ::uint64_t{0u},
      /*decltype(_impl_.version_)*/ 0,
    } {}
struct CDemoSaveGameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CDemoSaveGameDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CDemoSaveGameDefaultTypeInternal() {}
  union {
    CDemoSaveGame _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CDemoSaveGameDefaultTypeInternal _CDemoSaveGame_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR CDemoSyncTick::CDemoSyncTick(::_pbi::ConstantInitialized) {}
struct CDemoSyncTickDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CDemoSyncTickDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CDemoSyncTickDefaultTypeInternal() {}
  union {
    CDemoSyncTick _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CDemoSyncTickDefaultTypeInternal _CDemoSyncTick_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CDemoConsoleCmd::CDemoConsoleCmd(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.cmdstring_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct CDemoConsoleCmdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CDemoConsoleCmdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CDemoConsoleCmdDefaultTypeInternal() {}
  union {
    CDemoConsoleCmd _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CDemoConsoleCmdDefaultTypeInternal _CDemoConsoleCmd_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CDemoSendTables::CDemoSendTables(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.data_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct CDemoSendTablesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CDemoSendTablesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CDemoSendTablesDefaultTypeInternal() {}
  union {
    CDemoSendTables _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CDemoSendTablesDefaultTypeInternal _CDemoSendTables_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CDemoClassInfo_class_t::CDemoClassInfo_class_t(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.network_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.table_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.class_id_)*/ 0,
    } {}
struct CDemoClassInfo_class_tDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CDemoClassInfo_class_tDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CDemoClassInfo_class_tDefaultTypeInternal() {}
  union {
    CDemoClassInfo_class_t _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CDemoClassInfo_class_tDefaultTypeInternal _CDemoClassInfo_class_t_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CDemoClassInfo::CDemoClassInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.classes_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CDemoClassInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CDemoClassInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CDemoClassInfoDefaultTypeInternal() {}
  union {
    CDemoClassInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CDemoClassInfoDefaultTypeInternal _CDemoClassInfo_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CDemoCustomData::CDemoCustomData(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.data_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.callback_index_)*/ 0,
    } {}
struct CDemoCustomDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CDemoCustomDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CDemoCustomDataDefaultTypeInternal() {}
  union {
    CDemoCustomData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CDemoCustomDataDefaultTypeInternal _CDemoCustomData_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CDemoCustomDataCallbacks::CDemoCustomDataCallbacks(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.save_id_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CDemoCustomDataCallbacksDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CDemoCustomDataCallbacksDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CDemoCustomDataCallbacksDefaultTypeInternal() {}
  union {
    CDemoCustomDataCallbacks _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CDemoCustomDataCallbacksDefaultTypeInternal _CDemoCustomDataCallbacks_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CDemoAnimationData::CDemoAnimationData(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.data_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.entity_id_)*/ 0,
      /*decltype(_impl_.start_tick_)*/ 0,
      /*decltype(_impl_.data_checksum_)*/ ::int64_t{0},
      /*decltype(_impl_.end_tick_)*/ 0,
    } {}
struct CDemoAnimationDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CDemoAnimationDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CDemoAnimationDataDefaultTypeInternal() {}
  union {
    CDemoAnimationData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CDemoAnimationDataDefaultTypeInternal _CDemoAnimationData_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CDemoStringTables_items_t::CDemoStringTables_items_t(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.str_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.data_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct CDemoStringTables_items_tDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CDemoStringTables_items_tDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CDemoStringTables_items_tDefaultTypeInternal() {}
  union {
    CDemoStringTables_items_t _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CDemoStringTables_items_tDefaultTypeInternal _CDemoStringTables_items_t_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CDemoStringTables_table_t::CDemoStringTables_table_t(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.items_)*/ {},
      /*decltype(_impl_.items_clientside_)*/ {},
      /*decltype(_impl_.table_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.table_flags_)*/ 0,
    } {}
struct CDemoStringTables_table_tDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CDemoStringTables_table_tDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CDemoStringTables_table_tDefaultTypeInternal() {}
  union {
    CDemoStringTables_table_t _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CDemoStringTables_table_tDefaultTypeInternal _CDemoStringTables_table_t_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CDemoStringTables::CDemoStringTables(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.tables_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CDemoStringTablesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CDemoStringTablesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CDemoStringTablesDefaultTypeInternal() {}
  union {
    CDemoStringTables _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CDemoStringTablesDefaultTypeInternal _CDemoStringTables_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR CDemoStop::CDemoStop(::_pbi::ConstantInitialized) {}
struct CDemoStopDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CDemoStopDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CDemoStopDefaultTypeInternal() {}
  union {
    CDemoStop _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CDemoStopDefaultTypeInternal _CDemoStop_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CDemoUserCmd::CDemoUserCmd(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.data_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.cmd_number_)*/ 0,
    } {}
struct CDemoUserCmdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CDemoUserCmdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CDemoUserCmdDefaultTypeInternal() {}
  union {
    CDemoUserCmd _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CDemoUserCmdDefaultTypeInternal _CDemoUserCmd_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CDemoSpawnGroups::CDemoSpawnGroups(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.msgs_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CDemoSpawnGroupsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CDemoSpawnGroupsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CDemoSpawnGroupsDefaultTypeInternal() {}
  union {
    CDemoSpawnGroups _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CDemoSpawnGroupsDefaultTypeInternal _CDemoSpawnGroups_default_instance_;
static ::_pb::Metadata file_level_metadata_demo_2eproto[23];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_demo_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_demo_2eproto = nullptr;
const ::uint32_t TableStruct_demo_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::CDemoFileHeader, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CDemoFileHeader, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CDemoFileHeader, _impl_.demo_file_stamp_),
    PROTOBUF_FIELD_OFFSET(::CDemoFileHeader, _impl_.network_protocol_),
    PROTOBUF_FIELD_OFFSET(::CDemoFileHeader, _impl_.server_name_),
    PROTOBUF_FIELD_OFFSET(::CDemoFileHeader, _impl_.client_name_),
    PROTOBUF_FIELD_OFFSET(::CDemoFileHeader, _impl_.map_name_),
    PROTOBUF_FIELD_OFFSET(::CDemoFileHeader, _impl_.game_directory_),
    PROTOBUF_FIELD_OFFSET(::CDemoFileHeader, _impl_.fullpackets_version_),
    PROTOBUF_FIELD_OFFSET(::CDemoFileHeader, _impl_.allow_clientside_entities_),
    PROTOBUF_FIELD_OFFSET(::CDemoFileHeader, _impl_.allow_clientside_particles_),
    PROTOBUF_FIELD_OFFSET(::CDemoFileHeader, _impl_.addons_),
    PROTOBUF_FIELD_OFFSET(::CDemoFileHeader, _impl_.demo_version_name_),
    PROTOBUF_FIELD_OFFSET(::CDemoFileHeader, _impl_.demo_version_guid_),
    PROTOBUF_FIELD_OFFSET(::CDemoFileHeader, _impl_.build_num_),
    PROTOBUF_FIELD_OFFSET(::CDemoFileHeader, _impl_.game_),
    0,
    9,
    1,
    2,
    3,
    4,
    10,
    11,
    12,
    5,
    6,
    7,
    13,
    8,
    PROTOBUF_FIELD_OFFSET(::CGameInfo_CDotaGameInfo_CPlayerInfo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CGameInfo_CDotaGameInfo_CPlayerInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CGameInfo_CDotaGameInfo_CPlayerInfo, _impl_.hero_name_),
    PROTOBUF_FIELD_OFFSET(::CGameInfo_CDotaGameInfo_CPlayerInfo, _impl_.player_name_),
    PROTOBUF_FIELD_OFFSET(::CGameInfo_CDotaGameInfo_CPlayerInfo, _impl_.is_fake_client_),
    PROTOBUF_FIELD_OFFSET(::CGameInfo_CDotaGameInfo_CPlayerInfo, _impl_.steamid_),
    PROTOBUF_FIELD_OFFSET(::CGameInfo_CDotaGameInfo_CPlayerInfo, _impl_.game_team_),
    0,
    1,
    3,
    2,
    4,
    PROTOBUF_FIELD_OFFSET(::CGameInfo_CDotaGameInfo_CHeroSelectEvent, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CGameInfo_CDotaGameInfo_CHeroSelectEvent, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CGameInfo_CDotaGameInfo_CHeroSelectEvent, _impl_.is_pick_),
    PROTOBUF_FIELD_OFFSET(::CGameInfo_CDotaGameInfo_CHeroSelectEvent, _impl_.team_),
    PROTOBUF_FIELD_OFFSET(::CGameInfo_CDotaGameInfo_CHeroSelectEvent, _impl_.hero_id_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::CGameInfo_CDotaGameInfo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CGameInfo_CDotaGameInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CGameInfo_CDotaGameInfo, _impl_.match_id_),
    PROTOBUF_FIELD_OFFSET(::CGameInfo_CDotaGameInfo, _impl_.game_mode_),
    PROTOBUF_FIELD_OFFSET(::CGameInfo_CDotaGameInfo, _impl_.game_winner_),
    PROTOBUF_FIELD_OFFSET(::CGameInfo_CDotaGameInfo, _impl_.player_info_),
    PROTOBUF_FIELD_OFFSET(::CGameInfo_CDotaGameInfo, _impl_.leagueid_),
    PROTOBUF_FIELD_OFFSET(::CGameInfo_CDotaGameInfo, _impl_.picks_bans_),
    PROTOBUF_FIELD_OFFSET(::CGameInfo_CDotaGameInfo, _impl_.radiant_team_id_),
    PROTOBUF_FIELD_OFFSET(::CGameInfo_CDotaGameInfo, _impl_.dire_team_id_),
    PROTOBUF_FIELD_OFFSET(::CGameInfo_CDotaGameInfo, _impl_.radiant_team_tag_),
    PROTOBUF_FIELD_OFFSET(::CGameInfo_CDotaGameInfo, _impl_.dire_team_tag_),
    PROTOBUF_FIELD_OFFSET(::CGameInfo_CDotaGameInfo, _impl_.end_time_),
    2,
    3,
    4,
    ~0u,
    5,
    ~0u,
    6,
    7,
    0,
    1,
    8,
    PROTOBUF_FIELD_OFFSET(::CGameInfo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CGameInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CGameInfo, _impl_.dota_),
    0,
    PROTOBUF_FIELD_OFFSET(::CDemoFileInfo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CDemoFileInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CDemoFileInfo, _impl_.playback_time_),
    PROTOBUF_FIELD_OFFSET(::CDemoFileInfo, _impl_.playback_ticks_),
    PROTOBUF_FIELD_OFFSET(::CDemoFileInfo, _impl_.playback_frames_),
    PROTOBUF_FIELD_OFFSET(::CDemoFileInfo, _impl_.game_info_),
    1,
    2,
    3,
    0,
    PROTOBUF_FIELD_OFFSET(::CDemoPacket, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CDemoPacket, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CDemoPacket, _impl_.data_),
    0,
    PROTOBUF_FIELD_OFFSET(::CDemoFullPacket, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CDemoFullPacket, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CDemoFullPacket, _impl_.string_table_),
    PROTOBUF_FIELD_OFFSET(::CDemoFullPacket, _impl_.packet_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::CDemoSaveGame, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CDemoSaveGame, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CDemoSaveGame, _impl_.data_),
    PROTOBUF_FIELD_OFFSET(::CDemoSaveGame, _impl_.steam_id_),
    PROTOBUF_FIELD_OFFSET(::CDemoSaveGame, _impl_.signature_),
    PROTOBUF_FIELD_OFFSET(::CDemoSaveGame, _impl_.version_),
    0,
    1,
    2,
    3,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CDemoSyncTick, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CDemoConsoleCmd, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CDemoConsoleCmd, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CDemoConsoleCmd, _impl_.cmdstring_),
    0,
    PROTOBUF_FIELD_OFFSET(::CDemoSendTables, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CDemoSendTables, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CDemoSendTables, _impl_.data_),
    0,
    PROTOBUF_FIELD_OFFSET(::CDemoClassInfo_class_t, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CDemoClassInfo_class_t, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CDemoClassInfo_class_t, _impl_.class_id_),
    PROTOBUF_FIELD_OFFSET(::CDemoClassInfo_class_t, _impl_.network_name_),
    PROTOBUF_FIELD_OFFSET(::CDemoClassInfo_class_t, _impl_.table_name_),
    2,
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CDemoClassInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CDemoClassInfo, _impl_.classes_),
    PROTOBUF_FIELD_OFFSET(::CDemoCustomData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CDemoCustomData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CDemoCustomData, _impl_.callback_index_),
    PROTOBUF_FIELD_OFFSET(::CDemoCustomData, _impl_.data_),
    1,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CDemoCustomDataCallbacks, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CDemoCustomDataCallbacks, _impl_.save_id_),
    PROTOBUF_FIELD_OFFSET(::CDemoAnimationData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CDemoAnimationData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CDemoAnimationData, _impl_.entity_id_),
    PROTOBUF_FIELD_OFFSET(::CDemoAnimationData, _impl_.start_tick_),
    PROTOBUF_FIELD_OFFSET(::CDemoAnimationData, _impl_.end_tick_),
    PROTOBUF_FIELD_OFFSET(::CDemoAnimationData, _impl_.data_),
    PROTOBUF_FIELD_OFFSET(::CDemoAnimationData, _impl_.data_checksum_),
    1,
    2,
    4,
    0,
    3,
    PROTOBUF_FIELD_OFFSET(::CDemoStringTables_items_t, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CDemoStringTables_items_t, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CDemoStringTables_items_t, _impl_.str_),
    PROTOBUF_FIELD_OFFSET(::CDemoStringTables_items_t, _impl_.data_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::CDemoStringTables_table_t, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CDemoStringTables_table_t, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CDemoStringTables_table_t, _impl_.table_name_),
    PROTOBUF_FIELD_OFFSET(::CDemoStringTables_table_t, _impl_.items_),
    PROTOBUF_FIELD_OFFSET(::CDemoStringTables_table_t, _impl_.items_clientside_),
    PROTOBUF_FIELD_OFFSET(::CDemoStringTables_table_t, _impl_.table_flags_),
    0,
    ~0u,
    ~0u,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CDemoStringTables, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CDemoStringTables, _impl_.tables_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CDemoStop, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CDemoUserCmd, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CDemoUserCmd, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CDemoUserCmd, _impl_.cmd_number_),
    PROTOBUF_FIELD_OFFSET(::CDemoUserCmd, _impl_.data_),
    1,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CDemoSpawnGroups, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CDemoSpawnGroups, _impl_.msgs_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 22, -1, sizeof(::CDemoFileHeader)},
        {36, 49, -1, sizeof(::CGameInfo_CDotaGameInfo_CPlayerInfo)},
        {54, 65, -1, sizeof(::CGameInfo_CDotaGameInfo_CHeroSelectEvent)},
        {68, 87, -1, sizeof(::CGameInfo_CDotaGameInfo)},
        {98, 107, -1, sizeof(::CGameInfo)},
        {108, 120, -1, sizeof(::CDemoFileInfo)},
        {124, 133, -1, sizeof(::CDemoPacket)},
        {134, 144, -1, sizeof(::CDemoFullPacket)},
        {146, 158, -1, sizeof(::CDemoSaveGame)},
        {162, -1, -1, sizeof(::CDemoSyncTick)},
        {170, 179, -1, sizeof(::CDemoConsoleCmd)},
        {180, 189, -1, sizeof(::CDemoSendTables)},
        {190, 201, -1, sizeof(::CDemoClassInfo_class_t)},
        {204, -1, -1, sizeof(::CDemoClassInfo)},
        {213, 223, -1, sizeof(::CDemoCustomData)},
        {225, -1, -1, sizeof(::CDemoCustomDataCallbacks)},
        {234, 247, -1, sizeof(::CDemoAnimationData)},
        {252, 262, -1, sizeof(::CDemoStringTables_items_t)},
        {264, 276, -1, sizeof(::CDemoStringTables_table_t)},
        {280, -1, -1, sizeof(::CDemoStringTables)},
        {289, -1, -1, sizeof(::CDemoStop)},
        {297, 307, -1, sizeof(::CDemoUserCmd)},
        {309, -1, -1, sizeof(::CDemoSpawnGroups)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_CDemoFileHeader_default_instance_._instance,
    &::_CGameInfo_CDotaGameInfo_CPlayerInfo_default_instance_._instance,
    &::_CGameInfo_CDotaGameInfo_CHeroSelectEvent_default_instance_._instance,
    &::_CGameInfo_CDotaGameInfo_default_instance_._instance,
    &::_CGameInfo_default_instance_._instance,
    &::_CDemoFileInfo_default_instance_._instance,
    &::_CDemoPacket_default_instance_._instance,
    &::_CDemoFullPacket_default_instance_._instance,
    &::_CDemoSaveGame_default_instance_._instance,
    &::_CDemoSyncTick_default_instance_._instance,
    &::_CDemoConsoleCmd_default_instance_._instance,
    &::_CDemoSendTables_default_instance_._instance,
    &::_CDemoClassInfo_class_t_default_instance_._instance,
    &::_CDemoClassInfo_default_instance_._instance,
    &::_CDemoCustomData_default_instance_._instance,
    &::_CDemoCustomDataCallbacks_default_instance_._instance,
    &::_CDemoAnimationData_default_instance_._instance,
    &::_CDemoStringTables_items_t_default_instance_._instance,
    &::_CDemoStringTables_table_t_default_instance_._instance,
    &::_CDemoStringTables_default_instance_._instance,
    &::_CDemoStop_default_instance_._instance,
    &::_CDemoUserCmd_default_instance_._instance,
    &::_CDemoSpawnGroups_default_instance_._instance,
};
const char descriptor_table_protodef_demo_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\ndemo.proto\"\343\002\n\017CDemoFileHeader\022\027\n\017demo"
    "_file_stamp\030\001 \002(\t\022\030\n\020network_protocol\030\002 "
    "\001(\005\022\023\n\013server_name\030\003 \001(\t\022\023\n\013client_name\030"
    "\004 \001(\t\022\020\n\010map_name\030\005 \001(\t\022\026\n\016game_director"
    "y\030\006 \001(\t\022\033\n\023fullpackets_version\030\007 \001(\005\022!\n\031"
    "allow_clientside_entities\030\010 \001(\010\022\"\n\032allow"
    "_clientside_particles\030\t \001(\010\022\016\n\006addons\030\n "
    "\001(\t\022\031\n\021demo_version_name\030\013 \001(\t\022\031\n\021demo_v"
    "ersion_guid\030\014 \001(\t\022\021\n\tbuild_num\030\r \001(\005\022\014\n\004"
    "game\030\016 \001(\t\"\264\004\n\tCGameInfo\022&\n\004dota\030\004 \001(\0132\030"
    ".CGameInfo.CDotaGameInfo\032\376\003\n\rCDotaGameIn"
    "fo\022\020\n\010match_id\030\001 \001(\004\022\021\n\tgame_mode\030\002 \001(\005\022"
    "\023\n\013game_winner\030\003 \001(\005\0229\n\013player_info\030\004 \003("
    "\0132$.CGameInfo.CDotaGameInfo.CPlayerInfo\022"
    "\020\n\010leagueid\030\005 \001(\r\022=\n\npicks_bans\030\006 \003(\0132)."
    "CGameInfo.CDotaGameInfo.CHeroSelectEvent"
    "\022\027\n\017radiant_team_id\030\007 \001(\r\022\024\n\014dire_team_i"
    "d\030\010 \001(\r\022\030\n\020radiant_team_tag\030\t \001(\t\022\025\n\rdir"
    "e_team_tag\030\n \001(\t\022\020\n\010end_time\030\013 \001(\r\032q\n\013CP"
    "layerInfo\022\021\n\thero_name\030\001 \001(\t\022\023\n\013player_n"
    "ame\030\002 \001(\t\022\026\n\016is_fake_client\030\003 \001(\010\022\017\n\007ste"
    "amid\030\004 \001(\004\022\021\n\tgame_team\030\005 \001(\005\032B\n\020CHeroSe"
    "lectEvent\022\017\n\007is_pick\030\001 \001(\010\022\014\n\004team\030\002 \001(\r"
    "\022\017\n\007hero_id\030\003 \001(\r\"v\n\rCDemoFileInfo\022\025\n\rpl"
    "ayback_time\030\001 \001(\002\022\026\n\016playback_ticks\030\002 \001("
    "\005\022\027\n\017playback_frames\030\003 \001(\005\022\035\n\tgame_info\030"
    "\004 \001(\0132\n.CGameInfo\"\033\n\013CDemoPacket\022\014\n\004data"
    "\030\003 \001(\014\"Y\n\017CDemoFullPacket\022(\n\014string_tabl"
    "e\030\001 \001(\0132\022.CDemoStringTables\022\034\n\006packet\030\002 "
    "\001(\0132\014.CDemoPacket\"S\n\rCDemoSaveGame\022\014\n\004da"
    "ta\030\001 \001(\014\022\020\n\010steam_id\030\002 \001(\006\022\021\n\tsignature\030"
    "\003 \001(\006\022\017\n\007version\030\004 \001(\005\"\017\n\rCDemoSyncTick\""
    "$\n\017CDemoConsoleCmd\022\021\n\tcmdstring\030\001 \001(\t\"\037\n"
    "\017CDemoSendTables\022\014\n\004data\030\001 \001(\014\"\201\001\n\016CDemo"
    "ClassInfo\022(\n\007classes\030\001 \003(\0132\027.CDemoClassI"
    "nfo.class_t\032E\n\007class_t\022\020\n\010class_id\030\001 \001(\005"
    "\022\024\n\014network_name\030\002 \001(\t\022\022\n\ntable_name\030\003 \001"
    "(\t\"7\n\017CDemoCustomData\022\026\n\016callback_index\030"
    "\001 \001(\005\022\014\n\004data\030\002 \001(\014\"+\n\030CDemoCustomDataCa"
    "llbacks\022\017\n\007save_id\030\001 \003(\t\"r\n\022CDemoAnimati"
    "onData\022\021\n\tentity_id\030\001 \001(\021\022\022\n\nstart_tick\030"
    "\002 \001(\005\022\020\n\010end_tick\030\003 \001(\005\022\014\n\004data\030\004 \001(\014\022\025\n"
    "\rdata_checksum\030\005 \001(\003\"\373\001\n\021CDemoStringTabl"
    "es\022*\n\006tables\030\001 \003(\0132\032.CDemoStringTables.t"
    "able_t\032$\n\007items_t\022\013\n\003str\030\001 \001(\t\022\014\n\004data\030\002"
    " \001(\014\032\223\001\n\007table_t\022\022\n\ntable_name\030\001 \001(\t\022)\n\005"
    "items\030\002 \003(\0132\032.CDemoStringTables.items_t\022"
    "4\n\020items_clientside\030\003 \003(\0132\032.CDemoStringT"
    "ables.items_t\022\023\n\013table_flags\030\004 \001(\005\"\013\n\tCD"
    "emoStop\"0\n\014CDemoUserCmd\022\022\n\ncmd_number\030\001 "
    "\001(\005\022\014\n\004data\030\002 \001(\014\" \n\020CDemoSpawnGroups\022\014\n"
    "\004msgs\030\003 \003(\014*\233\003\n\rEDemoCommands\022\026\n\tDEM_Err"
    "or\020\377\377\377\377\377\377\377\377\377\001\022\014\n\010DEM_Stop\020\000\022\022\n\016DEM_FileH"
    "eader\020\001\022\020\n\014DEM_FileInfo\020\002\022\020\n\014DEM_SyncTic"
    "k\020\003\022\022\n\016DEM_SendTables\020\004\022\021\n\rDEM_ClassInfo"
    "\020\005\022\024\n\020DEM_StringTables\020\006\022\016\n\nDEM_Packet\020\007"
    "\022\024\n\020DEM_SignonPacket\020\010\022\022\n\016DEM_ConsoleCmd"
    "\020\t\022\022\n\016DEM_CustomData\020\n\022\033\n\027DEM_CustomData"
    "Callbacks\020\013\022\017\n\013DEM_UserCmd\020\014\022\022\n\016DEM_Full"
    "Packet\020\r\022\020\n\014DEM_SaveGame\020\016\022\023\n\017DEM_SpawnG"
    "roups\020\017\022\025\n\021DEM_AnimationData\020\020\022\013\n\007DEM_Ma"
    "x\020\021\022\024\n\020DEM_IsCompressed\020@"
};
static ::absl::once_flag descriptor_table_demo_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_demo_2eproto = {
    false,
    false,
    2465,
    descriptor_table_protodef_demo_2eproto,
    "demo.proto",
    &descriptor_table_demo_2eproto_once,
    nullptr,
    0,
    23,
    schemas,
    file_default_instances,
    TableStruct_demo_2eproto::offsets,
    file_level_metadata_demo_2eproto,
    file_level_enum_descriptors_demo_2eproto,
    file_level_service_descriptors_demo_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_demo_2eproto_getter() {
  return &descriptor_table_demo_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_demo_2eproto(&descriptor_table_demo_2eproto);
const ::google::protobuf::EnumDescriptor* EDemoCommands_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_demo_2eproto);
  return file_level_enum_descriptors_demo_2eproto[0];
}
bool EDemoCommands_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 64:
      return true;
    default:
      return false;
  }
}
// ===================================================================

class CDemoFileHeader::_Internal {
 public:
  using HasBits = decltype(std::declval<CDemoFileHeader>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_._has_bits_);
  static void set_has_demo_file_stamp(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_network_protocol(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_server_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_client_name(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_map_name(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_game_directory(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_fullpackets_version(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_allow_clientside_entities(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_allow_clientside_particles(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_addons(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_demo_version_name(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_demo_version_guid(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_build_num(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_game(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

CDemoFileHeader::CDemoFileHeader(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CDemoFileHeader)
}
CDemoFileHeader::CDemoFileHeader(const CDemoFileHeader& from) : ::google::protobuf::Message() {
  CDemoFileHeader* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.demo_file_stamp_){},
      decltype(_impl_.server_name_){},
      decltype(_impl_.client_name_){},
      decltype(_impl_.map_name_){},
      decltype(_impl_.game_directory_){},
      decltype(_impl_.addons_){},
      decltype(_impl_.demo_version_name_){},
      decltype(_impl_.demo_version_guid_){},
      decltype(_impl_.game_){},
      decltype(_impl_.network_protocol_){},
      decltype(_impl_.fullpackets_version_){},
      decltype(_impl_.allow_clientside_entities_){},
      decltype(_impl_.allow_clientside_particles_){},
      decltype(_impl_.build_num_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.demo_file_stamp_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.demo_file_stamp_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.demo_file_stamp_.Set(from._internal_demo_file_stamp(), _this->GetArenaForAllocation());
  }
  _impl_.server_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.server_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.server_name_.Set(from._internal_server_name(), _this->GetArenaForAllocation());
  }
  _impl_.client_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.client_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.client_name_.Set(from._internal_client_name(), _this->GetArenaForAllocation());
  }
  _impl_.map_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.map_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000008u) != 0) {
    _this->_impl_.map_name_.Set(from._internal_map_name(), _this->GetArenaForAllocation());
  }
  _impl_.game_directory_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.game_directory_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000010u) != 0) {
    _this->_impl_.game_directory_.Set(from._internal_game_directory(), _this->GetArenaForAllocation());
  }
  _impl_.addons_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.addons_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000020u) != 0) {
    _this->_impl_.addons_.Set(from._internal_addons(), _this->GetArenaForAllocation());
  }
  _impl_.demo_version_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.demo_version_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000040u) != 0) {
    _this->_impl_.demo_version_name_.Set(from._internal_demo_version_name(), _this->GetArenaForAllocation());
  }
  _impl_.demo_version_guid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.demo_version_guid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000080u) != 0) {
    _this->_impl_.demo_version_guid_.Set(from._internal_demo_version_guid(), _this->GetArenaForAllocation());
  }
  _impl_.game_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.game_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000100u) != 0) {
    _this->_impl_.game_.Set(from._internal_game(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.network_protocol_, &from._impl_.network_protocol_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.build_num_) -
    reinterpret_cast<char*>(&_impl_.network_protocol_)) + sizeof(_impl_.build_num_));

  // @@protoc_insertion_point(copy_constructor:CDemoFileHeader)
}
inline void CDemoFileHeader::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.demo_file_stamp_){},
      decltype(_impl_.server_name_){},
      decltype(_impl_.client_name_){},
      decltype(_impl_.map_name_){},
      decltype(_impl_.game_directory_){},
      decltype(_impl_.addons_){},
      decltype(_impl_.demo_version_name_){},
      decltype(_impl_.demo_version_guid_){},
      decltype(_impl_.game_){},
      decltype(_impl_.network_protocol_){0},
      decltype(_impl_.fullpackets_version_){0},
      decltype(_impl_.allow_clientside_entities_){false},
      decltype(_impl_.allow_clientside_particles_){false},
      decltype(_impl_.build_num_){0},
  };
  _impl_.demo_file_stamp_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.demo_file_stamp_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.server_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.server_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.client_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.client_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.map_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.map_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.game_directory_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.game_directory_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.addons_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.addons_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.demo_version_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.demo_version_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.demo_version_guid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.demo_version_guid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.game_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.game_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CDemoFileHeader::~CDemoFileHeader() {
  // @@protoc_insertion_point(destructor:CDemoFileHeader)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CDemoFileHeader::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.demo_file_stamp_.Destroy();
  _impl_.server_name_.Destroy();
  _impl_.client_name_.Destroy();
  _impl_.map_name_.Destroy();
  _impl_.game_directory_.Destroy();
  _impl_.addons_.Destroy();
  _impl_.demo_version_name_.Destroy();
  _impl_.demo_version_guid_.Destroy();
  _impl_.game_.Destroy();
}
void CDemoFileHeader::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CDemoFileHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:CDemoFileHeader)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.demo_file_stamp_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.server_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.client_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.map_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.game_directory_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.addons_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      _impl_.demo_version_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000080u) {
      _impl_.demo_version_guid_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _impl_.game_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00003e00u) {
    ::memset(&_impl_.network_protocol_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.build_num_) -
        reinterpret_cast<char*>(&_impl_.network_protocol_)) + sizeof(_impl_.build_num_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CDemoFileHeader::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 0, 135, 2> CDemoFileHeader::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_._has_bits_),
    0, // no _extensions_
    14, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CDemoFileHeader_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string demo_file_stamp = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_.demo_file_stamp_)}},
    // optional int32 network_protocol = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDemoFileHeader, _impl_.network_protocol_), 9>(),
     {16, 9, 0, PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_.network_protocol_)}},
    // optional string server_name = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_.server_name_)}},
    // optional string client_name = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_.client_name_)}},
    // optional string map_name = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 3, 0, PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_.map_name_)}},
    // optional string game_directory = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 4, 0, PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_.game_directory_)}},
    // optional int32 fullpackets_version = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDemoFileHeader, _impl_.fullpackets_version_), 10>(),
     {56, 10, 0, PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_.fullpackets_version_)}},
    // optional bool allow_clientside_entities = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CDemoFileHeader, _impl_.allow_clientside_entities_), 11>(),
     {64, 11, 0, PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_.allow_clientside_entities_)}},
    // optional bool allow_clientside_particles = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CDemoFileHeader, _impl_.allow_clientside_particles_), 12>(),
     {72, 12, 0, PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_.allow_clientside_particles_)}},
    // optional string addons = 10;
    {::_pbi::TcParser::FastSS1,
     {82, 5, 0, PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_.addons_)}},
    // optional string demo_version_name = 11;
    {::_pbi::TcParser::FastSS1,
     {90, 6, 0, PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_.demo_version_name_)}},
    // optional string demo_version_guid = 12;
    {::_pbi::TcParser::FastSS1,
     {98, 7, 0, PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_.demo_version_guid_)}},
    // optional int32 build_num = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDemoFileHeader, _impl_.build_num_), 13>(),
     {104, 13, 0, PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_.build_num_)}},
    // optional string game = 14;
    {::_pbi::TcParser::FastSS1,
     {114, 8, 0, PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_.game_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string demo_file_stamp = 1;
    {PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_.demo_file_stamp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 network_protocol = 2;
    {PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_.network_protocol_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string server_name = 3;
    {PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_.server_name_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string client_name = 4;
    {PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_.client_name_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string map_name = 5;
    {PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_.map_name_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string game_directory = 6;
    {PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_.game_directory_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 fullpackets_version = 7;
    {PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_.fullpackets_version_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool allow_clientside_entities = 8;
    {PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_.allow_clientside_entities_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool allow_clientside_particles = 9;
    {PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_.allow_clientside_particles_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string addons = 10;
    {PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_.addons_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string demo_version_name = 11;
    {PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_.demo_version_name_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string demo_version_guid = 12;
    {PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_.demo_version_guid_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 build_num = 13;
    {PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_.build_num_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string game = 14;
    {PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_.game_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\17\17\0\13\13\10\16\0\0\0\6\21\21\0\4\0"
    "CDemoFileHeader"
    "demo_file_stamp"
    "server_name"
    "client_name"
    "map_name"
    "game_directory"
    "addons"
    "demo_version_name"
    "demo_version_guid"
    "game"
  }},
};

::uint8_t* CDemoFileHeader::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CDemoFileHeader)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string demo_file_stamp = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_demo_file_stamp();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CDemoFileHeader.demo_file_stamp");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional int32 network_protocol = 2;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_network_protocol(), target);
  }

  // optional string server_name = 3;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_server_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CDemoFileHeader.server_name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string client_name = 4;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_client_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CDemoFileHeader.client_name");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional string map_name = 5;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_map_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CDemoFileHeader.map_name");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // optional string game_directory = 6;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_game_directory();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CDemoFileHeader.game_directory");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional int32 fullpackets_version = 7;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_fullpackets_version(), target);
  }

  // optional bool allow_clientside_entities = 8;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        8, this->_internal_allow_clientside_entities(), target);
  }

  // optional bool allow_clientside_particles = 9;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        9, this->_internal_allow_clientside_particles(), target);
  }

  // optional string addons = 10;
  if (cached_has_bits & 0x00000020u) {
    const std::string& _s = this->_internal_addons();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CDemoFileHeader.addons");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // optional string demo_version_name = 11;
  if (cached_has_bits & 0x00000040u) {
    const std::string& _s = this->_internal_demo_version_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CDemoFileHeader.demo_version_name");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  // optional string demo_version_guid = 12;
  if (cached_has_bits & 0x00000080u) {
    const std::string& _s = this->_internal_demo_version_guid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CDemoFileHeader.demo_version_guid");
    target = stream->WriteStringMaybeAliased(12, _s, target);
  }

  // optional int32 build_num = 13;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<13>(
            stream, this->_internal_build_num(), target);
  }

  // optional string game = 14;
  if (cached_has_bits & 0x00000100u) {
    const std::string& _s = this->_internal_game();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CDemoFileHeader.game");
    target = stream->WriteStringMaybeAliased(14, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDemoFileHeader)
  return target;
}

::size_t CDemoFileHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDemoFileHeader)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string demo_file_stamp = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_demo_file_stamp());
  }

  if (cached_has_bits & 0x000000feu) {
    // optional string server_name = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_server_name());
    }

    // optional string client_name = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_client_name());
    }

    // optional string map_name = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_map_name());
    }

    // optional string game_directory = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_game_directory());
    }

    // optional string addons = 10;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_addons());
    }

    // optional string demo_version_name = 11;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_demo_version_name());
    }

    // optional string demo_version_guid = 12;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_demo_version_guid());
    }

  }
  if (cached_has_bits & 0x00003f00u) {
    // optional string game = 14;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_game());
    }

    // optional int32 network_protocol = 2;
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_network_protocol());
    }

    // optional int32 fullpackets_version = 7;
    if (cached_has_bits & 0x00000400u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_fullpackets_version());
    }

    // optional bool allow_clientside_entities = 8;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2;
    }

    // optional bool allow_clientside_particles = 9;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2;
    }

    // optional int32 build_num = 13;
    if (cached_has_bits & 0x00002000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_build_num());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CDemoFileHeader::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CDemoFileHeader::MergeImpl
};
const ::google::protobuf::Message::ClassData*CDemoFileHeader::GetClassData() const { return &_class_data_; }


void CDemoFileHeader::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CDemoFileHeader*>(&to_msg);
  auto& from = static_cast<const CDemoFileHeader&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CDemoFileHeader)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_demo_file_stamp(from._internal_demo_file_stamp());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_server_name(from._internal_server_name());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_client_name(from._internal_client_name());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_map_name(from._internal_map_name());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_game_directory(from._internal_game_directory());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_addons(from._internal_addons());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_set_demo_version_name(from._internal_demo_version_name());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_set_demo_version_guid(from._internal_demo_version_guid());
    }
  }
  if (cached_has_bits & 0x00003f00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_set_game(from._internal_game());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.network_protocol_ = from._impl_.network_protocol_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.fullpackets_version_ = from._impl_.fullpackets_version_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.allow_clientside_entities_ = from._impl_.allow_clientside_entities_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.allow_clientside_particles_ = from._impl_.allow_clientside_particles_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.build_num_ = from._impl_.build_num_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CDemoFileHeader::CopyFrom(const CDemoFileHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDemoFileHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CDemoFileHeader::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void CDemoFileHeader::InternalSwap(CDemoFileHeader* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.demo_file_stamp_, lhs_arena,
                                       &other->_impl_.demo_file_stamp_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.server_name_, lhs_arena,
                                       &other->_impl_.server_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_name_, lhs_arena,
                                       &other->_impl_.client_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.map_name_, lhs_arena,
                                       &other->_impl_.map_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.game_directory_, lhs_arena,
                                       &other->_impl_.game_directory_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.addons_, lhs_arena,
                                       &other->_impl_.addons_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.demo_version_name_, lhs_arena,
                                       &other->_impl_.demo_version_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.demo_version_guid_, lhs_arena,
                                       &other->_impl_.demo_version_guid_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.game_, lhs_arena,
                                       &other->_impl_.game_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_.build_num_)
      + sizeof(CDemoFileHeader::_impl_.build_num_)
      - PROTOBUF_FIELD_OFFSET(CDemoFileHeader, _impl_.network_protocol_)>(
          reinterpret_cast<char*>(&_impl_.network_protocol_),
          reinterpret_cast<char*>(&other->_impl_.network_protocol_));
}

::google::protobuf::Metadata CDemoFileHeader::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[0]);
}
// ===================================================================

class CGameInfo_CDotaGameInfo_CPlayerInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CGameInfo_CDotaGameInfo_CPlayerInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo_CPlayerInfo, _impl_._has_bits_);
  static void set_has_hero_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_player_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_is_fake_client(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_game_team(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

CGameInfo_CDotaGameInfo_CPlayerInfo::CGameInfo_CDotaGameInfo_CPlayerInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CGameInfo.CDotaGameInfo.CPlayerInfo)
}
CGameInfo_CDotaGameInfo_CPlayerInfo::CGameInfo_CDotaGameInfo_CPlayerInfo(const CGameInfo_CDotaGameInfo_CPlayerInfo& from) : ::google::protobuf::Message() {
  CGameInfo_CDotaGameInfo_CPlayerInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.hero_name_){},
      decltype(_impl_.player_name_){},
      decltype(_impl_.steamid_){},
      decltype(_impl_.is_fake_client_){},
      decltype(_impl_.game_team_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.hero_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.hero_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.hero_name_.Set(from._internal_hero_name(), _this->GetArenaForAllocation());
  }
  _impl_.player_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.player_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.player_name_.Set(from._internal_player_name(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.steamid_, &from._impl_.steamid_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.game_team_) -
    reinterpret_cast<char*>(&_impl_.steamid_)) + sizeof(_impl_.game_team_));

  // @@protoc_insertion_point(copy_constructor:CGameInfo.CDotaGameInfo.CPlayerInfo)
}
inline void CGameInfo_CDotaGameInfo_CPlayerInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.hero_name_){},
      decltype(_impl_.player_name_){},
      decltype(_impl_.steamid_){::uint64_t{0u}},
      decltype(_impl_.is_fake_client_){false},
      decltype(_impl_.game_team_){0},
  };
  _impl_.hero_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.hero_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.player_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.player_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CGameInfo_CDotaGameInfo_CPlayerInfo::~CGameInfo_CDotaGameInfo_CPlayerInfo() {
  // @@protoc_insertion_point(destructor:CGameInfo.CDotaGameInfo.CPlayerInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CGameInfo_CDotaGameInfo_CPlayerInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.hero_name_.Destroy();
  _impl_.player_name_.Destroy();
}
void CGameInfo_CDotaGameInfo_CPlayerInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CGameInfo_CDotaGameInfo_CPlayerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CGameInfo.CDotaGameInfo.CPlayerInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.hero_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.player_name_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&_impl_.steamid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.game_team_) -
        reinterpret_cast<char*>(&_impl_.steamid_)) + sizeof(_impl_.game_team_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CGameInfo_CDotaGameInfo_CPlayerInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 64, 2> CGameInfo_CDotaGameInfo_CPlayerInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo_CPlayerInfo, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CGameInfo_CDotaGameInfo_CPlayerInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string hero_name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo_CPlayerInfo, _impl_.hero_name_)}},
    // optional string player_name = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo_CPlayerInfo, _impl_.player_name_)}},
    // optional bool is_fake_client = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CGameInfo_CDotaGameInfo_CPlayerInfo, _impl_.is_fake_client_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo_CPlayerInfo, _impl_.is_fake_client_)}},
    // optional uint64 steamid = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CGameInfo_CDotaGameInfo_CPlayerInfo, _impl_.steamid_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo_CPlayerInfo, _impl_.steamid_)}},
    // optional int32 game_team = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGameInfo_CDotaGameInfo_CPlayerInfo, _impl_.game_team_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo_CPlayerInfo, _impl_.game_team_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string hero_name = 1;
    {PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo_CPlayerInfo, _impl_.hero_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string player_name = 2;
    {PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo_CPlayerInfo, _impl_.player_name_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool is_fake_client = 3;
    {PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo_CPlayerInfo, _impl_.is_fake_client_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint64 steamid = 4;
    {PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo_CPlayerInfo, _impl_.steamid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional int32 game_team = 5;
    {PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo_CPlayerInfo, _impl_.game_team_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\43\11\13\0\0\0\0\0"
    "CGameInfo.CDotaGameInfo.CPlayerInfo"
    "hero_name"
    "player_name"
  }},
};

::uint8_t* CGameInfo_CDotaGameInfo_CPlayerInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGameInfo.CDotaGameInfo.CPlayerInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string hero_name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_hero_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CGameInfo.CDotaGameInfo.CPlayerInfo.hero_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string player_name = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_player_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CGameInfo.CDotaGameInfo.CPlayerInfo.player_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional bool is_fake_client = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_is_fake_client(), target);
  }

  // optional uint64 steamid = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_steamid(), target);
  }

  // optional int32 game_team = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_game_team(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGameInfo.CDotaGameInfo.CPlayerInfo)
  return target;
}

::size_t CGameInfo_CDotaGameInfo_CPlayerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGameInfo.CDotaGameInfo.CPlayerInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string hero_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_hero_name());
    }

    // optional string player_name = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_player_name());
    }

    // optional uint64 steamid = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_steamid());
    }

    // optional bool is_fake_client = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2;
    }

    // optional int32 game_team = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_game_team());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CGameInfo_CDotaGameInfo_CPlayerInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CGameInfo_CDotaGameInfo_CPlayerInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*CGameInfo_CDotaGameInfo_CPlayerInfo::GetClassData() const { return &_class_data_; }


void CGameInfo_CDotaGameInfo_CPlayerInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CGameInfo_CDotaGameInfo_CPlayerInfo*>(&to_msg);
  auto& from = static_cast<const CGameInfo_CDotaGameInfo_CPlayerInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CGameInfo.CDotaGameInfo.CPlayerInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_hero_name(from._internal_hero_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_player_name(from._internal_player_name());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.steamid_ = from._impl_.steamid_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.is_fake_client_ = from._impl_.is_fake_client_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.game_team_ = from._impl_.game_team_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CGameInfo_CDotaGameInfo_CPlayerInfo::CopyFrom(const CGameInfo_CDotaGameInfo_CPlayerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGameInfo.CDotaGameInfo.CPlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CGameInfo_CDotaGameInfo_CPlayerInfo::IsInitialized() const {
  return true;
}

void CGameInfo_CDotaGameInfo_CPlayerInfo::InternalSwap(CGameInfo_CDotaGameInfo_CPlayerInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hero_name_, lhs_arena,
                                       &other->_impl_.hero_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.player_name_, lhs_arena,
                                       &other->_impl_.player_name_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo_CPlayerInfo, _impl_.game_team_)
      + sizeof(CGameInfo_CDotaGameInfo_CPlayerInfo::_impl_.game_team_)
      - PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo_CPlayerInfo, _impl_.steamid_)>(
          reinterpret_cast<char*>(&_impl_.steamid_),
          reinterpret_cast<char*>(&other->_impl_.steamid_));
}

::google::protobuf::Metadata CGameInfo_CDotaGameInfo_CPlayerInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[1]);
}
// ===================================================================

class CGameInfo_CDotaGameInfo_CHeroSelectEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<CGameInfo_CDotaGameInfo_CHeroSelectEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo_CHeroSelectEvent, _impl_._has_bits_);
  static void set_has_is_pick(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_team(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_hero_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CGameInfo_CDotaGameInfo_CHeroSelectEvent::CGameInfo_CDotaGameInfo_CHeroSelectEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CGameInfo.CDotaGameInfo.CHeroSelectEvent)
}
CGameInfo_CDotaGameInfo_CHeroSelectEvent::CGameInfo_CDotaGameInfo_CHeroSelectEvent(const CGameInfo_CDotaGameInfo_CHeroSelectEvent& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CGameInfo.CDotaGameInfo.CHeroSelectEvent)
}
inline void CGameInfo_CDotaGameInfo_CHeroSelectEvent::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.is_pick_){false},
      decltype(_impl_.team_){0u},
      decltype(_impl_.hero_id_){0u},
  };
}
CGameInfo_CDotaGameInfo_CHeroSelectEvent::~CGameInfo_CDotaGameInfo_CHeroSelectEvent() {
  // @@protoc_insertion_point(destructor:CGameInfo.CDotaGameInfo.CHeroSelectEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CGameInfo_CDotaGameInfo_CHeroSelectEvent::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CGameInfo_CDotaGameInfo_CHeroSelectEvent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CGameInfo_CDotaGameInfo_CHeroSelectEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:CGameInfo.CDotaGameInfo.CHeroSelectEvent)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.is_pick_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.hero_id_) -
        reinterpret_cast<char*>(&_impl_.is_pick_)) + sizeof(_impl_.hero_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CGameInfo_CDotaGameInfo_CHeroSelectEvent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> CGameInfo_CDotaGameInfo_CHeroSelectEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo_CHeroSelectEvent, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CGameInfo_CDotaGameInfo_CHeroSelectEvent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool is_pick = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CGameInfo_CDotaGameInfo_CHeroSelectEvent, _impl_.is_pick_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo_CHeroSelectEvent, _impl_.is_pick_)}},
    // optional uint32 team = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGameInfo_CDotaGameInfo_CHeroSelectEvent, _impl_.team_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo_CHeroSelectEvent, _impl_.team_)}},
    // optional uint32 hero_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGameInfo_CDotaGameInfo_CHeroSelectEvent, _impl_.hero_id_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo_CHeroSelectEvent, _impl_.hero_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool is_pick = 1;
    {PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo_CHeroSelectEvent, _impl_.is_pick_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint32 team = 2;
    {PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo_CHeroSelectEvent, _impl_.team_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 hero_id = 3;
    {PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo_CHeroSelectEvent, _impl_.hero_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CGameInfo_CDotaGameInfo_CHeroSelectEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGameInfo.CDotaGameInfo.CHeroSelectEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool is_pick = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_is_pick(), target);
  }

  // optional uint32 team = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_team(), target);
  }

  // optional uint32 hero_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_hero_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGameInfo.CDotaGameInfo.CHeroSelectEvent)
  return target;
}

::size_t CGameInfo_CDotaGameInfo_CHeroSelectEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGameInfo.CDotaGameInfo.CHeroSelectEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bool is_pick = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2;
    }

    // optional uint32 team = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_team());
    }

    // optional uint32 hero_id = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_hero_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CGameInfo_CDotaGameInfo_CHeroSelectEvent::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CGameInfo_CDotaGameInfo_CHeroSelectEvent::MergeImpl
};
const ::google::protobuf::Message::ClassData*CGameInfo_CDotaGameInfo_CHeroSelectEvent::GetClassData() const { return &_class_data_; }


void CGameInfo_CDotaGameInfo_CHeroSelectEvent::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CGameInfo_CDotaGameInfo_CHeroSelectEvent*>(&to_msg);
  auto& from = static_cast<const CGameInfo_CDotaGameInfo_CHeroSelectEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CGameInfo.CDotaGameInfo.CHeroSelectEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.is_pick_ = from._impl_.is_pick_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.team_ = from._impl_.team_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.hero_id_ = from._impl_.hero_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CGameInfo_CDotaGameInfo_CHeroSelectEvent::CopyFrom(const CGameInfo_CDotaGameInfo_CHeroSelectEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGameInfo.CDotaGameInfo.CHeroSelectEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CGameInfo_CDotaGameInfo_CHeroSelectEvent::IsInitialized() const {
  return true;
}

void CGameInfo_CDotaGameInfo_CHeroSelectEvent::InternalSwap(CGameInfo_CDotaGameInfo_CHeroSelectEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo_CHeroSelectEvent, _impl_.hero_id_)
      + sizeof(CGameInfo_CDotaGameInfo_CHeroSelectEvent::_impl_.hero_id_)
      - PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo_CHeroSelectEvent, _impl_.is_pick_)>(
          reinterpret_cast<char*>(&_impl_.is_pick_),
          reinterpret_cast<char*>(&other->_impl_.is_pick_));
}

::google::protobuf::Metadata CGameInfo_CDotaGameInfo_CHeroSelectEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[2]);
}
// ===================================================================

class CGameInfo_CDotaGameInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CGameInfo_CDotaGameInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo, _impl_._has_bits_);
  static void set_has_match_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_game_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_game_winner(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_leagueid(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_radiant_team_id(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_dire_team_id(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_radiant_team_tag(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_dire_team_tag(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_end_time(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
};

CGameInfo_CDotaGameInfo::CGameInfo_CDotaGameInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CGameInfo.CDotaGameInfo)
}
CGameInfo_CDotaGameInfo::CGameInfo_CDotaGameInfo(const CGameInfo_CDotaGameInfo& from) : ::google::protobuf::Message() {
  CGameInfo_CDotaGameInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.player_info_){from._impl_.player_info_},
      decltype(_impl_.picks_bans_){from._impl_.picks_bans_},
      decltype(_impl_.radiant_team_tag_){},
      decltype(_impl_.dire_team_tag_){},
      decltype(_impl_.match_id_){},
      decltype(_impl_.game_mode_){},
      decltype(_impl_.game_winner_){},
      decltype(_impl_.leagueid_){},
      decltype(_impl_.radiant_team_id_){},
      decltype(_impl_.dire_team_id_){},
      decltype(_impl_.end_time_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.radiant_team_tag_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.radiant_team_tag_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.radiant_team_tag_.Set(from._internal_radiant_team_tag(), _this->GetArenaForAllocation());
  }
  _impl_.dire_team_tag_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dire_team_tag_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.dire_team_tag_.Set(from._internal_dire_team_tag(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.match_id_, &from._impl_.match_id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.end_time_) -
    reinterpret_cast<char*>(&_impl_.match_id_)) + sizeof(_impl_.end_time_));

  // @@protoc_insertion_point(copy_constructor:CGameInfo.CDotaGameInfo)
}
inline void CGameInfo_CDotaGameInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.player_info_){arena},
      decltype(_impl_.picks_bans_){arena},
      decltype(_impl_.radiant_team_tag_){},
      decltype(_impl_.dire_team_tag_){},
      decltype(_impl_.match_id_){::uint64_t{0u}},
      decltype(_impl_.game_mode_){0},
      decltype(_impl_.game_winner_){0},
      decltype(_impl_.leagueid_){0u},
      decltype(_impl_.radiant_team_id_){0u},
      decltype(_impl_.dire_team_id_){0u},
      decltype(_impl_.end_time_){0u},
  };
  _impl_.radiant_team_tag_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.radiant_team_tag_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.dire_team_tag_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dire_team_tag_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CGameInfo_CDotaGameInfo::~CGameInfo_CDotaGameInfo() {
  // @@protoc_insertion_point(destructor:CGameInfo.CDotaGameInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CGameInfo_CDotaGameInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.player_info_.~RepeatedPtrField();
  _impl_.picks_bans_.~RepeatedPtrField();
  _impl_.radiant_team_tag_.Destroy();
  _impl_.dire_team_tag_.Destroy();
}
void CGameInfo_CDotaGameInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CGameInfo_CDotaGameInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CGameInfo.CDotaGameInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_player_info()->Clear();
  _internal_mutable_picks_bans()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.radiant_team_tag_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.dire_team_tag_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000fcu) {
    ::memset(&_impl_.match_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.dire_team_id_) -
        reinterpret_cast<char*>(&_impl_.match_id_)) + sizeof(_impl_.dire_team_id_));
  }
  _impl_.end_time_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CGameInfo_CDotaGameInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 2, 69, 2> CGameInfo_CDotaGameInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CGameInfo_CDotaGameInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint64 match_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CGameInfo_CDotaGameInfo, _impl_.match_id_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo, _impl_.match_id_)}},
    // optional int32 game_mode = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGameInfo_CDotaGameInfo, _impl_.game_mode_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo, _impl_.game_mode_)}},
    // optional int32 game_winner = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGameInfo_CDotaGameInfo, _impl_.game_winner_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo, _impl_.game_winner_)}},
    // repeated .CGameInfo.CDotaGameInfo.CPlayerInfo player_info = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo, _impl_.player_info_)}},
    // optional uint32 leagueid = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGameInfo_CDotaGameInfo, _impl_.leagueid_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo, _impl_.leagueid_)}},
    // repeated .CGameInfo.CDotaGameInfo.CHeroSelectEvent picks_bans = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 1, PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo, _impl_.picks_bans_)}},
    // optional uint32 radiant_team_id = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGameInfo_CDotaGameInfo, _impl_.radiant_team_id_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo, _impl_.radiant_team_id_)}},
    // optional uint32 dire_team_id = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGameInfo_CDotaGameInfo, _impl_.dire_team_id_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo, _impl_.dire_team_id_)}},
    // optional string radiant_team_tag = 9;
    {::_pbi::TcParser::FastSS1,
     {74, 0, 0, PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo, _impl_.radiant_team_tag_)}},
    // optional string dire_team_tag = 10;
    {::_pbi::TcParser::FastSS1,
     {82, 1, 0, PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo, _impl_.dire_team_tag_)}},
    // optional uint32 end_time = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGameInfo_CDotaGameInfo, _impl_.end_time_), 8>(),
     {88, 8, 0, PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo, _impl_.end_time_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 match_id = 1;
    {PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo, _impl_.match_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional int32 game_mode = 2;
    {PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo, _impl_.game_mode_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 game_winner = 3;
    {PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo, _impl_.game_winner_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated .CGameInfo.CDotaGameInfo.CPlayerInfo player_info = 4;
    {PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo, _impl_.player_info_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 leagueid = 5;
    {PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo, _impl_.leagueid_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .CGameInfo.CDotaGameInfo.CHeroSelectEvent picks_bans = 6;
    {PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo, _impl_.picks_bans_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 radiant_team_id = 7;
    {PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo, _impl_.radiant_team_id_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 dire_team_id = 8;
    {PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo, _impl_.dire_team_id_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string radiant_team_tag = 9;
    {PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo, _impl_.radiant_team_tag_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string dire_team_tag = 10;
    {PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo, _impl_.dire_team_tag_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 end_time = 11;
    {PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo, _impl_.end_time_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CGameInfo_CDotaGameInfo_CPlayerInfo>()},
    {::_pbi::TcParser::GetTable<::CGameInfo_CDotaGameInfo_CHeroSelectEvent>()},
  }}, {{
    "\27\0\0\0\0\0\0\0\0\20\15\0\0\0\0\0"
    "CGameInfo.CDotaGameInfo"
    "radiant_team_tag"
    "dire_team_tag"
  }},
};

::uint8_t* CGameInfo_CDotaGameInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGameInfo.CDotaGameInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 match_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_match_id(), target);
  }

  // optional int32 game_mode = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_game_mode(), target);
  }

  // optional int32 game_winner = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_game_winner(), target);
  }

  // repeated .CGameInfo.CDotaGameInfo.CPlayerInfo player_info = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_player_info_size()); i < n; i++) {
    const auto& repfield = this->_internal_player_info().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional uint32 leagueid = 5;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_leagueid(), target);
  }

  // repeated .CGameInfo.CDotaGameInfo.CHeroSelectEvent picks_bans = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_picks_bans_size()); i < n; i++) {
    const auto& repfield = this->_internal_picks_bans().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional uint32 radiant_team_id = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_radiant_team_id(), target);
  }

  // optional uint32 dire_team_id = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this->_internal_dire_team_id(), target);
  }

  // optional string radiant_team_tag = 9;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_radiant_team_tag();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CGameInfo.CDotaGameInfo.radiant_team_tag");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // optional string dire_team_tag = 10;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_dire_team_tag();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CGameInfo.CDotaGameInfo.dire_team_tag");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // optional uint32 end_time = 11;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        11, this->_internal_end_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGameInfo.CDotaGameInfo)
  return target;
}

::size_t CGameInfo_CDotaGameInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGameInfo.CDotaGameInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CGameInfo.CDotaGameInfo.CPlayerInfo player_info = 4;
  total_size += 1UL * this->_internal_player_info_size();
  for (const auto& msg : this->_internal_player_info()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .CGameInfo.CDotaGameInfo.CHeroSelectEvent picks_bans = 6;
  total_size += 1UL * this->_internal_picks_bans_size();
  for (const auto& msg : this->_internal_picks_bans()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string radiant_team_tag = 9;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_radiant_team_tag());
    }

    // optional string dire_team_tag = 10;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_dire_team_tag());
    }

    // optional uint64 match_id = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_match_id());
    }

    // optional int32 game_mode = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_game_mode());
    }

    // optional int32 game_winner = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_game_winner());
    }

    // optional uint32 leagueid = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_leagueid());
    }

    // optional uint32 radiant_team_id = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_radiant_team_id());
    }

    // optional uint32 dire_team_id = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_dire_team_id());
    }

  }
  // optional uint32 end_time = 11;
  if (cached_has_bits & 0x00000100u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_end_time());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CGameInfo_CDotaGameInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CGameInfo_CDotaGameInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*CGameInfo_CDotaGameInfo::GetClassData() const { return &_class_data_; }


void CGameInfo_CDotaGameInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CGameInfo_CDotaGameInfo*>(&to_msg);
  auto& from = static_cast<const CGameInfo_CDotaGameInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CGameInfo.CDotaGameInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_player_info()->MergeFrom(from._internal_player_info());
  _this->_internal_mutable_picks_bans()->MergeFrom(from._internal_picks_bans());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_radiant_team_tag(from._internal_radiant_team_tag());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_dire_team_tag(from._internal_dire_team_tag());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.match_id_ = from._impl_.match_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.game_mode_ = from._impl_.game_mode_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.game_winner_ = from._impl_.game_winner_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.leagueid_ = from._impl_.leagueid_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.radiant_team_id_ = from._impl_.radiant_team_id_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.dire_team_id_ = from._impl_.dire_team_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_internal_set_end_time(from._internal_end_time());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CGameInfo_CDotaGameInfo::CopyFrom(const CGameInfo_CDotaGameInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGameInfo.CDotaGameInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CGameInfo_CDotaGameInfo::IsInitialized() const {
  return true;
}

void CGameInfo_CDotaGameInfo::InternalSwap(CGameInfo_CDotaGameInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.player_info_.InternalSwap(&other->_impl_.player_info_);
  _impl_.picks_bans_.InternalSwap(&other->_impl_.picks_bans_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.radiant_team_tag_, lhs_arena,
                                       &other->_impl_.radiant_team_tag_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dire_team_tag_, lhs_arena,
                                       &other->_impl_.dire_team_tag_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo, _impl_.end_time_)
      + sizeof(CGameInfo_CDotaGameInfo::_impl_.end_time_)
      - PROTOBUF_FIELD_OFFSET(CGameInfo_CDotaGameInfo, _impl_.match_id_)>(
          reinterpret_cast<char*>(&_impl_.match_id_),
          reinterpret_cast<char*>(&other->_impl_.match_id_));
}

::google::protobuf::Metadata CGameInfo_CDotaGameInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[3]);
}
// ===================================================================

class CGameInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CGameInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CGameInfo, _impl_._has_bits_);
  static const ::CGameInfo_CDotaGameInfo& dota(const CGameInfo* msg);
  static void set_has_dota(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CGameInfo_CDotaGameInfo& CGameInfo::_Internal::dota(const CGameInfo* msg) {
  return *msg->_impl_.dota_;
}
CGameInfo::CGameInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CGameInfo)
}
CGameInfo::CGameInfo(const CGameInfo& from) : ::google::protobuf::Message() {
  CGameInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.dota_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.dota_ = new ::CGameInfo_CDotaGameInfo(*from._impl_.dota_);
  }

  // @@protoc_insertion_point(copy_constructor:CGameInfo)
}
inline void CGameInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.dota_){nullptr},
  };
}
CGameInfo::~CGameInfo() {
  // @@protoc_insertion_point(destructor:CGameInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CGameInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.dota_;
}
void CGameInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CGameInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CGameInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.dota_ != nullptr);
    _impl_.dota_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CGameInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CGameInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CGameInfo, _impl_._has_bits_),
    0, // no _extensions_
    4, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967287,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CGameInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .CGameInfo.CDotaGameInfo dota = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(CGameInfo, _impl_.dota_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CGameInfo.CDotaGameInfo dota = 4;
    {PROTOBUF_FIELD_OFFSET(CGameInfo, _impl_.dota_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CGameInfo_CDotaGameInfo>()},
  }}, {{
  }},
};

::uint8_t* CGameInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGameInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CGameInfo.CDotaGameInfo dota = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::dota(this),
        _Internal::dota(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGameInfo)
  return target;
}

::size_t CGameInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGameInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CGameInfo.CDotaGameInfo dota = 4;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.dota_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CGameInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CGameInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*CGameInfo::GetClassData() const { return &_class_data_; }


void CGameInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CGameInfo*>(&to_msg);
  auto& from = static_cast<const CGameInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CGameInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_dota()->::CGameInfo_CDotaGameInfo::MergeFrom(
        from._internal_dota());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CGameInfo::CopyFrom(const CGameInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGameInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CGameInfo::IsInitialized() const {
  return true;
}

void CGameInfo::InternalSwap(CGameInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.dota_, other->_impl_.dota_);
}

::google::protobuf::Metadata CGameInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[4]);
}
// ===================================================================

class CDemoFileInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CDemoFileInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CDemoFileInfo, _impl_._has_bits_);
  static void set_has_playback_time(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_playback_ticks(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_playback_frames(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::CGameInfo& game_info(const CDemoFileInfo* msg);
  static void set_has_game_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CGameInfo& CDemoFileInfo::_Internal::game_info(const CDemoFileInfo* msg) {
  return *msg->_impl_.game_info_;
}
CDemoFileInfo::CDemoFileInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CDemoFileInfo)
}
CDemoFileInfo::CDemoFileInfo(const CDemoFileInfo& from) : ::google::protobuf::Message() {
  CDemoFileInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.game_info_){nullptr},
      decltype(_impl_.playback_time_){},
      decltype(_impl_.playback_ticks_){},
      decltype(_impl_.playback_frames_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.game_info_ = new ::CGameInfo(*from._impl_.game_info_);
  }
  ::memcpy(&_impl_.playback_time_, &from._impl_.playback_time_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.playback_frames_) -
    reinterpret_cast<char*>(&_impl_.playback_time_)) + sizeof(_impl_.playback_frames_));

  // @@protoc_insertion_point(copy_constructor:CDemoFileInfo)
}
inline void CDemoFileInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.game_info_){nullptr},
      decltype(_impl_.playback_time_){0},
      decltype(_impl_.playback_ticks_){0},
      decltype(_impl_.playback_frames_){0},
  };
}
CDemoFileInfo::~CDemoFileInfo() {
  // @@protoc_insertion_point(destructor:CDemoFileInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CDemoFileInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.game_info_;
}
void CDemoFileInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CDemoFileInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CDemoFileInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.game_info_ != nullptr);
    _impl_.game_info_->Clear();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.playback_time_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.playback_frames_) -
        reinterpret_cast<char*>(&_impl_.playback_time_)) + sizeof(_impl_.playback_frames_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CDemoFileInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> CDemoFileInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CDemoFileInfo, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CDemoFileInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .CGameInfo game_info = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(CDemoFileInfo, _impl_.game_info_)}},
    // optional float playback_time = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 1, 0, PROTOBUF_FIELD_OFFSET(CDemoFileInfo, _impl_.playback_time_)}},
    // optional int32 playback_ticks = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDemoFileInfo, _impl_.playback_ticks_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(CDemoFileInfo, _impl_.playback_ticks_)}},
    // optional int32 playback_frames = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDemoFileInfo, _impl_.playback_frames_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(CDemoFileInfo, _impl_.playback_frames_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional float playback_time = 1;
    {PROTOBUF_FIELD_OFFSET(CDemoFileInfo, _impl_.playback_time_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional int32 playback_ticks = 2;
    {PROTOBUF_FIELD_OFFSET(CDemoFileInfo, _impl_.playback_ticks_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 playback_frames = 3;
    {PROTOBUF_FIELD_OFFSET(CDemoFileInfo, _impl_.playback_frames_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .CGameInfo game_info = 4;
    {PROTOBUF_FIELD_OFFSET(CDemoFileInfo, _impl_.game_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CGameInfo>()},
  }}, {{
  }},
};

::uint8_t* CDemoFileInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CDemoFileInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional float playback_time = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_playback_time(), target);
  }

  // optional int32 playback_ticks = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_playback_ticks(), target);
  }

  // optional int32 playback_frames = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_playback_frames(), target);
  }

  // optional .CGameInfo game_info = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::game_info(this),
        _Internal::game_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDemoFileInfo)
  return target;
}

::size_t CDemoFileInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDemoFileInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .CGameInfo game_info = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.game_info_);
    }

    // optional float playback_time = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }

    // optional int32 playback_ticks = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_playback_ticks());
    }

    // optional int32 playback_frames = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_playback_frames());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CDemoFileInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CDemoFileInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*CDemoFileInfo::GetClassData() const { return &_class_data_; }


void CDemoFileInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CDemoFileInfo*>(&to_msg);
  auto& from = static_cast<const CDemoFileInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CDemoFileInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_game_info()->::CGameInfo::MergeFrom(
          from._internal_game_info());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.playback_time_ = from._impl_.playback_time_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.playback_ticks_ = from._impl_.playback_ticks_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.playback_frames_ = from._impl_.playback_frames_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CDemoFileInfo::CopyFrom(const CDemoFileInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDemoFileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CDemoFileInfo::IsInitialized() const {
  return true;
}

void CDemoFileInfo::InternalSwap(CDemoFileInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CDemoFileInfo, _impl_.playback_frames_)
      + sizeof(CDemoFileInfo::_impl_.playback_frames_)
      - PROTOBUF_FIELD_OFFSET(CDemoFileInfo, _impl_.game_info_)>(
          reinterpret_cast<char*>(&_impl_.game_info_),
          reinterpret_cast<char*>(&other->_impl_.game_info_));
}

::google::protobuf::Metadata CDemoFileInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[5]);
}
// ===================================================================

class CDemoPacket::_Internal {
 public:
  using HasBits = decltype(std::declval<CDemoPacket>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CDemoPacket, _impl_._has_bits_);
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CDemoPacket::CDemoPacket(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CDemoPacket)
}
CDemoPacket::CDemoPacket(const CDemoPacket& from) : ::google::protobuf::Message() {
  CDemoPacket* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.data_.Set(from._internal_data(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:CDemoPacket)
}
inline void CDemoPacket::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){},
  };
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CDemoPacket::~CDemoPacket() {
  // @@protoc_insertion_point(destructor:CDemoPacket)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CDemoPacket::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.Destroy();
}
void CDemoPacket::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CDemoPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:CDemoPacket)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.data_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CDemoPacket::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CDemoPacket::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CDemoPacket, _impl_._has_bits_),
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967291,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CDemoPacket_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bytes data = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CDemoPacket, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes data = 3;
    {PROTOBUF_FIELD_OFFSET(CDemoPacket, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CDemoPacket::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CDemoPacket)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes data = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDemoPacket)
  return target;
}

::size_t CDemoPacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDemoPacket)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes data = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CDemoPacket::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CDemoPacket::MergeImpl
};
const ::google::protobuf::Message::ClassData*CDemoPacket::GetClassData() const { return &_class_data_; }


void CDemoPacket::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CDemoPacket*>(&to_msg);
  auto& from = static_cast<const CDemoPacket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CDemoPacket)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CDemoPacket::CopyFrom(const CDemoPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDemoPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CDemoPacket::IsInitialized() const {
  return true;
}

void CDemoPacket::InternalSwap(CDemoPacket* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, lhs_arena,
                                       &other->_impl_.data_, rhs_arena);
}

::google::protobuf::Metadata CDemoPacket::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[6]);
}
// ===================================================================

class CDemoFullPacket::_Internal {
 public:
  using HasBits = decltype(std::declval<CDemoFullPacket>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CDemoFullPacket, _impl_._has_bits_);
  static const ::CDemoStringTables& string_table(const CDemoFullPacket* msg);
  static void set_has_string_table(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::CDemoPacket& packet(const CDemoFullPacket* msg);
  static void set_has_packet(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::CDemoStringTables& CDemoFullPacket::_Internal::string_table(const CDemoFullPacket* msg) {
  return *msg->_impl_.string_table_;
}
const ::CDemoPacket& CDemoFullPacket::_Internal::packet(const CDemoFullPacket* msg) {
  return *msg->_impl_.packet_;
}
CDemoFullPacket::CDemoFullPacket(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CDemoFullPacket)
}
CDemoFullPacket::CDemoFullPacket(const CDemoFullPacket& from) : ::google::protobuf::Message() {
  CDemoFullPacket* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.string_table_){nullptr},
      decltype(_impl_.packet_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.string_table_ = new ::CDemoStringTables(*from._impl_.string_table_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.packet_ = new ::CDemoPacket(*from._impl_.packet_);
  }

  // @@protoc_insertion_point(copy_constructor:CDemoFullPacket)
}
inline void CDemoFullPacket::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.string_table_){nullptr},
      decltype(_impl_.packet_){nullptr},
  };
}
CDemoFullPacket::~CDemoFullPacket() {
  // @@protoc_insertion_point(destructor:CDemoFullPacket)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CDemoFullPacket::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.string_table_;
  if (this != internal_default_instance()) delete _impl_.packet_;
}
void CDemoFullPacket::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CDemoFullPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:CDemoFullPacket)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.string_table_ != nullptr);
      _impl_.string_table_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.packet_ != nullptr);
      _impl_.packet_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CDemoFullPacket::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> CDemoFullPacket::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CDemoFullPacket, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CDemoFullPacket_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .CDemoPacket packet = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CDemoFullPacket, _impl_.packet_)}},
    // optional .CDemoStringTables string_table = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CDemoFullPacket, _impl_.string_table_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CDemoStringTables string_table = 1;
    {PROTOBUF_FIELD_OFFSET(CDemoFullPacket, _impl_.string_table_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CDemoPacket packet = 2;
    {PROTOBUF_FIELD_OFFSET(CDemoFullPacket, _impl_.packet_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CDemoStringTables>()},
    {::_pbi::TcParser::GetTable<::CDemoPacket>()},
  }}, {{
  }},
};

::uint8_t* CDemoFullPacket::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CDemoFullPacket)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CDemoStringTables string_table = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::string_table(this),
        _Internal::string_table(this).GetCachedSize(), target, stream);
  }

  // optional .CDemoPacket packet = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::packet(this),
        _Internal::packet(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDemoFullPacket)
  return target;
}

::size_t CDemoFullPacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDemoFullPacket)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CDemoStringTables string_table = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.string_table_);
    }

    // optional .CDemoPacket packet = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.packet_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CDemoFullPacket::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CDemoFullPacket::MergeImpl
};
const ::google::protobuf::Message::ClassData*CDemoFullPacket::GetClassData() const { return &_class_data_; }


void CDemoFullPacket::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CDemoFullPacket*>(&to_msg);
  auto& from = static_cast<const CDemoFullPacket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CDemoFullPacket)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_string_table()->::CDemoStringTables::MergeFrom(
          from._internal_string_table());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_packet()->::CDemoPacket::MergeFrom(
          from._internal_packet());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CDemoFullPacket::CopyFrom(const CDemoFullPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDemoFullPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CDemoFullPacket::IsInitialized() const {
  return true;
}

void CDemoFullPacket::InternalSwap(CDemoFullPacket* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CDemoFullPacket, _impl_.packet_)
      + sizeof(CDemoFullPacket::_impl_.packet_)
      - PROTOBUF_FIELD_OFFSET(CDemoFullPacket, _impl_.string_table_)>(
          reinterpret_cast<char*>(&_impl_.string_table_),
          reinterpret_cast<char*>(&other->_impl_.string_table_));
}

::google::protobuf::Metadata CDemoFullPacket::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[7]);
}
// ===================================================================

class CDemoSaveGame::_Internal {
 public:
  using HasBits = decltype(std::declval<CDemoSaveGame>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CDemoSaveGame, _impl_._has_bits_);
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_steam_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_signature(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CDemoSaveGame::CDemoSaveGame(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CDemoSaveGame)
}
CDemoSaveGame::CDemoSaveGame(const CDemoSaveGame& from) : ::google::protobuf::Message() {
  CDemoSaveGame* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){},
      decltype(_impl_.steam_id_){},
      decltype(_impl_.signature_){},
      decltype(_impl_.version_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.data_.Set(from._internal_data(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.steam_id_, &from._impl_.steam_id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.version_) -
    reinterpret_cast<char*>(&_impl_.steam_id_)) + sizeof(_impl_.version_));

  // @@protoc_insertion_point(copy_constructor:CDemoSaveGame)
}
inline void CDemoSaveGame::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){},
      decltype(_impl_.steam_id_){::uint64_t{0u}},
      decltype(_impl_.signature_){::uint64_t{0u}},
      decltype(_impl_.version_){0},
  };
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CDemoSaveGame::~CDemoSaveGame() {
  // @@protoc_insertion_point(destructor:CDemoSaveGame)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CDemoSaveGame::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.Destroy();
}
void CDemoSaveGame::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CDemoSaveGame::Clear() {
// @@protoc_insertion_point(message_clear_start:CDemoSaveGame)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.data_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.steam_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.version_) -
        reinterpret_cast<char*>(&_impl_.steam_id_)) + sizeof(_impl_.version_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CDemoSaveGame::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> CDemoSaveGame::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CDemoSaveGame, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CDemoSaveGame_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 version = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDemoSaveGame, _impl_.version_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CDemoSaveGame, _impl_.version_)}},
    // optional bytes data = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CDemoSaveGame, _impl_.data_)}},
    // optional fixed64 steam_id = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(CDemoSaveGame, _impl_.steam_id_)}},
    // optional fixed64 signature = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(CDemoSaveGame, _impl_.signature_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes data = 1;
    {PROTOBUF_FIELD_OFFSET(CDemoSaveGame, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional fixed64 steam_id = 2;
    {PROTOBUF_FIELD_OFFSET(CDemoSaveGame, _impl_.steam_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional fixed64 signature = 3;
    {PROTOBUF_FIELD_OFFSET(CDemoSaveGame, _impl_.signature_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional int32 version = 4;
    {PROTOBUF_FIELD_OFFSET(CDemoSaveGame, _impl_.version_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CDemoSaveGame::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CDemoSaveGame)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes data = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // optional fixed64 steam_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        2, this->_internal_steam_id(), target);
  }

  // optional fixed64 signature = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        3, this->_internal_signature(), target);
  }

  // optional int32 version = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDemoSaveGame)
  return target;
}

::size_t CDemoSaveGame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDemoSaveGame)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional bytes data = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_data());
    }

    // optional fixed64 steam_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }

    // optional fixed64 signature = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 9;
    }

    // optional int32 version = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_version());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CDemoSaveGame::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CDemoSaveGame::MergeImpl
};
const ::google::protobuf::Message::ClassData*CDemoSaveGame::GetClassData() const { return &_class_data_; }


void CDemoSaveGame::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CDemoSaveGame*>(&to_msg);
  auto& from = static_cast<const CDemoSaveGame&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CDemoSaveGame)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_data(from._internal_data());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.steam_id_ = from._impl_.steam_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.signature_ = from._impl_.signature_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.version_ = from._impl_.version_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CDemoSaveGame::CopyFrom(const CDemoSaveGame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDemoSaveGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CDemoSaveGame::IsInitialized() const {
  return true;
}

void CDemoSaveGame::InternalSwap(CDemoSaveGame* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, lhs_arena,
                                       &other->_impl_.data_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CDemoSaveGame, _impl_.version_)
      + sizeof(CDemoSaveGame::_impl_.version_)
      - PROTOBUF_FIELD_OFFSET(CDemoSaveGame, _impl_.steam_id_)>(
          reinterpret_cast<char*>(&_impl_.steam_id_),
          reinterpret_cast<char*>(&other->_impl_.steam_id_));
}

::google::protobuf::Metadata CDemoSaveGame::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[8]);
}
// ===================================================================

class CDemoSyncTick::_Internal {
 public:
};

CDemoSyncTick::CDemoSyncTick(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:CDemoSyncTick)
}
CDemoSyncTick::CDemoSyncTick(const CDemoSyncTick& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  CDemoSyncTick* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CDemoSyncTick)
}




const ::google::protobuf::Message::ClassData CDemoSyncTick::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*CDemoSyncTick::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata CDemoSyncTick::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[9]);
}
// ===================================================================

class CDemoConsoleCmd::_Internal {
 public:
  using HasBits = decltype(std::declval<CDemoConsoleCmd>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CDemoConsoleCmd, _impl_._has_bits_);
  static void set_has_cmdstring(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CDemoConsoleCmd::CDemoConsoleCmd(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CDemoConsoleCmd)
}
CDemoConsoleCmd::CDemoConsoleCmd(const CDemoConsoleCmd& from) : ::google::protobuf::Message() {
  CDemoConsoleCmd* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.cmdstring_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.cmdstring_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.cmdstring_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.cmdstring_.Set(from._internal_cmdstring(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:CDemoConsoleCmd)
}
inline void CDemoConsoleCmd::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.cmdstring_){},
  };
  _impl_.cmdstring_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.cmdstring_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CDemoConsoleCmd::~CDemoConsoleCmd() {
  // @@protoc_insertion_point(destructor:CDemoConsoleCmd)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CDemoConsoleCmd::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.cmdstring_.Destroy();
}
void CDemoConsoleCmd::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CDemoConsoleCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:CDemoConsoleCmd)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.cmdstring_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CDemoConsoleCmd::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 33, 2> CDemoConsoleCmd::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CDemoConsoleCmd, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CDemoConsoleCmd_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string cmdstring = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CDemoConsoleCmd, _impl_.cmdstring_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string cmdstring = 1;
    {PROTOBUF_FIELD_OFFSET(CDemoConsoleCmd, _impl_.cmdstring_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\17\11\0\0\0\0\0\0"
    "CDemoConsoleCmd"
    "cmdstring"
  }},
};

::uint8_t* CDemoConsoleCmd::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CDemoConsoleCmd)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string cmdstring = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_cmdstring();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CDemoConsoleCmd.cmdstring");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDemoConsoleCmd)
  return target;
}

::size_t CDemoConsoleCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDemoConsoleCmd)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string cmdstring = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_cmdstring());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CDemoConsoleCmd::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CDemoConsoleCmd::MergeImpl
};
const ::google::protobuf::Message::ClassData*CDemoConsoleCmd::GetClassData() const { return &_class_data_; }


void CDemoConsoleCmd::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CDemoConsoleCmd*>(&to_msg);
  auto& from = static_cast<const CDemoConsoleCmd&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CDemoConsoleCmd)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_cmdstring(from._internal_cmdstring());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CDemoConsoleCmd::CopyFrom(const CDemoConsoleCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDemoConsoleCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CDemoConsoleCmd::IsInitialized() const {
  return true;
}

void CDemoConsoleCmd::InternalSwap(CDemoConsoleCmd* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cmdstring_, lhs_arena,
                                       &other->_impl_.cmdstring_, rhs_arena);
}

::google::protobuf::Metadata CDemoConsoleCmd::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[10]);
}
// ===================================================================

class CDemoSendTables::_Internal {
 public:
  using HasBits = decltype(std::declval<CDemoSendTables>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CDemoSendTables, _impl_._has_bits_);
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CDemoSendTables::CDemoSendTables(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CDemoSendTables)
}
CDemoSendTables::CDemoSendTables(const CDemoSendTables& from) : ::google::protobuf::Message() {
  CDemoSendTables* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.data_.Set(from._internal_data(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:CDemoSendTables)
}
inline void CDemoSendTables::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){},
  };
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CDemoSendTables::~CDemoSendTables() {
  // @@protoc_insertion_point(destructor:CDemoSendTables)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CDemoSendTables::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.Destroy();
}
void CDemoSendTables::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CDemoSendTables::Clear() {
// @@protoc_insertion_point(message_clear_start:CDemoSendTables)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.data_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CDemoSendTables::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CDemoSendTables::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CDemoSendTables, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CDemoSendTables_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bytes data = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CDemoSendTables, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes data = 1;
    {PROTOBUF_FIELD_OFFSET(CDemoSendTables, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CDemoSendTables::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CDemoSendTables)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes data = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDemoSendTables)
  return target;
}

::size_t CDemoSendTables::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDemoSendTables)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes data = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CDemoSendTables::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CDemoSendTables::MergeImpl
};
const ::google::protobuf::Message::ClassData*CDemoSendTables::GetClassData() const { return &_class_data_; }


void CDemoSendTables::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CDemoSendTables*>(&to_msg);
  auto& from = static_cast<const CDemoSendTables&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CDemoSendTables)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CDemoSendTables::CopyFrom(const CDemoSendTables& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDemoSendTables)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CDemoSendTables::IsInitialized() const {
  return true;
}

void CDemoSendTables::InternalSwap(CDemoSendTables* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, lhs_arena,
                                       &other->_impl_.data_, rhs_arena);
}

::google::protobuf::Metadata CDemoSendTables::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[11]);
}
// ===================================================================

class CDemoClassInfo_class_t::_Internal {
 public:
  using HasBits = decltype(std::declval<CDemoClassInfo_class_t>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CDemoClassInfo_class_t, _impl_._has_bits_);
  static void set_has_class_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_network_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_table_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CDemoClassInfo_class_t::CDemoClassInfo_class_t(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CDemoClassInfo.class_t)
}
CDemoClassInfo_class_t::CDemoClassInfo_class_t(const CDemoClassInfo_class_t& from) : ::google::protobuf::Message() {
  CDemoClassInfo_class_t* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.network_name_){},
      decltype(_impl_.table_name_){},
      decltype(_impl_.class_id_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.network_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.network_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.network_name_.Set(from._internal_network_name(), _this->GetArenaForAllocation());
  }
  _impl_.table_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.table_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.table_name_.Set(from._internal_table_name(), _this->GetArenaForAllocation());
  }
  _this->_impl_.class_id_ = from._impl_.class_id_;

  // @@protoc_insertion_point(copy_constructor:CDemoClassInfo.class_t)
}
inline void CDemoClassInfo_class_t::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.network_name_){},
      decltype(_impl_.table_name_){},
      decltype(_impl_.class_id_){0},
  };
  _impl_.network_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.network_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.table_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.table_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CDemoClassInfo_class_t::~CDemoClassInfo_class_t() {
  // @@protoc_insertion_point(destructor:CDemoClassInfo.class_t)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CDemoClassInfo_class_t::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.network_name_.Destroy();
  _impl_.table_name_.Destroy();
}
void CDemoClassInfo_class_t::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CDemoClassInfo_class_t::Clear() {
// @@protoc_insertion_point(message_clear_start:CDemoClassInfo.class_t)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.network_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.table_name_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.class_id_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CDemoClassInfo_class_t::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 53, 2> CDemoClassInfo_class_t::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CDemoClassInfo_class_t, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CDemoClassInfo_class_t_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 class_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDemoClassInfo_class_t, _impl_.class_id_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(CDemoClassInfo_class_t, _impl_.class_id_)}},
    // optional string network_name = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CDemoClassInfo_class_t, _impl_.network_name_)}},
    // optional string table_name = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(CDemoClassInfo_class_t, _impl_.table_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 class_id = 1;
    {PROTOBUF_FIELD_OFFSET(CDemoClassInfo_class_t, _impl_.class_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string network_name = 2;
    {PROTOBUF_FIELD_OFFSET(CDemoClassInfo_class_t, _impl_.network_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string table_name = 3;
    {PROTOBUF_FIELD_OFFSET(CDemoClassInfo_class_t, _impl_.table_name_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\26\0\14\12\0\0\0\0"
    "CDemoClassInfo.class_t"
    "network_name"
    "table_name"
  }},
};

::uint8_t* CDemoClassInfo_class_t::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CDemoClassInfo.class_t)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 class_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_class_id(), target);
  }

  // optional string network_name = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_network_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CDemoClassInfo.class_t.network_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string table_name = 3;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_table_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CDemoClassInfo.class_t.table_name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDemoClassInfo.class_t)
  return target;
}

::size_t CDemoClassInfo_class_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDemoClassInfo.class_t)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string network_name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_network_name());
    }

    // optional string table_name = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_table_name());
    }

    // optional int32 class_id = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_class_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CDemoClassInfo_class_t::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CDemoClassInfo_class_t::MergeImpl
};
const ::google::protobuf::Message::ClassData*CDemoClassInfo_class_t::GetClassData() const { return &_class_data_; }


void CDemoClassInfo_class_t::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CDemoClassInfo_class_t*>(&to_msg);
  auto& from = static_cast<const CDemoClassInfo_class_t&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CDemoClassInfo.class_t)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_network_name(from._internal_network_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_table_name(from._internal_table_name());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.class_id_ = from._impl_.class_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CDemoClassInfo_class_t::CopyFrom(const CDemoClassInfo_class_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDemoClassInfo.class_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CDemoClassInfo_class_t::IsInitialized() const {
  return true;
}

void CDemoClassInfo_class_t::InternalSwap(CDemoClassInfo_class_t* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.network_name_, lhs_arena,
                                       &other->_impl_.network_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_name_, lhs_arena,
                                       &other->_impl_.table_name_, rhs_arena);
        swap(_impl_.class_id_, other->_impl_.class_id_);
}

::google::protobuf::Metadata CDemoClassInfo_class_t::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[12]);
}
// ===================================================================

class CDemoClassInfo::_Internal {
 public:
};

CDemoClassInfo::CDemoClassInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CDemoClassInfo)
}
CDemoClassInfo::CDemoClassInfo(const CDemoClassInfo& from) : ::google::protobuf::Message() {
  CDemoClassInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.classes_){from._impl_.classes_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CDemoClassInfo)
}
inline void CDemoClassInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.classes_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
CDemoClassInfo::~CDemoClassInfo() {
  // @@protoc_insertion_point(destructor:CDemoClassInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CDemoClassInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.classes_.~RepeatedPtrField();
}
void CDemoClassInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CDemoClassInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CDemoClassInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_classes()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CDemoClassInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CDemoClassInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CDemoClassInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .CDemoClassInfo.class_t classes = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CDemoClassInfo, _impl_.classes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .CDemoClassInfo.class_t classes = 1;
    {PROTOBUF_FIELD_OFFSET(CDemoClassInfo, _impl_.classes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CDemoClassInfo_class_t>()},
  }}, {{
  }},
};

::uint8_t* CDemoClassInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CDemoClassInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .CDemoClassInfo.class_t classes = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_classes_size()); i < n; i++) {
    const auto& repfield = this->_internal_classes().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDemoClassInfo)
  return target;
}

::size_t CDemoClassInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDemoClassInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CDemoClassInfo.class_t classes = 1;
  total_size += 1UL * this->_internal_classes_size();
  for (const auto& msg : this->_internal_classes()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CDemoClassInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CDemoClassInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*CDemoClassInfo::GetClassData() const { return &_class_data_; }


void CDemoClassInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CDemoClassInfo*>(&to_msg);
  auto& from = static_cast<const CDemoClassInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CDemoClassInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_classes()->MergeFrom(from._internal_classes());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CDemoClassInfo::CopyFrom(const CDemoClassInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDemoClassInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CDemoClassInfo::IsInitialized() const {
  return true;
}

void CDemoClassInfo::InternalSwap(CDemoClassInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.classes_.InternalSwap(&other->_impl_.classes_);
}

::google::protobuf::Metadata CDemoClassInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[13]);
}
// ===================================================================

class CDemoCustomData::_Internal {
 public:
  using HasBits = decltype(std::declval<CDemoCustomData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CDemoCustomData, _impl_._has_bits_);
  static void set_has_callback_index(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CDemoCustomData::CDemoCustomData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CDemoCustomData)
}
CDemoCustomData::CDemoCustomData(const CDemoCustomData& from) : ::google::protobuf::Message() {
  CDemoCustomData* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){},
      decltype(_impl_.callback_index_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.data_.Set(from._internal_data(), _this->GetArenaForAllocation());
  }
  _this->_impl_.callback_index_ = from._impl_.callback_index_;

  // @@protoc_insertion_point(copy_constructor:CDemoCustomData)
}
inline void CDemoCustomData::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){},
      decltype(_impl_.callback_index_){0},
  };
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CDemoCustomData::~CDemoCustomData() {
  // @@protoc_insertion_point(destructor:CDemoCustomData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CDemoCustomData::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.Destroy();
}
void CDemoCustomData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CDemoCustomData::Clear() {
// @@protoc_insertion_point(message_clear_start:CDemoCustomData)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.data_.ClearNonDefaultToEmpty();
  }
  _impl_.callback_index_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CDemoCustomData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> CDemoCustomData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CDemoCustomData, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CDemoCustomData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bytes data = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CDemoCustomData, _impl_.data_)}},
    // optional int32 callback_index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDemoCustomData, _impl_.callback_index_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CDemoCustomData, _impl_.callback_index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 callback_index = 1;
    {PROTOBUF_FIELD_OFFSET(CDemoCustomData, _impl_.callback_index_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bytes data = 2;
    {PROTOBUF_FIELD_OFFSET(CDemoCustomData, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CDemoCustomData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CDemoCustomData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 callback_index = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_callback_index(), target);
  }

  // optional bytes data = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDemoCustomData)
  return target;
}

::size_t CDemoCustomData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDemoCustomData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes data = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_data());
    }

    // optional int32 callback_index = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_callback_index());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CDemoCustomData::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CDemoCustomData::MergeImpl
};
const ::google::protobuf::Message::ClassData*CDemoCustomData::GetClassData() const { return &_class_data_; }


void CDemoCustomData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CDemoCustomData*>(&to_msg);
  auto& from = static_cast<const CDemoCustomData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CDemoCustomData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_data(from._internal_data());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.callback_index_ = from._impl_.callback_index_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CDemoCustomData::CopyFrom(const CDemoCustomData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDemoCustomData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CDemoCustomData::IsInitialized() const {
  return true;
}

void CDemoCustomData::InternalSwap(CDemoCustomData* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, lhs_arena,
                                       &other->_impl_.data_, rhs_arena);
        swap(_impl_.callback_index_, other->_impl_.callback_index_);
}

::google::protobuf::Metadata CDemoCustomData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[14]);
}
// ===================================================================

class CDemoCustomDataCallbacks::_Internal {
 public:
};

CDemoCustomDataCallbacks::CDemoCustomDataCallbacks(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CDemoCustomDataCallbacks)
}
CDemoCustomDataCallbacks::CDemoCustomDataCallbacks(const CDemoCustomDataCallbacks& from) : ::google::protobuf::Message() {
  CDemoCustomDataCallbacks* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.save_id_){from._impl_.save_id_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CDemoCustomDataCallbacks)
}
inline void CDemoCustomDataCallbacks::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.save_id_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
CDemoCustomDataCallbacks::~CDemoCustomDataCallbacks() {
  // @@protoc_insertion_point(destructor:CDemoCustomDataCallbacks)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CDemoCustomDataCallbacks::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_save_id()->~RepeatedPtrField();
}
void CDemoCustomDataCallbacks::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CDemoCustomDataCallbacks::Clear() {
// @@protoc_insertion_point(message_clear_start:CDemoCustomDataCallbacks)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_save_id()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CDemoCustomDataCallbacks::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 40, 2> CDemoCustomDataCallbacks::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CDemoCustomDataCallbacks_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string save_id = 1;
    {::_pbi::TcParser::FastSR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CDemoCustomDataCallbacks, _impl_.save_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string save_id = 1;
    {PROTOBUF_FIELD_OFFSET(CDemoCustomDataCallbacks, _impl_.save_id_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\30\7\0\0\0\0\0\0"
    "CDemoCustomDataCallbacks"
    "save_id"
  }},
};

::uint8_t* CDemoCustomDataCallbacks::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CDemoCustomDataCallbacks)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string save_id = 1;
  for (int i = 0, n = this->_internal_save_id_size(); i < n; ++i) {
    const auto& s = this->_internal_save_id().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CDemoCustomDataCallbacks.save_id");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDemoCustomDataCallbacks)
  return target;
}

::size_t CDemoCustomDataCallbacks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDemoCustomDataCallbacks)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string save_id = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_save_id().size());
  for (int i = 0, n = _internal_save_id().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_save_id().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CDemoCustomDataCallbacks::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CDemoCustomDataCallbacks::MergeImpl
};
const ::google::protobuf::Message::ClassData*CDemoCustomDataCallbacks::GetClassData() const { return &_class_data_; }


void CDemoCustomDataCallbacks::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CDemoCustomDataCallbacks*>(&to_msg);
  auto& from = static_cast<const CDemoCustomDataCallbacks&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CDemoCustomDataCallbacks)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_save_id()->MergeFrom(from._internal_save_id());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CDemoCustomDataCallbacks::CopyFrom(const CDemoCustomDataCallbacks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDemoCustomDataCallbacks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CDemoCustomDataCallbacks::IsInitialized() const {
  return true;
}

void CDemoCustomDataCallbacks::InternalSwap(CDemoCustomDataCallbacks* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.save_id_.InternalSwap(&other->_impl_.save_id_);
}

::google::protobuf::Metadata CDemoCustomDataCallbacks::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[15]);
}
// ===================================================================

class CDemoAnimationData::_Internal {
 public:
  using HasBits = decltype(std::declval<CDemoAnimationData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CDemoAnimationData, _impl_._has_bits_);
  static void set_has_entity_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_start_tick(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_end_tick(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_data_checksum(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CDemoAnimationData::CDemoAnimationData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CDemoAnimationData)
}
CDemoAnimationData::CDemoAnimationData(const CDemoAnimationData& from) : ::google::protobuf::Message() {
  CDemoAnimationData* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){},
      decltype(_impl_.entity_id_){},
      decltype(_impl_.start_tick_){},
      decltype(_impl_.data_checksum_){},
      decltype(_impl_.end_tick_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.data_.Set(from._internal_data(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.entity_id_, &from._impl_.entity_id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.end_tick_) -
    reinterpret_cast<char*>(&_impl_.entity_id_)) + sizeof(_impl_.end_tick_));

  // @@protoc_insertion_point(copy_constructor:CDemoAnimationData)
}
inline void CDemoAnimationData::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){},
      decltype(_impl_.entity_id_){0},
      decltype(_impl_.start_tick_){0},
      decltype(_impl_.data_checksum_){::int64_t{0}},
      decltype(_impl_.end_tick_){0},
  };
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CDemoAnimationData::~CDemoAnimationData() {
  // @@protoc_insertion_point(destructor:CDemoAnimationData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CDemoAnimationData::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.Destroy();
}
void CDemoAnimationData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CDemoAnimationData::Clear() {
// @@protoc_insertion_point(message_clear_start:CDemoAnimationData)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.data_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&_impl_.entity_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.end_tick_) -
        reinterpret_cast<char*>(&_impl_.entity_id_)) + sizeof(_impl_.end_tick_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CDemoAnimationData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> CDemoAnimationData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CDemoAnimationData, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CDemoAnimationData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional sint32 entity_id = 1;
    {::_pbi::TcParser::FastZ32S1,
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CDemoAnimationData, _impl_.entity_id_)}},
    // optional int32 start_tick = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDemoAnimationData, _impl_.start_tick_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(CDemoAnimationData, _impl_.start_tick_)}},
    // optional int32 end_tick = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDemoAnimationData, _impl_.end_tick_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(CDemoAnimationData, _impl_.end_tick_)}},
    // optional bytes data = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(CDemoAnimationData, _impl_.data_)}},
    // optional int64 data_checksum = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CDemoAnimationData, _impl_.data_checksum_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(CDemoAnimationData, _impl_.data_checksum_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional sint32 entity_id = 1;
    {PROTOBUF_FIELD_OFFSET(CDemoAnimationData, _impl_.entity_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSInt32)},
    // optional int32 start_tick = 2;
    {PROTOBUF_FIELD_OFFSET(CDemoAnimationData, _impl_.start_tick_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 end_tick = 3;
    {PROTOBUF_FIELD_OFFSET(CDemoAnimationData, _impl_.end_tick_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bytes data = 4;
    {PROTOBUF_FIELD_OFFSET(CDemoAnimationData, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional int64 data_checksum = 5;
    {PROTOBUF_FIELD_OFFSET(CDemoAnimationData, _impl_.data_checksum_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CDemoAnimationData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CDemoAnimationData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional sint32 entity_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        1, this->_internal_entity_id(), target);
  }

  // optional int32 start_tick = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_start_tick(), target);
  }

  // optional int32 end_tick = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_end_tick(), target);
  }

  // optional bytes data = 4;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(4, _s, target);
  }

  // optional int64 data_checksum = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<5>(
            stream, this->_internal_data_checksum(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDemoAnimationData)
  return target;
}

::size_t CDemoAnimationData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDemoAnimationData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional bytes data = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_data());
    }

    // optional sint32 entity_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
          this->_internal_entity_id());
    }

    // optional int32 start_tick = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_start_tick());
    }

    // optional int64 data_checksum = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_data_checksum());
    }

    // optional int32 end_tick = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_end_tick());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CDemoAnimationData::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CDemoAnimationData::MergeImpl
};
const ::google::protobuf::Message::ClassData*CDemoAnimationData::GetClassData() const { return &_class_data_; }


void CDemoAnimationData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CDemoAnimationData*>(&to_msg);
  auto& from = static_cast<const CDemoAnimationData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CDemoAnimationData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_data(from._internal_data());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.entity_id_ = from._impl_.entity_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.start_tick_ = from._impl_.start_tick_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.data_checksum_ = from._impl_.data_checksum_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.end_tick_ = from._impl_.end_tick_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CDemoAnimationData::CopyFrom(const CDemoAnimationData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDemoAnimationData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CDemoAnimationData::IsInitialized() const {
  return true;
}

void CDemoAnimationData::InternalSwap(CDemoAnimationData* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, lhs_arena,
                                       &other->_impl_.data_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CDemoAnimationData, _impl_.end_tick_)
      + sizeof(CDemoAnimationData::_impl_.end_tick_)
      - PROTOBUF_FIELD_OFFSET(CDemoAnimationData, _impl_.entity_id_)>(
          reinterpret_cast<char*>(&_impl_.entity_id_),
          reinterpret_cast<char*>(&other->_impl_.entity_id_));
}

::google::protobuf::Metadata CDemoAnimationData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[16]);
}
// ===================================================================

class CDemoStringTables_items_t::_Internal {
 public:
  using HasBits = decltype(std::declval<CDemoStringTables_items_t>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CDemoStringTables_items_t, _impl_._has_bits_);
  static void set_has_str(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CDemoStringTables_items_t::CDemoStringTables_items_t(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CDemoStringTables.items_t)
}
CDemoStringTables_items_t::CDemoStringTables_items_t(const CDemoStringTables_items_t& from) : ::google::protobuf::Message() {
  CDemoStringTables_items_t* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.str_){},
      decltype(_impl_.data_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.str_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.str_.Set(from._internal_str(), _this->GetArenaForAllocation());
  }
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.data_.Set(from._internal_data(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:CDemoStringTables.items_t)
}
inline void CDemoStringTables_items_t::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.str_){},
      decltype(_impl_.data_){},
  };
  _impl_.str_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CDemoStringTables_items_t::~CDemoStringTables_items_t() {
  // @@protoc_insertion_point(destructor:CDemoStringTables.items_t)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CDemoStringTables_items_t::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.str_.Destroy();
  _impl_.data_.Destroy();
}
void CDemoStringTables_items_t::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CDemoStringTables_items_t::Clear() {
// @@protoc_insertion_point(message_clear_start:CDemoStringTables.items_t)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.str_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.data_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CDemoStringTables_items_t::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 37, 2> CDemoStringTables_items_t::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CDemoStringTables_items_t, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CDemoStringTables_items_t_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bytes data = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CDemoStringTables_items_t, _impl_.data_)}},
    // optional string str = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CDemoStringTables_items_t, _impl_.str_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string str = 1;
    {PROTOBUF_FIELD_OFFSET(CDemoStringTables_items_t, _impl_.str_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bytes data = 2;
    {PROTOBUF_FIELD_OFFSET(CDemoStringTables_items_t, _impl_.data_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\3\0\0\0\0\0\0"
    "CDemoStringTables.items_t"
    "str"
  }},
};

::uint8_t* CDemoStringTables_items_t::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CDemoStringTables.items_t)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string str = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_str();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CDemoStringTables.items_t.str");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional bytes data = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDemoStringTables.items_t)
  return target;
}

::size_t CDemoStringTables_items_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDemoStringTables.items_t)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string str = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str());
    }

    // optional bytes data = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_data());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CDemoStringTables_items_t::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CDemoStringTables_items_t::MergeImpl
};
const ::google::protobuf::Message::ClassData*CDemoStringTables_items_t::GetClassData() const { return &_class_data_; }


void CDemoStringTables_items_t::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CDemoStringTables_items_t*>(&to_msg);
  auto& from = static_cast<const CDemoStringTables_items_t&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CDemoStringTables.items_t)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_str(from._internal_str());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_data(from._internal_data());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CDemoStringTables_items_t::CopyFrom(const CDemoStringTables_items_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDemoStringTables.items_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CDemoStringTables_items_t::IsInitialized() const {
  return true;
}

void CDemoStringTables_items_t::InternalSwap(CDemoStringTables_items_t* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str_, lhs_arena,
                                       &other->_impl_.str_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, lhs_arena,
                                       &other->_impl_.data_, rhs_arena);
}

::google::protobuf::Metadata CDemoStringTables_items_t::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[17]);
}
// ===================================================================

class CDemoStringTables_table_t::_Internal {
 public:
  using HasBits = decltype(std::declval<CDemoStringTables_table_t>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CDemoStringTables_table_t, _impl_._has_bits_);
  static void set_has_table_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_table_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CDemoStringTables_table_t::CDemoStringTables_table_t(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CDemoStringTables.table_t)
}
CDemoStringTables_table_t::CDemoStringTables_table_t(const CDemoStringTables_table_t& from) : ::google::protobuf::Message() {
  CDemoStringTables_table_t* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.items_){from._impl_.items_},
      decltype(_impl_.items_clientside_){from._impl_.items_clientside_},
      decltype(_impl_.table_name_){},
      decltype(_impl_.table_flags_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.table_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.table_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.table_name_.Set(from._internal_table_name(), _this->GetArenaForAllocation());
  }
  _this->_impl_.table_flags_ = from._impl_.table_flags_;

  // @@protoc_insertion_point(copy_constructor:CDemoStringTables.table_t)
}
inline void CDemoStringTables_table_t::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.items_){arena},
      decltype(_impl_.items_clientside_){arena},
      decltype(_impl_.table_name_){},
      decltype(_impl_.table_flags_){0},
  };
  _impl_.table_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.table_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CDemoStringTables_table_t::~CDemoStringTables_table_t() {
  // @@protoc_insertion_point(destructor:CDemoStringTables.table_t)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CDemoStringTables_table_t::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
  _impl_.items_clientside_.~RepeatedPtrField();
  _impl_.table_name_.Destroy();
}
void CDemoStringTables_table_t::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CDemoStringTables_table_t::Clear() {
// @@protoc_insertion_point(message_clear_start:CDemoStringTables.table_t)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_items()->Clear();
  _internal_mutable_items_clientside()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.table_name_.ClearNonDefaultToEmpty();
  }
  _impl_.table_flags_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CDemoStringTables_table_t::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 44, 2> CDemoStringTables_table_t::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CDemoStringTables_table_t, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CDemoStringTables_table_t_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 table_flags = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDemoStringTables_table_t, _impl_.table_flags_), 1>(),
     {32, 1, 0, PROTOBUF_FIELD_OFFSET(CDemoStringTables_table_t, _impl_.table_flags_)}},
    // optional string table_name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CDemoStringTables_table_t, _impl_.table_name_)}},
    // repeated .CDemoStringTables.items_t items = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CDemoStringTables_table_t, _impl_.items_)}},
    // repeated .CDemoStringTables.items_t items_clientside = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(CDemoStringTables_table_t, _impl_.items_clientside_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string table_name = 1;
    {PROTOBUF_FIELD_OFFSET(CDemoStringTables_table_t, _impl_.table_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .CDemoStringTables.items_t items = 2;
    {PROTOBUF_FIELD_OFFSET(CDemoStringTables_table_t, _impl_.items_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .CDemoStringTables.items_t items_clientside = 3;
    {PROTOBUF_FIELD_OFFSET(CDemoStringTables_table_t, _impl_.items_clientside_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 table_flags = 4;
    {PROTOBUF_FIELD_OFFSET(CDemoStringTables_table_t, _impl_.table_flags_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CDemoStringTables_items_t>()},
    {::_pbi::TcParser::GetTable<::CDemoStringTables_items_t>()},
  }}, {{
    "\31\12\0\0\0\0\0\0"
    "CDemoStringTables.table_t"
    "table_name"
  }},
};

::uint8_t* CDemoStringTables_table_t::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CDemoStringTables.table_t)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string table_name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_table_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CDemoStringTables.table_t.table_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .CDemoStringTables.items_t items = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .CDemoStringTables.items_t items_clientside = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_clientside_size()); i < n; i++) {
    const auto& repfield = this->_internal_items_clientside().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional int32 table_flags = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_table_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDemoStringTables.table_t)
  return target;
}

::size_t CDemoStringTables_table_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDemoStringTables.table_t)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CDemoStringTables.items_t items = 2;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_internal_items()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .CDemoStringTables.items_t items_clientside = 3;
  total_size += 1UL * this->_internal_items_clientside_size();
  for (const auto& msg : this->_internal_items_clientside()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string table_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_table_name());
    }

    // optional int32 table_flags = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_table_flags());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CDemoStringTables_table_t::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CDemoStringTables_table_t::MergeImpl
};
const ::google::protobuf::Message::ClassData*CDemoStringTables_table_t::GetClassData() const { return &_class_data_; }


void CDemoStringTables_table_t::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CDemoStringTables_table_t*>(&to_msg);
  auto& from = static_cast<const CDemoStringTables_table_t&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CDemoStringTables.table_t)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(from._internal_items());
  _this->_internal_mutable_items_clientside()->MergeFrom(from._internal_items_clientside());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_table_name(from._internal_table_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.table_flags_ = from._impl_.table_flags_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CDemoStringTables_table_t::CopyFrom(const CDemoStringTables_table_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDemoStringTables.table_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CDemoStringTables_table_t::IsInitialized() const {
  return true;
}

void CDemoStringTables_table_t::InternalSwap(CDemoStringTables_table_t* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  _impl_.items_clientside_.InternalSwap(&other->_impl_.items_clientside_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_name_, lhs_arena,
                                       &other->_impl_.table_name_, rhs_arena);
        swap(_impl_.table_flags_, other->_impl_.table_flags_);
}

::google::protobuf::Metadata CDemoStringTables_table_t::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[18]);
}
// ===================================================================

class CDemoStringTables::_Internal {
 public:
};

CDemoStringTables::CDemoStringTables(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CDemoStringTables)
}
CDemoStringTables::CDemoStringTables(const CDemoStringTables& from) : ::google::protobuf::Message() {
  CDemoStringTables* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tables_){from._impl_.tables_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CDemoStringTables)
}
inline void CDemoStringTables::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.tables_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
CDemoStringTables::~CDemoStringTables() {
  // @@protoc_insertion_point(destructor:CDemoStringTables)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CDemoStringTables::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tables_.~RepeatedPtrField();
}
void CDemoStringTables::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CDemoStringTables::Clear() {
// @@protoc_insertion_point(message_clear_start:CDemoStringTables)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_tables()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CDemoStringTables::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CDemoStringTables::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CDemoStringTables_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .CDemoStringTables.table_t tables = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CDemoStringTables, _impl_.tables_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .CDemoStringTables.table_t tables = 1;
    {PROTOBUF_FIELD_OFFSET(CDemoStringTables, _impl_.tables_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CDemoStringTables_table_t>()},
  }}, {{
  }},
};

::uint8_t* CDemoStringTables::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CDemoStringTables)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .CDemoStringTables.table_t tables = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_tables_size()); i < n; i++) {
    const auto& repfield = this->_internal_tables().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDemoStringTables)
  return target;
}

::size_t CDemoStringTables::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDemoStringTables)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CDemoStringTables.table_t tables = 1;
  total_size += 1UL * this->_internal_tables_size();
  for (const auto& msg : this->_internal_tables()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CDemoStringTables::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CDemoStringTables::MergeImpl
};
const ::google::protobuf::Message::ClassData*CDemoStringTables::GetClassData() const { return &_class_data_; }


void CDemoStringTables::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CDemoStringTables*>(&to_msg);
  auto& from = static_cast<const CDemoStringTables&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CDemoStringTables)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tables()->MergeFrom(from._internal_tables());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CDemoStringTables::CopyFrom(const CDemoStringTables& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDemoStringTables)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CDemoStringTables::IsInitialized() const {
  return true;
}

void CDemoStringTables::InternalSwap(CDemoStringTables* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tables_.InternalSwap(&other->_impl_.tables_);
}

::google::protobuf::Metadata CDemoStringTables::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[19]);
}
// ===================================================================

class CDemoStop::_Internal {
 public:
};

CDemoStop::CDemoStop(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:CDemoStop)
}
CDemoStop::CDemoStop(const CDemoStop& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  CDemoStop* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CDemoStop)
}




const ::google::protobuf::Message::ClassData CDemoStop::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*CDemoStop::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata CDemoStop::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[20]);
}
// ===================================================================

class CDemoUserCmd::_Internal {
 public:
  using HasBits = decltype(std::declval<CDemoUserCmd>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CDemoUserCmd, _impl_._has_bits_);
  static void set_has_cmd_number(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CDemoUserCmd::CDemoUserCmd(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CDemoUserCmd)
}
CDemoUserCmd::CDemoUserCmd(const CDemoUserCmd& from) : ::google::protobuf::Message() {
  CDemoUserCmd* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){},
      decltype(_impl_.cmd_number_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.data_.Set(from._internal_data(), _this->GetArenaForAllocation());
  }
  _this->_impl_.cmd_number_ = from._impl_.cmd_number_;

  // @@protoc_insertion_point(copy_constructor:CDemoUserCmd)
}
inline void CDemoUserCmd::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){},
      decltype(_impl_.cmd_number_){0},
  };
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CDemoUserCmd::~CDemoUserCmd() {
  // @@protoc_insertion_point(destructor:CDemoUserCmd)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CDemoUserCmd::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.Destroy();
}
void CDemoUserCmd::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CDemoUserCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:CDemoUserCmd)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.data_.ClearNonDefaultToEmpty();
  }
  _impl_.cmd_number_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CDemoUserCmd::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> CDemoUserCmd::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CDemoUserCmd, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CDemoUserCmd_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bytes data = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CDemoUserCmd, _impl_.data_)}},
    // optional int32 cmd_number = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDemoUserCmd, _impl_.cmd_number_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CDemoUserCmd, _impl_.cmd_number_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 cmd_number = 1;
    {PROTOBUF_FIELD_OFFSET(CDemoUserCmd, _impl_.cmd_number_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bytes data = 2;
    {PROTOBUF_FIELD_OFFSET(CDemoUserCmd, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CDemoUserCmd::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CDemoUserCmd)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 cmd_number = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_cmd_number(), target);
  }

  // optional bytes data = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDemoUserCmd)
  return target;
}

::size_t CDemoUserCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDemoUserCmd)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes data = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_data());
    }

    // optional int32 cmd_number = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_cmd_number());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CDemoUserCmd::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CDemoUserCmd::MergeImpl
};
const ::google::protobuf::Message::ClassData*CDemoUserCmd::GetClassData() const { return &_class_data_; }


void CDemoUserCmd::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CDemoUserCmd*>(&to_msg);
  auto& from = static_cast<const CDemoUserCmd&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CDemoUserCmd)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_data(from._internal_data());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.cmd_number_ = from._impl_.cmd_number_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CDemoUserCmd::CopyFrom(const CDemoUserCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDemoUserCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CDemoUserCmd::IsInitialized() const {
  return true;
}

void CDemoUserCmd::InternalSwap(CDemoUserCmd* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, lhs_arena,
                                       &other->_impl_.data_, rhs_arena);
        swap(_impl_.cmd_number_, other->_impl_.cmd_number_);
}

::google::protobuf::Metadata CDemoUserCmd::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[21]);
}
// ===================================================================

class CDemoSpawnGroups::_Internal {
 public:
};

CDemoSpawnGroups::CDemoSpawnGroups(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CDemoSpawnGroups)
}
CDemoSpawnGroups::CDemoSpawnGroups(const CDemoSpawnGroups& from) : ::google::protobuf::Message() {
  CDemoSpawnGroups* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.msgs_){from._impl_.msgs_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CDemoSpawnGroups)
}
inline void CDemoSpawnGroups::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.msgs_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
CDemoSpawnGroups::~CDemoSpawnGroups() {
  // @@protoc_insertion_point(destructor:CDemoSpawnGroups)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CDemoSpawnGroups::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_msgs()->~RepeatedPtrField();
}
void CDemoSpawnGroups::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CDemoSpawnGroups::Clear() {
// @@protoc_insertion_point(message_clear_start:CDemoSpawnGroups)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_msgs()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CDemoSpawnGroups::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CDemoSpawnGroups::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967291,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CDemoSpawnGroups_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated bytes msgs = 3;
    {::_pbi::TcParser::FastBR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CDemoSpawnGroups, _impl_.msgs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated bytes msgs = 3;
    {PROTOBUF_FIELD_OFFSET(CDemoSpawnGroups, _impl_.msgs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CDemoSpawnGroups::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CDemoSpawnGroups)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated bytes msgs = 3;
  for (int i = 0, n = this->_internal_msgs_size(); i < n; ++i) {
    const auto& s = this->_internal_msgs().Get(i);
    target = stream->WriteBytes(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDemoSpawnGroups)
  return target;
}

::size_t CDemoSpawnGroups::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDemoSpawnGroups)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes msgs = 3;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_msgs().size());
  for (int i = 0, n = _internal_msgs().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_msgs().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CDemoSpawnGroups::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CDemoSpawnGroups::MergeImpl
};
const ::google::protobuf::Message::ClassData*CDemoSpawnGroups::GetClassData() const { return &_class_data_; }


void CDemoSpawnGroups::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CDemoSpawnGroups*>(&to_msg);
  auto& from = static_cast<const CDemoSpawnGroups&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CDemoSpawnGroups)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_msgs()->MergeFrom(from._internal_msgs());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CDemoSpawnGroups::CopyFrom(const CDemoSpawnGroups& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDemoSpawnGroups)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CDemoSpawnGroups::IsInitialized() const {
  return true;
}

void CDemoSpawnGroups::InternalSwap(CDemoSpawnGroups* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.msgs_.InternalSwap(&other->_impl_.msgs_);
}

::google::protobuf::Metadata CDemoSpawnGroups::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_demo_2eproto_getter, &descriptor_table_demo_2eproto_once,
      file_level_metadata_demo_2eproto[22]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
