// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages.proto

#include "steammessages.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
        template <typename>
PROTOBUF_CONSTEXPR CMsgProtoBufHeader::CMsgProtoBufHeader(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.target_job_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.error_message_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.client_steam_id_)*/ ::uint64_t{0u},
      /*decltype(_impl_.client_session_id_)*/ 0,
      /*decltype(_impl_.source_app_id_)*/ 0u,
      /*decltype(_impl_.ip_)*/ 0u,
      /*decltype(_impl_.gc_msg_src_)*/ 0,
      /*decltype(_impl_.gc_dir_index_source_)*/ 0u,
      /*decltype(_impl_.eresult_)*/ 2,
      /*decltype(_impl_.job_id_source_)*/ ::uint64_t{18446744073709551615u},
      /*decltype(_impl_.job_id_target_)*/ ::uint64_t{18446744073709551615u},
    } {}
struct CMsgProtoBufHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgProtoBufHeaderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgProtoBufHeaderDefaultTypeInternal() {}
  union {
    CMsgProtoBufHeader _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgProtoBufHeaderDefaultTypeInternal _CMsgProtoBufHeader_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgWebAPIKey::CMsgWebAPIKey(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.domain_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.account_id_)*/ 0u,
      /*decltype(_impl_.publisher_group_id_)*/ 0u,
      /*decltype(_impl_.key_id_)*/ 0u,
      /*decltype(_impl_.status_)*/ 255u,
    } {}
struct CMsgWebAPIKeyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgWebAPIKeyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgWebAPIKeyDefaultTypeInternal() {}
  union {
    CMsgWebAPIKey _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgWebAPIKeyDefaultTypeInternal _CMsgWebAPIKey_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgHttpRequest_RequestHeader::CMsgHttpRequest_RequestHeader(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.value_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct CMsgHttpRequest_RequestHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgHttpRequest_RequestHeaderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgHttpRequest_RequestHeaderDefaultTypeInternal() {}
  union {
    CMsgHttpRequest_RequestHeader _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgHttpRequest_RequestHeaderDefaultTypeInternal _CMsgHttpRequest_RequestHeader_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgHttpRequest_QueryParam::CMsgHttpRequest_QueryParam(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.value_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct CMsgHttpRequest_QueryParamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgHttpRequest_QueryParamDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgHttpRequest_QueryParamDefaultTypeInternal() {}
  union {
    CMsgHttpRequest_QueryParam _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgHttpRequest_QueryParamDefaultTypeInternal _CMsgHttpRequest_QueryParam_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgHttpRequest::CMsgHttpRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.headers_)*/ {},
      /*decltype(_impl_.get_params_)*/ {},
      /*decltype(_impl_.post_params_)*/ {},
      /*decltype(_impl_.hostname_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.url_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.body_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.request_method_)*/ 0u,
      /*decltype(_impl_.absolute_timeout_)*/ 0u,
    } {}
struct CMsgHttpRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgHttpRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgHttpRequestDefaultTypeInternal() {}
  union {
    CMsgHttpRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgHttpRequestDefaultTypeInternal _CMsgHttpRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgWebAPIRequest::CMsgWebAPIRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.interface_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.method_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.api_key_)*/ nullptr,
      /*decltype(_impl_.request_)*/ nullptr,
      /*decltype(_impl_.version_)*/ 0u,
      /*decltype(_impl_.routing_app_id_)*/ 0u,
    } {}
struct CMsgWebAPIRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgWebAPIRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgWebAPIRequestDefaultTypeInternal() {}
  union {
    CMsgWebAPIRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgWebAPIRequestDefaultTypeInternal _CMsgWebAPIRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgHttpResponse_ResponseHeader::CMsgHttpResponse_ResponseHeader(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.value_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct CMsgHttpResponse_ResponseHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgHttpResponse_ResponseHeaderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgHttpResponse_ResponseHeaderDefaultTypeInternal() {}
  union {
    CMsgHttpResponse_ResponseHeader _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgHttpResponse_ResponseHeaderDefaultTypeInternal _CMsgHttpResponse_ResponseHeader_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgHttpResponse::CMsgHttpResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.headers_)*/ {},
      /*decltype(_impl_.body_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.status_code_)*/ 0u,
    } {}
struct CMsgHttpResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgHttpResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgHttpResponseDefaultTypeInternal() {}
  union {
    CMsgHttpResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgHttpResponseDefaultTypeInternal _CMsgHttpResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgAMFindAccounts::CMsgAMFindAccounts(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.search_string_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.search_type_)*/ 0u,
    } {}
struct CMsgAMFindAccountsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgAMFindAccountsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgAMFindAccountsDefaultTypeInternal() {}
  union {
    CMsgAMFindAccounts _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgAMFindAccountsDefaultTypeInternal _CMsgAMFindAccounts_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgAMFindAccountsResponse::CMsgAMFindAccountsResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.steam_id_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CMsgAMFindAccountsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgAMFindAccountsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgAMFindAccountsResponseDefaultTypeInternal() {}
  union {
    CMsgAMFindAccountsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgAMFindAccountsResponseDefaultTypeInternal _CMsgAMFindAccountsResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgNotifyWatchdog::CMsgNotifyWatchdog(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.text_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.source_)*/ 0u,
      /*decltype(_impl_.alert_type_)*/ 0u,
      /*decltype(_impl_.alert_destination_)*/ 0u,
      /*decltype(_impl_.critical_)*/ false,
      /*decltype(_impl_.time_)*/ 0u,
      /*decltype(_impl_.appid_)*/ 0u,
    } {}
struct CMsgNotifyWatchdogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgNotifyWatchdogDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgNotifyWatchdogDefaultTypeInternal() {}
  union {
    CMsgNotifyWatchdog _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgNotifyWatchdogDefaultTypeInternal _CMsgNotifyWatchdog_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgAMGetLicenses::CMsgAMGetLicenses(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.steamid_)*/ ::uint64_t{0u},
    } {}
struct CMsgAMGetLicensesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgAMGetLicensesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgAMGetLicensesDefaultTypeInternal() {}
  union {
    CMsgAMGetLicenses _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgAMGetLicensesDefaultTypeInternal _CMsgAMGetLicenses_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgPackageLicense::CMsgPackageLicense(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.package_id_)*/ 0u,
      /*decltype(_impl_.time_created_)*/ 0u,
      /*decltype(_impl_.owner_id_)*/ 0u,
    } {}
struct CMsgPackageLicenseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgPackageLicenseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgPackageLicenseDefaultTypeInternal() {}
  union {
    CMsgPackageLicense _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgPackageLicenseDefaultTypeInternal _CMsgPackageLicense_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgAMGetLicensesResponse::CMsgAMGetLicensesResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.license_)*/ {},
      /*decltype(_impl_.result_)*/ 0u,
    } {}
struct CMsgAMGetLicensesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgAMGetLicensesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgAMGetLicensesResponseDefaultTypeInternal() {}
  union {
    CMsgAMGetLicensesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgAMGetLicensesResponseDefaultTypeInternal _CMsgAMGetLicensesResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgAMGetUserGameStats::CMsgAMGetUserGameStats(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.stats_)*/ {},
      /*decltype(_impl_.steam_id_)*/ ::uint64_t{0u},
      /*decltype(_impl_.game_id_)*/ ::uint64_t{0u},
    } {}
struct CMsgAMGetUserGameStatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgAMGetUserGameStatsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgAMGetUserGameStatsDefaultTypeInternal() {}
  union {
    CMsgAMGetUserGameStats _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgAMGetUserGameStatsDefaultTypeInternal _CMsgAMGetUserGameStats_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgAMGetUserGameStatsResponse_Stats::CMsgAMGetUserGameStatsResponse_Stats(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.stat_id_)*/ 0u,
      /*decltype(_impl_.stat_value_)*/ 0u,
    } {}
struct CMsgAMGetUserGameStatsResponse_StatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgAMGetUserGameStatsResponse_StatsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgAMGetUserGameStatsResponse_StatsDefaultTypeInternal() {}
  union {
    CMsgAMGetUserGameStatsResponse_Stats _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgAMGetUserGameStatsResponse_StatsDefaultTypeInternal _CMsgAMGetUserGameStatsResponse_Stats_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgAMGetUserGameStatsResponse_Achievement_Blocks::CMsgAMGetUserGameStatsResponse_Achievement_Blocks(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.achievement_id_)*/ 0u,
      /*decltype(_impl_.achievement_bit_id_)*/ 0u,
      /*decltype(_impl_.unlock_time_)*/ 0u,
    } {}
struct CMsgAMGetUserGameStatsResponse_Achievement_BlocksDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgAMGetUserGameStatsResponse_Achievement_BlocksDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgAMGetUserGameStatsResponse_Achievement_BlocksDefaultTypeInternal() {}
  union {
    CMsgAMGetUserGameStatsResponse_Achievement_Blocks _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgAMGetUserGameStatsResponse_Achievement_BlocksDefaultTypeInternal _CMsgAMGetUserGameStatsResponse_Achievement_Blocks_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgAMGetUserGameStatsResponse::CMsgAMGetUserGameStatsResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.stats_)*/ {},
      /*decltype(_impl_.achievement_blocks_)*/ {},
      /*decltype(_impl_.steam_id_)*/ ::uint64_t{0u},
      /*decltype(_impl_.game_id_)*/ ::uint64_t{0u},
      /*decltype(_impl_.eresult_)*/ 2,
    } {}
struct CMsgAMGetUserGameStatsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgAMGetUserGameStatsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgAMGetUserGameStatsResponseDefaultTypeInternal() {}
  union {
    CMsgAMGetUserGameStatsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgAMGetUserGameStatsResponseDefaultTypeInternal _CMsgAMGetUserGameStatsResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCGetCommandList::CMsgGCGetCommandList(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.command_prefix_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.app_id_)*/ 0u,
    } {}
struct CMsgGCGetCommandListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCGetCommandListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCGetCommandListDefaultTypeInternal() {}
  union {
    CMsgGCGetCommandList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCGetCommandListDefaultTypeInternal _CMsgGCGetCommandList_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCGetCommandListResponse::CMsgGCGetCommandListResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.command_name_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CMsgGCGetCommandListResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCGetCommandListResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCGetCommandListResponseDefaultTypeInternal() {}
  union {
    CMsgGCGetCommandListResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCGetCommandListResponseDefaultTypeInternal _CMsgGCGetCommandListResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CGCMsgMemCachedGet::CGCMsgMemCachedGet(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.keys_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CGCMsgMemCachedGetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CGCMsgMemCachedGetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CGCMsgMemCachedGetDefaultTypeInternal() {}
  union {
    CGCMsgMemCachedGet _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CGCMsgMemCachedGetDefaultTypeInternal _CGCMsgMemCachedGet_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CGCMsgMemCachedGetResponse_ValueTag::CGCMsgMemCachedGetResponse_ValueTag(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.value_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.found_)*/ false,
    } {}
struct CGCMsgMemCachedGetResponse_ValueTagDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CGCMsgMemCachedGetResponse_ValueTagDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CGCMsgMemCachedGetResponse_ValueTagDefaultTypeInternal() {}
  union {
    CGCMsgMemCachedGetResponse_ValueTag _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CGCMsgMemCachedGetResponse_ValueTagDefaultTypeInternal _CGCMsgMemCachedGetResponse_ValueTag_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CGCMsgMemCachedGetResponse::CGCMsgMemCachedGetResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.values_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CGCMsgMemCachedGetResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CGCMsgMemCachedGetResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CGCMsgMemCachedGetResponseDefaultTypeInternal() {}
  union {
    CGCMsgMemCachedGetResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CGCMsgMemCachedGetResponseDefaultTypeInternal _CGCMsgMemCachedGetResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CGCMsgMemCachedSet_KeyPair::CGCMsgMemCachedSet_KeyPair(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.value_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct CGCMsgMemCachedSet_KeyPairDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CGCMsgMemCachedSet_KeyPairDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CGCMsgMemCachedSet_KeyPairDefaultTypeInternal() {}
  union {
    CGCMsgMemCachedSet_KeyPair _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CGCMsgMemCachedSet_KeyPairDefaultTypeInternal _CGCMsgMemCachedSet_KeyPair_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CGCMsgMemCachedSet::CGCMsgMemCachedSet(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.keys_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CGCMsgMemCachedSetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CGCMsgMemCachedSetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CGCMsgMemCachedSetDefaultTypeInternal() {}
  union {
    CGCMsgMemCachedSet _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CGCMsgMemCachedSetDefaultTypeInternal _CGCMsgMemCachedSet_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CGCMsgMemCachedDelete::CGCMsgMemCachedDelete(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.keys_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CGCMsgMemCachedDeleteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CGCMsgMemCachedDeleteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CGCMsgMemCachedDeleteDefaultTypeInternal() {}
  union {
    CGCMsgMemCachedDelete _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CGCMsgMemCachedDeleteDefaultTypeInternal _CGCMsgMemCachedDelete_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR CGCMsgMemCachedStats::CGCMsgMemCachedStats(::_pbi::ConstantInitialized) {}
struct CGCMsgMemCachedStatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CGCMsgMemCachedStatsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CGCMsgMemCachedStatsDefaultTypeInternal() {}
  union {
    CGCMsgMemCachedStats _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CGCMsgMemCachedStatsDefaultTypeInternal _CGCMsgMemCachedStats_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CGCMsgMemCachedStatsResponse::CGCMsgMemCachedStatsResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.curr_connections_)*/ ::uint64_t{0u},
      /*decltype(_impl_.cmd_get_)*/ ::uint64_t{0u},
      /*decltype(_impl_.cmd_set_)*/ ::uint64_t{0u},
      /*decltype(_impl_.cmd_flush_)*/ ::uint64_t{0u},
      /*decltype(_impl_.get_hits_)*/ ::uint64_t{0u},
      /*decltype(_impl_.get_misses_)*/ ::uint64_t{0u},
      /*decltype(_impl_.delete_hits_)*/ ::uint64_t{0u},
      /*decltype(_impl_.delete_misses_)*/ ::uint64_t{0u},
      /*decltype(_impl_.bytes_read_)*/ ::uint64_t{0u},
      /*decltype(_impl_.bytes_written_)*/ ::uint64_t{0u},
      /*decltype(_impl_.limit_maxbytes_)*/ ::uint64_t{0u},
      /*decltype(_impl_.curr_items_)*/ ::uint64_t{0u},
      /*decltype(_impl_.evictions_)*/ ::uint64_t{0u},
      /*decltype(_impl_.bytes_)*/ ::uint64_t{0u},
    } {}
struct CGCMsgMemCachedStatsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CGCMsgMemCachedStatsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CGCMsgMemCachedStatsResponseDefaultTypeInternal() {}
  union {
    CGCMsgMemCachedStatsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CGCMsgMemCachedStatsResponseDefaultTypeInternal _CGCMsgMemCachedStatsResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CGCMsgSQLStats::CGCMsgSQLStats(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.schema_catalog_)*/ 0u,
    } {}
struct CGCMsgSQLStatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CGCMsgSQLStatsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CGCMsgSQLStatsDefaultTypeInternal() {}
  union {
    CGCMsgSQLStats _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CGCMsgSQLStatsDefaultTypeInternal _CGCMsgSQLStats_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CGCMsgSQLStatsResponse::CGCMsgSQLStatsResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.threads_)*/ 0u,
      /*decltype(_impl_.threads_connected_)*/ 0u,
      /*decltype(_impl_.threads_active_)*/ 0u,
      /*decltype(_impl_.operations_submitted_)*/ 0u,
      /*decltype(_impl_.prepared_statements_executed_)*/ 0u,
      /*decltype(_impl_.non_prepared_statements_executed_)*/ 0u,
      /*decltype(_impl_.deadlock_retries_)*/ 0u,
      /*decltype(_impl_.operations_timed_out_in_queue_)*/ 0u,
      /*decltype(_impl_.errors_)*/ 0u,
    } {}
struct CGCMsgSQLStatsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CGCMsgSQLStatsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CGCMsgSQLStatsResponseDefaultTypeInternal() {}
  union {
    CGCMsgSQLStatsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CGCMsgSQLStatsResponseDefaultTypeInternal _CGCMsgSQLStatsResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgAMAddFreeLicense::CMsgAMAddFreeLicense(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.store_country_code_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.steamid_)*/ ::uint64_t{0u},
      /*decltype(_impl_.ip_public_)*/ 0u,
      /*decltype(_impl_.packageid_)*/ 0u,
    } {}
struct CMsgAMAddFreeLicenseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgAMAddFreeLicenseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgAMAddFreeLicenseDefaultTypeInternal() {}
  union {
    CMsgAMAddFreeLicense _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgAMAddFreeLicenseDefaultTypeInternal _CMsgAMAddFreeLicense_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgAMAddFreeLicenseResponse::CMsgAMAddFreeLicenseResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.transid_)*/ ::uint64_t{0u},
      /*decltype(_impl_.purchase_result_detail_)*/ 0,
      /*decltype(_impl_.eresult_)*/ 2,
    } {}
struct CMsgAMAddFreeLicenseResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgAMAddFreeLicenseResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgAMAddFreeLicenseResponseDefaultTypeInternal() {}
  union {
    CMsgAMAddFreeLicenseResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgAMAddFreeLicenseResponseDefaultTypeInternal _CMsgAMAddFreeLicenseResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CGCMsgGetIPLocation::CGCMsgGetIPLocation(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.ips_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CGCMsgGetIPLocationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CGCMsgGetIPLocationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CGCMsgGetIPLocationDefaultTypeInternal() {}
  union {
    CGCMsgGetIPLocation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CGCMsgGetIPLocationDefaultTypeInternal _CGCMsgGetIPLocation_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CIPLocationInfo::CIPLocationInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.country_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.state_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.city_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.ip_)*/ 0u,
      /*decltype(_impl_.latitude_)*/ 0,
      /*decltype(_impl_.longitude_)*/ 0,
    } {}
struct CIPLocationInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CIPLocationInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CIPLocationInfoDefaultTypeInternal() {}
  union {
    CIPLocationInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CIPLocationInfoDefaultTypeInternal _CIPLocationInfo_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CGCMsgGetIPLocationResponse::CGCMsgGetIPLocationResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.infos_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CGCMsgGetIPLocationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CGCMsgGetIPLocationResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CGCMsgGetIPLocationResponseDefaultTypeInternal() {}
  union {
    CGCMsgGetIPLocationResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CGCMsgGetIPLocationResponseDefaultTypeInternal _CGCMsgGetIPLocationResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CGCMsgSystemStatsSchema::CGCMsgSystemStatsSchema(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.schema_kv_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.gc_app_id_)*/ 0u,
    } {}
struct CGCMsgSystemStatsSchemaDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CGCMsgSystemStatsSchemaDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CGCMsgSystemStatsSchemaDefaultTypeInternal() {}
  union {
    CGCMsgSystemStatsSchema _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CGCMsgSystemStatsSchemaDefaultTypeInternal _CGCMsgSystemStatsSchema_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR CGCMsgGetSystemStats::CGCMsgGetSystemStats(::_pbi::ConstantInitialized) {}
struct CGCMsgGetSystemStatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CGCMsgGetSystemStatsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CGCMsgGetSystemStatsDefaultTypeInternal() {}
  union {
    CGCMsgGetSystemStats _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CGCMsgGetSystemStatsDefaultTypeInternal _CGCMsgGetSystemStats_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CGCMsgGetSystemStatsResponse::CGCMsgGetSystemStatsResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.stats_kv_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.gc_app_id_)*/ 0u,
      /*decltype(_impl_.active_jobs_)*/ 0u,
      /*decltype(_impl_.yielding_jobs_)*/ 0u,
      /*decltype(_impl_.user_sessions_)*/ 0u,
      /*decltype(_impl_.game_server_sessions_)*/ 0u,
      /*decltype(_impl_.socaches_)*/ 0u,
      /*decltype(_impl_.socaches_to_unload_)*/ 0u,
      /*decltype(_impl_.socaches_loading_)*/ 0u,
      /*decltype(_impl_.writeback_queue_)*/ 0u,
      /*decltype(_impl_.steamid_locks_)*/ 0u,
      /*decltype(_impl_.logon_queue_)*/ 0u,
      /*decltype(_impl_.logon_jobs_)*/ 0u,
    } {}
struct CGCMsgGetSystemStatsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CGCMsgGetSystemStatsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CGCMsgGetSystemStatsResponseDefaultTypeInternal() {}
  union {
    CGCMsgGetSystemStatsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CGCMsgGetSystemStatsResponseDefaultTypeInternal _CGCMsgGetSystemStatsResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgAMSendEmail_ReplacementToken::CMsgAMSendEmail_ReplacementToken(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.token_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.token_value_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct CMsgAMSendEmail_ReplacementTokenDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgAMSendEmail_ReplacementTokenDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgAMSendEmail_ReplacementTokenDefaultTypeInternal() {}
  union {
    CMsgAMSendEmail_ReplacementToken _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgAMSendEmail_ReplacementTokenDefaultTypeInternal _CMsgAMSendEmail_ReplacementToken_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgAMSendEmail_PersonaNameReplacementToken::CMsgAMSendEmail_PersonaNameReplacementToken(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.token_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.steamid_)*/ ::uint64_t{0u},
    } {}
struct CMsgAMSendEmail_PersonaNameReplacementTokenDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgAMSendEmail_PersonaNameReplacementTokenDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgAMSendEmail_PersonaNameReplacementTokenDefaultTypeInternal() {}
  union {
    CMsgAMSendEmail_PersonaNameReplacementToken _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgAMSendEmail_PersonaNameReplacementTokenDefaultTypeInternal _CMsgAMSendEmail_PersonaNameReplacementToken_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgAMSendEmail::CMsgAMSendEmail(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.persona_name_tokens_)*/ {},
      /*decltype(_impl_.tokens_)*/ {},
      /*decltype(_impl_.steamid_)*/ ::uint64_t{0u},
      /*decltype(_impl_.email_msg_type_)*/ 0u,
      /*decltype(_impl_.email_format_)*/ 0u,
      /*decltype(_impl_.source_gc_)*/ 0u,
    } {}
struct CMsgAMSendEmailDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgAMSendEmailDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgAMSendEmailDefaultTypeInternal() {}
  union {
    CMsgAMSendEmail _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgAMSendEmailDefaultTypeInternal _CMsgAMSendEmail_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgAMSendEmailResponse::CMsgAMSendEmailResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.eresult_)*/ 2u,
    } {}
struct CMsgAMSendEmailResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgAMSendEmailResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgAMSendEmailResponseDefaultTypeInternal() {}
  union {
    CMsgAMSendEmailResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgAMSendEmailResponseDefaultTypeInternal _CMsgAMSendEmailResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCGetEmailTemplate::CMsgGCGetEmailTemplate(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.app_id_)*/ 0u,
      /*decltype(_impl_.email_msg_type_)*/ 0u,
      /*decltype(_impl_.email_lang_)*/ 0,
      /*decltype(_impl_.email_format_)*/ 0,
    } {}
struct CMsgGCGetEmailTemplateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCGetEmailTemplateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCGetEmailTemplateDefaultTypeInternal() {}
  union {
    CMsgGCGetEmailTemplate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCGetEmailTemplateDefaultTypeInternal _CMsgGCGetEmailTemplate_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCGetEmailTemplateResponse::CMsgGCGetEmailTemplateResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.template__)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.template_exists_)*/ false,
      /*decltype(_impl_.eresult_)*/ 2u,
    } {}
struct CMsgGCGetEmailTemplateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCGetEmailTemplateResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCGetEmailTemplateResponseDefaultTypeInternal() {}
  union {
    CMsgGCGetEmailTemplateResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCGetEmailTemplateResponseDefaultTypeInternal _CMsgGCGetEmailTemplateResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgAMGrantGuestPasses2::CMsgAMGrantGuestPasses2(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.steam_id_)*/ ::uint64_t{0u},
      /*decltype(_impl_.package_id_)*/ 0u,
      /*decltype(_impl_.passes_to_grant_)*/ 0,
      /*decltype(_impl_.days_to_expiration_)*/ 0,
      /*decltype(_impl_.action_)*/ 0,
    } {}
struct CMsgAMGrantGuestPasses2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgAMGrantGuestPasses2DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgAMGrantGuestPasses2DefaultTypeInternal() {}
  union {
    CMsgAMGrantGuestPasses2 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgAMGrantGuestPasses2DefaultTypeInternal _CMsgAMGrantGuestPasses2_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgAMGrantGuestPasses2Response::CMsgAMGrantGuestPasses2Response(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.passes_granted_)*/ 0,
      /*decltype(_impl_.eresult_)*/ 2,
    } {}
struct CMsgAMGrantGuestPasses2ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgAMGrantGuestPasses2ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgAMGrantGuestPasses2ResponseDefaultTypeInternal() {}
  union {
    CMsgAMGrantGuestPasses2Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgAMGrantGuestPasses2ResponseDefaultTypeInternal _CMsgAMGrantGuestPasses2Response_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CGCSystemMsg_GetAccountDetails::CGCSystemMsg_GetAccountDetails(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.steamid_)*/ ::uint64_t{0u},
      /*decltype(_impl_.appid_)*/ 0u,
    } {}
struct CGCSystemMsg_GetAccountDetailsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CGCSystemMsg_GetAccountDetailsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CGCSystemMsg_GetAccountDetailsDefaultTypeInternal() {}
  union {
    CGCSystemMsg_GetAccountDetails _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CGCSystemMsg_GetAccountDetailsDefaultTypeInternal _CGCSystemMsg_GetAccountDetails_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CGCSystemMsg_GetAccountDetails_Response::CGCSystemMsg_GetAccountDetails_Response(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.account_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.persona_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.currency_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.txn_country_code_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.is_profile_public_)*/ false,
      /*decltype(_impl_.is_inventory_public_)*/ false,
      /*decltype(_impl_.is_vac_banned_)*/ false,
      /*decltype(_impl_.is_cyber_cafe_)*/ false,
      /*decltype(_impl_.is_school_account_)*/ false,
      /*decltype(_impl_.is_limited_)*/ false,
      /*decltype(_impl_.is_subscribed_)*/ false,
      /*decltype(_impl_.is_free_trial_account_)*/ false,
      /*decltype(_impl_.package_)*/ 0u,
      /*decltype(_impl_.free_trial_expiration_)*/ 0u,
      /*decltype(_impl_.is_low_violence_)*/ false,
      /*decltype(_impl_.is_account_locked_down_)*/ false,
      /*decltype(_impl_.is_community_banned_)*/ false,
      /*decltype(_impl_.is_trade_banned_)*/ false,
      /*decltype(_impl_.trade_ban_expiration_)*/ 0u,
      /*decltype(_impl_.accountid_)*/ 0u,
      /*decltype(_impl_.suspension_end_time_)*/ 0u,
      /*decltype(_impl_.steam_level_)*/ 0u,
      /*decltype(_impl_.friend_count_)*/ 0u,
      /*decltype(_impl_.account_creation_time_)*/ 0u,
      /*decltype(_impl_.is_steamguard_enabled_)*/ false,
      /*decltype(_impl_.is_phone_verified_)*/ false,
      /*decltype(_impl_.is_two_factor_auth_enabled_)*/ false,
      /*decltype(_impl_.is_phone_identifying_)*/ false,
      /*decltype(_impl_.two_factor_enabled_time_)*/ 0u,
      /*decltype(_impl_.phone_verification_time_)*/ 0u,
      /*decltype(_impl_.phone_id_)*/ ::uint64_t{0u},
      /*decltype(_impl_.rt_identity_linked_)*/ 0u,
      /*decltype(_impl_.rt_birth_date_)*/ 0u,
      /*decltype(_impl_.has_accepted_china_ssa_)*/ false,
      /*decltype(_impl_.is_banned_steam_china_)*/ false,
      /*decltype(_impl_.eresult_deprecated_)*/ 2u,
    } {}
struct CGCSystemMsg_GetAccountDetails_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CGCSystemMsg_GetAccountDetails_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CGCSystemMsg_GetAccountDetails_ResponseDefaultTypeInternal() {}
  union {
    CGCSystemMsg_GetAccountDetails_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CGCSystemMsg_GetAccountDetails_ResponseDefaultTypeInternal _CGCSystemMsg_GetAccountDetails_Response_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCGetPersonaNames::CMsgGCGetPersonaNames(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.steamids_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CMsgGCGetPersonaNamesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCGetPersonaNamesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCGetPersonaNamesDefaultTypeInternal() {}
  union {
    CMsgGCGetPersonaNames _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCGetPersonaNamesDefaultTypeInternal _CMsgGCGetPersonaNames_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCGetPersonaNames_Response_PersonaName::CMsgGCGetPersonaNames_Response_PersonaName(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.persona_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.steamid_)*/ ::uint64_t{0u},
    } {}
struct CMsgGCGetPersonaNames_Response_PersonaNameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCGetPersonaNames_Response_PersonaNameDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCGetPersonaNames_Response_PersonaNameDefaultTypeInternal() {}
  union {
    CMsgGCGetPersonaNames_Response_PersonaName _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCGetPersonaNames_Response_PersonaNameDefaultTypeInternal _CMsgGCGetPersonaNames_Response_PersonaName_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCGetPersonaNames_Response::CMsgGCGetPersonaNames_Response(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.succeeded_lookups_)*/ {},
      /*decltype(_impl_.failed_lookup_steamids_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CMsgGCGetPersonaNames_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCGetPersonaNames_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCGetPersonaNames_ResponseDefaultTypeInternal() {}
  union {
    CMsgGCGetPersonaNames_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCGetPersonaNames_ResponseDefaultTypeInternal _CMsgGCGetPersonaNames_Response_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCCheckFriendship::CMsgGCCheckFriendship(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.steamid_left_)*/ ::uint64_t{0u},
      /*decltype(_impl_.steamid_right_)*/ ::uint64_t{0u},
    } {}
struct CMsgGCCheckFriendshipDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCheckFriendshipDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCheckFriendshipDefaultTypeInternal() {}
  union {
    CMsgGCCheckFriendship _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCheckFriendshipDefaultTypeInternal _CMsgGCCheckFriendship_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCCheckFriendship_Response::CMsgGCCheckFriendship_Response(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.success_)*/ false,
      /*decltype(_impl_.found_friendship_)*/ false,
    } {}
struct CMsgGCCheckFriendship_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCCheckFriendship_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCCheckFriendship_ResponseDefaultTypeInternal() {}
  union {
    CMsgGCCheckFriendship_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCCheckFriendship_ResponseDefaultTypeInternal _CMsgGCCheckFriendship_Response_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCMsgMasterSetDirectory_SubGC::CMsgGCMsgMasterSetDirectory_SubGC(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.box_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.command_line_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.gc_binary_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.dir_index_)*/ 0u,
    } {}
struct CMsgGCMsgMasterSetDirectory_SubGCDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCMsgMasterSetDirectory_SubGCDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCMsgMasterSetDirectory_SubGCDefaultTypeInternal() {}
  union {
    CMsgGCMsgMasterSetDirectory_SubGC _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCMsgMasterSetDirectory_SubGCDefaultTypeInternal _CMsgGCMsgMasterSetDirectory_SubGC_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCMsgMasterSetDirectory::CMsgGCMsgMasterSetDirectory(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.dir_)*/ {},
      /*decltype(_impl_.master_dir_index_)*/ 0u,
    } {}
struct CMsgGCMsgMasterSetDirectoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCMsgMasterSetDirectoryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCMsgMasterSetDirectoryDefaultTypeInternal() {}
  union {
    CMsgGCMsgMasterSetDirectory _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCMsgMasterSetDirectoryDefaultTypeInternal _CMsgGCMsgMasterSetDirectory_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCMsgMasterSetDirectory_Response::CMsgGCMsgMasterSetDirectory_Response(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.message_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.eresult_)*/ 2,
    } {}
struct CMsgGCMsgMasterSetDirectory_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCMsgMasterSetDirectory_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCMsgMasterSetDirectory_ResponseDefaultTypeInternal() {}
  union {
    CMsgGCMsgMasterSetDirectory_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCMsgMasterSetDirectory_ResponseDefaultTypeInternal _CMsgGCMsgMasterSetDirectory_Response_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCMsgWebAPIJobRequestForwardResponse::CMsgGCMsgWebAPIJobRequestForwardResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.dir_index_)*/ 0u,
    } {}
struct CMsgGCMsgWebAPIJobRequestForwardResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCMsgWebAPIJobRequestForwardResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCMsgWebAPIJobRequestForwardResponseDefaultTypeInternal() {}
  union {
    CMsgGCMsgWebAPIJobRequestForwardResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCMsgWebAPIJobRequestForwardResponseDefaultTypeInternal _CMsgGCMsgWebAPIJobRequestForwardResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CGCSystemMsg_GetPurchaseTrust_Request::CGCSystemMsg_GetPurchaseTrust_Request(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.steamid_)*/ ::uint64_t{0u},
    } {}
struct CGCSystemMsg_GetPurchaseTrust_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CGCSystemMsg_GetPurchaseTrust_RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CGCSystemMsg_GetPurchaseTrust_RequestDefaultTypeInternal() {}
  union {
    CGCSystemMsg_GetPurchaseTrust_Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CGCSystemMsg_GetPurchaseTrust_RequestDefaultTypeInternal _CGCSystemMsg_GetPurchaseTrust_Request_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CGCSystemMsg_GetPurchaseTrust_Response::CGCSystemMsg_GetPurchaseTrust_Response(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.has_prior_purchase_history_)*/ false,
      /*decltype(_impl_.has_no_recent_password_resets_)*/ false,
      /*decltype(_impl_.is_wallet_cash_trusted_)*/ false,
      /*decltype(_impl_.time_all_trusted_)*/ 0u,
    } {}
struct CGCSystemMsg_GetPurchaseTrust_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CGCSystemMsg_GetPurchaseTrust_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CGCSystemMsg_GetPurchaseTrust_ResponseDefaultTypeInternal() {}
  union {
    CGCSystemMsg_GetPurchaseTrust_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CGCSystemMsg_GetPurchaseTrust_ResponseDefaultTypeInternal _CGCSystemMsg_GetPurchaseTrust_Response_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCHAccountVacStatusChange::CMsgGCHAccountVacStatusChange(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.steam_id_)*/ ::uint64_t{0u},
      /*decltype(_impl_.app_id_)*/ 0u,
      /*decltype(_impl_.rtime_vacban_starts_)*/ 0u,
      /*decltype(_impl_.is_banned_now_)*/ false,
      /*decltype(_impl_.is_banned_future_)*/ false,
    } {}
struct CMsgGCHAccountVacStatusChangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCHAccountVacStatusChangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCHAccountVacStatusChangeDefaultTypeInternal() {}
  union {
    CMsgGCHAccountVacStatusChange _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCHAccountVacStatusChangeDefaultTypeInternal _CMsgGCHAccountVacStatusChange_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCGetPartnerAccountLink::CMsgGCGetPartnerAccountLink(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.steamid_)*/ ::uint64_t{0u},
    } {}
struct CMsgGCGetPartnerAccountLinkDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCGetPartnerAccountLinkDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCGetPartnerAccountLinkDefaultTypeInternal() {}
  union {
    CMsgGCGetPartnerAccountLink _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCGetPartnerAccountLinkDefaultTypeInternal _CMsgGCGetPartnerAccountLink_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCGetPartnerAccountLink_Response::CMsgGCGetPartnerAccountLink_Response(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.pwid_)*/ 0u,
      /*decltype(_impl_.nexonid_)*/ 0u,
      /*decltype(_impl_.ageclass_)*/ 0,
      /*decltype(_impl_.is_adult_)*/ false,
      /*decltype(_impl_.id_verified_)*/ true,
    } {}
struct CMsgGCGetPartnerAccountLink_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCGetPartnerAccountLink_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCGetPartnerAccountLink_ResponseDefaultTypeInternal() {}
  union {
    CMsgGCGetPartnerAccountLink_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCGetPartnerAccountLink_ResponseDefaultTypeInternal _CMsgGCGetPartnerAccountLink_Response_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCRoutingInfo::CMsgGCRoutingInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.dir_index_)*/ {},
      /*decltype(_impl_.webapi_param_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.method_)*/ 0,
      /*decltype(_impl_.protobuf_field_)*/ 0u,
      /*decltype(_impl_.fallback_)*/ 1,
    } {}
struct CMsgGCRoutingInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCRoutingInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCRoutingInfoDefaultTypeInternal() {}
  union {
    CMsgGCRoutingInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCRoutingInfoDefaultTypeInternal _CMsgGCRoutingInfo_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCMsgMasterSetWebAPIRouting_Entry::CMsgGCMsgMasterSetWebAPIRouting_Entry(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.interface_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.method_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.routing_)*/ nullptr,
    } {}
struct CMsgGCMsgMasterSetWebAPIRouting_EntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCMsgMasterSetWebAPIRouting_EntryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCMsgMasterSetWebAPIRouting_EntryDefaultTypeInternal() {}
  union {
    CMsgGCMsgMasterSetWebAPIRouting_Entry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCMsgMasterSetWebAPIRouting_EntryDefaultTypeInternal _CMsgGCMsgMasterSetWebAPIRouting_Entry_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCMsgMasterSetWebAPIRouting::CMsgGCMsgMasterSetWebAPIRouting(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.entries_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CMsgGCMsgMasterSetWebAPIRoutingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCMsgMasterSetWebAPIRoutingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCMsgMasterSetWebAPIRoutingDefaultTypeInternal() {}
  union {
    CMsgGCMsgMasterSetWebAPIRouting _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCMsgMasterSetWebAPIRoutingDefaultTypeInternal _CMsgGCMsgMasterSetWebAPIRouting_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCMsgMasterSetClientMsgRouting_Entry::CMsgGCMsgMasterSetClientMsgRouting_Entry(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.routing_)*/ nullptr,
      /*decltype(_impl_.msg_type_)*/ 0u,
    } {}
struct CMsgGCMsgMasterSetClientMsgRouting_EntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCMsgMasterSetClientMsgRouting_EntryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCMsgMasterSetClientMsgRouting_EntryDefaultTypeInternal() {}
  union {
    CMsgGCMsgMasterSetClientMsgRouting_Entry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCMsgMasterSetClientMsgRouting_EntryDefaultTypeInternal _CMsgGCMsgMasterSetClientMsgRouting_Entry_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCMsgMasterSetClientMsgRouting::CMsgGCMsgMasterSetClientMsgRouting(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.entries_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CMsgGCMsgMasterSetClientMsgRoutingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCMsgMasterSetClientMsgRoutingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCMsgMasterSetClientMsgRoutingDefaultTypeInternal() {}
  union {
    CMsgGCMsgMasterSetClientMsgRouting _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCMsgMasterSetClientMsgRoutingDefaultTypeInternal _CMsgGCMsgMasterSetClientMsgRouting_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCMsgMasterSetWebAPIRouting_Response::CMsgGCMsgMasterSetWebAPIRouting_Response(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.eresult_)*/ 2,
    } {}
struct CMsgGCMsgMasterSetWebAPIRouting_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCMsgMasterSetWebAPIRouting_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCMsgMasterSetWebAPIRouting_ResponseDefaultTypeInternal() {}
  union {
    CMsgGCMsgMasterSetWebAPIRouting_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCMsgMasterSetWebAPIRouting_ResponseDefaultTypeInternal _CMsgGCMsgMasterSetWebAPIRouting_Response_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCMsgMasterSetClientMsgRouting_Response::CMsgGCMsgMasterSetClientMsgRouting_Response(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.eresult_)*/ 2,
    } {}
struct CMsgGCMsgMasterSetClientMsgRouting_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCMsgMasterSetClientMsgRouting_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCMsgMasterSetClientMsgRouting_ResponseDefaultTypeInternal() {}
  union {
    CMsgGCMsgMasterSetClientMsgRouting_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCMsgMasterSetClientMsgRouting_ResponseDefaultTypeInternal _CMsgGCMsgMasterSetClientMsgRouting_Response_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCMsgSetOptions_MessageRange::CMsgGCMsgSetOptions_MessageRange(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.low_)*/ 0u,
      /*decltype(_impl_.high_)*/ 0u,
    } {}
struct CMsgGCMsgSetOptions_MessageRangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCMsgSetOptions_MessageRangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCMsgSetOptions_MessageRangeDefaultTypeInternal() {}
  union {
    CMsgGCMsgSetOptions_MessageRange _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCMsgSetOptions_MessageRangeDefaultTypeInternal _CMsgGCMsgSetOptions_MessageRange_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCMsgSetOptions::CMsgGCMsgSetOptions(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.options_)*/ {},
      /*decltype(_impl_.client_msg_ranges_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CMsgGCMsgSetOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCMsgSetOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCMsgSetOptionsDefaultTypeInternal() {}
  union {
    CMsgGCMsgSetOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCMsgSetOptionsDefaultTypeInternal _CMsgGCMsgSetOptions_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCHUpdateSession_ExtraField::CMsgGCHUpdateSession_ExtraField(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.value_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct CMsgGCHUpdateSession_ExtraFieldDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCHUpdateSession_ExtraFieldDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCHUpdateSession_ExtraFieldDefaultTypeInternal() {}
  union {
    CMsgGCHUpdateSession_ExtraField _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCHUpdateSession_ExtraFieldDefaultTypeInternal _CMsgGCHUpdateSession_ExtraField_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCHUpdateSession::CMsgGCHUpdateSession(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.extra_fields_)*/ {},
      /*decltype(_impl_.depot_ids_)*/ {},
      /*decltype(_impl_.steam_id_)*/ ::uint64_t{0u},
      /*decltype(_impl_.app_id_)*/ 0u,
      /*decltype(_impl_.online_)*/ false,
      /*decltype(_impl_.server_steam_id_)*/ ::uint64_t{0u},
      /*decltype(_impl_.server_addr_)*/ 0u,
      /*decltype(_impl_.server_port_)*/ 0u,
      /*decltype(_impl_.os_type_)*/ 0u,
      /*decltype(_impl_.client_addr_)*/ 0u,
      /*decltype(_impl_.owner_id_)*/ ::uint64_t{0u},
      /*decltype(_impl_.cm_session_sysid_)*/ 0u,
      /*decltype(_impl_.cm_session_identifier_)*/ 0u,
    } {}
struct CMsgGCHUpdateSessionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCHUpdateSessionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCHUpdateSessionDefaultTypeInternal() {}
  union {
    CMsgGCHUpdateSession _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCHUpdateSessionDefaultTypeInternal _CMsgGCHUpdateSession_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.other_steamids_)*/ {},
      /*decltype(_impl_.app_instance_count_)*/ 0u,
    } {}
struct CMsgNotificationOfSuspiciousActivity_MultipleGameInstancesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgNotificationOfSuspiciousActivity_MultipleGameInstancesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgNotificationOfSuspiciousActivity_MultipleGameInstancesDefaultTypeInternal() {}
  union {
    CMsgNotificationOfSuspiciousActivity_MultipleGameInstances _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgNotificationOfSuspiciousActivity_MultipleGameInstancesDefaultTypeInternal _CMsgNotificationOfSuspiciousActivity_MultipleGameInstances_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgNotificationOfSuspiciousActivity::CMsgNotificationOfSuspiciousActivity(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.multiple_instances_)*/ nullptr,
      /*decltype(_impl_.steamid_)*/ ::uint64_t{0u},
      /*decltype(_impl_.appid_)*/ 0u,
    } {}
struct CMsgNotificationOfSuspiciousActivityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgNotificationOfSuspiciousActivityDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgNotificationOfSuspiciousActivityDefaultTypeInternal() {}
  union {
    CMsgNotificationOfSuspiciousActivity _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgNotificationOfSuspiciousActivityDefaultTypeInternal _CMsgNotificationOfSuspiciousActivity_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgDPPartnerMicroTxns_PartnerMicroTxn::CMsgDPPartnerMicroTxns_PartnerMicroTxn(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.country_code_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.region_code_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.init_time_)*/ 0u,
      /*decltype(_impl_.last_update_time_)*/ 0u,
      /*decltype(_impl_.txn_id_)*/ ::uint64_t{0u},
      /*decltype(_impl_.account_id_)*/ 0u,
      /*decltype(_impl_.line_item_)*/ 0u,
      /*decltype(_impl_.item_id_)*/ ::uint64_t{0u},
      /*decltype(_impl_.price_)*/ ::uint64_t{0u},
      /*decltype(_impl_.tax_)*/ ::uint64_t{0u},
      /*decltype(_impl_.def_index_)*/ 0u,
      /*decltype(_impl_.purchase_type_)*/ 0u,
      /*decltype(_impl_.price_usd_)*/ ::uint64_t{0u},
      /*decltype(_impl_.tax_usd_)*/ ::uint64_t{0u},
      /*decltype(_impl_.steam_txn_type_)*/ 0u,
      /*decltype(_impl_.quantity_)*/ 0,
      /*decltype(_impl_.ref_trans_id_)*/ ::uint64_t{0u},
    } {}
struct CMsgDPPartnerMicroTxns_PartnerMicroTxnDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgDPPartnerMicroTxns_PartnerMicroTxnDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgDPPartnerMicroTxns_PartnerMicroTxnDefaultTypeInternal() {}
  union {
    CMsgDPPartnerMicroTxns_PartnerMicroTxn _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgDPPartnerMicroTxns_PartnerMicroTxnDefaultTypeInternal _CMsgDPPartnerMicroTxns_PartnerMicroTxn_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgDPPartnerMicroTxns_PartnerInfo::CMsgDPPartnerMicroTxns_PartnerInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.partner_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.currency_code_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.currency_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.partner_id_)*/ 0u,
    } {}
struct CMsgDPPartnerMicroTxns_PartnerInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgDPPartnerMicroTxns_PartnerInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgDPPartnerMicroTxns_PartnerInfoDefaultTypeInternal() {}
  union {
    CMsgDPPartnerMicroTxns_PartnerInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgDPPartnerMicroTxns_PartnerInfoDefaultTypeInternal _CMsgDPPartnerMicroTxns_PartnerInfo_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgDPPartnerMicroTxns::CMsgDPPartnerMicroTxns(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.transactions_)*/ {},
      /*decltype(_impl_.gc_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.partner_)*/ nullptr,
      /*decltype(_impl_.appid_)*/ 0u,
    } {}
struct CMsgDPPartnerMicroTxnsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgDPPartnerMicroTxnsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgDPPartnerMicroTxnsDefaultTypeInternal() {}
  union {
    CMsgDPPartnerMicroTxns _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgDPPartnerMicroTxnsDefaultTypeInternal _CMsgDPPartnerMicroTxns_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgDPPartnerMicroTxnsResponse::CMsgDPPartnerMicroTxnsResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.eerrorcode_)*/ 0,
      /*decltype(_impl_.eresult_)*/ 2u,
    } {}
struct CMsgDPPartnerMicroTxnsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgDPPartnerMicroTxnsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgDPPartnerMicroTxnsResponseDefaultTypeInternal() {}
  union {
    CMsgDPPartnerMicroTxnsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgDPPartnerMicroTxnsResponseDefaultTypeInternal _CMsgDPPartnerMicroTxnsResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CChinaAgreementSessions_StartAgreementSessionInGame_Request::CChinaAgreementSessions_StartAgreementSessionInGame_Request(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.client_ipaddress_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.steamid_)*/ ::uint64_t{0u},
      /*decltype(_impl_.appid_)*/ 0u,
    } {}
struct CChinaAgreementSessions_StartAgreementSessionInGame_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CChinaAgreementSessions_StartAgreementSessionInGame_RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CChinaAgreementSessions_StartAgreementSessionInGame_RequestDefaultTypeInternal() {}
  union {
    CChinaAgreementSessions_StartAgreementSessionInGame_Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CChinaAgreementSessions_StartAgreementSessionInGame_RequestDefaultTypeInternal _CChinaAgreementSessions_StartAgreementSessionInGame_Request_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CChinaAgreementSessions_StartAgreementSessionInGame_Response::CChinaAgreementSessions_StartAgreementSessionInGame_Response(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.agreement_url_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct CChinaAgreementSessions_StartAgreementSessionInGame_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CChinaAgreementSessions_StartAgreementSessionInGame_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CChinaAgreementSessions_StartAgreementSessionInGame_ResponseDefaultTypeInternal() {}
  union {
    CChinaAgreementSessions_StartAgreementSessionInGame_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CChinaAgreementSessions_StartAgreementSessionInGame_ResponseDefaultTypeInternal _CChinaAgreementSessions_StartAgreementSessionInGame_Response_default_instance_;
static ::_pb::Metadata file_level_metadata_steammessages_2eproto[81];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_steammessages_2eproto[4];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_steammessages_2eproto = nullptr;
const ::uint32_t TableStruct_steammessages_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::CMsgProtoBufHeader, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgProtoBufHeader, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgProtoBufHeader, _impl_.client_steam_id_),
    PROTOBUF_FIELD_OFFSET(::CMsgProtoBufHeader, _impl_.client_session_id_),
    PROTOBUF_FIELD_OFFSET(::CMsgProtoBufHeader, _impl_.source_app_id_),
    PROTOBUF_FIELD_OFFSET(::CMsgProtoBufHeader, _impl_.job_id_source_),
    PROTOBUF_FIELD_OFFSET(::CMsgProtoBufHeader, _impl_.job_id_target_),
    PROTOBUF_FIELD_OFFSET(::CMsgProtoBufHeader, _impl_.target_job_name_),
    PROTOBUF_FIELD_OFFSET(::CMsgProtoBufHeader, _impl_.eresult_),
    PROTOBUF_FIELD_OFFSET(::CMsgProtoBufHeader, _impl_.error_message_),
    PROTOBUF_FIELD_OFFSET(::CMsgProtoBufHeader, _impl_.ip_),
    PROTOBUF_FIELD_OFFSET(::CMsgProtoBufHeader, _impl_.gc_msg_src_),
    PROTOBUF_FIELD_OFFSET(::CMsgProtoBufHeader, _impl_.gc_dir_index_source_),
    2,
    3,
    4,
    9,
    10,
    0,
    8,
    1,
    5,
    6,
    7,
    PROTOBUF_FIELD_OFFSET(::CMsgWebAPIKey, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgWebAPIKey, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgWebAPIKey, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::CMsgWebAPIKey, _impl_.account_id_),
    PROTOBUF_FIELD_OFFSET(::CMsgWebAPIKey, _impl_.publisher_group_id_),
    PROTOBUF_FIELD_OFFSET(::CMsgWebAPIKey, _impl_.key_id_),
    PROTOBUF_FIELD_OFFSET(::CMsgWebAPIKey, _impl_.domain_),
    4,
    1,
    2,
    3,
    0,
    PROTOBUF_FIELD_OFFSET(::CMsgHttpRequest_RequestHeader, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgHttpRequest_RequestHeader, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgHttpRequest_RequestHeader, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::CMsgHttpRequest_RequestHeader, _impl_.value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::CMsgHttpRequest_QueryParam, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgHttpRequest_QueryParam, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgHttpRequest_QueryParam, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::CMsgHttpRequest_QueryParam, _impl_.value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::CMsgHttpRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgHttpRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgHttpRequest, _impl_.request_method_),
    PROTOBUF_FIELD_OFFSET(::CMsgHttpRequest, _impl_.hostname_),
    PROTOBUF_FIELD_OFFSET(::CMsgHttpRequest, _impl_.url_),
    PROTOBUF_FIELD_OFFSET(::CMsgHttpRequest, _impl_.headers_),
    PROTOBUF_FIELD_OFFSET(::CMsgHttpRequest, _impl_.get_params_),
    PROTOBUF_FIELD_OFFSET(::CMsgHttpRequest, _impl_.post_params_),
    PROTOBUF_FIELD_OFFSET(::CMsgHttpRequest, _impl_.body_),
    PROTOBUF_FIELD_OFFSET(::CMsgHttpRequest, _impl_.absolute_timeout_),
    3,
    0,
    1,
    ~0u,
    ~0u,
    ~0u,
    2,
    4,
    PROTOBUF_FIELD_OFFSET(::CMsgWebAPIRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgWebAPIRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgWebAPIRequest, _impl_.interface_name_),
    PROTOBUF_FIELD_OFFSET(::CMsgWebAPIRequest, _impl_.method_name_),
    PROTOBUF_FIELD_OFFSET(::CMsgWebAPIRequest, _impl_.version_),
    PROTOBUF_FIELD_OFFSET(::CMsgWebAPIRequest, _impl_.api_key_),
    PROTOBUF_FIELD_OFFSET(::CMsgWebAPIRequest, _impl_.request_),
    PROTOBUF_FIELD_OFFSET(::CMsgWebAPIRequest, _impl_.routing_app_id_),
    0,
    1,
    4,
    2,
    3,
    5,
    PROTOBUF_FIELD_OFFSET(::CMsgHttpResponse_ResponseHeader, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgHttpResponse_ResponseHeader, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgHttpResponse_ResponseHeader, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::CMsgHttpResponse_ResponseHeader, _impl_.value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::CMsgHttpResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgHttpResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgHttpResponse, _impl_.status_code_),
    PROTOBUF_FIELD_OFFSET(::CMsgHttpResponse, _impl_.headers_),
    PROTOBUF_FIELD_OFFSET(::CMsgHttpResponse, _impl_.body_),
    1,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::CMsgAMFindAccounts, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMFindAccounts, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgAMFindAccounts, _impl_.search_type_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMFindAccounts, _impl_.search_string_),
    1,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CMsgAMFindAccountsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgAMFindAccountsResponse, _impl_.steam_id_),
    PROTOBUF_FIELD_OFFSET(::CMsgNotifyWatchdog, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgNotifyWatchdog, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgNotifyWatchdog, _impl_.source_),
    PROTOBUF_FIELD_OFFSET(::CMsgNotifyWatchdog, _impl_.alert_type_),
    PROTOBUF_FIELD_OFFSET(::CMsgNotifyWatchdog, _impl_.alert_destination_),
    PROTOBUF_FIELD_OFFSET(::CMsgNotifyWatchdog, _impl_.critical_),
    PROTOBUF_FIELD_OFFSET(::CMsgNotifyWatchdog, _impl_.time_),
    PROTOBUF_FIELD_OFFSET(::CMsgNotifyWatchdog, _impl_.appid_),
    PROTOBUF_FIELD_OFFSET(::CMsgNotifyWatchdog, _impl_.text_),
    1,
    2,
    3,
    4,
    5,
    6,
    0,
    PROTOBUF_FIELD_OFFSET(::CMsgAMGetLicenses, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMGetLicenses, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgAMGetLicenses, _impl_.steamid_),
    0,
    PROTOBUF_FIELD_OFFSET(::CMsgPackageLicense, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgPackageLicense, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgPackageLicense, _impl_.package_id_),
    PROTOBUF_FIELD_OFFSET(::CMsgPackageLicense, _impl_.time_created_),
    PROTOBUF_FIELD_OFFSET(::CMsgPackageLicense, _impl_.owner_id_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::CMsgAMGetLicensesResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMGetLicensesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgAMGetLicensesResponse, _impl_.license_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMGetLicensesResponse, _impl_.result_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::CMsgAMGetUserGameStats, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMGetUserGameStats, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgAMGetUserGameStats, _impl_.steam_id_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMGetUserGameStats, _impl_.game_id_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMGetUserGameStats, _impl_.stats_),
    0,
    1,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse_Stats, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse_Stats, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse_Stats, _impl_.stat_id_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse_Stats, _impl_.stat_value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse_Achievement_Blocks, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse_Achievement_Blocks, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse_Achievement_Blocks, _impl_.achievement_id_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse_Achievement_Blocks, _impl_.achievement_bit_id_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse_Achievement_Blocks, _impl_.unlock_time_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse, _impl_.steam_id_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse, _impl_.game_id_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse, _impl_.eresult_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse, _impl_.stats_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse, _impl_.achievement_blocks_),
    0,
    1,
    2,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetCommandList, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetCommandList, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetCommandList, _impl_.app_id_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetCommandList, _impl_.command_prefix_),
    1,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetCommandListResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetCommandListResponse, _impl_.command_name_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedGet, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedGet, _impl_.keys_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedGetResponse_ValueTag, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedGetResponse_ValueTag, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedGetResponse_ValueTag, _impl_.found_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedGetResponse_ValueTag, _impl_.value_),
    1,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedGetResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedGetResponse, _impl_.values_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedSet_KeyPair, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedSet_KeyPair, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedSet_KeyPair, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedSet_KeyPair, _impl_.value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedSet, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedSet, _impl_.keys_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedDelete, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedDelete, _impl_.keys_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedStats, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, _impl_.curr_connections_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, _impl_.cmd_get_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, _impl_.cmd_set_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, _impl_.cmd_flush_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, _impl_.get_hits_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, _impl_.get_misses_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, _impl_.delete_hits_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, _impl_.delete_misses_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, _impl_.bytes_read_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, _impl_.bytes_written_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, _impl_.limit_maxbytes_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, _impl_.curr_items_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, _impl_.evictions_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, _impl_.bytes_),
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    PROTOBUF_FIELD_OFFSET(::CGCMsgSQLStats, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgSQLStats, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CGCMsgSQLStats, _impl_.schema_catalog_),
    0,
    PROTOBUF_FIELD_OFFSET(::CGCMsgSQLStatsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgSQLStatsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CGCMsgSQLStatsResponse, _impl_.threads_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgSQLStatsResponse, _impl_.threads_connected_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgSQLStatsResponse, _impl_.threads_active_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgSQLStatsResponse, _impl_.operations_submitted_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgSQLStatsResponse, _impl_.prepared_statements_executed_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgSQLStatsResponse, _impl_.non_prepared_statements_executed_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgSQLStatsResponse, _impl_.deadlock_retries_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgSQLStatsResponse, _impl_.operations_timed_out_in_queue_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgSQLStatsResponse, _impl_.errors_),
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    PROTOBUF_FIELD_OFFSET(::CMsgAMAddFreeLicense, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMAddFreeLicense, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgAMAddFreeLicense, _impl_.steamid_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMAddFreeLicense, _impl_.ip_public_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMAddFreeLicense, _impl_.packageid_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMAddFreeLicense, _impl_.store_country_code_),
    1,
    2,
    3,
    0,
    PROTOBUF_FIELD_OFFSET(::CMsgAMAddFreeLicenseResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMAddFreeLicenseResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgAMAddFreeLicenseResponse, _impl_.eresult_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMAddFreeLicenseResponse, _impl_.purchase_result_detail_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMAddFreeLicenseResponse, _impl_.transid_),
    2,
    1,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CGCMsgGetIPLocation, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CGCMsgGetIPLocation, _impl_.ips_),
    PROTOBUF_FIELD_OFFSET(::CIPLocationInfo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CIPLocationInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CIPLocationInfo, _impl_.ip_),
    PROTOBUF_FIELD_OFFSET(::CIPLocationInfo, _impl_.latitude_),
    PROTOBUF_FIELD_OFFSET(::CIPLocationInfo, _impl_.longitude_),
    PROTOBUF_FIELD_OFFSET(::CIPLocationInfo, _impl_.country_),
    PROTOBUF_FIELD_OFFSET(::CIPLocationInfo, _impl_.state_),
    PROTOBUF_FIELD_OFFSET(::CIPLocationInfo, _impl_.city_),
    3,
    4,
    5,
    0,
    1,
    2,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CGCMsgGetIPLocationResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CGCMsgGetIPLocationResponse, _impl_.infos_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgSystemStatsSchema, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgSystemStatsSchema, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CGCMsgSystemStatsSchema, _impl_.gc_app_id_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgSystemStatsSchema, _impl_.schema_kv_),
    1,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CGCMsgGetSystemStats, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CGCMsgGetSystemStatsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgGetSystemStatsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CGCMsgGetSystemStatsResponse, _impl_.gc_app_id_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgGetSystemStatsResponse, _impl_.stats_kv_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgGetSystemStatsResponse, _impl_.active_jobs_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgGetSystemStatsResponse, _impl_.yielding_jobs_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgGetSystemStatsResponse, _impl_.user_sessions_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgGetSystemStatsResponse, _impl_.game_server_sessions_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgGetSystemStatsResponse, _impl_.socaches_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgGetSystemStatsResponse, _impl_.socaches_to_unload_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgGetSystemStatsResponse, _impl_.socaches_loading_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgGetSystemStatsResponse, _impl_.writeback_queue_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgGetSystemStatsResponse, _impl_.steamid_locks_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgGetSystemStatsResponse, _impl_.logon_queue_),
    PROTOBUF_FIELD_OFFSET(::CGCMsgGetSystemStatsResponse, _impl_.logon_jobs_),
    1,
    0,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    PROTOBUF_FIELD_OFFSET(::CMsgAMSendEmail_ReplacementToken, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMSendEmail_ReplacementToken, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgAMSendEmail_ReplacementToken, _impl_.token_name_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMSendEmail_ReplacementToken, _impl_.token_value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::CMsgAMSendEmail_PersonaNameReplacementToken, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMSendEmail_PersonaNameReplacementToken, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgAMSendEmail_PersonaNameReplacementToken, _impl_.steamid_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMSendEmail_PersonaNameReplacementToken, _impl_.token_name_),
    1,
    0,
    PROTOBUF_FIELD_OFFSET(::CMsgAMSendEmail, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMSendEmail, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgAMSendEmail, _impl_.steamid_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMSendEmail, _impl_.email_msg_type_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMSendEmail, _impl_.email_format_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMSendEmail, _impl_.persona_name_tokens_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMSendEmail, _impl_.source_gc_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMSendEmail, _impl_.tokens_),
    0,
    1,
    2,
    ~0u,
    3,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::CMsgAMSendEmailResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMSendEmailResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgAMSendEmailResponse, _impl_.eresult_),
    0,
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetEmailTemplate, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetEmailTemplate, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetEmailTemplate, _impl_.app_id_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetEmailTemplate, _impl_.email_msg_type_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetEmailTemplate, _impl_.email_lang_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetEmailTemplate, _impl_.email_format_),
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetEmailTemplateResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetEmailTemplateResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetEmailTemplateResponse, _impl_.eresult_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetEmailTemplateResponse, _impl_.template_exists_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetEmailTemplateResponse, _impl_.template__),
    2,
    1,
    0,
    PROTOBUF_FIELD_OFFSET(::CMsgAMGrantGuestPasses2, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMGrantGuestPasses2, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgAMGrantGuestPasses2, _impl_.steam_id_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMGrantGuestPasses2, _impl_.package_id_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMGrantGuestPasses2, _impl_.passes_to_grant_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMGrantGuestPasses2, _impl_.days_to_expiration_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMGrantGuestPasses2, _impl_.action_),
    0,
    1,
    2,
    3,
    4,
    PROTOBUF_FIELD_OFFSET(::CMsgAMGrantGuestPasses2Response, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMGrantGuestPasses2Response, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgAMGrantGuestPasses2Response, _impl_.eresult_),
    PROTOBUF_FIELD_OFFSET(::CMsgAMGrantGuestPasses2Response, _impl_.passes_granted_),
    1,
    0,
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails, _impl_.steamid_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails, _impl_.appid_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.eresult_deprecated_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.account_name_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.persona_name_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.is_profile_public_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.is_inventory_public_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.is_vac_banned_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.is_cyber_cafe_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.is_school_account_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.is_limited_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.is_subscribed_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.package_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.is_free_trial_account_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.free_trial_expiration_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.is_low_violence_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.is_account_locked_down_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.is_community_banned_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.is_trade_banned_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.trade_ban_expiration_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.accountid_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.suspension_end_time_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.currency_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.steam_level_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.friend_count_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.account_creation_time_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.is_steamguard_enabled_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.is_phone_verified_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.is_two_factor_auth_enabled_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.two_factor_enabled_time_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.phone_verification_time_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.phone_id_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.is_phone_identifying_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.rt_identity_linked_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.rt_birth_date_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.txn_country_code_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.has_accepted_china_ssa_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _impl_.is_banned_steam_china_),
    35,
    0,
    1,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    12,
    11,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    20,
    2,
    21,
    22,
    23,
    24,
    25,
    26,
    28,
    29,
    30,
    27,
    31,
    32,
    3,
    33,
    34,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetPersonaNames, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetPersonaNames, _impl_.steamids_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetPersonaNames_Response_PersonaName, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetPersonaNames_Response_PersonaName, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetPersonaNames_Response_PersonaName, _impl_.steamid_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetPersonaNames_Response_PersonaName, _impl_.persona_name_),
    1,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetPersonaNames_Response, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetPersonaNames_Response, _impl_.succeeded_lookups_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetPersonaNames_Response, _impl_.failed_lookup_steamids_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCCheckFriendship, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCCheckFriendship, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCCheckFriendship, _impl_.steamid_left_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCCheckFriendship, _impl_.steamid_right_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::CMsgGCCheckFriendship_Response, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCCheckFriendship_Response, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCCheckFriendship_Response, _impl_.success_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCCheckFriendship_Response, _impl_.found_friendship_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetDirectory_SubGC, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetDirectory_SubGC, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetDirectory_SubGC, _impl_.dir_index_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetDirectory_SubGC, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetDirectory_SubGC, _impl_.box_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetDirectory_SubGC, _impl_.command_line_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetDirectory_SubGC, _impl_.gc_binary_),
    4,
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetDirectory, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetDirectory, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetDirectory, _impl_.master_dir_index_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetDirectory, _impl_.dir_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetDirectory_Response, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetDirectory_Response, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetDirectory_Response, _impl_.eresult_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetDirectory_Response, _impl_.message_),
    1,
    0,
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgWebAPIJobRequestForwardResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgWebAPIJobRequestForwardResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgWebAPIJobRequestForwardResponse, _impl_.dir_index_),
    0,
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetPurchaseTrust_Request, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetPurchaseTrust_Request, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetPurchaseTrust_Request, _impl_.steamid_),
    0,
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetPurchaseTrust_Response, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetPurchaseTrust_Response, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetPurchaseTrust_Response, _impl_.has_prior_purchase_history_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetPurchaseTrust_Response, _impl_.has_no_recent_password_resets_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetPurchaseTrust_Response, _impl_.is_wallet_cash_trusted_),
    PROTOBUF_FIELD_OFFSET(::CGCSystemMsg_GetPurchaseTrust_Response, _impl_.time_all_trusted_),
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::CMsgGCHAccountVacStatusChange, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHAccountVacStatusChange, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCHAccountVacStatusChange, _impl_.steam_id_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHAccountVacStatusChange, _impl_.app_id_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHAccountVacStatusChange, _impl_.rtime_vacban_starts_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHAccountVacStatusChange, _impl_.is_banned_now_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHAccountVacStatusChange, _impl_.is_banned_future_),
    0,
    1,
    2,
    3,
    4,
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetPartnerAccountLink, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetPartnerAccountLink, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetPartnerAccountLink, _impl_.steamid_),
    0,
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetPartnerAccountLink_Response, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetPartnerAccountLink_Response, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetPartnerAccountLink_Response, _impl_.pwid_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetPartnerAccountLink_Response, _impl_.nexonid_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetPartnerAccountLink_Response, _impl_.ageclass_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetPartnerAccountLink_Response, _impl_.id_verified_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCGetPartnerAccountLink_Response, _impl_.is_adult_),
    0,
    1,
    2,
    4,
    3,
    PROTOBUF_FIELD_OFFSET(::CMsgGCRoutingInfo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCRoutingInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCRoutingInfo, _impl_.dir_index_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCRoutingInfo, _impl_.method_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCRoutingInfo, _impl_.fallback_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCRoutingInfo, _impl_.protobuf_field_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCRoutingInfo, _impl_.webapi_param_),
    ~0u,
    1,
    3,
    2,
    0,
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetWebAPIRouting_Entry, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetWebAPIRouting_Entry, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetWebAPIRouting_Entry, _impl_.interface_name_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetWebAPIRouting_Entry, _impl_.method_name_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetWebAPIRouting_Entry, _impl_.routing_),
    0,
    1,
    2,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetWebAPIRouting, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetWebAPIRouting, _impl_.entries_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetClientMsgRouting_Entry, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetClientMsgRouting_Entry, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetClientMsgRouting_Entry, _impl_.msg_type_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetClientMsgRouting_Entry, _impl_.routing_),
    1,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetClientMsgRouting, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetClientMsgRouting, _impl_.entries_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetWebAPIRouting_Response, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetWebAPIRouting_Response, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetWebAPIRouting_Response, _impl_.eresult_),
    0,
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetClientMsgRouting_Response, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetClientMsgRouting_Response, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgMasterSetClientMsgRouting_Response, _impl_.eresult_),
    0,
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgSetOptions_MessageRange, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgSetOptions_MessageRange, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgSetOptions_MessageRange, _impl_.low_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgSetOptions_MessageRange, _impl_.high_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgSetOptions, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgSetOptions, _impl_.options_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCMsgSetOptions, _impl_.client_msg_ranges_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHUpdateSession_ExtraField, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHUpdateSession_ExtraField, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCHUpdateSession_ExtraField, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHUpdateSession_ExtraField, _impl_.value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::CMsgGCHUpdateSession, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHUpdateSession, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCHUpdateSession, _impl_.steam_id_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHUpdateSession, _impl_.app_id_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHUpdateSession, _impl_.online_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHUpdateSession, _impl_.server_steam_id_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHUpdateSession, _impl_.server_addr_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHUpdateSession, _impl_.server_port_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHUpdateSession, _impl_.os_type_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHUpdateSession, _impl_.client_addr_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHUpdateSession, _impl_.extra_fields_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHUpdateSession, _impl_.owner_id_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHUpdateSession, _impl_.cm_session_sysid_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHUpdateSession, _impl_.cm_session_identifier_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHUpdateSession, _impl_.depot_ids_),
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    ~0u,
    8,
    9,
    10,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances, _impl_.app_instance_count_),
    PROTOBUF_FIELD_OFFSET(::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances, _impl_.other_steamids_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::CMsgNotificationOfSuspiciousActivity, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgNotificationOfSuspiciousActivity, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgNotificationOfSuspiciousActivity, _impl_.steamid_),
    PROTOBUF_FIELD_OFFSET(::CMsgNotificationOfSuspiciousActivity, _impl_.appid_),
    PROTOBUF_FIELD_OFFSET(::CMsgNotificationOfSuspiciousActivity, _impl_.multiple_instances_),
    1,
    2,
    0,
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns_PartnerMicroTxn, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.init_time_),
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.last_update_time_),
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.txn_id_),
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.account_id_),
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.line_item_),
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.item_id_),
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.def_index_),
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.price_),
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.tax_),
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.price_usd_),
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.tax_usd_),
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.purchase_type_),
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.steam_txn_type_),
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.country_code_),
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.region_code_),
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.quantity_),
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.ref_trans_id_),
    2,
    3,
    4,
    5,
    6,
    7,
    10,
    8,
    9,
    12,
    13,
    11,
    14,
    0,
    1,
    15,
    16,
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns_PartnerInfo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns_PartnerInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns_PartnerInfo, _impl_.partner_id_),
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns_PartnerInfo, _impl_.partner_name_),
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns_PartnerInfo, _impl_.currency_code_),
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns_PartnerInfo, _impl_.currency_name_),
    3,
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns, _impl_.appid_),
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns, _impl_.gc_name_),
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns, _impl_.partner_),
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxns, _impl_.transactions_),
    2,
    0,
    1,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxnsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxnsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxnsResponse, _impl_.eresult_),
    PROTOBUF_FIELD_OFFSET(::CMsgDPPartnerMicroTxnsResponse, _impl_.eerrorcode_),
    1,
    0,
    PROTOBUF_FIELD_OFFSET(::CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CChinaAgreementSessions_StartAgreementSessionInGame_Request, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_.appid_),
    PROTOBUF_FIELD_OFFSET(::CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_.steamid_),
    PROTOBUF_FIELD_OFFSET(::CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_.client_ipaddress_),
    2,
    1,
    0,
    PROTOBUF_FIELD_OFFSET(::CChinaAgreementSessions_StartAgreementSessionInGame_Response, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CChinaAgreementSessions_StartAgreementSessionInGame_Response, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CChinaAgreementSessions_StartAgreementSessionInGame_Response, _impl_.agreement_url_),
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 19, -1, sizeof(::CMsgProtoBufHeader)},
        {30, 43, -1, sizeof(::CMsgWebAPIKey)},
        {48, 58, -1, sizeof(::CMsgHttpRequest_RequestHeader)},
        {60, 70, -1, sizeof(::CMsgHttpRequest_QueryParam)},
        {72, 88, -1, sizeof(::CMsgHttpRequest)},
        {96, 110, -1, sizeof(::CMsgWebAPIRequest)},
        {116, 126, -1, sizeof(::CMsgHttpResponse_ResponseHeader)},
        {128, 139, -1, sizeof(::CMsgHttpResponse)},
        {142, 152, -1, sizeof(::CMsgAMFindAccounts)},
        {154, -1, -1, sizeof(::CMsgAMFindAccountsResponse)},
        {163, 178, -1, sizeof(::CMsgNotifyWatchdog)},
        {185, 194, -1, sizeof(::CMsgAMGetLicenses)},
        {195, 206, -1, sizeof(::CMsgPackageLicense)},
        {209, 219, -1, sizeof(::CMsgAMGetLicensesResponse)},
        {221, 232, -1, sizeof(::CMsgAMGetUserGameStats)},
        {235, 245, -1, sizeof(::CMsgAMGetUserGameStatsResponse_Stats)},
        {247, 258, -1, sizeof(::CMsgAMGetUserGameStatsResponse_Achievement_Blocks)},
        {261, 274, -1, sizeof(::CMsgAMGetUserGameStatsResponse)},
        {279, 289, -1, sizeof(::CMsgGCGetCommandList)},
        {291, -1, -1, sizeof(::CMsgGCGetCommandListResponse)},
        {300, -1, -1, sizeof(::CGCMsgMemCachedGet)},
        {309, 319, -1, sizeof(::CGCMsgMemCachedGetResponse_ValueTag)},
        {321, -1, -1, sizeof(::CGCMsgMemCachedGetResponse)},
        {330, 340, -1, sizeof(::CGCMsgMemCachedSet_KeyPair)},
        {342, -1, -1, sizeof(::CGCMsgMemCachedSet)},
        {351, -1, -1, sizeof(::CGCMsgMemCachedDelete)},
        {360, -1, -1, sizeof(::CGCMsgMemCachedStats)},
        {368, 390, -1, sizeof(::CGCMsgMemCachedStatsResponse)},
        {404, 413, -1, sizeof(::CGCMsgSQLStats)},
        {414, 431, -1, sizeof(::CGCMsgSQLStatsResponse)},
        {440, 452, -1, sizeof(::CMsgAMAddFreeLicense)},
        {456, 467, -1, sizeof(::CMsgAMAddFreeLicenseResponse)},
        {470, -1, -1, sizeof(::CGCMsgGetIPLocation)},
        {479, 493, -1, sizeof(::CIPLocationInfo)},
        {499, -1, -1, sizeof(::CGCMsgGetIPLocationResponse)},
        {508, 518, -1, sizeof(::CGCMsgSystemStatsSchema)},
        {520, -1, -1, sizeof(::CGCMsgGetSystemStats)},
        {528, 549, -1, sizeof(::CGCMsgGetSystemStatsResponse)},
        {562, 572, -1, sizeof(::CMsgAMSendEmail_ReplacementToken)},
        {574, 584, -1, sizeof(::CMsgAMSendEmail_PersonaNameReplacementToken)},
        {586, 600, -1, sizeof(::CMsgAMSendEmail)},
        {606, 615, -1, sizeof(::CMsgAMSendEmailResponse)},
        {616, 628, -1, sizeof(::CMsgGCGetEmailTemplate)},
        {632, 643, -1, sizeof(::CMsgGCGetEmailTemplateResponse)},
        {646, 659, -1, sizeof(::CMsgAMGrantGuestPasses2)},
        {664, 674, -1, sizeof(::CMsgAMGrantGuestPasses2Response)},
        {676, 686, -1, sizeof(::CGCSystemMsg_GetAccountDetails)},
        {688, 732, -1, sizeof(::CGCSystemMsg_GetAccountDetails_Response)},
        {768, -1, -1, sizeof(::CMsgGCGetPersonaNames)},
        {777, 787, -1, sizeof(::CMsgGCGetPersonaNames_Response_PersonaName)},
        {789, -1, -1, sizeof(::CMsgGCGetPersonaNames_Response)},
        {799, 809, -1, sizeof(::CMsgGCCheckFriendship)},
        {811, 821, -1, sizeof(::CMsgGCCheckFriendship_Response)},
        {823, 836, -1, sizeof(::CMsgGCMsgMasterSetDirectory_SubGC)},
        {841, 851, -1, sizeof(::CMsgGCMsgMasterSetDirectory)},
        {853, 863, -1, sizeof(::CMsgGCMsgMasterSetDirectory_Response)},
        {865, 874, -1, sizeof(::CMsgGCMsgWebAPIJobRequestForwardResponse)},
        {875, 884, -1, sizeof(::CGCSystemMsg_GetPurchaseTrust_Request)},
        {885, 897, -1, sizeof(::CGCSystemMsg_GetPurchaseTrust_Response)},
        {901, 914, -1, sizeof(::CMsgGCHAccountVacStatusChange)},
        {919, 928, -1, sizeof(::CMsgGCGetPartnerAccountLink)},
        {929, 942, -1, sizeof(::CMsgGCGetPartnerAccountLink_Response)},
        {947, 960, -1, sizeof(::CMsgGCRoutingInfo)},
        {965, 976, -1, sizeof(::CMsgGCMsgMasterSetWebAPIRouting_Entry)},
        {979, -1, -1, sizeof(::CMsgGCMsgMasterSetWebAPIRouting)},
        {988, 998, -1, sizeof(::CMsgGCMsgMasterSetClientMsgRouting_Entry)},
        {1000, -1, -1, sizeof(::CMsgGCMsgMasterSetClientMsgRouting)},
        {1009, 1018, -1, sizeof(::CMsgGCMsgMasterSetWebAPIRouting_Response)},
        {1019, 1028, -1, sizeof(::CMsgGCMsgMasterSetClientMsgRouting_Response)},
        {1029, 1039, -1, sizeof(::CMsgGCMsgSetOptions_MessageRange)},
        {1041, -1, -1, sizeof(::CMsgGCMsgSetOptions)},
        {1051, 1061, -1, sizeof(::CMsgGCHUpdateSession_ExtraField)},
        {1063, 1084, -1, sizeof(::CMsgGCHUpdateSession)},
        {1097, 1107, -1, sizeof(::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances)},
        {1109, 1120, -1, sizeof(::CMsgNotificationOfSuspiciousActivity)},
        {1123, 1148, -1, sizeof(::CMsgDPPartnerMicroTxns_PartnerMicroTxn)},
        {1165, 1177, -1, sizeof(::CMsgDPPartnerMicroTxns_PartnerInfo)},
        {1181, 1193, -1, sizeof(::CMsgDPPartnerMicroTxns)},
        {1197, 1207, -1, sizeof(::CMsgDPPartnerMicroTxnsResponse)},
        {1209, 1220, -1, sizeof(::CChinaAgreementSessions_StartAgreementSessionInGame_Request)},
        {1223, 1232, -1, sizeof(::CChinaAgreementSessions_StartAgreementSessionInGame_Response)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_CMsgProtoBufHeader_default_instance_._instance,
    &::_CMsgWebAPIKey_default_instance_._instance,
    &::_CMsgHttpRequest_RequestHeader_default_instance_._instance,
    &::_CMsgHttpRequest_QueryParam_default_instance_._instance,
    &::_CMsgHttpRequest_default_instance_._instance,
    &::_CMsgWebAPIRequest_default_instance_._instance,
    &::_CMsgHttpResponse_ResponseHeader_default_instance_._instance,
    &::_CMsgHttpResponse_default_instance_._instance,
    &::_CMsgAMFindAccounts_default_instance_._instance,
    &::_CMsgAMFindAccountsResponse_default_instance_._instance,
    &::_CMsgNotifyWatchdog_default_instance_._instance,
    &::_CMsgAMGetLicenses_default_instance_._instance,
    &::_CMsgPackageLicense_default_instance_._instance,
    &::_CMsgAMGetLicensesResponse_default_instance_._instance,
    &::_CMsgAMGetUserGameStats_default_instance_._instance,
    &::_CMsgAMGetUserGameStatsResponse_Stats_default_instance_._instance,
    &::_CMsgAMGetUserGameStatsResponse_Achievement_Blocks_default_instance_._instance,
    &::_CMsgAMGetUserGameStatsResponse_default_instance_._instance,
    &::_CMsgGCGetCommandList_default_instance_._instance,
    &::_CMsgGCGetCommandListResponse_default_instance_._instance,
    &::_CGCMsgMemCachedGet_default_instance_._instance,
    &::_CGCMsgMemCachedGetResponse_ValueTag_default_instance_._instance,
    &::_CGCMsgMemCachedGetResponse_default_instance_._instance,
    &::_CGCMsgMemCachedSet_KeyPair_default_instance_._instance,
    &::_CGCMsgMemCachedSet_default_instance_._instance,
    &::_CGCMsgMemCachedDelete_default_instance_._instance,
    &::_CGCMsgMemCachedStats_default_instance_._instance,
    &::_CGCMsgMemCachedStatsResponse_default_instance_._instance,
    &::_CGCMsgSQLStats_default_instance_._instance,
    &::_CGCMsgSQLStatsResponse_default_instance_._instance,
    &::_CMsgAMAddFreeLicense_default_instance_._instance,
    &::_CMsgAMAddFreeLicenseResponse_default_instance_._instance,
    &::_CGCMsgGetIPLocation_default_instance_._instance,
    &::_CIPLocationInfo_default_instance_._instance,
    &::_CGCMsgGetIPLocationResponse_default_instance_._instance,
    &::_CGCMsgSystemStatsSchema_default_instance_._instance,
    &::_CGCMsgGetSystemStats_default_instance_._instance,
    &::_CGCMsgGetSystemStatsResponse_default_instance_._instance,
    &::_CMsgAMSendEmail_ReplacementToken_default_instance_._instance,
    &::_CMsgAMSendEmail_PersonaNameReplacementToken_default_instance_._instance,
    &::_CMsgAMSendEmail_default_instance_._instance,
    &::_CMsgAMSendEmailResponse_default_instance_._instance,
    &::_CMsgGCGetEmailTemplate_default_instance_._instance,
    &::_CMsgGCGetEmailTemplateResponse_default_instance_._instance,
    &::_CMsgAMGrantGuestPasses2_default_instance_._instance,
    &::_CMsgAMGrantGuestPasses2Response_default_instance_._instance,
    &::_CGCSystemMsg_GetAccountDetails_default_instance_._instance,
    &::_CGCSystemMsg_GetAccountDetails_Response_default_instance_._instance,
    &::_CMsgGCGetPersonaNames_default_instance_._instance,
    &::_CMsgGCGetPersonaNames_Response_PersonaName_default_instance_._instance,
    &::_CMsgGCGetPersonaNames_Response_default_instance_._instance,
    &::_CMsgGCCheckFriendship_default_instance_._instance,
    &::_CMsgGCCheckFriendship_Response_default_instance_._instance,
    &::_CMsgGCMsgMasterSetDirectory_SubGC_default_instance_._instance,
    &::_CMsgGCMsgMasterSetDirectory_default_instance_._instance,
    &::_CMsgGCMsgMasterSetDirectory_Response_default_instance_._instance,
    &::_CMsgGCMsgWebAPIJobRequestForwardResponse_default_instance_._instance,
    &::_CGCSystemMsg_GetPurchaseTrust_Request_default_instance_._instance,
    &::_CGCSystemMsg_GetPurchaseTrust_Response_default_instance_._instance,
    &::_CMsgGCHAccountVacStatusChange_default_instance_._instance,
    &::_CMsgGCGetPartnerAccountLink_default_instance_._instance,
    &::_CMsgGCGetPartnerAccountLink_Response_default_instance_._instance,
    &::_CMsgGCRoutingInfo_default_instance_._instance,
    &::_CMsgGCMsgMasterSetWebAPIRouting_Entry_default_instance_._instance,
    &::_CMsgGCMsgMasterSetWebAPIRouting_default_instance_._instance,
    &::_CMsgGCMsgMasterSetClientMsgRouting_Entry_default_instance_._instance,
    &::_CMsgGCMsgMasterSetClientMsgRouting_default_instance_._instance,
    &::_CMsgGCMsgMasterSetWebAPIRouting_Response_default_instance_._instance,
    &::_CMsgGCMsgMasterSetClientMsgRouting_Response_default_instance_._instance,
    &::_CMsgGCMsgSetOptions_MessageRange_default_instance_._instance,
    &::_CMsgGCMsgSetOptions_default_instance_._instance,
    &::_CMsgGCHUpdateSession_ExtraField_default_instance_._instance,
    &::_CMsgGCHUpdateSession_default_instance_._instance,
    &::_CMsgNotificationOfSuspiciousActivity_MultipleGameInstances_default_instance_._instance,
    &::_CMsgNotificationOfSuspiciousActivity_default_instance_._instance,
    &::_CMsgDPPartnerMicroTxns_PartnerMicroTxn_default_instance_._instance,
    &::_CMsgDPPartnerMicroTxns_PartnerInfo_default_instance_._instance,
    &::_CMsgDPPartnerMicroTxns_default_instance_._instance,
    &::_CMsgDPPartnerMicroTxnsResponse_default_instance_._instance,
    &::_CChinaAgreementSessions_StartAgreementSessionInGame_Request_default_instance_._instance,
    &::_CChinaAgreementSessions_StartAgreementSessionInGame_Response_default_instance_._instance,
};
const char descriptor_table_protodef_steammessages_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\023steammessages.proto\032 google/protobuf/d"
    "escriptor.proto\"\371\002\n\022CMsgProtoBufHeader\022\027"
    "\n\017client_steam_id\030\001 \001(\006\022\031\n\021client_sessio"
    "n_id\030\002 \001(\005\022\025\n\rsource_app_id\030\003 \001(\r\022+\n\rjob"
    "_id_source\030\n \001(\006:\02418446744073709551615\022+"
    "\n\rjob_id_target\030\013 \001(\006:\02418446744073709551"
    "615\022\027\n\017target_job_name\030\014 \001(\t\022\022\n\007eresult\030"
    "\r \001(\005:\0012\022\025\n\rerror_message\030\016 \001(\t\022\n\n\002ip\030\017 "
    "\001(\r\022D\n\ngc_msg_src\030\310\001 \001(\0162\021.GCProtoBufMsg"
    "Src:\034GCProtoBufMsgSrc_Unspecified\022\034\n\023gc_"
    "dir_index_source\030\311\001 \001(\r:\n\200\246\035\200\002\210\246\035\200\010\"z\n\rC"
    "MsgWebAPIKey\022\023\n\006status\030\001 \001(\r:\003255\022\025\n\nacc"
    "ount_id\030\002 \001(\r:\0010\022\035\n\022publisher_group_id\030\003"
    " \001(\r:\0010\022\016\n\006key_id\030\004 \001(\r\022\016\n\006domain\030\005 \001(\t\""
    "\335\002\n\017CMsgHttpRequest\022\026\n\016request_method\030\001 "
    "\001(\r\022\020\n\010hostname\030\002 \001(\t\022\013\n\003url\030\003 \001(\t\022/\n\007he"
    "aders\030\004 \003(\0132\036.CMsgHttpRequest.RequestHea"
    "der\022/\n\nget_params\030\005 \003(\0132\033.CMsgHttpReques"
    "t.QueryParam\0220\n\013post_params\030\006 \003(\0132\033.CMsg"
    "HttpRequest.QueryParam\022\014\n\004body\030\007 \001(\014\022\030\n\020"
    "absolute_timeout\030\010 \001(\r\032,\n\rRequestHeader\022"
    "\014\n\004name\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\032)\n\nQueryPar"
    "am\022\014\n\004name\030\001 \001(\t\022\r\n\005value\030\002 \001(\014\"\255\001\n\021CMsg"
    "WebAPIRequest\022\026\n\016interface_name\030\002 \001(\t\022\023\n"
    "\013method_name\030\003 \001(\t\022\017\n\007version\030\004 \001(\r\022\037\n\007a"
    "pi_key\030\005 \001(\0132\016.CMsgWebAPIKey\022!\n\007request\030"
    "\006 \001(\0132\020.CMsgHttpRequest\022\026\n\016routing_app_i"
    "d\030\007 \001(\r\"\227\001\n\020CMsgHttpResponse\022\023\n\013status_c"
    "ode\030\001 \001(\r\0221\n\007headers\030\002 \003(\0132 .CMsgHttpRes"
    "ponse.ResponseHeader\022\014\n\004body\030\003 \001(\014\032-\n\016Re"
    "sponseHeader\022\014\n\004name\030\001 \001(\t\022\r\n\005value\030\002 \001("
    "\t\"@\n\022CMsgAMFindAccounts\022\023\n\013search_type\030\001"
    " \001(\r\022\025\n\rsearch_string\030\002 \001(\t\".\n\032CMsgAMFin"
    "dAccountsResponse\022\020\n\010steam_id\030\001 \003(\006\"\220\001\n\022"
    "CMsgNotifyWatchdog\022\016\n\006source\030\001 \001(\r\022\022\n\nal"
    "ert_type\030\002 \001(\r\022\031\n\021alert_destination\030\003 \001("
    "\r\022\020\n\010critical\030\004 \001(\010\022\014\n\004time\030\005 \001(\r\022\r\n\005app"
    "id\030\006 \001(\r\022\014\n\004text\030\007 \001(\t\"$\n\021CMsgAMGetLicen"
    "ses\022\017\n\007steamid\030\001 \001(\006\"P\n\022CMsgPackageLicen"
    "se\022\022\n\npackage_id\030\001 \001(\r\022\024\n\014time_created\030\002"
    " \001(\r\022\020\n\010owner_id\030\003 \001(\r\"Q\n\031CMsgAMGetLicen"
    "sesResponse\022$\n\007license\030\001 \003(\0132\023.CMsgPacka"
    "geLicense\022\016\n\006result\030\002 \001(\r\"J\n\026CMsgAMGetUs"
    "erGameStats\022\020\n\010steam_id\030\001 \001(\006\022\017\n\007game_id"
    "\030\002 \001(\006\022\r\n\005stats\030\003 \003(\r\"\352\002\n\036CMsgAMGetUserG"
    "ameStatsResponse\022\020\n\010steam_id\030\001 \001(\006\022\017\n\007ga"
    "me_id\030\002 \001(\006\022\022\n\007eresult\030\003 \001(\005:\0012\0224\n\005stats"
    "\030\004 \003(\0132%.CMsgAMGetUserGameStatsResponse."
    "Stats\022N\n\022achievement_blocks\030\005 \003(\01322.CMsg"
    "AMGetUserGameStatsResponse.Achievement_B"
    "locks\032,\n\005Stats\022\017\n\007stat_id\030\001 \001(\r\022\022\n\nstat_"
    "value\030\002 \001(\r\032]\n\022Achievement_Blocks\022\026\n\016ach"
    "ievement_id\030\001 \001(\r\022\032\n\022achievement_bit_id\030"
    "\002 \001(\r\022\023\n\013unlock_time\030\003 \001(\007\">\n\024CMsgGCGetC"
    "ommandList\022\016\n\006app_id\030\001 \001(\r\022\026\n\016command_pr"
    "efix\030\002 \001(\t\"4\n\034CMsgGCGetCommandListRespon"
    "se\022\024\n\014command_name\030\001 \003(\t\"\"\n\022CGCMsgMemCac"
    "hedGet\022\014\n\004keys\030\001 \003(\t\"|\n\032CGCMsgMemCachedG"
    "etResponse\0224\n\006values\030\001 \003(\0132$.CGCMsgMemCa"
    "chedGetResponse.ValueTag\032(\n\010ValueTag\022\r\n\005"
    "found\030\001 \001(\010\022\r\n\005value\030\002 \001(\014\"g\n\022CGCMsgMemC"
    "achedSet\022)\n\004keys\030\001 \003(\0132\033.CGCMsgMemCached"
    "Set.KeyPair\032&\n\007KeyPair\022\014\n\004name\030\001 \001(\t\022\r\n\005"
    "value\030\002 \001(\014\"%\n\025CGCMsgMemCachedDelete\022\014\n\004"
    "keys\030\001 \003(\t\"\026\n\024CGCMsgMemCachedStats\"\270\002\n\034C"
    "GCMsgMemCachedStatsResponse\022\030\n\020curr_conn"
    "ections\030\001 \001(\004\022\017\n\007cmd_get\030\002 \001(\004\022\017\n\007cmd_se"
    "t\030\003 \001(\004\022\021\n\tcmd_flush\030\004 \001(\004\022\020\n\010get_hits\030\005"
    " \001(\004\022\022\n\nget_misses\030\006 \001(\004\022\023\n\013delete_hits\030"
    "\007 \001(\004\022\025\n\rdelete_misses\030\010 \001(\004\022\022\n\nbytes_re"
    "ad\030\t \001(\004\022\025\n\rbytes_written\030\n \001(\004\022\026\n\016limit"
    "_maxbytes\030\013 \001(\004\022\022\n\ncurr_items\030\014 \001(\004\022\021\n\te"
    "victions\030\r \001(\004\022\r\n\005bytes\030\016 \001(\004\"(\n\016CGCMsgS"
    "QLStats\022\026\n\016schema_catalog\030\001 \001(\r\"\233\002\n\026CGCM"
    "sgSQLStatsResponse\022\017\n\007threads\030\001 \001(\r\022\031\n\021t"
    "hreads_connected\030\002 \001(\r\022\026\n\016threads_active"
    "\030\003 \001(\r\022\034\n\024operations_submitted\030\004 \001(\r\022$\n\034"
    "prepared_statements_executed\030\005 \001(\r\022(\n no"
    "n_prepared_statements_executed\030\006 \001(\r\022\030\n\020"
    "deadlock_retries\030\007 \001(\r\022%\n\035operations_tim"
    "ed_out_in_queue\030\010 \001(\r\022\016\n\006errors\030\t \001(\r\"i\n"
    "\024CMsgAMAddFreeLicense\022\017\n\007steamid\030\001 \001(\006\022\021"
    "\n\tip_public\030\002 \001(\r\022\021\n\tpackageid\030\003 \001(\r\022\032\n\022"
    "store_country_code\030\004 \001(\t\"c\n\034CMsgAMAddFre"
    "eLicenseResponse\022\022\n\007eresult\030\001 \001(\005:\0012\022\036\n\026"
    "purchase_result_detail\030\002 \001(\005\022\017\n\007transid\030"
    "\003 \001(\006\"\"\n\023CGCMsgGetIPLocation\022\013\n\003ips\030\001 \003("
    "\007\"p\n\017CIPLocationInfo\022\n\n\002ip\030\001 \001(\r\022\020\n\010lati"
    "tude\030\002 \001(\002\022\021\n\tlongitude\030\003 \001(\002\022\017\n\007country"
    "\030\004 \001(\t\022\r\n\005state\030\005 \001(\t\022\014\n\004city\030\006 \001(\t\">\n\033C"
    "GCMsgGetIPLocationResponse\022\037\n\005infos\030\001 \003("
    "\0132\020.CIPLocationInfo\"\?\n\027CGCMsgSystemStats"
    "Schema\022\021\n\tgc_app_id\030\001 \001(\r\022\021\n\tschema_kv\030\002"
    " \001(\014\"\026\n\024CGCMsgGetSystemStats\"\305\002\n\034CGCMsgG"
    "etSystemStatsResponse\022\021\n\tgc_app_id\030\001 \001(\r"
    "\022\020\n\010stats_kv\030\002 \001(\014\022\023\n\013active_jobs\030\003 \001(\r\022"
    "\025\n\ryielding_jobs\030\004 \001(\r\022\025\n\ruser_sessions\030"
    "\005 \001(\r\022\034\n\024game_server_sessions\030\006 \001(\r\022\020\n\010s"
    "ocaches\030\007 \001(\r\022\032\n\022socaches_to_unload\030\010 \001("
    "\r\022\030\n\020socaches_loading\030\t \001(\r\022\027\n\017writeback"
    "_queue\030\n \001(\r\022\025\n\rsteamid_locks\030\013 \001(\r\022\023\n\013l"
    "ogon_queue\030\014 \001(\r\022\022\n\nlogon_jobs\030\r \001(\r\"\342\002\n"
    "\017CMsgAMSendEmail\022\017\n\007steamid\030\001 \001(\006\022\026\n\016ema"
    "il_msg_type\030\002 \001(\r\022\024\n\014email_format\030\003 \001(\r\022"
    "I\n\023persona_name_tokens\030\005 \003(\0132,.CMsgAMSen"
    "dEmail.PersonaNameReplacementToken\022\021\n\tso"
    "urce_gc\030\006 \001(\r\0221\n\006tokens\030\007 \003(\0132!.CMsgAMSe"
    "ndEmail.ReplacementToken\032;\n\020ReplacementT"
    "oken\022\022\n\ntoken_name\030\001 \001(\t\022\023\n\013token_value\030"
    "\002 \001(\t\032B\n\033PersonaNameReplacementToken\022\017\n\007"
    "steamid\030\001 \001(\006\022\022\n\ntoken_name\030\002 \001(\t\"-\n\027CMs"
    "gAMSendEmailResponse\022\022\n\007eresult\030\001 \001(\r:\0012"
    "\"j\n\026CMsgGCGetEmailTemplate\022\016\n\006app_id\030\001 \001"
    "(\r\022\026\n\016email_msg_type\030\002 \001(\r\022\022\n\nemail_lang"
    "\030\003 \001(\005\022\024\n\014email_format\030\004 \001(\005\"_\n\036CMsgGCGe"
    "tEmailTemplateResponse\022\022\n\007eresult\030\001 \001(\r:"
    "\0012\022\027\n\017template_exists\030\002 \001(\010\022\020\n\010template\030"
    "\003 \001(\t\"\204\001\n\027CMsgAMGrantGuestPasses2\022\020\n\010ste"
    "am_id\030\001 \001(\006\022\022\n\npackage_id\030\002 \001(\r\022\027\n\017passe"
    "s_to_grant\030\003 \001(\005\022\032\n\022days_to_expiration\030\004"
    " \001(\005\022\016\n\006action\030\005 \001(\005\"P\n\037CMsgAMGrantGuest"
    "Passes2Response\022\022\n\007eresult\030\001 \001(\005:\0012\022\031\n\016p"
    "asses_granted\030\002 \001(\005:\0010\"L\n\036CGCSystemMsg_G"
    "etAccountDetails\022\017\n\007steamid\030\001 \001(\006\022\r\n\005app"
    "id\030\002 \001(\r:\n\200\246\035\200\001\210\246\035\200\004\"\360\007\n\'CGCSystemMsg_Ge"
    "tAccountDetails_Response\022\035\n\022eresult_depr"
    "ecated\030\001 \001(\r:\0012\022\024\n\014account_name\030\002 \001(\t\022\024\n"
    "\014persona_name\030\003 \001(\t\022\031\n\021is_profile_public"
    "\030\004 \001(\010\022\033\n\023is_inventory_public\030\005 \001(\010\022\025\n\ri"
    "s_vac_banned\030\007 \001(\010\022\025\n\ris_cyber_cafe\030\010 \001("
    "\010\022\031\n\021is_school_account\030\t \001(\010\022\022\n\nis_limit"
    "ed\030\n \001(\010\022\025\n\ris_subscribed\030\013 \001(\010\022\017\n\007packa"
    "ge\030\014 \001(\r\022\035\n\025is_free_trial_account\030\r \001(\010\022"
    "\035\n\025free_trial_expiration\030\016 \001(\r\022\027\n\017is_low"
    "_violence\030\017 \001(\010\022\036\n\026is_account_locked_dow"
    "n\030\020 \001(\010\022\033\n\023is_community_banned\030\021 \001(\010\022\027\n\017"
    "is_trade_banned\030\022 \001(\010\022\034\n\024trade_ban_expir"
    "ation\030\023 \001(\r\022\021\n\taccountid\030\024 \001(\r\022\033\n\023suspen"
    "sion_end_time\030\025 \001(\r\022\020\n\010currency\030\026 \001(\t\022\023\n"
    "\013steam_level\030\027 \001(\r\022\024\n\014friend_count\030\030 \001(\r"
    "\022\035\n\025account_creation_time\030\031 \001(\r\022\035\n\025is_st"
    "eamguard_enabled\030\033 \001(\010\022\031\n\021is_phone_verif"
    "ied\030\034 \001(\010\022\"\n\032is_two_factor_auth_enabled\030"
    "\035 \001(\010\022\037\n\027two_factor_enabled_time\030\036 \001(\r\022\037"
    "\n\027phone_verification_time\030\037 \001(\r\022\020\n\010phone"
    "_id\030! \001(\004\022\034\n\024is_phone_identifying\030\" \001(\010\022"
    "\032\n\022rt_identity_linked\030# \001(\r\022\025\n\rrt_birth_"
    "date\030$ \001(\r\022\030\n\020txn_country_code\030% \001(\t\022\036\n\026"
    "has_accepted_china_ssa\030& \001(\010\022\035\n\025is_banne"
    "d_steam_china\030\' \001(\010:\n\200\246\035\200\001\210\246\035\200\004\")\n\025CMsgG"
    "CGetPersonaNames\022\020\n\010steamids\030\001 \003(\006\"\276\001\n\036C"
    "MsgGCGetPersonaNames_Response\022F\n\021succeed"
    "ed_lookups\030\001 \003(\0132+.CMsgGCGetPersonaNames"
    "_Response.PersonaName\022\036\n\026failed_lookup_s"
    "teamids\030\002 \003(\006\0324\n\013PersonaName\022\017\n\007steamid\030"
    "\001 \001(\006\022\024\n\014persona_name\030\002 \001(\t\"D\n\025CMsgGCChe"
    "ckFriendship\022\024\n\014steamid_left\030\001 \001(\006\022\025\n\rst"
    "eamid_right\030\002 \001(\006\"K\n\036CMsgGCCheckFriendsh"
    "ip_Response\022\017\n\007success\030\001 \001(\010\022\030\n\020found_fr"
    "iendship\030\002 \001(\010\"\310\001\n\033CMsgGCMsgMasterSetDir"
    "ectory\022\030\n\020master_dir_index\030\001 \001(\r\022/\n\003dir\030"
    "\002 \003(\0132\".CMsgGCMsgMasterSetDirectory.SubG"
    "C\032^\n\005SubGC\022\021\n\tdir_index\030\001 \001(\r\022\014\n\004name\030\002 "
    "\001(\t\022\013\n\003box\030\003 \001(\t\022\024\n\014command_line\030\004 \001(\t\022\021"
    "\n\tgc_binary\030\005 \001(\t\"K\n$CMsgGCMsgMasterSetD"
    "irectory_Response\022\022\n\007eresult\030\001 \001(\005:\0012\022\017\n"
    "\007message\030\002 \001(\t\"=\n(CMsgGCMsgWebAPIJobRequ"
    "estForwardResponse\022\021\n\tdir_index\030\001 \001(\r\"8\n"
    "%CGCSystemMsg_GetPurchaseTrust_Request\022\017"
    "\n\007steamid\030\001 \001(\006\"\255\001\n&CGCSystemMsg_GetPurc"
    "haseTrust_Response\022\"\n\032has_prior_purchase"
    "_history\030\001 \001(\010\022%\n\035has_no_recent_password"
    "_resets\030\002 \001(\010\022\036\n\026is_wallet_cash_trusted\030"
    "\003 \001(\010\022\030\n\020time_all_trusted\030\004 \001(\r\"\217\001\n\035CMsg"
    "GCHAccountVacStatusChange\022\020\n\010steam_id\030\001 "
    "\001(\006\022\016\n\006app_id\030\002 \001(\r\022\033\n\023rtime_vacban_star"
    "ts\030\003 \001(\r\022\025\n\ris_banned_now\030\004 \001(\010\022\030\n\020is_ba"
    "nned_future\030\005 \001(\010\".\n\033CMsgGCGetPartnerAcc"
    "ountLink\022\017\n\007steamid\030\001 \001(\006\"\204\001\n$CMsgGCGetP"
    "artnerAccountLink_Response\022\014\n\004pwid\030\001 \001(\r"
    "\022\017\n\007nexonid\030\002 \001(\r\022\020\n\010ageclass\030\003 \001(\005\022\031\n\013i"
    "d_verified\030\004 \001(\010:\004true\022\020\n\010is_adult\030\005 \001(\010"
    "\"\275\002\n\021CMsgGCRoutingInfo\022\021\n\tdir_index\030\001 \003("
    "\r\0228\n\006method\030\002 \001(\0162 .CMsgGCRoutingInfo.Ro"
    "utingMethod:\006RANDOM\022;\n\010fallback\030\003 \001(\0162 ."
    "CMsgGCRoutingInfo.RoutingMethod:\007DISCARD"
    "\022\026\n\016protobuf_field\030\004 \001(\r\022\024\n\014webapi_param"
    "\030\005 \001(\t\"p\n\rRoutingMethod\022\n\n\006RANDOM\020\000\022\013\n\007D"
    "ISCARD\020\001\022\022\n\016CLIENT_STEAMID\020\002\022\031\n\025PROTOBUF"
    "_FIELD_UINT64\020\003\022\027\n\023WEBAPI_PARAM_UINT64\020\004"
    "\"\265\001\n\037CMsgGCMsgMasterSetWebAPIRouting\0227\n\007"
    "entries\030\001 \003(\0132&.CMsgGCMsgMasterSetWebAPI"
    "Routing.Entry\032Y\n\005Entry\022\026\n\016interface_name"
    "\030\001 \001(\t\022\023\n\013method_name\030\002 \001(\t\022#\n\007routing\030\003"
    " \001(\0132\022.CMsgGCRoutingInfo\"\240\001\n\"CMsgGCMsgMa"
    "sterSetClientMsgRouting\022:\n\007entries\030\001 \003(\013"
    "2).CMsgGCMsgMasterSetClientMsgRouting.En"
    "try\032>\n\005Entry\022\020\n\010msg_type\030\001 \001(\r\022#\n\007routin"
    "g\030\002 \001(\0132\022.CMsgGCRoutingInfo\">\n(CMsgGCMsg"
    "MasterSetWebAPIRouting_Response\022\022\n\007eresu"
    "lt\030\001 \001(\005:\0012\"A\n+CMsgGCMsgMasterSetClientM"
    "sgRouting_Response\022\022\n\007eresult\030\001 \001(\005:\0012\"\234"
    "\002\n\023CMsgGCMsgSetOptions\022,\n\007options\030\001 \003(\0162"
    "\033.CMsgGCMsgSetOptions.Option\022<\n\021client_m"
    "sg_ranges\030\002 \003(\0132!.CMsgGCMsgSetOptions.Me"
    "ssageRange\032)\n\014MessageRange\022\013\n\003low\030\001 \002(\r\022"
    "\014\n\004high\030\002 \002(\r\"n\n\006Option\022\030\n\024NOTIFY_USER_S"
    "ESSIONS\020\000\022\032\n\026NOTIFY_SERVER_SESSIONS\020\001\022\027\n"
    "\023NOTIFY_ACHIEVEMENTS\020\002\022\025\n\021NOTIFY_VAC_ACT"
    "ION\020\003\"\362\002\n\024CMsgGCHUpdateSession\022\020\n\010steam_"
    "id\030\001 \001(\006\022\016\n\006app_id\030\002 \001(\r\022\016\n\006online\030\003 \001(\010"
    "\022\027\n\017server_steam_id\030\004 \001(\006\022\023\n\013server_addr"
    "\030\005 \001(\r\022\023\n\013server_port\030\006 \001(\r\022\017\n\007os_type\030\007"
    " \001(\r\022\023\n\013client_addr\030\010 \001(\r\0226\n\014extra_field"
    "s\030\t \003(\0132 .CMsgGCHUpdateSession.ExtraFiel"
    "d\022\020\n\010owner_id\030\n \001(\006\022\030\n\020cm_session_sysid\030"
    "\013 \001(\r\022\035\n\025cm_session_identifier\030\014 \001(\r\022\021\n\t"
    "depot_ids\030\r \003(\r\032)\n\nExtraField\022\014\n\004name\030\001 "
    "\001(\t\022\r\n\005value\030\002 \001(\t\"\354\001\n$CMsgNotificationO"
    "fSuspiciousActivity\022\017\n\007steamid\030\001 \001(\006\022\r\n\005"
    "appid\030\002 \001(\r\022W\n\022multiple_instances\030\003 \001(\0132"
    ";.CMsgNotificationOfSuspiciousActivity.M"
    "ultipleGameInstances\032K\n\025MultipleGameInst"
    "ances\022\032\n\022app_instance_count\030\001 \001(\r\022\026\n\016oth"
    "er_steamids\030\002 \003(\006\"\362\004\n\026CMsgDPPartnerMicro"
    "Txns\022\r\n\005appid\030\001 \001(\r\022\017\n\007gc_name\030\002 \001(\t\0224\n\007"
    "partner\030\003 \001(\0132#.CMsgDPPartnerMicroTxns.P"
    "artnerInfo\022=\n\014transactions\030\004 \003(\0132\'.CMsgD"
    "PPartnerMicroTxns.PartnerMicroTxn\032\333\002\n\017Pa"
    "rtnerMicroTxn\022\021\n\tinit_time\030\001 \001(\r\022\030\n\020last"
    "_update_time\030\002 \001(\r\022\016\n\006txn_id\030\003 \001(\004\022\022\n\nac"
    "count_id\030\004 \001(\r\022\021\n\tline_item\030\005 \001(\r\022\017\n\007ite"
    "m_id\030\006 \001(\004\022\021\n\tdef_index\030\007 \001(\r\022\r\n\005price\030\010"
    " \001(\004\022\013\n\003tax\030\t \001(\004\022\021\n\tprice_usd\030\n \001(\004\022\017\n\007"
    "tax_usd\030\013 \001(\004\022\025\n\rpurchase_type\030\014 \001(\r\022\026\n\016"
    "steam_txn_type\030\r \001(\r\022\024\n\014country_code\030\016 \001"
    "(\t\022\023\n\013region_code\030\017 \001(\t\022\020\n\010quantity\030\020 \001("
    "\005\022\024\n\014ref_trans_id\030\021 \001(\004\032e\n\013PartnerInfo\022\022"
    "\n\npartner_id\030\001 \001(\r\022\024\n\014partner_name\030\002 \001(\t"
    "\022\025\n\rcurrency_code\030\003 \001(\t\022\025\n\rcurrency_name"
    "\030\004 \001(\t\"\376\002\n\036CMsgDPPartnerMicroTxnsRespons"
    "e\022\022\n\007eresult\030\001 \001(\r:\0012\022J\n\neerrorcode\030\002 \001("
    "\0162*.CMsgDPPartnerMicroTxnsResponse.EErro"
    "rCode:\nk_MsgValid\"\373\001\n\nEErrorCode\022\016\n\nk_Ms"
    "gValid\020\000\022\025\n\021k_MsgInvalidAppID\020\001\022\033\n\027k_Msg"
    "InvalidPartnerInfo\020\002\022\027\n\023k_MsgNoTransacti"
    "ons\020\003\022\023\n\017k_MsgSQLFailure\020\004\022\037\n\033k_MsgPartn"
    "erInfoDiscrepancy\020\005\022 \n\034k_MsgTransactionI"
    "nsertFailed\020\007\022\027\n\023k_MsgAlreadyRunning\020\010\022\037"
    "\n\033k_MsgInvalidTransactionData\020\t\"w\n;CChin"
    "aAgreementSessions_StartAgreementSession"
    "InGame_Request\022\r\n\005appid\030\001 \001(\r\022\017\n\007steamid"
    "\030\002 \001(\006\022\030\n\020client_ipaddress\030\003 \001(\t\"U\n<CChi"
    "naAgreementSessions_StartAgreementSessio"
    "nInGame_Response\022\025\n\ragreement_url\030\001 \001(\t*"
    "\266\001\n\020GCProtoBufMsgSrc\022 \n\034GCProtoBufMsgSrc"
    "_Unspecified\020\000\022\037\n\033GCProtoBufMsgSrc_FromS"
    "ystem\020\001\022 \n\034GCProtoBufMsgSrc_FromSteamID\020"
    "\002\022\033\n\027GCProtoBufMsgSrc_FromGC\020\003\022 \n\034GCProt"
    "oBufMsgSrc_ReplySystem\020\004:9\n\tkey_field\022\035."
    "google.protobuf.FieldOptions\030\340\324\003 \001(\010:\005fa"
    "lse:A\n\022msgpool_soft_limit\022\037.google.proto"
    "buf.MessageOptions\030\340\324\003 \001(\005:\00232:B\n\022msgpoo"
    "l_hard_limit\022\037.google.protobuf.MessageOp"
    "tions\030\341\324\003 \001(\005:\003384"
};
static const ::_pbi::DescriptorTable* const descriptor_table_steammessages_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
};
static ::absl::once_flag descriptor_table_steammessages_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_steammessages_2eproto = {
    false,
    false,
    10578,
    descriptor_table_protodef_steammessages_2eproto,
    "steammessages.proto",
    &descriptor_table_steammessages_2eproto_once,
    descriptor_table_steammessages_2eproto_deps,
    1,
    81,
    schemas,
    file_default_instances,
    TableStruct_steammessages_2eproto::offsets,
    file_level_metadata_steammessages_2eproto,
    file_level_enum_descriptors_steammessages_2eproto,
    file_level_service_descriptors_steammessages_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_steammessages_2eproto_getter() {
  return &descriptor_table_steammessages_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_steammessages_2eproto(&descriptor_table_steammessages_2eproto);
const ::google::protobuf::EnumDescriptor* CMsgGCRoutingInfo_RoutingMethod_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_steammessages_2eproto);
  return file_level_enum_descriptors_steammessages_2eproto[0];
}
bool CMsgGCRoutingInfo_RoutingMethod_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo::RANDOM;
constexpr CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo::DISCARD;
constexpr CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo::CLIENT_STEAMID;
constexpr CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo::PROTOBUF_FIELD_UINT64;
constexpr CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo::WEBAPI_PARAM_UINT64;
constexpr CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo::RoutingMethod_MIN;
constexpr CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo::RoutingMethod_MAX;
constexpr int CMsgGCRoutingInfo::RoutingMethod_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* CMsgGCMsgSetOptions_Option_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_steammessages_2eproto);
  return file_level_enum_descriptors_steammessages_2eproto[1];
}
bool CMsgGCMsgSetOptions_Option_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr CMsgGCMsgSetOptions_Option CMsgGCMsgSetOptions::NOTIFY_USER_SESSIONS;
constexpr CMsgGCMsgSetOptions_Option CMsgGCMsgSetOptions::NOTIFY_SERVER_SESSIONS;
constexpr CMsgGCMsgSetOptions_Option CMsgGCMsgSetOptions::NOTIFY_ACHIEVEMENTS;
constexpr CMsgGCMsgSetOptions_Option CMsgGCMsgSetOptions::NOTIFY_VAC_ACTION;
constexpr CMsgGCMsgSetOptions_Option CMsgGCMsgSetOptions::Option_MIN;
constexpr CMsgGCMsgSetOptions_Option CMsgGCMsgSetOptions::Option_MAX;
constexpr int CMsgGCMsgSetOptions::Option_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* CMsgDPPartnerMicroTxnsResponse_EErrorCode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_steammessages_2eproto);
  return file_level_enum_descriptors_steammessages_2eproto[2];
}
bool CMsgDPPartnerMicroTxnsResponse_EErrorCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr CMsgDPPartnerMicroTxnsResponse_EErrorCode CMsgDPPartnerMicroTxnsResponse::k_MsgValid;
constexpr CMsgDPPartnerMicroTxnsResponse_EErrorCode CMsgDPPartnerMicroTxnsResponse::k_MsgInvalidAppID;
constexpr CMsgDPPartnerMicroTxnsResponse_EErrorCode CMsgDPPartnerMicroTxnsResponse::k_MsgInvalidPartnerInfo;
constexpr CMsgDPPartnerMicroTxnsResponse_EErrorCode CMsgDPPartnerMicroTxnsResponse::k_MsgNoTransactions;
constexpr CMsgDPPartnerMicroTxnsResponse_EErrorCode CMsgDPPartnerMicroTxnsResponse::k_MsgSQLFailure;
constexpr CMsgDPPartnerMicroTxnsResponse_EErrorCode CMsgDPPartnerMicroTxnsResponse::k_MsgPartnerInfoDiscrepancy;
constexpr CMsgDPPartnerMicroTxnsResponse_EErrorCode CMsgDPPartnerMicroTxnsResponse::k_MsgTransactionInsertFailed;
constexpr CMsgDPPartnerMicroTxnsResponse_EErrorCode CMsgDPPartnerMicroTxnsResponse::k_MsgAlreadyRunning;
constexpr CMsgDPPartnerMicroTxnsResponse_EErrorCode CMsgDPPartnerMicroTxnsResponse::k_MsgInvalidTransactionData;
constexpr CMsgDPPartnerMicroTxnsResponse_EErrorCode CMsgDPPartnerMicroTxnsResponse::EErrorCode_MIN;
constexpr CMsgDPPartnerMicroTxnsResponse_EErrorCode CMsgDPPartnerMicroTxnsResponse::EErrorCode_MAX;
constexpr int CMsgDPPartnerMicroTxnsResponse::EErrorCode_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* GCProtoBufMsgSrc_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_steammessages_2eproto);
  return file_level_enum_descriptors_steammessages_2eproto[3];
}
bool GCProtoBufMsgSrc_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}
// ===================================================================

class CMsgProtoBufHeader::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgProtoBufHeader>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_._has_bits_);
  static void set_has_client_steam_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_client_session_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_source_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_job_id_source(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_job_id_target(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_target_job_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_eresult(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_error_message(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ip(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_gc_msg_src(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_gc_dir_index_source(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

CMsgProtoBufHeader::CMsgProtoBufHeader(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgProtoBufHeader)
}
CMsgProtoBufHeader::CMsgProtoBufHeader(const CMsgProtoBufHeader& from) : ::google::protobuf::Message() {
  CMsgProtoBufHeader* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.target_job_name_){},
      decltype(_impl_.error_message_){},
      decltype(_impl_.client_steam_id_){},
      decltype(_impl_.client_session_id_){},
      decltype(_impl_.source_app_id_){},
      decltype(_impl_.ip_){},
      decltype(_impl_.gc_msg_src_){},
      decltype(_impl_.gc_dir_index_source_){},
      decltype(_impl_.eresult_){},
      decltype(_impl_.job_id_source_){},
      decltype(_impl_.job_id_target_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.target_job_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.target_job_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.target_job_name_.Set(from._internal_target_job_name(), _this->GetArenaForAllocation());
  }
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.error_message_.Set(from._internal_error_message(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.client_steam_id_, &from._impl_.client_steam_id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.job_id_target_) -
    reinterpret_cast<char*>(&_impl_.client_steam_id_)) + sizeof(_impl_.job_id_target_));

  // @@protoc_insertion_point(copy_constructor:CMsgProtoBufHeader)
}
inline void CMsgProtoBufHeader::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.target_job_name_){},
      decltype(_impl_.error_message_){},
      decltype(_impl_.client_steam_id_){::uint64_t{0u}},
      decltype(_impl_.client_session_id_){0},
      decltype(_impl_.source_app_id_){0u},
      decltype(_impl_.ip_){0u},
      decltype(_impl_.gc_msg_src_){0},
      decltype(_impl_.gc_dir_index_source_){0u},
      decltype(_impl_.eresult_){2},
      decltype(_impl_.job_id_source_){::uint64_t{18446744073709551615u}},
      decltype(_impl_.job_id_target_){::uint64_t{18446744073709551615u}},
  };
  _impl_.target_job_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.target_job_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CMsgProtoBufHeader::~CMsgProtoBufHeader() {
  // @@protoc_insertion_point(destructor:CMsgProtoBufHeader)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgProtoBufHeader::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.target_job_name_.Destroy();
  _impl_.error_message_.Destroy();
}
void CMsgProtoBufHeader::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgProtoBufHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgProtoBufHeader)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.target_job_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.error_message_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000fcu) {
    ::memset(&_impl_.client_steam_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.gc_dir_index_source_) -
        reinterpret_cast<char*>(&_impl_.client_steam_id_)) + sizeof(_impl_.gc_dir_index_source_));
  }
  if (cached_has_bits & 0x00000700u) {
    _impl_.eresult_ = 2;
    _impl_.job_id_source_ = ::uint64_t{18446744073709551615u};
    _impl_.job_id_target_ = ::uint64_t{18446744073709551615u};
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgProtoBufHeader::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 1, 63, 7> CMsgProtoBufHeader::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_._has_bits_),
    0, // no _extensions_
    201, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294935032,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgProtoBufHeader_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional fixed64 client_steam_id = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.client_steam_id_)}},
    // optional int32 client_session_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgProtoBufHeader, _impl_.client_session_id_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.client_session_id_)}},
    // optional uint32 source_app_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgProtoBufHeader, _impl_.source_app_id_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.source_app_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .GCProtoBufMsgSrc gc_msg_src = 200 [default = GCProtoBufMsgSrc_Unspecified];
    {::_pbi::TcParser::FastEr0S2,
     {3264, 6, 4, PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.gc_msg_src_)}},
    // optional uint32 gc_dir_index_source = 201;
    {::_pbi::TcParser::FastV32S2,
     {3272, 7, 0, PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.gc_dir_index_source_)}},
    // optional fixed64 job_id_source = 10 [default = 18446744073709551615];
    {::_pbi::TcParser::FastF64S1,
     {81, 9, 0, PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.job_id_source_)}},
    // optional fixed64 job_id_target = 11 [default = 18446744073709551615];
    {::_pbi::TcParser::FastF64S1,
     {89, 10, 0, PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.job_id_target_)}},
    // optional string target_job_name = 12;
    {::_pbi::TcParser::FastSS1,
     {98, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.target_job_name_)}},
    // optional int32 eresult = 13 [default = 2];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgProtoBufHeader, _impl_.eresult_), 8>(),
     {104, 8, 0, PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.eresult_)}},
    // optional string error_message = 14;
    {::_pbi::TcParser::FastSS1,
     {114, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.error_message_)}},
    // optional uint32 ip = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgProtoBufHeader, _impl_.ip_), 5>(),
     {120, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.ip_)}},
  }}, {{
    200, 0, 1,
    65532, 9,
    65535, 65535
  }}, {{
    // optional fixed64 client_steam_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.client_steam_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional int32 client_session_id = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.client_session_id_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 source_app_id = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.source_app_id_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional fixed64 job_id_source = 10 [default = 18446744073709551615];
    {PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.job_id_source_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional fixed64 job_id_target = 11 [default = 18446744073709551615];
    {PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.job_id_target_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional string target_job_name = 12;
    {PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.target_job_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 eresult = 13 [default = 2];
    {PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.eresult_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string error_message = 14;
    {PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.error_message_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 ip = 15;
    {PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.ip_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .GCProtoBufMsgSrc gc_msg_src = 200 [default = GCProtoBufMsgSrc_Unspecified];
    {PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.gc_msg_src_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional uint32 gc_dir_index_source = 201;
    {PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.gc_dir_index_source_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {0, 5},
  }}, {{
    "\22\0\0\0\0\0\17\0\15\0\0\0\0\0\0\0"
    "CMsgProtoBufHeader"
    "target_job_name"
    "error_message"
  }},
};

::uint8_t* CMsgProtoBufHeader::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgProtoBufHeader)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 client_steam_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        1, this->_internal_client_steam_id(), target);
  }

  // optional int32 client_session_id = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_client_session_id(), target);
  }

  // optional uint32 source_app_id = 3;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_source_app_id(), target);
  }

  // optional fixed64 job_id_source = 10 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        10, this->_internal_job_id_source(), target);
  }

  // optional fixed64 job_id_target = 11 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        11, this->_internal_job_id_target(), target);
  }

  // optional string target_job_name = 12;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_target_job_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgProtoBufHeader.target_job_name");
    target = stream->WriteStringMaybeAliased(12, _s, target);
  }

  // optional int32 eresult = 13 [default = 2];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<13>(
            stream, this->_internal_eresult(), target);
  }

  // optional string error_message = 14;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_error_message();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgProtoBufHeader.error_message");
    target = stream->WriteStringMaybeAliased(14, _s, target);
  }

  // optional uint32 ip = 15;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        15, this->_internal_ip(), target);
  }

  // optional .GCProtoBufMsgSrc gc_msg_src = 200 [default = GCProtoBufMsgSrc_Unspecified];
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        200, this->_internal_gc_msg_src(), target);
  }

  // optional uint32 gc_dir_index_source = 201;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        201, this->_internal_gc_dir_index_source(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgProtoBufHeader)
  return target;
}

::size_t CMsgProtoBufHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgProtoBufHeader)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string target_job_name = 12;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_target_job_name());
    }

    // optional string error_message = 14;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_error_message());
    }

    // optional fixed64 client_steam_id = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 9;
    }

    // optional int32 client_session_id = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_client_session_id());
    }

    // optional uint32 source_app_id = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_source_app_id());
    }

    // optional uint32 ip = 15;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_ip());
    }

    // optional .GCProtoBufMsgSrc gc_msg_src = 200 [default = GCProtoBufMsgSrc_Unspecified];
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_gc_msg_src());
    }

    // optional uint32 gc_dir_index_source = 201;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_gc_dir_index_source());
    }

  }
  if (cached_has_bits & 0x00000700u) {
    // optional int32 eresult = 13 [default = 2];
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_eresult());
    }

    // optional fixed64 job_id_source = 10 [default = 18446744073709551615];
    if (cached_has_bits & 0x00000200u) {
      total_size += 9;
    }

    // optional fixed64 job_id_target = 11 [default = 18446744073709551615];
    if (cached_has_bits & 0x00000400u) {
      total_size += 9;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgProtoBufHeader::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgProtoBufHeader::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgProtoBufHeader::GetClassData() const { return &_class_data_; }


void CMsgProtoBufHeader::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgProtoBufHeader*>(&to_msg);
  auto& from = static_cast<const CMsgProtoBufHeader&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgProtoBufHeader)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_target_job_name(from._internal_target_job_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_error_message(from._internal_error_message());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.client_steam_id_ = from._impl_.client_steam_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.client_session_id_ = from._impl_.client_session_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.source_app_id_ = from._impl_.source_app_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.ip_ = from._impl_.ip_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.gc_msg_src_ = from._impl_.gc_msg_src_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.gc_dir_index_source_ = from._impl_.gc_dir_index_source_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.eresult_ = from._impl_.eresult_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.job_id_source_ = from._impl_.job_id_source_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.job_id_target_ = from._impl_.job_id_target_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgProtoBufHeader::CopyFrom(const CMsgProtoBufHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgProtoBufHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgProtoBufHeader::IsInitialized() const {
  return true;
}

void CMsgProtoBufHeader::InternalSwap(CMsgProtoBufHeader* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_job_name_, lhs_arena,
                                       &other->_impl_.target_job_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_message_, lhs_arena,
                                       &other->_impl_.error_message_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.job_id_target_)
      + sizeof(CMsgProtoBufHeader::_impl_.job_id_target_)
      - PROTOBUF_FIELD_OFFSET(CMsgProtoBufHeader, _impl_.client_steam_id_)>(
          reinterpret_cast<char*>(&_impl_.client_steam_id_),
          reinterpret_cast<char*>(&other->_impl_.client_steam_id_));
}

::google::protobuf::Metadata CMsgProtoBufHeader::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[0]);
}
// ===================================================================

class CMsgWebAPIKey::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgWebAPIKey>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgWebAPIKey, _impl_._has_bits_);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_publisher_group_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_key_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_domain(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgWebAPIKey::CMsgWebAPIKey(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgWebAPIKey)
}
CMsgWebAPIKey::CMsgWebAPIKey(const CMsgWebAPIKey& from) : ::google::protobuf::Message() {
  CMsgWebAPIKey* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.domain_){},
      decltype(_impl_.account_id_){},
      decltype(_impl_.publisher_group_id_){},
      decltype(_impl_.key_id_){},
      decltype(_impl_.status_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.domain_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.domain_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.domain_.Set(from._internal_domain(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.account_id_, &from._impl_.account_id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.status_) -
    reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.status_));

  // @@protoc_insertion_point(copy_constructor:CMsgWebAPIKey)
}
inline void CMsgWebAPIKey::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.domain_){},
      decltype(_impl_.account_id_){0u},
      decltype(_impl_.publisher_group_id_){0u},
      decltype(_impl_.key_id_){0u},
      decltype(_impl_.status_){255u},
  };
  _impl_.domain_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.domain_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CMsgWebAPIKey::~CMsgWebAPIKey() {
  // @@protoc_insertion_point(destructor:CMsgWebAPIKey)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgWebAPIKey::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.domain_.Destroy();
}
void CMsgWebAPIKey::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgWebAPIKey::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgWebAPIKey)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.domain_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&_impl_.account_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.key_id_) -
        reinterpret_cast<char*>(&_impl_.account_id_)) + sizeof(_impl_.key_id_));
    _impl_.status_ = 255u;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgWebAPIKey::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 28, 2> CMsgWebAPIKey::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgWebAPIKey, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgWebAPIKey_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 status = 1 [default = 255];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgWebAPIKey, _impl_.status_), 4>(),
     {8, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgWebAPIKey, _impl_.status_)}},
    // optional uint32 account_id = 2 [default = 0];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgWebAPIKey, _impl_.account_id_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgWebAPIKey, _impl_.account_id_)}},
    // optional uint32 publisher_group_id = 3 [default = 0];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgWebAPIKey, _impl_.publisher_group_id_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgWebAPIKey, _impl_.publisher_group_id_)}},
    // optional uint32 key_id = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgWebAPIKey, _impl_.key_id_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgWebAPIKey, _impl_.key_id_)}},
    // optional string domain = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgWebAPIKey, _impl_.domain_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 status = 1 [default = 255];
    {PROTOBUF_FIELD_OFFSET(CMsgWebAPIKey, _impl_.status_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 account_id = 2 [default = 0];
    {PROTOBUF_FIELD_OFFSET(CMsgWebAPIKey, _impl_.account_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 publisher_group_id = 3 [default = 0];
    {PROTOBUF_FIELD_OFFSET(CMsgWebAPIKey, _impl_.publisher_group_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 key_id = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgWebAPIKey, _impl_.key_id_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string domain = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgWebAPIKey, _impl_.domain_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\15\0\0\0\0\6\0\0"
    "CMsgWebAPIKey"
    "domain"
  }},
};

::uint8_t* CMsgWebAPIKey::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgWebAPIKey)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 status = 1 [default = 255];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_status(), target);
  }

  // optional uint32 account_id = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_account_id(), target);
  }

  // optional uint32 publisher_group_id = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_publisher_group_id(), target);
  }

  // optional uint32 key_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_key_id(), target);
  }

  // optional string domain = 5;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_domain();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgWebAPIKey.domain");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgWebAPIKey)
  return target;
}

::size_t CMsgWebAPIKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgWebAPIKey)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string domain = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_domain());
    }

    // optional uint32 account_id = 2 [default = 0];
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_account_id());
    }

    // optional uint32 publisher_group_id = 3 [default = 0];
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_publisher_group_id());
    }

    // optional uint32 key_id = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_key_id());
    }

    // optional uint32 status = 1 [default = 255];
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_status());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgWebAPIKey::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgWebAPIKey::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgWebAPIKey::GetClassData() const { return &_class_data_; }


void CMsgWebAPIKey::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgWebAPIKey*>(&to_msg);
  auto& from = static_cast<const CMsgWebAPIKey&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgWebAPIKey)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_domain(from._internal_domain());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.account_id_ = from._impl_.account_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.publisher_group_id_ = from._impl_.publisher_group_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.key_id_ = from._impl_.key_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.status_ = from._impl_.status_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgWebAPIKey::CopyFrom(const CMsgWebAPIKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgWebAPIKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgWebAPIKey::IsInitialized() const {
  return true;
}

void CMsgWebAPIKey::InternalSwap(CMsgWebAPIKey* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.domain_, lhs_arena,
                                       &other->_impl_.domain_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgWebAPIKey, _impl_.status_)
      + sizeof(CMsgWebAPIKey::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(CMsgWebAPIKey, _impl_.account_id_)>(
          reinterpret_cast<char*>(&_impl_.account_id_),
          reinterpret_cast<char*>(&other->_impl_.account_id_));
}

::google::protobuf::Metadata CMsgWebAPIKey::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[1]);
}
// ===================================================================

class CMsgHttpRequest_RequestHeader::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgHttpRequest_RequestHeader>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgHttpRequest_RequestHeader, _impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgHttpRequest_RequestHeader::CMsgHttpRequest_RequestHeader(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgHttpRequest.RequestHeader)
}
CMsgHttpRequest_RequestHeader::CMsgHttpRequest_RequestHeader(const CMsgHttpRequest_RequestHeader& from) : ::google::protobuf::Message() {
  CMsgHttpRequest_RequestHeader* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.value_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.value_.Set(from._internal_value(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:CMsgHttpRequest.RequestHeader)
}
inline void CMsgHttpRequest_RequestHeader::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.value_){},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CMsgHttpRequest_RequestHeader::~CMsgHttpRequest_RequestHeader() {
  // @@protoc_insertion_point(destructor:CMsgHttpRequest.RequestHeader)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgHttpRequest_RequestHeader::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.value_.Destroy();
}
void CMsgHttpRequest_RequestHeader::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgHttpRequest_RequestHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgHttpRequest.RequestHeader)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.value_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgHttpRequest_RequestHeader::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 47, 2> CMsgHttpRequest_RequestHeader::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgHttpRequest_RequestHeader, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgHttpRequest_RequestHeader_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string value = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgHttpRequest_RequestHeader, _impl_.value_)}},
    // optional string name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgHttpRequest_RequestHeader, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgHttpRequest_RequestHeader, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string value = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgHttpRequest_RequestHeader, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\4\5\0\0\0\0\0"
    "CMsgHttpRequest.RequestHeader"
    "name"
    "value"
  }},
};

::uint8_t* CMsgHttpRequest_RequestHeader::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgHttpRequest.RequestHeader)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgHttpRequest.RequestHeader.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_value();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgHttpRequest.RequestHeader.value");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgHttpRequest.RequestHeader)
  return target;
}

::size_t CMsgHttpRequest_RequestHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgHttpRequest.RequestHeader)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }

    // optional string value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_value());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgHttpRequest_RequestHeader::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgHttpRequest_RequestHeader::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgHttpRequest_RequestHeader::GetClassData() const { return &_class_data_; }


void CMsgHttpRequest_RequestHeader::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgHttpRequest_RequestHeader*>(&to_msg);
  auto& from = static_cast<const CMsgHttpRequest_RequestHeader&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgHttpRequest.RequestHeader)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_value(from._internal_value());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgHttpRequest_RequestHeader::CopyFrom(const CMsgHttpRequest_RequestHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgHttpRequest.RequestHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgHttpRequest_RequestHeader::IsInitialized() const {
  return true;
}

void CMsgHttpRequest_RequestHeader::InternalSwap(CMsgHttpRequest_RequestHeader* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, lhs_arena,
                                       &other->_impl_.value_, rhs_arena);
}

::google::protobuf::Metadata CMsgHttpRequest_RequestHeader::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[2]);
}
// ===================================================================

class CMsgHttpRequest_QueryParam::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgHttpRequest_QueryParam>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgHttpRequest_QueryParam, _impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgHttpRequest_QueryParam::CMsgHttpRequest_QueryParam(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgHttpRequest.QueryParam)
}
CMsgHttpRequest_QueryParam::CMsgHttpRequest_QueryParam(const CMsgHttpRequest_QueryParam& from) : ::google::protobuf::Message() {
  CMsgHttpRequest_QueryParam* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.value_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.value_.Set(from._internal_value(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:CMsgHttpRequest.QueryParam)
}
inline void CMsgHttpRequest_QueryParam::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.value_){},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CMsgHttpRequest_QueryParam::~CMsgHttpRequest_QueryParam() {
  // @@protoc_insertion_point(destructor:CMsgHttpRequest.QueryParam)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgHttpRequest_QueryParam::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.value_.Destroy();
}
void CMsgHttpRequest_QueryParam::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgHttpRequest_QueryParam::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgHttpRequest.QueryParam)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.value_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgHttpRequest_QueryParam::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 39, 2> CMsgHttpRequest_QueryParam::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgHttpRequest_QueryParam, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgHttpRequest_QueryParam_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bytes value = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgHttpRequest_QueryParam, _impl_.value_)}},
    // optional string name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgHttpRequest_QueryParam, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgHttpRequest_QueryParam, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bytes value = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgHttpRequest_QueryParam, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\4\0\0\0\0\0\0"
    "CMsgHttpRequest.QueryParam"
    "name"
  }},
};

::uint8_t* CMsgHttpRequest_QueryParam::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgHttpRequest.QueryParam)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgHttpRequest.QueryParam.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_value();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgHttpRequest.QueryParam)
  return target;
}

::size_t CMsgHttpRequest_QueryParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgHttpRequest.QueryParam)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }

    // optional bytes value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_value());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgHttpRequest_QueryParam::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgHttpRequest_QueryParam::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgHttpRequest_QueryParam::GetClassData() const { return &_class_data_; }


void CMsgHttpRequest_QueryParam::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgHttpRequest_QueryParam*>(&to_msg);
  auto& from = static_cast<const CMsgHttpRequest_QueryParam&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgHttpRequest.QueryParam)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_value(from._internal_value());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgHttpRequest_QueryParam::CopyFrom(const CMsgHttpRequest_QueryParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgHttpRequest.QueryParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgHttpRequest_QueryParam::IsInitialized() const {
  return true;
}

void CMsgHttpRequest_QueryParam::InternalSwap(CMsgHttpRequest_QueryParam* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, lhs_arena,
                                       &other->_impl_.value_, rhs_arena);
}

::google::protobuf::Metadata CMsgHttpRequest_QueryParam::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[3]);
}
// ===================================================================

class CMsgHttpRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgHttpRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgHttpRequest, _impl_._has_bits_);
  static void set_has_request_method(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_hostname(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_url(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_body(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_absolute_timeout(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

CMsgHttpRequest::CMsgHttpRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgHttpRequest)
}
CMsgHttpRequest::CMsgHttpRequest(const CMsgHttpRequest& from) : ::google::protobuf::Message() {
  CMsgHttpRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.headers_){from._impl_.headers_},
      decltype(_impl_.get_params_){from._impl_.get_params_},
      decltype(_impl_.post_params_){from._impl_.post_params_},
      decltype(_impl_.hostname_){},
      decltype(_impl_.url_){},
      decltype(_impl_.body_){},
      decltype(_impl_.request_method_){},
      decltype(_impl_.absolute_timeout_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.hostname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.hostname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.hostname_.Set(from._internal_hostname(), _this->GetArenaForAllocation());
  }
  _impl_.url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.url_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.url_.Set(from._internal_url(), _this->GetArenaForAllocation());
  }
  _impl_.body_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.body_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.body_.Set(from._internal_body(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.request_method_, &from._impl_.request_method_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.absolute_timeout_) -
    reinterpret_cast<char*>(&_impl_.request_method_)) + sizeof(_impl_.absolute_timeout_));

  // @@protoc_insertion_point(copy_constructor:CMsgHttpRequest)
}
inline void CMsgHttpRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.headers_){arena},
      decltype(_impl_.get_params_){arena},
      decltype(_impl_.post_params_){arena},
      decltype(_impl_.hostname_){},
      decltype(_impl_.url_){},
      decltype(_impl_.body_){},
      decltype(_impl_.request_method_){0u},
      decltype(_impl_.absolute_timeout_){0u},
  };
  _impl_.hostname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.hostname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.url_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.body_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.body_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CMsgHttpRequest::~CMsgHttpRequest() {
  // @@protoc_insertion_point(destructor:CMsgHttpRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgHttpRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.headers_.~RepeatedPtrField();
  _impl_.get_params_.~RepeatedPtrField();
  _impl_.post_params_.~RepeatedPtrField();
  _impl_.hostname_.Destroy();
  _impl_.url_.Destroy();
  _impl_.body_.Destroy();
}
void CMsgHttpRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgHttpRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgHttpRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_headers()->Clear();
  _internal_mutable_get_params()->Clear();
  _internal_mutable_post_params()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.hostname_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.url_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.body_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000018u) {
    ::memset(&_impl_.request_method_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.absolute_timeout_) -
        reinterpret_cast<char*>(&_impl_.request_method_)) + sizeof(_impl_.absolute_timeout_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgHttpRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 3, 43, 2> CMsgHttpRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgHttpRequest, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgHttpRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 absolute_timeout = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgHttpRequest, _impl_.absolute_timeout_), 4>(),
     {64, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgHttpRequest, _impl_.absolute_timeout_)}},
    // optional uint32 request_method = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgHttpRequest, _impl_.request_method_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgHttpRequest, _impl_.request_method_)}},
    // optional string hostname = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgHttpRequest, _impl_.hostname_)}},
    // optional string url = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgHttpRequest, _impl_.url_)}},
    // repeated .CMsgHttpRequest.RequestHeader headers = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgHttpRequest, _impl_.headers_)}},
    // repeated .CMsgHttpRequest.QueryParam get_params = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(CMsgHttpRequest, _impl_.get_params_)}},
    // repeated .CMsgHttpRequest.QueryParam post_params = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 2, PROTOBUF_FIELD_OFFSET(CMsgHttpRequest, _impl_.post_params_)}},
    // optional bytes body = 7;
    {::_pbi::TcParser::FastBS1,
     {58, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgHttpRequest, _impl_.body_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 request_method = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgHttpRequest, _impl_.request_method_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string hostname = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgHttpRequest, _impl_.hostname_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string url = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgHttpRequest, _impl_.url_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .CMsgHttpRequest.RequestHeader headers = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgHttpRequest, _impl_.headers_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .CMsgHttpRequest.QueryParam get_params = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgHttpRequest, _impl_.get_params_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .CMsgHttpRequest.QueryParam post_params = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgHttpRequest, _impl_.post_params_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bytes body = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgHttpRequest, _impl_.body_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional uint32 absolute_timeout = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgHttpRequest, _impl_.absolute_timeout_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgHttpRequest_RequestHeader>()},
    {::_pbi::TcParser::GetTable<::CMsgHttpRequest_QueryParam>()},
    {::_pbi::TcParser::GetTable<::CMsgHttpRequest_QueryParam>()},
  }}, {{
    "\17\0\10\3\0\0\0\0\0\0\0\0\0\0\0\0"
    "CMsgHttpRequest"
    "hostname"
    "url"
  }},
};

::uint8_t* CMsgHttpRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgHttpRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 request_method = 1;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_request_method(), target);
  }

  // optional string hostname = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_hostname();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgHttpRequest.hostname");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string url = 3;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_url();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgHttpRequest.url");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // repeated .CMsgHttpRequest.RequestHeader headers = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_headers_size()); i < n; i++) {
    const auto& repfield = this->_internal_headers().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .CMsgHttpRequest.QueryParam get_params = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_get_params_size()); i < n; i++) {
    const auto& repfield = this->_internal_get_params().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .CMsgHttpRequest.QueryParam post_params = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_post_params_size()); i < n; i++) {
    const auto& repfield = this->_internal_post_params().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional bytes body = 7;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_body();
    target = stream->WriteBytesMaybeAliased(7, _s, target);
  }

  // optional uint32 absolute_timeout = 8;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this->_internal_absolute_timeout(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgHttpRequest)
  return target;
}

::size_t CMsgHttpRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgHttpRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgHttpRequest.RequestHeader headers = 4;
  total_size += 1UL * this->_internal_headers_size();
  for (const auto& msg : this->_internal_headers()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .CMsgHttpRequest.QueryParam get_params = 5;
  total_size += 1UL * this->_internal_get_params_size();
  for (const auto& msg : this->_internal_get_params()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .CMsgHttpRequest.QueryParam post_params = 6;
  total_size += 1UL * this->_internal_post_params_size();
  for (const auto& msg : this->_internal_post_params()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string hostname = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_hostname());
    }

    // optional string url = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_url());
    }

    // optional bytes body = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_body());
    }

    // optional uint32 request_method = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_request_method());
    }

    // optional uint32 absolute_timeout = 8;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_absolute_timeout());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgHttpRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgHttpRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgHttpRequest::GetClassData() const { return &_class_data_; }


void CMsgHttpRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgHttpRequest*>(&to_msg);
  auto& from = static_cast<const CMsgHttpRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgHttpRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_headers()->MergeFrom(from._internal_headers());
  _this->_internal_mutable_get_params()->MergeFrom(from._internal_get_params());
  _this->_internal_mutable_post_params()->MergeFrom(from._internal_post_params());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_hostname(from._internal_hostname());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_url(from._internal_url());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_body(from._internal_body());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.request_method_ = from._impl_.request_method_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.absolute_timeout_ = from._impl_.absolute_timeout_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgHttpRequest::CopyFrom(const CMsgHttpRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgHttpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgHttpRequest::IsInitialized() const {
  return true;
}

void CMsgHttpRequest::InternalSwap(CMsgHttpRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.headers_.InternalSwap(&other->_impl_.headers_);
  _impl_.get_params_.InternalSwap(&other->_impl_.get_params_);
  _impl_.post_params_.InternalSwap(&other->_impl_.post_params_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hostname_, lhs_arena,
                                       &other->_impl_.hostname_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.url_, lhs_arena,
                                       &other->_impl_.url_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.body_, lhs_arena,
                                       &other->_impl_.body_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgHttpRequest, _impl_.absolute_timeout_)
      + sizeof(CMsgHttpRequest::_impl_.absolute_timeout_)
      - PROTOBUF_FIELD_OFFSET(CMsgHttpRequest, _impl_.request_method_)>(
          reinterpret_cast<char*>(&_impl_.request_method_),
          reinterpret_cast<char*>(&other->_impl_.request_method_));
}

::google::protobuf::Metadata CMsgHttpRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[4]);
}
// ===================================================================

class CMsgWebAPIRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgWebAPIRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgWebAPIRequest, _impl_._has_bits_);
  static void set_has_interface_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_method_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::CMsgWebAPIKey& api_key(const CMsgWebAPIRequest* msg);
  static void set_has_api_key(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::CMsgHttpRequest& request(const CMsgWebAPIRequest* msg);
  static void set_has_request(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_routing_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

const ::CMsgWebAPIKey& CMsgWebAPIRequest::_Internal::api_key(const CMsgWebAPIRequest* msg) {
  return *msg->_impl_.api_key_;
}
const ::CMsgHttpRequest& CMsgWebAPIRequest::_Internal::request(const CMsgWebAPIRequest* msg) {
  return *msg->_impl_.request_;
}
CMsgWebAPIRequest::CMsgWebAPIRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgWebAPIRequest)
}
CMsgWebAPIRequest::CMsgWebAPIRequest(const CMsgWebAPIRequest& from) : ::google::protobuf::Message() {
  CMsgWebAPIRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.interface_name_){},
      decltype(_impl_.method_name_){},
      decltype(_impl_.api_key_){nullptr},
      decltype(_impl_.request_){nullptr},
      decltype(_impl_.version_){},
      decltype(_impl_.routing_app_id_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.interface_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.interface_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.interface_name_.Set(from._internal_interface_name(), _this->GetArenaForAllocation());
  }
  _impl_.method_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.method_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.method_name_.Set(from._internal_method_name(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.api_key_ = new ::CMsgWebAPIKey(*from._impl_.api_key_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000008u) != 0) {
    _this->_impl_.request_ = new ::CMsgHttpRequest(*from._impl_.request_);
  }
  ::memcpy(&_impl_.version_, &from._impl_.version_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.routing_app_id_) -
    reinterpret_cast<char*>(&_impl_.version_)) + sizeof(_impl_.routing_app_id_));

  // @@protoc_insertion_point(copy_constructor:CMsgWebAPIRequest)
}
inline void CMsgWebAPIRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.interface_name_){},
      decltype(_impl_.method_name_){},
      decltype(_impl_.api_key_){nullptr},
      decltype(_impl_.request_){nullptr},
      decltype(_impl_.version_){0u},
      decltype(_impl_.routing_app_id_){0u},
  };
  _impl_.interface_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.interface_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.method_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.method_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CMsgWebAPIRequest::~CMsgWebAPIRequest() {
  // @@protoc_insertion_point(destructor:CMsgWebAPIRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgWebAPIRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.interface_name_.Destroy();
  _impl_.method_name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.api_key_;
  if (this != internal_default_instance()) delete _impl_.request_;
}
void CMsgWebAPIRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgWebAPIRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgWebAPIRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.interface_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.method_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.api_key_ != nullptr);
      _impl_.api_key_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.request_ != nullptr);
      _impl_.request_->Clear();
    }
  }
  if (cached_has_bits & 0x00000030u) {
    ::memset(&_impl_.version_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.routing_app_id_) -
        reinterpret_cast<char*>(&_impl_.version_)) + sizeof(_impl_.routing_app_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgWebAPIRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 51, 2> CMsgWebAPIRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgWebAPIRequest, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967169,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgWebAPIRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string interface_name = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgWebAPIRequest, _impl_.interface_name_)}},
    // optional string method_name = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgWebAPIRequest, _impl_.method_name_)}},
    // optional uint32 version = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgWebAPIRequest, _impl_.version_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgWebAPIRequest, _impl_.version_)}},
    // optional .CMsgWebAPIKey api_key = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgWebAPIRequest, _impl_.api_key_)}},
    // optional .CMsgHttpRequest request = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 3, 1, PROTOBUF_FIELD_OFFSET(CMsgWebAPIRequest, _impl_.request_)}},
    // optional uint32 routing_app_id = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgWebAPIRequest, _impl_.routing_app_id_), 5>(),
     {56, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgWebAPIRequest, _impl_.routing_app_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string interface_name = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgWebAPIRequest, _impl_.interface_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string method_name = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgWebAPIRequest, _impl_.method_name_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 version = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgWebAPIRequest, _impl_.version_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .CMsgWebAPIKey api_key = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgWebAPIRequest, _impl_.api_key_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgHttpRequest request = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgWebAPIRequest, _impl_.request_), _Internal::kHasBitsOffset + 3, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 routing_app_id = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgWebAPIRequest, _impl_.routing_app_id_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgWebAPIKey>()},
    {::_pbi::TcParser::GetTable<::CMsgHttpRequest>()},
  }}, {{
    "\21\16\13\0\0\0\0\0"
    "CMsgWebAPIRequest"
    "interface_name"
    "method_name"
  }},
};

::uint8_t* CMsgWebAPIRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgWebAPIRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string interface_name = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_interface_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgWebAPIRequest.interface_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string method_name = 3;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_method_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgWebAPIRequest.method_name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional uint32 version = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_version(), target);
  }

  // optional .CMsgWebAPIKey api_key = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::api_key(this),
        _Internal::api_key(this).GetCachedSize(), target, stream);
  }

  // optional .CMsgHttpRequest request = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::request(this),
        _Internal::request(this).GetCachedSize(), target, stream);
  }

  // optional uint32 routing_app_id = 7;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_routing_app_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgWebAPIRequest)
  return target;
}

::size_t CMsgWebAPIRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgWebAPIRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string interface_name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_interface_name());
    }

    // optional string method_name = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_method_name());
    }

    // optional .CMsgWebAPIKey api_key = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.api_key_);
    }

    // optional .CMsgHttpRequest request = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.request_);
    }

    // optional uint32 version = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_version());
    }

    // optional uint32 routing_app_id = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_routing_app_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgWebAPIRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgWebAPIRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgWebAPIRequest::GetClassData() const { return &_class_data_; }


void CMsgWebAPIRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgWebAPIRequest*>(&to_msg);
  auto& from = static_cast<const CMsgWebAPIRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgWebAPIRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_interface_name(from._internal_interface_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_method_name(from._internal_method_name());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_api_key()->::CMsgWebAPIKey::MergeFrom(
          from._internal_api_key());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_request()->::CMsgHttpRequest::MergeFrom(
          from._internal_request());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.version_ = from._impl_.version_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.routing_app_id_ = from._impl_.routing_app_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgWebAPIRequest::CopyFrom(const CMsgWebAPIRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgWebAPIRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgWebAPIRequest::IsInitialized() const {
  return true;
}

void CMsgWebAPIRequest::InternalSwap(CMsgWebAPIRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.interface_name_, lhs_arena,
                                       &other->_impl_.interface_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.method_name_, lhs_arena,
                                       &other->_impl_.method_name_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgWebAPIRequest, _impl_.routing_app_id_)
      + sizeof(CMsgWebAPIRequest::_impl_.routing_app_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgWebAPIRequest, _impl_.api_key_)>(
          reinterpret_cast<char*>(&_impl_.api_key_),
          reinterpret_cast<char*>(&other->_impl_.api_key_));
}

::google::protobuf::Metadata CMsgWebAPIRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[5]);
}
// ===================================================================

class CMsgHttpResponse_ResponseHeader::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgHttpResponse_ResponseHeader>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgHttpResponse_ResponseHeader, _impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgHttpResponse_ResponseHeader::CMsgHttpResponse_ResponseHeader(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgHttpResponse.ResponseHeader)
}
CMsgHttpResponse_ResponseHeader::CMsgHttpResponse_ResponseHeader(const CMsgHttpResponse_ResponseHeader& from) : ::google::protobuf::Message() {
  CMsgHttpResponse_ResponseHeader* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.value_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.value_.Set(from._internal_value(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:CMsgHttpResponse.ResponseHeader)
}
inline void CMsgHttpResponse_ResponseHeader::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.value_){},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CMsgHttpResponse_ResponseHeader::~CMsgHttpResponse_ResponseHeader() {
  // @@protoc_insertion_point(destructor:CMsgHttpResponse.ResponseHeader)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgHttpResponse_ResponseHeader::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.value_.Destroy();
}
void CMsgHttpResponse_ResponseHeader::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgHttpResponse_ResponseHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgHttpResponse.ResponseHeader)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.value_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgHttpResponse_ResponseHeader::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 49, 2> CMsgHttpResponse_ResponseHeader::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgHttpResponse_ResponseHeader, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgHttpResponse_ResponseHeader_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string value = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgHttpResponse_ResponseHeader, _impl_.value_)}},
    // optional string name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgHttpResponse_ResponseHeader, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgHttpResponse_ResponseHeader, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string value = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgHttpResponse_ResponseHeader, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\4\5\0\0\0\0\0"
    "CMsgHttpResponse.ResponseHeader"
    "name"
    "value"
  }},
};

::uint8_t* CMsgHttpResponse_ResponseHeader::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgHttpResponse.ResponseHeader)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgHttpResponse.ResponseHeader.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_value();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgHttpResponse.ResponseHeader.value");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgHttpResponse.ResponseHeader)
  return target;
}

::size_t CMsgHttpResponse_ResponseHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgHttpResponse.ResponseHeader)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }

    // optional string value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_value());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgHttpResponse_ResponseHeader::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgHttpResponse_ResponseHeader::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgHttpResponse_ResponseHeader::GetClassData() const { return &_class_data_; }


void CMsgHttpResponse_ResponseHeader::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgHttpResponse_ResponseHeader*>(&to_msg);
  auto& from = static_cast<const CMsgHttpResponse_ResponseHeader&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgHttpResponse.ResponseHeader)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_value(from._internal_value());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgHttpResponse_ResponseHeader::CopyFrom(const CMsgHttpResponse_ResponseHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgHttpResponse.ResponseHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgHttpResponse_ResponseHeader::IsInitialized() const {
  return true;
}

void CMsgHttpResponse_ResponseHeader::InternalSwap(CMsgHttpResponse_ResponseHeader* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, lhs_arena,
                                       &other->_impl_.value_, rhs_arena);
}

::google::protobuf::Metadata CMsgHttpResponse_ResponseHeader::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[6]);
}
// ===================================================================

class CMsgHttpResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgHttpResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgHttpResponse, _impl_._has_bits_);
  static void set_has_status_code(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_body(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgHttpResponse::CMsgHttpResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgHttpResponse)
}
CMsgHttpResponse::CMsgHttpResponse(const CMsgHttpResponse& from) : ::google::protobuf::Message() {
  CMsgHttpResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.headers_){from._impl_.headers_},
      decltype(_impl_.body_){},
      decltype(_impl_.status_code_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.body_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.body_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.body_.Set(from._internal_body(), _this->GetArenaForAllocation());
  }
  _this->_impl_.status_code_ = from._impl_.status_code_;

  // @@protoc_insertion_point(copy_constructor:CMsgHttpResponse)
}
inline void CMsgHttpResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.headers_){arena},
      decltype(_impl_.body_){},
      decltype(_impl_.status_code_){0u},
  };
  _impl_.body_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.body_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CMsgHttpResponse::~CMsgHttpResponse() {
  // @@protoc_insertion_point(destructor:CMsgHttpResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgHttpResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.headers_.~RepeatedPtrField();
  _impl_.body_.Destroy();
}
void CMsgHttpResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgHttpResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgHttpResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_headers()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.body_.ClearNonDefaultToEmpty();
  }
  _impl_.status_code_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgHttpResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> CMsgHttpResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgHttpResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgHttpResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 status_code = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgHttpResponse, _impl_.status_code_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgHttpResponse, _impl_.status_code_)}},
    // repeated .CMsgHttpResponse.ResponseHeader headers = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgHttpResponse, _impl_.headers_)}},
    // optional bytes body = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgHttpResponse, _impl_.body_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 status_code = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgHttpResponse, _impl_.status_code_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .CMsgHttpResponse.ResponseHeader headers = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgHttpResponse, _impl_.headers_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bytes body = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgHttpResponse, _impl_.body_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgHttpResponse_ResponseHeader>()},
  }}, {{
  }},
};

::uint8_t* CMsgHttpResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgHttpResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 status_code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_status_code(), target);
  }

  // repeated .CMsgHttpResponse.ResponseHeader headers = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_headers_size()); i < n; i++) {
    const auto& repfield = this->_internal_headers().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional bytes body = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_body();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgHttpResponse)
  return target;
}

::size_t CMsgHttpResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgHttpResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgHttpResponse.ResponseHeader headers = 2;
  total_size += 1UL * this->_internal_headers_size();
  for (const auto& msg : this->_internal_headers()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes body = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_body());
    }

    // optional uint32 status_code = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_status_code());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgHttpResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgHttpResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgHttpResponse::GetClassData() const { return &_class_data_; }


void CMsgHttpResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgHttpResponse*>(&to_msg);
  auto& from = static_cast<const CMsgHttpResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgHttpResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_headers()->MergeFrom(from._internal_headers());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_body(from._internal_body());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.status_code_ = from._impl_.status_code_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgHttpResponse::CopyFrom(const CMsgHttpResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgHttpResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgHttpResponse::IsInitialized() const {
  return true;
}

void CMsgHttpResponse::InternalSwap(CMsgHttpResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.headers_.InternalSwap(&other->_impl_.headers_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.body_, lhs_arena,
                                       &other->_impl_.body_, rhs_arena);
        swap(_impl_.status_code_, other->_impl_.status_code_);
}

::google::protobuf::Metadata CMsgHttpResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[7]);
}
// ===================================================================

class CMsgAMFindAccounts::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgAMFindAccounts>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgAMFindAccounts, _impl_._has_bits_);
  static void set_has_search_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_search_string(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgAMFindAccounts::CMsgAMFindAccounts(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgAMFindAccounts)
}
CMsgAMFindAccounts::CMsgAMFindAccounts(const CMsgAMFindAccounts& from) : ::google::protobuf::Message() {
  CMsgAMFindAccounts* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.search_string_){},
      decltype(_impl_.search_type_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.search_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.search_string_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.search_string_.Set(from._internal_search_string(), _this->GetArenaForAllocation());
  }
  _this->_impl_.search_type_ = from._impl_.search_type_;

  // @@protoc_insertion_point(copy_constructor:CMsgAMFindAccounts)
}
inline void CMsgAMFindAccounts::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.search_string_){},
      decltype(_impl_.search_type_){0u},
  };
  _impl_.search_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.search_string_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CMsgAMFindAccounts::~CMsgAMFindAccounts() {
  // @@protoc_insertion_point(destructor:CMsgAMFindAccounts)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgAMFindAccounts::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.search_string_.Destroy();
}
void CMsgAMFindAccounts::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgAMFindAccounts::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMFindAccounts)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.search_string_.ClearNonDefaultToEmpty();
  }
  _impl_.search_type_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgAMFindAccounts::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 40, 2> CMsgAMFindAccounts::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgAMFindAccounts, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgAMFindAccounts_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string search_string = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgAMFindAccounts, _impl_.search_string_)}},
    // optional uint32 search_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgAMFindAccounts, _impl_.search_type_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgAMFindAccounts, _impl_.search_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 search_type = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgAMFindAccounts, _impl_.search_type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string search_string = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgAMFindAccounts, _impl_.search_string_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\22\0\15\0\0\0\0\0"
    "CMsgAMFindAccounts"
    "search_string"
  }},
};

::uint8_t* CMsgAMFindAccounts::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMFindAccounts)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 search_type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_search_type(), target);
  }

  // optional string search_string = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_search_string();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgAMFindAccounts.search_string");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMFindAccounts)
  return target;
}

::size_t CMsgAMFindAccounts::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMFindAccounts)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string search_string = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_search_string());
    }

    // optional uint32 search_type = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_search_type());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgAMFindAccounts::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgAMFindAccounts::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgAMFindAccounts::GetClassData() const { return &_class_data_; }


void CMsgAMFindAccounts::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgAMFindAccounts*>(&to_msg);
  auto& from = static_cast<const CMsgAMFindAccounts&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMFindAccounts)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_search_string(from._internal_search_string());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.search_type_ = from._impl_.search_type_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgAMFindAccounts::CopyFrom(const CMsgAMFindAccounts& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMFindAccounts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgAMFindAccounts::IsInitialized() const {
  return true;
}

void CMsgAMFindAccounts::InternalSwap(CMsgAMFindAccounts* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.search_string_, lhs_arena,
                                       &other->_impl_.search_string_, rhs_arena);
        swap(_impl_.search_type_, other->_impl_.search_type_);
}

::google::protobuf::Metadata CMsgAMFindAccounts::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[8]);
}
// ===================================================================

class CMsgAMFindAccountsResponse::_Internal {
 public:
};

CMsgAMFindAccountsResponse::CMsgAMFindAccountsResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgAMFindAccountsResponse)
}
CMsgAMFindAccountsResponse::CMsgAMFindAccountsResponse(const CMsgAMFindAccountsResponse& from) : ::google::protobuf::Message() {
  CMsgAMFindAccountsResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.steam_id_){from._impl_.steam_id_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CMsgAMFindAccountsResponse)
}
inline void CMsgAMFindAccountsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.steam_id_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
CMsgAMFindAccountsResponse::~CMsgAMFindAccountsResponse() {
  // @@protoc_insertion_point(destructor:CMsgAMFindAccountsResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgAMFindAccountsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.steam_id_.~RepeatedField();
}
void CMsgAMFindAccountsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgAMFindAccountsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMFindAccountsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_steam_id()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgAMFindAccountsResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CMsgAMFindAccountsResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgAMFindAccountsResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated fixed64 steam_id = 1;
    {::_pbi::TcParser::FastF64R1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgAMFindAccountsResponse, _impl_.steam_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated fixed64 steam_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgAMFindAccountsResponse, _impl_.steam_id_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFixed64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgAMFindAccountsResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMFindAccountsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated fixed64 steam_id = 1;
  for (int i = 0, n = this->_internal_steam_id_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        1, this->_internal_steam_id().Get(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMFindAccountsResponse)
  return target;
}

::size_t CMsgAMFindAccountsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMFindAccountsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated fixed64 steam_id = 1;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_steam_id_size())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_steam_id_size());
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgAMFindAccountsResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgAMFindAccountsResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgAMFindAccountsResponse::GetClassData() const { return &_class_data_; }


void CMsgAMFindAccountsResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgAMFindAccountsResponse*>(&to_msg);
  auto& from = static_cast<const CMsgAMFindAccountsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMFindAccountsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_steam_id()->MergeFrom(from._internal_steam_id());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgAMFindAccountsResponse::CopyFrom(const CMsgAMFindAccountsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMFindAccountsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgAMFindAccountsResponse::IsInitialized() const {
  return true;
}

void CMsgAMFindAccountsResponse::InternalSwap(CMsgAMFindAccountsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.steam_id_.InternalSwap(&other->_impl_.steam_id_);
}

::google::protobuf::Metadata CMsgAMFindAccountsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[9]);
}
// ===================================================================

class CMsgNotifyWatchdog::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgNotifyWatchdog>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgNotifyWatchdog, _impl_._has_bits_);
  static void set_has_source(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_alert_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_alert_destination(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_critical(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_time(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_appid(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_text(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgNotifyWatchdog::CMsgNotifyWatchdog(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgNotifyWatchdog)
}
CMsgNotifyWatchdog::CMsgNotifyWatchdog(const CMsgNotifyWatchdog& from) : ::google::protobuf::Message() {
  CMsgNotifyWatchdog* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.text_){},
      decltype(_impl_.source_){},
      decltype(_impl_.alert_type_){},
      decltype(_impl_.alert_destination_){},
      decltype(_impl_.critical_){},
      decltype(_impl_.time_){},
      decltype(_impl_.appid_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.text_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.text_.Set(from._internal_text(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.source_, &from._impl_.source_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.appid_) -
    reinterpret_cast<char*>(&_impl_.source_)) + sizeof(_impl_.appid_));

  // @@protoc_insertion_point(copy_constructor:CMsgNotifyWatchdog)
}
inline void CMsgNotifyWatchdog::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.text_){},
      decltype(_impl_.source_){0u},
      decltype(_impl_.alert_type_){0u},
      decltype(_impl_.alert_destination_){0u},
      decltype(_impl_.critical_){false},
      decltype(_impl_.time_){0u},
      decltype(_impl_.appid_){0u},
  };
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.text_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CMsgNotifyWatchdog::~CMsgNotifyWatchdog() {
  // @@protoc_insertion_point(destructor:CMsgNotifyWatchdog)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgNotifyWatchdog::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.text_.Destroy();
}
void CMsgNotifyWatchdog::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgNotifyWatchdog::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgNotifyWatchdog)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.text_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000007eu) {
    ::memset(&_impl_.source_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.appid_) -
        reinterpret_cast<char*>(&_impl_.source_)) + sizeof(_impl_.appid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgNotifyWatchdog::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 31, 2> CMsgNotifyWatchdog::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgNotifyWatchdog, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgNotifyWatchdog_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 source = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgNotifyWatchdog, _impl_.source_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgNotifyWatchdog, _impl_.source_)}},
    // optional uint32 alert_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgNotifyWatchdog, _impl_.alert_type_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgNotifyWatchdog, _impl_.alert_type_)}},
    // optional uint32 alert_destination = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgNotifyWatchdog, _impl_.alert_destination_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgNotifyWatchdog, _impl_.alert_destination_)}},
    // optional bool critical = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgNotifyWatchdog, _impl_.critical_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgNotifyWatchdog, _impl_.critical_)}},
    // optional uint32 time = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgNotifyWatchdog, _impl_.time_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgNotifyWatchdog, _impl_.time_)}},
    // optional uint32 appid = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgNotifyWatchdog, _impl_.appid_), 6>(),
     {48, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgNotifyWatchdog, _impl_.appid_)}},
    // optional string text = 7;
    {::_pbi::TcParser::FastSS1,
     {58, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgNotifyWatchdog, _impl_.text_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 source = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgNotifyWatchdog, _impl_.source_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 alert_type = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgNotifyWatchdog, _impl_.alert_type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 alert_destination = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgNotifyWatchdog, _impl_.alert_destination_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bool critical = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgNotifyWatchdog, _impl_.critical_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint32 time = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgNotifyWatchdog, _impl_.time_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 appid = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgNotifyWatchdog, _impl_.appid_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string text = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgNotifyWatchdog, _impl_.text_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\22\0\0\0\0\0\0\4"
    "CMsgNotifyWatchdog"
    "text"
  }},
};

::uint8_t* CMsgNotifyWatchdog::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgNotifyWatchdog)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 source = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_source(), target);
  }

  // optional uint32 alert_type = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_alert_type(), target);
  }

  // optional uint32 alert_destination = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_alert_destination(), target);
  }

  // optional bool critical = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_critical(), target);
  }

  // optional uint32 time = 5;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_time(), target);
  }

  // optional uint32 appid = 6;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_appid(), target);
  }

  // optional string text = 7;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_text();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgNotifyWatchdog.text");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgNotifyWatchdog)
  return target;
}

::size_t CMsgNotifyWatchdog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgNotifyWatchdog)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional string text = 7;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_text());
    }

    // optional uint32 source = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_source());
    }

    // optional uint32 alert_type = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_alert_type());
    }

    // optional uint32 alert_destination = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_alert_destination());
    }

    // optional bool critical = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2;
    }

    // optional uint32 time = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_time());
    }

    // optional uint32 appid = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_appid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgNotifyWatchdog::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgNotifyWatchdog::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgNotifyWatchdog::GetClassData() const { return &_class_data_; }


void CMsgNotifyWatchdog::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgNotifyWatchdog*>(&to_msg);
  auto& from = static_cast<const CMsgNotifyWatchdog&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgNotifyWatchdog)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_text(from._internal_text());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.source_ = from._impl_.source_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.alert_type_ = from._impl_.alert_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.alert_destination_ = from._impl_.alert_destination_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.critical_ = from._impl_.critical_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.time_ = from._impl_.time_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.appid_ = from._impl_.appid_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgNotifyWatchdog::CopyFrom(const CMsgNotifyWatchdog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgNotifyWatchdog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgNotifyWatchdog::IsInitialized() const {
  return true;
}

void CMsgNotifyWatchdog::InternalSwap(CMsgNotifyWatchdog* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, lhs_arena,
                                       &other->_impl_.text_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgNotifyWatchdog, _impl_.appid_)
      + sizeof(CMsgNotifyWatchdog::_impl_.appid_)
      - PROTOBUF_FIELD_OFFSET(CMsgNotifyWatchdog, _impl_.source_)>(
          reinterpret_cast<char*>(&_impl_.source_),
          reinterpret_cast<char*>(&other->_impl_.source_));
}

::google::protobuf::Metadata CMsgNotifyWatchdog::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[10]);
}
// ===================================================================

class CMsgAMGetLicenses::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgAMGetLicenses>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgAMGetLicenses, _impl_._has_bits_);
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgAMGetLicenses::CMsgAMGetLicenses(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgAMGetLicenses)
}
CMsgAMGetLicenses::CMsgAMGetLicenses(const CMsgAMGetLicenses& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgAMGetLicenses)
}
inline void CMsgAMGetLicenses::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.steamid_){::uint64_t{0u}},
  };
}
CMsgAMGetLicenses::~CMsgAMGetLicenses() {
  // @@protoc_insertion_point(destructor:CMsgAMGetLicenses)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgAMGetLicenses::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CMsgAMGetLicenses::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgAMGetLicenses::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMGetLicenses)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.steamid_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgAMGetLicenses::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CMsgAMGetLicenses::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgAMGetLicenses, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgAMGetLicenses_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional fixed64 steamid = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgAMGetLicenses, _impl_.steamid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed64 steamid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgAMGetLicenses, _impl_.steamid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgAMGetLicenses::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMGetLicenses)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        1, this->_internal_steamid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMGetLicenses)
  return target;
}

::size_t CMsgAMGetLicenses::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMGetLicenses)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional fixed64 steamid = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgAMGetLicenses::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgAMGetLicenses::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgAMGetLicenses::GetClassData() const { return &_class_data_; }


void CMsgAMGetLicenses::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgAMGetLicenses*>(&to_msg);
  auto& from = static_cast<const CMsgAMGetLicenses&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMGetLicenses)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_steamid(from._internal_steamid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgAMGetLicenses::CopyFrom(const CMsgAMGetLicenses& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMGetLicenses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgAMGetLicenses::IsInitialized() const {
  return true;
}

void CMsgAMGetLicenses::InternalSwap(CMsgAMGetLicenses* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.steamid_, other->_impl_.steamid_);
}

::google::protobuf::Metadata CMsgAMGetLicenses::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[11]);
}
// ===================================================================

class CMsgPackageLicense::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgPackageLicense>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgPackageLicense, _impl_._has_bits_);
  static void set_has_package_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_time_created(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_owner_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgPackageLicense::CMsgPackageLicense(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgPackageLicense)
}
CMsgPackageLicense::CMsgPackageLicense(const CMsgPackageLicense& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgPackageLicense)
}
inline void CMsgPackageLicense::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.package_id_){0u},
      decltype(_impl_.time_created_){0u},
      decltype(_impl_.owner_id_){0u},
  };
}
CMsgPackageLicense::~CMsgPackageLicense() {
  // @@protoc_insertion_point(destructor:CMsgPackageLicense)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgPackageLicense::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CMsgPackageLicense::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgPackageLicense::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgPackageLicense)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.package_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.owner_id_) -
        reinterpret_cast<char*>(&_impl_.package_id_)) + sizeof(_impl_.owner_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgPackageLicense::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> CMsgPackageLicense::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgPackageLicense, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgPackageLicense_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 package_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgPackageLicense, _impl_.package_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgPackageLicense, _impl_.package_id_)}},
    // optional uint32 time_created = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgPackageLicense, _impl_.time_created_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgPackageLicense, _impl_.time_created_)}},
    // optional uint32 owner_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgPackageLicense, _impl_.owner_id_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgPackageLicense, _impl_.owner_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 package_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgPackageLicense, _impl_.package_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 time_created = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgPackageLicense, _impl_.time_created_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 owner_id = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgPackageLicense, _impl_.owner_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgPackageLicense::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgPackageLicense)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 package_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_package_id(), target);
  }

  // optional uint32 time_created = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_time_created(), target);
  }

  // optional uint32 owner_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_owner_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgPackageLicense)
  return target;
}

::size_t CMsgPackageLicense::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgPackageLicense)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 package_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_package_id());
    }

    // optional uint32 time_created = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_time_created());
    }

    // optional uint32 owner_id = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_owner_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgPackageLicense::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgPackageLicense::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgPackageLicense::GetClassData() const { return &_class_data_; }


void CMsgPackageLicense::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgPackageLicense*>(&to_msg);
  auto& from = static_cast<const CMsgPackageLicense&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgPackageLicense)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.package_id_ = from._impl_.package_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.time_created_ = from._impl_.time_created_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.owner_id_ = from._impl_.owner_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgPackageLicense::CopyFrom(const CMsgPackageLicense& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgPackageLicense)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgPackageLicense::IsInitialized() const {
  return true;
}

void CMsgPackageLicense::InternalSwap(CMsgPackageLicense* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgPackageLicense, _impl_.owner_id_)
      + sizeof(CMsgPackageLicense::_impl_.owner_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgPackageLicense, _impl_.package_id_)>(
          reinterpret_cast<char*>(&_impl_.package_id_),
          reinterpret_cast<char*>(&other->_impl_.package_id_));
}

::google::protobuf::Metadata CMsgPackageLicense::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[12]);
}
// ===================================================================

class CMsgAMGetLicensesResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgAMGetLicensesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgAMGetLicensesResponse, _impl_._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgAMGetLicensesResponse::CMsgAMGetLicensesResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgAMGetLicensesResponse)
}
CMsgAMGetLicensesResponse::CMsgAMGetLicensesResponse(const CMsgAMGetLicensesResponse& from) : ::google::protobuf::Message() {
  CMsgAMGetLicensesResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.license_){from._impl_.license_},
      decltype(_impl_.result_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;

  // @@protoc_insertion_point(copy_constructor:CMsgAMGetLicensesResponse)
}
inline void CMsgAMGetLicensesResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.license_){arena},
      decltype(_impl_.result_){0u},
  };
}
CMsgAMGetLicensesResponse::~CMsgAMGetLicensesResponse() {
  // @@protoc_insertion_point(destructor:CMsgAMGetLicensesResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgAMGetLicensesResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.license_.~RepeatedPtrField();
}
void CMsgAMGetLicensesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgAMGetLicensesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMGetLicensesResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_license()->Clear();
  _impl_.result_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgAMGetLicensesResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> CMsgAMGetLicensesResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgAMGetLicensesResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgAMGetLicensesResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 result = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgAMGetLicensesResponse, _impl_.result_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgAMGetLicensesResponse, _impl_.result_)}},
    // repeated .CMsgPackageLicense license = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgAMGetLicensesResponse, _impl_.license_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .CMsgPackageLicense license = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgAMGetLicensesResponse, _impl_.license_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 result = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgAMGetLicensesResponse, _impl_.result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgPackageLicense>()},
  }}, {{
  }},
};

::uint8_t* CMsgAMGetLicensesResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMGetLicensesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .CMsgPackageLicense license = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_license_size()); i < n; i++) {
    const auto& repfield = this->_internal_license().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 result = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMGetLicensesResponse)
  return target;
}

::size_t CMsgAMGetLicensesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMGetLicensesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgPackageLicense license = 1;
  total_size += 1UL * this->_internal_license_size();
  for (const auto& msg : this->_internal_license()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // optional uint32 result = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgAMGetLicensesResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgAMGetLicensesResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgAMGetLicensesResponse::GetClassData() const { return &_class_data_; }


void CMsgAMGetLicensesResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgAMGetLicensesResponse*>(&to_msg);
  auto& from = static_cast<const CMsgAMGetLicensesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMGetLicensesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_license()->MergeFrom(from._internal_license());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgAMGetLicensesResponse::CopyFrom(const CMsgAMGetLicensesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMGetLicensesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgAMGetLicensesResponse::IsInitialized() const {
  return true;
}

void CMsgAMGetLicensesResponse::InternalSwap(CMsgAMGetLicensesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.license_.InternalSwap(&other->_impl_.license_);
        swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata CMsgAMGetLicensesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[13]);
}
// ===================================================================

class CMsgAMGetUserGameStats::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgAMGetUserGameStats>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStats, _impl_._has_bits_);
  static void set_has_steam_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_game_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgAMGetUserGameStats::CMsgAMGetUserGameStats(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgAMGetUserGameStats)
}
CMsgAMGetUserGameStats::CMsgAMGetUserGameStats(const CMsgAMGetUserGameStats& from) : ::google::protobuf::Message() {
  CMsgAMGetUserGameStats* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.stats_){from._impl_.stats_},
      decltype(_impl_.steam_id_){},
      decltype(_impl_.game_id_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  ::memcpy(&_impl_.steam_id_, &from._impl_.steam_id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.game_id_) -
    reinterpret_cast<char*>(&_impl_.steam_id_)) + sizeof(_impl_.game_id_));

  // @@protoc_insertion_point(copy_constructor:CMsgAMGetUserGameStats)
}
inline void CMsgAMGetUserGameStats::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.stats_){arena},
      decltype(_impl_.steam_id_){::uint64_t{0u}},
      decltype(_impl_.game_id_){::uint64_t{0u}},
  };
}
CMsgAMGetUserGameStats::~CMsgAMGetUserGameStats() {
  // @@protoc_insertion_point(destructor:CMsgAMGetUserGameStats)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgAMGetUserGameStats::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.stats_.~RepeatedField();
}
void CMsgAMGetUserGameStats::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgAMGetUserGameStats::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMGetUserGameStats)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_stats()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.steam_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.game_id_) -
        reinterpret_cast<char*>(&_impl_.steam_id_)) + sizeof(_impl_.game_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgAMGetUserGameStats::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> CMsgAMGetUserGameStats::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStats, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgAMGetUserGameStats_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional fixed64 steam_id = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStats, _impl_.steam_id_)}},
    // optional fixed64 game_id = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStats, _impl_.game_id_)}},
    // repeated uint32 stats = 3;
    {::_pbi::TcParser::FastV32R1,
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStats, _impl_.stats_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed64 steam_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStats, _impl_.steam_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional fixed64 game_id = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStats, _impl_.game_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // repeated uint32 stats = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStats, _impl_.stats_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgAMGetUserGameStats::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMGetUserGameStats)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        1, this->_internal_steam_id(), target);
  }

  // optional fixed64 game_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        2, this->_internal_game_id(), target);
  }

  // repeated uint32 stats = 3;
  for (int i = 0, n = this->_internal_stats_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_stats().Get(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMGetUserGameStats)
  return target;
}

::size_t CMsgAMGetUserGameStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMGetUserGameStats)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 stats = 3;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_stats())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_stats_size());
    ;
    total_size += tag_size + data_size;
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional fixed64 steam_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 9;
    }

    // optional fixed64 game_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgAMGetUserGameStats::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgAMGetUserGameStats::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgAMGetUserGameStats::GetClassData() const { return &_class_data_; }


void CMsgAMGetUserGameStats::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgAMGetUserGameStats*>(&to_msg);
  auto& from = static_cast<const CMsgAMGetUserGameStats&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMGetUserGameStats)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_stats()->MergeFrom(from._internal_stats());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.steam_id_ = from._impl_.steam_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.game_id_ = from._impl_.game_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgAMGetUserGameStats::CopyFrom(const CMsgAMGetUserGameStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMGetUserGameStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgAMGetUserGameStats::IsInitialized() const {
  return true;
}

void CMsgAMGetUserGameStats::InternalSwap(CMsgAMGetUserGameStats* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.stats_.InternalSwap(&other->_impl_.stats_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStats, _impl_.game_id_)
      + sizeof(CMsgAMGetUserGameStats::_impl_.game_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStats, _impl_.steam_id_)>(
          reinterpret_cast<char*>(&_impl_.steam_id_),
          reinterpret_cast<char*>(&other->_impl_.steam_id_));
}

::google::protobuf::Metadata CMsgAMGetUserGameStats::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[14]);
}
// ===================================================================

class CMsgAMGetUserGameStatsResponse_Stats::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgAMGetUserGameStatsResponse_Stats>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse_Stats, _impl_._has_bits_);
  static void set_has_stat_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_stat_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgAMGetUserGameStatsResponse_Stats::CMsgAMGetUserGameStatsResponse_Stats(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgAMGetUserGameStatsResponse.Stats)
}
CMsgAMGetUserGameStatsResponse_Stats::CMsgAMGetUserGameStatsResponse_Stats(const CMsgAMGetUserGameStatsResponse_Stats& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgAMGetUserGameStatsResponse.Stats)
}
inline void CMsgAMGetUserGameStatsResponse_Stats::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.stat_id_){0u},
      decltype(_impl_.stat_value_){0u},
  };
}
CMsgAMGetUserGameStatsResponse_Stats::~CMsgAMGetUserGameStatsResponse_Stats() {
  // @@protoc_insertion_point(destructor:CMsgAMGetUserGameStatsResponse.Stats)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgAMGetUserGameStatsResponse_Stats::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CMsgAMGetUserGameStatsResponse_Stats::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgAMGetUserGameStatsResponse_Stats::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMGetUserGameStatsResponse.Stats)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.stat_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.stat_value_) -
        reinterpret_cast<char*>(&_impl_.stat_id_)) + sizeof(_impl_.stat_value_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgAMGetUserGameStatsResponse_Stats::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> CMsgAMGetUserGameStatsResponse_Stats::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse_Stats, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgAMGetUserGameStatsResponse_Stats_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 stat_value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgAMGetUserGameStatsResponse_Stats, _impl_.stat_value_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse_Stats, _impl_.stat_value_)}},
    // optional uint32 stat_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgAMGetUserGameStatsResponse_Stats, _impl_.stat_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse_Stats, _impl_.stat_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 stat_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse_Stats, _impl_.stat_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 stat_value = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse_Stats, _impl_.stat_value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgAMGetUserGameStatsResponse_Stats::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMGetUserGameStatsResponse.Stats)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 stat_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_stat_id(), target);
  }

  // optional uint32 stat_value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_stat_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMGetUserGameStatsResponse.Stats)
  return target;
}

::size_t CMsgAMGetUserGameStatsResponse_Stats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMGetUserGameStatsResponse.Stats)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 stat_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_stat_id());
    }

    // optional uint32 stat_value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_stat_value());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgAMGetUserGameStatsResponse_Stats::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgAMGetUserGameStatsResponse_Stats::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgAMGetUserGameStatsResponse_Stats::GetClassData() const { return &_class_data_; }


void CMsgAMGetUserGameStatsResponse_Stats::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgAMGetUserGameStatsResponse_Stats*>(&to_msg);
  auto& from = static_cast<const CMsgAMGetUserGameStatsResponse_Stats&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMGetUserGameStatsResponse.Stats)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.stat_id_ = from._impl_.stat_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.stat_value_ = from._impl_.stat_value_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgAMGetUserGameStatsResponse_Stats::CopyFrom(const CMsgAMGetUserGameStatsResponse_Stats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMGetUserGameStatsResponse.Stats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgAMGetUserGameStatsResponse_Stats::IsInitialized() const {
  return true;
}

void CMsgAMGetUserGameStatsResponse_Stats::InternalSwap(CMsgAMGetUserGameStatsResponse_Stats* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse_Stats, _impl_.stat_value_)
      + sizeof(CMsgAMGetUserGameStatsResponse_Stats::_impl_.stat_value_)
      - PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse_Stats, _impl_.stat_id_)>(
          reinterpret_cast<char*>(&_impl_.stat_id_),
          reinterpret_cast<char*>(&other->_impl_.stat_id_));
}

::google::protobuf::Metadata CMsgAMGetUserGameStatsResponse_Stats::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[15]);
}
// ===================================================================

class CMsgAMGetUserGameStatsResponse_Achievement_Blocks::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgAMGetUserGameStatsResponse_Achievement_Blocks>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse_Achievement_Blocks, _impl_._has_bits_);
  static void set_has_achievement_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_achievement_bit_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_unlock_time(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgAMGetUserGameStatsResponse_Achievement_Blocks::CMsgAMGetUserGameStatsResponse_Achievement_Blocks(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
}
CMsgAMGetUserGameStatsResponse_Achievement_Blocks::CMsgAMGetUserGameStatsResponse_Achievement_Blocks(const CMsgAMGetUserGameStatsResponse_Achievement_Blocks& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
}
inline void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.achievement_id_){0u},
      decltype(_impl_.achievement_bit_id_){0u},
      decltype(_impl_.unlock_time_){0u},
  };
}
CMsgAMGetUserGameStatsResponse_Achievement_Blocks::~CMsgAMGetUserGameStatsResponse_Achievement_Blocks() {
  // @@protoc_insertion_point(destructor:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.achievement_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.unlock_time_) -
        reinterpret_cast<char*>(&_impl_.achievement_id_)) + sizeof(_impl_.unlock_time_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgAMGetUserGameStatsResponse_Achievement_Blocks::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> CMsgAMGetUserGameStatsResponse_Achievement_Blocks::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse_Achievement_Blocks, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgAMGetUserGameStatsResponse_Achievement_Blocks_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 achievement_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgAMGetUserGameStatsResponse_Achievement_Blocks, _impl_.achievement_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse_Achievement_Blocks, _impl_.achievement_id_)}},
    // optional uint32 achievement_bit_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgAMGetUserGameStatsResponse_Achievement_Blocks, _impl_.achievement_bit_id_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse_Achievement_Blocks, _impl_.achievement_bit_id_)}},
    // optional fixed32 unlock_time = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse_Achievement_Blocks, _impl_.unlock_time_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 achievement_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse_Achievement_Blocks, _impl_.achievement_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 achievement_bit_id = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse_Achievement_Blocks, _impl_.achievement_bit_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional fixed32 unlock_time = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse_Achievement_Blocks, _impl_.unlock_time_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgAMGetUserGameStatsResponse_Achievement_Blocks::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 achievement_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_achievement_id(), target);
  }

  // optional uint32 achievement_bit_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_achievement_bit_id(), target);
  }

  // optional fixed32 unlock_time = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        3, this->_internal_unlock_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
  return target;
}

::size_t CMsgAMGetUserGameStatsResponse_Achievement_Blocks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 achievement_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_achievement_id());
    }

    // optional uint32 achievement_bit_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_achievement_bit_id());
    }

    // optional fixed32 unlock_time = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgAMGetUserGameStatsResponse_Achievement_Blocks::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgAMGetUserGameStatsResponse_Achievement_Blocks::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgAMGetUserGameStatsResponse_Achievement_Blocks::GetClassData() const { return &_class_data_; }


void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgAMGetUserGameStatsResponse_Achievement_Blocks*>(&to_msg);
  auto& from = static_cast<const CMsgAMGetUserGameStatsResponse_Achievement_Blocks&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.achievement_id_ = from._impl_.achievement_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.achievement_bit_id_ = from._impl_.achievement_bit_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.unlock_time_ = from._impl_.unlock_time_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::CopyFrom(const CMsgAMGetUserGameStatsResponse_Achievement_Blocks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgAMGetUserGameStatsResponse_Achievement_Blocks::IsInitialized() const {
  return true;
}

void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::InternalSwap(CMsgAMGetUserGameStatsResponse_Achievement_Blocks* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse_Achievement_Blocks, _impl_.unlock_time_)
      + sizeof(CMsgAMGetUserGameStatsResponse_Achievement_Blocks::_impl_.unlock_time_)
      - PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse_Achievement_Blocks, _impl_.achievement_id_)>(
          reinterpret_cast<char*>(&_impl_.achievement_id_),
          reinterpret_cast<char*>(&other->_impl_.achievement_id_));
}

::google::protobuf::Metadata CMsgAMGetUserGameStatsResponse_Achievement_Blocks::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[16]);
}
// ===================================================================

class CMsgAMGetUserGameStatsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgAMGetUserGameStatsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse, _impl_._has_bits_);
  static void set_has_steam_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_game_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_eresult(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgAMGetUserGameStatsResponse::CMsgAMGetUserGameStatsResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgAMGetUserGameStatsResponse)
}
CMsgAMGetUserGameStatsResponse::CMsgAMGetUserGameStatsResponse(const CMsgAMGetUserGameStatsResponse& from) : ::google::protobuf::Message() {
  CMsgAMGetUserGameStatsResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.stats_){from._impl_.stats_},
      decltype(_impl_.achievement_blocks_){from._impl_.achievement_blocks_},
      decltype(_impl_.steam_id_){},
      decltype(_impl_.game_id_){},
      decltype(_impl_.eresult_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  ::memcpy(&_impl_.steam_id_, &from._impl_.steam_id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.eresult_) -
    reinterpret_cast<char*>(&_impl_.steam_id_)) + sizeof(_impl_.eresult_));

  // @@protoc_insertion_point(copy_constructor:CMsgAMGetUserGameStatsResponse)
}
inline void CMsgAMGetUserGameStatsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.stats_){arena},
      decltype(_impl_.achievement_blocks_){arena},
      decltype(_impl_.steam_id_){::uint64_t{0u}},
      decltype(_impl_.game_id_){::uint64_t{0u}},
      decltype(_impl_.eresult_){2},
  };
}
CMsgAMGetUserGameStatsResponse::~CMsgAMGetUserGameStatsResponse() {
  // @@protoc_insertion_point(destructor:CMsgAMGetUserGameStatsResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgAMGetUserGameStatsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.stats_.~RepeatedPtrField();
  _impl_.achievement_blocks_.~RepeatedPtrField();
}
void CMsgAMGetUserGameStatsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgAMGetUserGameStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMGetUserGameStatsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_stats()->Clear();
  _internal_mutable_achievement_blocks()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.steam_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.game_id_) -
        reinterpret_cast<char*>(&_impl_.steam_id_)) + sizeof(_impl_.game_id_));
    _impl_.eresult_ = 2;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgAMGetUserGameStatsResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2> CMsgAMGetUserGameStatsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgAMGetUserGameStatsResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional fixed64 steam_id = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse, _impl_.steam_id_)}},
    // optional fixed64 game_id = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse, _impl_.game_id_)}},
    // optional int32 eresult = 3 [default = 2];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgAMGetUserGameStatsResponse, _impl_.eresult_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse, _impl_.eresult_)}},
    // repeated .CMsgAMGetUserGameStatsResponse.Stats stats = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse, _impl_.stats_)}},
    // repeated .CMsgAMGetUserGameStatsResponse.Achievement_Blocks achievement_blocks = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse, _impl_.achievement_blocks_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed64 steam_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse, _impl_.steam_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional fixed64 game_id = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse, _impl_.game_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional int32 eresult = 3 [default = 2];
    {PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse, _impl_.eresult_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated .CMsgAMGetUserGameStatsResponse.Stats stats = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse, _impl_.stats_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .CMsgAMGetUserGameStatsResponse.Achievement_Blocks achievement_blocks = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse, _impl_.achievement_blocks_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgAMGetUserGameStatsResponse_Stats>()},
    {::_pbi::TcParser::GetTable<::CMsgAMGetUserGameStatsResponse_Achievement_Blocks>()},
  }}, {{
  }},
};

::uint8_t* CMsgAMGetUserGameStatsResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMGetUserGameStatsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        1, this->_internal_steam_id(), target);
  }

  // optional fixed64 game_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        2, this->_internal_game_id(), target);
  }

  // optional int32 eresult = 3 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_eresult(), target);
  }

  // repeated .CMsgAMGetUserGameStatsResponse.Stats stats = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_stats_size()); i < n; i++) {
    const auto& repfield = this->_internal_stats().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .CMsgAMGetUserGameStatsResponse.Achievement_Blocks achievement_blocks = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_achievement_blocks_size()); i < n; i++) {
    const auto& repfield = this->_internal_achievement_blocks().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMGetUserGameStatsResponse)
  return target;
}

::size_t CMsgAMGetUserGameStatsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMGetUserGameStatsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgAMGetUserGameStatsResponse.Stats stats = 4;
  total_size += 1UL * this->_internal_stats_size();
  for (const auto& msg : this->_internal_stats()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .CMsgAMGetUserGameStatsResponse.Achievement_Blocks achievement_blocks = 5;
  total_size += 1UL * this->_internal_achievement_blocks_size();
  for (const auto& msg : this->_internal_achievement_blocks()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional fixed64 steam_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 9;
    }

    // optional fixed64 game_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }

    // optional int32 eresult = 3 [default = 2];
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_eresult());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgAMGetUserGameStatsResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgAMGetUserGameStatsResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgAMGetUserGameStatsResponse::GetClassData() const { return &_class_data_; }


void CMsgAMGetUserGameStatsResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgAMGetUserGameStatsResponse*>(&to_msg);
  auto& from = static_cast<const CMsgAMGetUserGameStatsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMGetUserGameStatsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_stats()->MergeFrom(from._internal_stats());
  _this->_internal_mutable_achievement_blocks()->MergeFrom(from._internal_achievement_blocks());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.steam_id_ = from._impl_.steam_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.game_id_ = from._impl_.game_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.eresult_ = from._impl_.eresult_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgAMGetUserGameStatsResponse::CopyFrom(const CMsgAMGetUserGameStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMGetUserGameStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgAMGetUserGameStatsResponse::IsInitialized() const {
  return true;
}

void CMsgAMGetUserGameStatsResponse::InternalSwap(CMsgAMGetUserGameStatsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.stats_.InternalSwap(&other->_impl_.stats_);
  _impl_.achievement_blocks_.InternalSwap(&other->_impl_.achievement_blocks_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse, _impl_.eresult_)
      + sizeof(CMsgAMGetUserGameStatsResponse::_impl_.eresult_)
      - PROTOBUF_FIELD_OFFSET(CMsgAMGetUserGameStatsResponse, _impl_.steam_id_)>(
          reinterpret_cast<char*>(&_impl_.steam_id_),
          reinterpret_cast<char*>(&other->_impl_.steam_id_));
}

::google::protobuf::Metadata CMsgAMGetUserGameStatsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[17]);
}
// ===================================================================

class CMsgGCGetCommandList::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCGetCommandList>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgGCGetCommandList, _impl_._has_bits_);
  static void set_has_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_command_prefix(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgGCGetCommandList::CMsgGCGetCommandList(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCGetCommandList)
}
CMsgGCGetCommandList::CMsgGCGetCommandList(const CMsgGCGetCommandList& from) : ::google::protobuf::Message() {
  CMsgGCGetCommandList* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.command_prefix_){},
      decltype(_impl_.app_id_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.command_prefix_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.command_prefix_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.command_prefix_.Set(from._internal_command_prefix(), _this->GetArenaForAllocation());
  }
  _this->_impl_.app_id_ = from._impl_.app_id_;

  // @@protoc_insertion_point(copy_constructor:CMsgGCGetCommandList)
}
inline void CMsgGCGetCommandList::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.command_prefix_){},
      decltype(_impl_.app_id_){0u},
  };
  _impl_.command_prefix_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.command_prefix_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CMsgGCGetCommandList::~CMsgGCGetCommandList() {
  // @@protoc_insertion_point(destructor:CMsgGCGetCommandList)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCGetCommandList::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.command_prefix_.Destroy();
}
void CMsgGCGetCommandList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCGetCommandList::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCGetCommandList)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.command_prefix_.ClearNonDefaultToEmpty();
  }
  _impl_.app_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCGetCommandList::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 43, 2> CMsgGCGetCommandList::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCGetCommandList, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgGCGetCommandList_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string command_prefix = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCGetCommandList, _impl_.command_prefix_)}},
    // optional uint32 app_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCGetCommandList, _impl_.app_id_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCGetCommandList, _impl_.app_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 app_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCGetCommandList, _impl_.app_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string command_prefix = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCGetCommandList, _impl_.command_prefix_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\24\0\16\0\0\0\0\0"
    "CMsgGCGetCommandList"
    "command_prefix"
  }},
};

::uint8_t* CMsgGCGetCommandList::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCGetCommandList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_app_id(), target);
  }

  // optional string command_prefix = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_command_prefix();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCGetCommandList.command_prefix");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCGetCommandList)
  return target;
}

::size_t CMsgGCGetCommandList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCGetCommandList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string command_prefix = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_command_prefix());
    }

    // optional uint32 app_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_app_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCGetCommandList::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCGetCommandList::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCGetCommandList::GetClassData() const { return &_class_data_; }


void CMsgGCGetCommandList::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCGetCommandList*>(&to_msg);
  auto& from = static_cast<const CMsgGCGetCommandList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCGetCommandList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_command_prefix(from._internal_command_prefix());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.app_id_ = from._impl_.app_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCGetCommandList::CopyFrom(const CMsgGCGetCommandList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCGetCommandList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCGetCommandList::IsInitialized() const {
  return true;
}

void CMsgGCGetCommandList::InternalSwap(CMsgGCGetCommandList* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.command_prefix_, lhs_arena,
                                       &other->_impl_.command_prefix_, rhs_arena);
        swap(_impl_.app_id_, other->_impl_.app_id_);
}

::google::protobuf::Metadata CMsgGCGetCommandList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[18]);
}
// ===================================================================

class CMsgGCGetCommandListResponse::_Internal {
 public:
};

CMsgGCGetCommandListResponse::CMsgGCGetCommandListResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCGetCommandListResponse)
}
CMsgGCGetCommandListResponse::CMsgGCGetCommandListResponse(const CMsgGCGetCommandListResponse& from) : ::google::protobuf::Message() {
  CMsgGCGetCommandListResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.command_name_){from._impl_.command_name_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CMsgGCGetCommandListResponse)
}
inline void CMsgGCGetCommandListResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.command_name_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
CMsgGCGetCommandListResponse::~CMsgGCGetCommandListResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCGetCommandListResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCGetCommandListResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_command_name()->~RepeatedPtrField();
}
void CMsgGCGetCommandListResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCGetCommandListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCGetCommandListResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_command_name()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCGetCommandListResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 49, 2> CMsgGCGetCommandListResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgGCGetCommandListResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string command_name = 1;
    {::_pbi::TcParser::FastSR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCGetCommandListResponse, _impl_.command_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string command_name = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCGetCommandListResponse, _impl_.command_name_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\34\14\0\0\0\0\0\0"
    "CMsgGCGetCommandListResponse"
    "command_name"
  }},
};

::uint8_t* CMsgGCGetCommandListResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCGetCommandListResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string command_name = 1;
  for (int i = 0, n = this->_internal_command_name_size(); i < n; ++i) {
    const auto& s = this->_internal_command_name().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCGetCommandListResponse.command_name");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCGetCommandListResponse)
  return target;
}

::size_t CMsgGCGetCommandListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCGetCommandListResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string command_name = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_command_name().size());
  for (int i = 0, n = _internal_command_name().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_command_name().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCGetCommandListResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCGetCommandListResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCGetCommandListResponse::GetClassData() const { return &_class_data_; }


void CMsgGCGetCommandListResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCGetCommandListResponse*>(&to_msg);
  auto& from = static_cast<const CMsgGCGetCommandListResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCGetCommandListResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_command_name()->MergeFrom(from._internal_command_name());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCGetCommandListResponse::CopyFrom(const CMsgGCGetCommandListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCGetCommandListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCGetCommandListResponse::IsInitialized() const {
  return true;
}

void CMsgGCGetCommandListResponse::InternalSwap(CMsgGCGetCommandListResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.command_name_.InternalSwap(&other->_impl_.command_name_);
}

::google::protobuf::Metadata CMsgGCGetCommandListResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[19]);
}
// ===================================================================

class CGCMsgMemCachedGet::_Internal {
 public:
};

CGCMsgMemCachedGet::CGCMsgMemCachedGet(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CGCMsgMemCachedGet)
}
CGCMsgMemCachedGet::CGCMsgMemCachedGet(const CGCMsgMemCachedGet& from) : ::google::protobuf::Message() {
  CGCMsgMemCachedGet* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.keys_){from._impl_.keys_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CGCMsgMemCachedGet)
}
inline void CGCMsgMemCachedGet::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.keys_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
CGCMsgMemCachedGet::~CGCMsgMemCachedGet() {
  // @@protoc_insertion_point(destructor:CGCMsgMemCachedGet)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CGCMsgMemCachedGet::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_keys()->~RepeatedPtrField();
}
void CGCMsgMemCachedGet::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CGCMsgMemCachedGet::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCMsgMemCachedGet)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_keys()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CGCMsgMemCachedGet::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 31, 2> CGCMsgMemCachedGet::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CGCMsgMemCachedGet_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string keys = 1;
    {::_pbi::TcParser::FastSR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedGet, _impl_.keys_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string keys = 1;
    {PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedGet, _impl_.keys_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\22\4\0\0\0\0\0\0"
    "CGCMsgMemCachedGet"
    "keys"
  }},
};

::uint8_t* CGCMsgMemCachedGet::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgMemCachedGet)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string keys = 1;
  for (int i = 0, n = this->_internal_keys_size(); i < n; ++i) {
    const auto& s = this->_internal_keys().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CGCMsgMemCachedGet.keys");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgMemCachedGet)
  return target;
}

::size_t CGCMsgMemCachedGet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCMsgMemCachedGet)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string keys = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_keys().size());
  for (int i = 0, n = _internal_keys().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_keys().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CGCMsgMemCachedGet::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CGCMsgMemCachedGet::MergeImpl
};
const ::google::protobuf::Message::ClassData*CGCMsgMemCachedGet::GetClassData() const { return &_class_data_; }


void CGCMsgMemCachedGet::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CGCMsgMemCachedGet*>(&to_msg);
  auto& from = static_cast<const CGCMsgMemCachedGet&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CGCMsgMemCachedGet)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_keys()->MergeFrom(from._internal_keys());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CGCMsgMemCachedGet::CopyFrom(const CGCMsgMemCachedGet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCMsgMemCachedGet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CGCMsgMemCachedGet::IsInitialized() const {
  return true;
}

void CGCMsgMemCachedGet::InternalSwap(CGCMsgMemCachedGet* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.keys_.InternalSwap(&other->_impl_.keys_);
}

::google::protobuf::Metadata CGCMsgMemCachedGet::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[20]);
}
// ===================================================================

class CGCMsgMemCachedGetResponse_ValueTag::_Internal {
 public:
  using HasBits = decltype(std::declval<CGCMsgMemCachedGetResponse_ValueTag>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedGetResponse_ValueTag, _impl_._has_bits_);
  static void set_has_found(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CGCMsgMemCachedGetResponse_ValueTag::CGCMsgMemCachedGetResponse_ValueTag(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CGCMsgMemCachedGetResponse.ValueTag)
}
CGCMsgMemCachedGetResponse_ValueTag::CGCMsgMemCachedGetResponse_ValueTag(const CGCMsgMemCachedGetResponse_ValueTag& from) : ::google::protobuf::Message() {
  CGCMsgMemCachedGetResponse_ValueTag* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.value_){},
      decltype(_impl_.found_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.value_.Set(from._internal_value(), _this->GetArenaForAllocation());
  }
  _this->_impl_.found_ = from._impl_.found_;

  // @@protoc_insertion_point(copy_constructor:CGCMsgMemCachedGetResponse.ValueTag)
}
inline void CGCMsgMemCachedGetResponse_ValueTag::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.value_){},
      decltype(_impl_.found_){false},
  };
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CGCMsgMemCachedGetResponse_ValueTag::~CGCMsgMemCachedGetResponse_ValueTag() {
  // @@protoc_insertion_point(destructor:CGCMsgMemCachedGetResponse.ValueTag)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CGCMsgMemCachedGetResponse_ValueTag::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.value_.Destroy();
}
void CGCMsgMemCachedGetResponse_ValueTag::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CGCMsgMemCachedGetResponse_ValueTag::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCMsgMemCachedGetResponse.ValueTag)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.value_.ClearNonDefaultToEmpty();
  }
  _impl_.found_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CGCMsgMemCachedGetResponse_ValueTag::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> CGCMsgMemCachedGetResponse_ValueTag::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedGetResponse_ValueTag, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CGCMsgMemCachedGetResponse_ValueTag_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bytes value = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedGetResponse_ValueTag, _impl_.value_)}},
    // optional bool found = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CGCMsgMemCachedGetResponse_ValueTag, _impl_.found_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedGetResponse_ValueTag, _impl_.found_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool found = 1;
    {PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedGetResponse_ValueTag, _impl_.found_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bytes value = 2;
    {PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedGetResponse_ValueTag, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CGCMsgMemCachedGetResponse_ValueTag::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgMemCachedGetResponse.ValueTag)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool found = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_found(), target);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_value();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgMemCachedGetResponse.ValueTag)
  return target;
}

::size_t CGCMsgMemCachedGetResponse_ValueTag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCMsgMemCachedGetResponse.ValueTag)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes value = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_value());
    }

    // optional bool found = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CGCMsgMemCachedGetResponse_ValueTag::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CGCMsgMemCachedGetResponse_ValueTag::MergeImpl
};
const ::google::protobuf::Message::ClassData*CGCMsgMemCachedGetResponse_ValueTag::GetClassData() const { return &_class_data_; }


void CGCMsgMemCachedGetResponse_ValueTag::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CGCMsgMemCachedGetResponse_ValueTag*>(&to_msg);
  auto& from = static_cast<const CGCMsgMemCachedGetResponse_ValueTag&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CGCMsgMemCachedGetResponse.ValueTag)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_value(from._internal_value());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.found_ = from._impl_.found_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CGCMsgMemCachedGetResponse_ValueTag::CopyFrom(const CGCMsgMemCachedGetResponse_ValueTag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCMsgMemCachedGetResponse.ValueTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CGCMsgMemCachedGetResponse_ValueTag::IsInitialized() const {
  return true;
}

void CGCMsgMemCachedGetResponse_ValueTag::InternalSwap(CGCMsgMemCachedGetResponse_ValueTag* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, lhs_arena,
                                       &other->_impl_.value_, rhs_arena);
        swap(_impl_.found_, other->_impl_.found_);
}

::google::protobuf::Metadata CGCMsgMemCachedGetResponse_ValueTag::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[21]);
}
// ===================================================================

class CGCMsgMemCachedGetResponse::_Internal {
 public:
};

CGCMsgMemCachedGetResponse::CGCMsgMemCachedGetResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CGCMsgMemCachedGetResponse)
}
CGCMsgMemCachedGetResponse::CGCMsgMemCachedGetResponse(const CGCMsgMemCachedGetResponse& from) : ::google::protobuf::Message() {
  CGCMsgMemCachedGetResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.values_){from._impl_.values_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CGCMsgMemCachedGetResponse)
}
inline void CGCMsgMemCachedGetResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.values_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
CGCMsgMemCachedGetResponse::~CGCMsgMemCachedGetResponse() {
  // @@protoc_insertion_point(destructor:CGCMsgMemCachedGetResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CGCMsgMemCachedGetResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.values_.~RepeatedPtrField();
}
void CGCMsgMemCachedGetResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CGCMsgMemCachedGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCMsgMemCachedGetResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_values()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CGCMsgMemCachedGetResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CGCMsgMemCachedGetResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CGCMsgMemCachedGetResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .CGCMsgMemCachedGetResponse.ValueTag values = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedGetResponse, _impl_.values_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .CGCMsgMemCachedGetResponse.ValueTag values = 1;
    {PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedGetResponse, _impl_.values_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CGCMsgMemCachedGetResponse_ValueTag>()},
  }}, {{
  }},
};

::uint8_t* CGCMsgMemCachedGetResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgMemCachedGetResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .CGCMsgMemCachedGetResponse.ValueTag values = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_values_size()); i < n; i++) {
    const auto& repfield = this->_internal_values().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgMemCachedGetResponse)
  return target;
}

::size_t CGCMsgMemCachedGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCMsgMemCachedGetResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CGCMsgMemCachedGetResponse.ValueTag values = 1;
  total_size += 1UL * this->_internal_values_size();
  for (const auto& msg : this->_internal_values()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CGCMsgMemCachedGetResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CGCMsgMemCachedGetResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*CGCMsgMemCachedGetResponse::GetClassData() const { return &_class_data_; }


void CGCMsgMemCachedGetResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CGCMsgMemCachedGetResponse*>(&to_msg);
  auto& from = static_cast<const CGCMsgMemCachedGetResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CGCMsgMemCachedGetResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_values()->MergeFrom(from._internal_values());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CGCMsgMemCachedGetResponse::CopyFrom(const CGCMsgMemCachedGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCMsgMemCachedGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CGCMsgMemCachedGetResponse::IsInitialized() const {
  return true;
}

void CGCMsgMemCachedGetResponse::InternalSwap(CGCMsgMemCachedGetResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
}

::google::protobuf::Metadata CGCMsgMemCachedGetResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[22]);
}
// ===================================================================

class CGCMsgMemCachedSet_KeyPair::_Internal {
 public:
  using HasBits = decltype(std::declval<CGCMsgMemCachedSet_KeyPair>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedSet_KeyPair, _impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CGCMsgMemCachedSet_KeyPair::CGCMsgMemCachedSet_KeyPair(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CGCMsgMemCachedSet.KeyPair)
}
CGCMsgMemCachedSet_KeyPair::CGCMsgMemCachedSet_KeyPair(const CGCMsgMemCachedSet_KeyPair& from) : ::google::protobuf::Message() {
  CGCMsgMemCachedSet_KeyPair* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.value_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.value_.Set(from._internal_value(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:CGCMsgMemCachedSet.KeyPair)
}
inline void CGCMsgMemCachedSet_KeyPair::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.value_){},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CGCMsgMemCachedSet_KeyPair::~CGCMsgMemCachedSet_KeyPair() {
  // @@protoc_insertion_point(destructor:CGCMsgMemCachedSet.KeyPair)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CGCMsgMemCachedSet_KeyPair::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.value_.Destroy();
}
void CGCMsgMemCachedSet_KeyPair::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CGCMsgMemCachedSet_KeyPair::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCMsgMemCachedSet.KeyPair)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.value_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CGCMsgMemCachedSet_KeyPair::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 39, 2> CGCMsgMemCachedSet_KeyPair::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedSet_KeyPair, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CGCMsgMemCachedSet_KeyPair_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bytes value = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedSet_KeyPair, _impl_.value_)}},
    // optional string name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedSet_KeyPair, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedSet_KeyPair, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bytes value = 2;
    {PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedSet_KeyPair, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\4\0\0\0\0\0\0"
    "CGCMsgMemCachedSet.KeyPair"
    "name"
  }},
};

::uint8_t* CGCMsgMemCachedSet_KeyPair::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgMemCachedSet.KeyPair)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CGCMsgMemCachedSet.KeyPair.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_value();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgMemCachedSet.KeyPair)
  return target;
}

::size_t CGCMsgMemCachedSet_KeyPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCMsgMemCachedSet.KeyPair)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }

    // optional bytes value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_value());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CGCMsgMemCachedSet_KeyPair::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CGCMsgMemCachedSet_KeyPair::MergeImpl
};
const ::google::protobuf::Message::ClassData*CGCMsgMemCachedSet_KeyPair::GetClassData() const { return &_class_data_; }


void CGCMsgMemCachedSet_KeyPair::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CGCMsgMemCachedSet_KeyPair*>(&to_msg);
  auto& from = static_cast<const CGCMsgMemCachedSet_KeyPair&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CGCMsgMemCachedSet.KeyPair)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_value(from._internal_value());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CGCMsgMemCachedSet_KeyPair::CopyFrom(const CGCMsgMemCachedSet_KeyPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCMsgMemCachedSet.KeyPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CGCMsgMemCachedSet_KeyPair::IsInitialized() const {
  return true;
}

void CGCMsgMemCachedSet_KeyPair::InternalSwap(CGCMsgMemCachedSet_KeyPair* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, lhs_arena,
                                       &other->_impl_.value_, rhs_arena);
}

::google::protobuf::Metadata CGCMsgMemCachedSet_KeyPair::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[23]);
}
// ===================================================================

class CGCMsgMemCachedSet::_Internal {
 public:
};

CGCMsgMemCachedSet::CGCMsgMemCachedSet(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CGCMsgMemCachedSet)
}
CGCMsgMemCachedSet::CGCMsgMemCachedSet(const CGCMsgMemCachedSet& from) : ::google::protobuf::Message() {
  CGCMsgMemCachedSet* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.keys_){from._impl_.keys_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CGCMsgMemCachedSet)
}
inline void CGCMsgMemCachedSet::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.keys_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
CGCMsgMemCachedSet::~CGCMsgMemCachedSet() {
  // @@protoc_insertion_point(destructor:CGCMsgMemCachedSet)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CGCMsgMemCachedSet::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.keys_.~RepeatedPtrField();
}
void CGCMsgMemCachedSet::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CGCMsgMemCachedSet::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCMsgMemCachedSet)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_keys()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CGCMsgMemCachedSet::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CGCMsgMemCachedSet::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CGCMsgMemCachedSet_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .CGCMsgMemCachedSet.KeyPair keys = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedSet, _impl_.keys_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .CGCMsgMemCachedSet.KeyPair keys = 1;
    {PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedSet, _impl_.keys_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CGCMsgMemCachedSet_KeyPair>()},
  }}, {{
  }},
};

::uint8_t* CGCMsgMemCachedSet::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgMemCachedSet)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .CGCMsgMemCachedSet.KeyPair keys = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_keys_size()); i < n; i++) {
    const auto& repfield = this->_internal_keys().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgMemCachedSet)
  return target;
}

::size_t CGCMsgMemCachedSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCMsgMemCachedSet)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CGCMsgMemCachedSet.KeyPair keys = 1;
  total_size += 1UL * this->_internal_keys_size();
  for (const auto& msg : this->_internal_keys()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CGCMsgMemCachedSet::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CGCMsgMemCachedSet::MergeImpl
};
const ::google::protobuf::Message::ClassData*CGCMsgMemCachedSet::GetClassData() const { return &_class_data_; }


void CGCMsgMemCachedSet::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CGCMsgMemCachedSet*>(&to_msg);
  auto& from = static_cast<const CGCMsgMemCachedSet&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CGCMsgMemCachedSet)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_keys()->MergeFrom(from._internal_keys());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CGCMsgMemCachedSet::CopyFrom(const CGCMsgMemCachedSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCMsgMemCachedSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CGCMsgMemCachedSet::IsInitialized() const {
  return true;
}

void CGCMsgMemCachedSet::InternalSwap(CGCMsgMemCachedSet* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.keys_.InternalSwap(&other->_impl_.keys_);
}

::google::protobuf::Metadata CGCMsgMemCachedSet::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[24]);
}
// ===================================================================

class CGCMsgMemCachedDelete::_Internal {
 public:
};

CGCMsgMemCachedDelete::CGCMsgMemCachedDelete(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CGCMsgMemCachedDelete)
}
CGCMsgMemCachedDelete::CGCMsgMemCachedDelete(const CGCMsgMemCachedDelete& from) : ::google::protobuf::Message() {
  CGCMsgMemCachedDelete* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.keys_){from._impl_.keys_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CGCMsgMemCachedDelete)
}
inline void CGCMsgMemCachedDelete::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.keys_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
CGCMsgMemCachedDelete::~CGCMsgMemCachedDelete() {
  // @@protoc_insertion_point(destructor:CGCMsgMemCachedDelete)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CGCMsgMemCachedDelete::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_keys()->~RepeatedPtrField();
}
void CGCMsgMemCachedDelete::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CGCMsgMemCachedDelete::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCMsgMemCachedDelete)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_keys()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CGCMsgMemCachedDelete::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 34, 2> CGCMsgMemCachedDelete::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CGCMsgMemCachedDelete_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string keys = 1;
    {::_pbi::TcParser::FastSR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedDelete, _impl_.keys_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string keys = 1;
    {PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedDelete, _impl_.keys_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\25\4\0\0\0\0\0\0"
    "CGCMsgMemCachedDelete"
    "keys"
  }},
};

::uint8_t* CGCMsgMemCachedDelete::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgMemCachedDelete)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string keys = 1;
  for (int i = 0, n = this->_internal_keys_size(); i < n; ++i) {
    const auto& s = this->_internal_keys().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CGCMsgMemCachedDelete.keys");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgMemCachedDelete)
  return target;
}

::size_t CGCMsgMemCachedDelete::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCMsgMemCachedDelete)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string keys = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_keys().size());
  for (int i = 0, n = _internal_keys().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_keys().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CGCMsgMemCachedDelete::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CGCMsgMemCachedDelete::MergeImpl
};
const ::google::protobuf::Message::ClassData*CGCMsgMemCachedDelete::GetClassData() const { return &_class_data_; }


void CGCMsgMemCachedDelete::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CGCMsgMemCachedDelete*>(&to_msg);
  auto& from = static_cast<const CGCMsgMemCachedDelete&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CGCMsgMemCachedDelete)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_keys()->MergeFrom(from._internal_keys());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CGCMsgMemCachedDelete::CopyFrom(const CGCMsgMemCachedDelete& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCMsgMemCachedDelete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CGCMsgMemCachedDelete::IsInitialized() const {
  return true;
}

void CGCMsgMemCachedDelete::InternalSwap(CGCMsgMemCachedDelete* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.keys_.InternalSwap(&other->_impl_.keys_);
}

::google::protobuf::Metadata CGCMsgMemCachedDelete::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[25]);
}
// ===================================================================

class CGCMsgMemCachedStats::_Internal {
 public:
};

CGCMsgMemCachedStats::CGCMsgMemCachedStats(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:CGCMsgMemCachedStats)
}
CGCMsgMemCachedStats::CGCMsgMemCachedStats(const CGCMsgMemCachedStats& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  CGCMsgMemCachedStats* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CGCMsgMemCachedStats)
}




const ::google::protobuf::Message::ClassData CGCMsgMemCachedStats::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*CGCMsgMemCachedStats::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata CGCMsgMemCachedStats::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[26]);
}
// ===================================================================

class CGCMsgMemCachedStatsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CGCMsgMemCachedStatsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_._has_bits_);
  static void set_has_curr_connections(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_cmd_get(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_cmd_set(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_cmd_flush(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_get_hits(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_get_misses(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_delete_hits(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_delete_misses(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_bytes_read(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_bytes_written(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_limit_maxbytes(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_curr_items(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_evictions(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_bytes(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
};

CGCMsgMemCachedStatsResponse::CGCMsgMemCachedStatsResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CGCMsgMemCachedStatsResponse)
}
CGCMsgMemCachedStatsResponse::CGCMsgMemCachedStatsResponse(const CGCMsgMemCachedStatsResponse& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CGCMsgMemCachedStatsResponse)
}
inline void CGCMsgMemCachedStatsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.curr_connections_){::uint64_t{0u}},
      decltype(_impl_.cmd_get_){::uint64_t{0u}},
      decltype(_impl_.cmd_set_){::uint64_t{0u}},
      decltype(_impl_.cmd_flush_){::uint64_t{0u}},
      decltype(_impl_.get_hits_){::uint64_t{0u}},
      decltype(_impl_.get_misses_){::uint64_t{0u}},
      decltype(_impl_.delete_hits_){::uint64_t{0u}},
      decltype(_impl_.delete_misses_){::uint64_t{0u}},
      decltype(_impl_.bytes_read_){::uint64_t{0u}},
      decltype(_impl_.bytes_written_){::uint64_t{0u}},
      decltype(_impl_.limit_maxbytes_){::uint64_t{0u}},
      decltype(_impl_.curr_items_){::uint64_t{0u}},
      decltype(_impl_.evictions_){::uint64_t{0u}},
      decltype(_impl_.bytes_){::uint64_t{0u}},
  };
}
CGCMsgMemCachedStatsResponse::~CGCMsgMemCachedStatsResponse() {
  // @@protoc_insertion_point(destructor:CGCMsgMemCachedStatsResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CGCMsgMemCachedStatsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CGCMsgMemCachedStatsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CGCMsgMemCachedStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCMsgMemCachedStatsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.curr_connections_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.delete_misses_) -
        reinterpret_cast<char*>(&_impl_.curr_connections_)) + sizeof(_impl_.delete_misses_));
  }
  if (cached_has_bits & 0x00003f00u) {
    ::memset(&_impl_.bytes_read_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.bytes_) -
        reinterpret_cast<char*>(&_impl_.bytes_read_)) + sizeof(_impl_.bytes_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CGCMsgMemCachedStatsResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 0, 0, 2> CGCMsgMemCachedStatsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_._has_bits_),
    0, // no _extensions_
    14, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CGCMsgMemCachedStatsResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint64 curr_connections = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CGCMsgMemCachedStatsResponse, _impl_.curr_connections_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_.curr_connections_)}},
    // optional uint64 cmd_get = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CGCMsgMemCachedStatsResponse, _impl_.cmd_get_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_.cmd_get_)}},
    // optional uint64 cmd_set = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CGCMsgMemCachedStatsResponse, _impl_.cmd_set_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_.cmd_set_)}},
    // optional uint64 cmd_flush = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CGCMsgMemCachedStatsResponse, _impl_.cmd_flush_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_.cmd_flush_)}},
    // optional uint64 get_hits = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CGCMsgMemCachedStatsResponse, _impl_.get_hits_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_.get_hits_)}},
    // optional uint64 get_misses = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CGCMsgMemCachedStatsResponse, _impl_.get_misses_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_.get_misses_)}},
    // optional uint64 delete_hits = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CGCMsgMemCachedStatsResponse, _impl_.delete_hits_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_.delete_hits_)}},
    // optional uint64 delete_misses = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CGCMsgMemCachedStatsResponse, _impl_.delete_misses_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_.delete_misses_)}},
    // optional uint64 bytes_read = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CGCMsgMemCachedStatsResponse, _impl_.bytes_read_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_.bytes_read_)}},
    // optional uint64 bytes_written = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CGCMsgMemCachedStatsResponse, _impl_.bytes_written_), 9>(),
     {80, 9, 0, PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_.bytes_written_)}},
    // optional uint64 limit_maxbytes = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CGCMsgMemCachedStatsResponse, _impl_.limit_maxbytes_), 10>(),
     {88, 10, 0, PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_.limit_maxbytes_)}},
    // optional uint64 curr_items = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CGCMsgMemCachedStatsResponse, _impl_.curr_items_), 11>(),
     {96, 11, 0, PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_.curr_items_)}},
    // optional uint64 evictions = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CGCMsgMemCachedStatsResponse, _impl_.evictions_), 12>(),
     {104, 12, 0, PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_.evictions_)}},
    // optional uint64 bytes = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CGCMsgMemCachedStatsResponse, _impl_.bytes_), 13>(),
     {112, 13, 0, PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_.bytes_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 curr_connections = 1;
    {PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_.curr_connections_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 cmd_get = 2;
    {PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_.cmd_get_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 cmd_set = 3;
    {PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_.cmd_set_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 cmd_flush = 4;
    {PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_.cmd_flush_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 get_hits = 5;
    {PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_.get_hits_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 get_misses = 6;
    {PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_.get_misses_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 delete_hits = 7;
    {PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_.delete_hits_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 delete_misses = 8;
    {PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_.delete_misses_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 bytes_read = 9;
    {PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_.bytes_read_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 bytes_written = 10;
    {PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_.bytes_written_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 limit_maxbytes = 11;
    {PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_.limit_maxbytes_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 curr_items = 12;
    {PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_.curr_items_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 evictions = 13;
    {PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_.evictions_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 bytes = 14;
    {PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_.bytes_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CGCMsgMemCachedStatsResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgMemCachedStatsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 curr_connections = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_curr_connections(), target);
  }

  // optional uint64 cmd_get = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_cmd_get(), target);
  }

  // optional uint64 cmd_set = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_cmd_set(), target);
  }

  // optional uint64 cmd_flush = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_cmd_flush(), target);
  }

  // optional uint64 get_hits = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this->_internal_get_hits(), target);
  }

  // optional uint64 get_misses = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        6, this->_internal_get_misses(), target);
  }

  // optional uint64 delete_hits = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        7, this->_internal_delete_hits(), target);
  }

  // optional uint64 delete_misses = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        8, this->_internal_delete_misses(), target);
  }

  // optional uint64 bytes_read = 9;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        9, this->_internal_bytes_read(), target);
  }

  // optional uint64 bytes_written = 10;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        10, this->_internal_bytes_written(), target);
  }

  // optional uint64 limit_maxbytes = 11;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        11, this->_internal_limit_maxbytes(), target);
  }

  // optional uint64 curr_items = 12;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        12, this->_internal_curr_items(), target);
  }

  // optional uint64 evictions = 13;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        13, this->_internal_evictions(), target);
  }

  // optional uint64 bytes = 14;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        14, this->_internal_bytes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgMemCachedStatsResponse)
  return target;
}

::size_t CGCMsgMemCachedStatsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCMsgMemCachedStatsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional uint64 curr_connections = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_curr_connections());
    }

    // optional uint64 cmd_get = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_cmd_get());
    }

    // optional uint64 cmd_set = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_cmd_set());
    }

    // optional uint64 cmd_flush = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_cmd_flush());
    }

    // optional uint64 get_hits = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_get_hits());
    }

    // optional uint64 get_misses = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_get_misses());
    }

    // optional uint64 delete_hits = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_delete_hits());
    }

    // optional uint64 delete_misses = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_delete_misses());
    }

  }
  if (cached_has_bits & 0x00003f00u) {
    // optional uint64 bytes_read = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_bytes_read());
    }

    // optional uint64 bytes_written = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_bytes_written());
    }

    // optional uint64 limit_maxbytes = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_limit_maxbytes());
    }

    // optional uint64 curr_items = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_curr_items());
    }

    // optional uint64 evictions = 13;
    if (cached_has_bits & 0x00001000u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_evictions());
    }

    // optional uint64 bytes = 14;
    if (cached_has_bits & 0x00002000u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_bytes());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CGCMsgMemCachedStatsResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CGCMsgMemCachedStatsResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*CGCMsgMemCachedStatsResponse::GetClassData() const { return &_class_data_; }


void CGCMsgMemCachedStatsResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CGCMsgMemCachedStatsResponse*>(&to_msg);
  auto& from = static_cast<const CGCMsgMemCachedStatsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CGCMsgMemCachedStatsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.curr_connections_ = from._impl_.curr_connections_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.cmd_get_ = from._impl_.cmd_get_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.cmd_set_ = from._impl_.cmd_set_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.cmd_flush_ = from._impl_.cmd_flush_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.get_hits_ = from._impl_.get_hits_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.get_misses_ = from._impl_.get_misses_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.delete_hits_ = from._impl_.delete_hits_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.delete_misses_ = from._impl_.delete_misses_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00003f00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.bytes_read_ = from._impl_.bytes_read_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.bytes_written_ = from._impl_.bytes_written_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.limit_maxbytes_ = from._impl_.limit_maxbytes_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.curr_items_ = from._impl_.curr_items_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.evictions_ = from._impl_.evictions_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.bytes_ = from._impl_.bytes_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CGCMsgMemCachedStatsResponse::CopyFrom(const CGCMsgMemCachedStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCMsgMemCachedStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CGCMsgMemCachedStatsResponse::IsInitialized() const {
  return true;
}

void CGCMsgMemCachedStatsResponse::InternalSwap(CGCMsgMemCachedStatsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_.bytes_)
      + sizeof(CGCMsgMemCachedStatsResponse::_impl_.bytes_)
      - PROTOBUF_FIELD_OFFSET(CGCMsgMemCachedStatsResponse, _impl_.curr_connections_)>(
          reinterpret_cast<char*>(&_impl_.curr_connections_),
          reinterpret_cast<char*>(&other->_impl_.curr_connections_));
}

::google::protobuf::Metadata CGCMsgMemCachedStatsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[27]);
}
// ===================================================================

class CGCMsgSQLStats::_Internal {
 public:
  using HasBits = decltype(std::declval<CGCMsgSQLStats>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CGCMsgSQLStats, _impl_._has_bits_);
  static void set_has_schema_catalog(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CGCMsgSQLStats::CGCMsgSQLStats(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CGCMsgSQLStats)
}
CGCMsgSQLStats::CGCMsgSQLStats(const CGCMsgSQLStats& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CGCMsgSQLStats)
}
inline void CGCMsgSQLStats::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.schema_catalog_){0u},
  };
}
CGCMsgSQLStats::~CGCMsgSQLStats() {
  // @@protoc_insertion_point(destructor:CGCMsgSQLStats)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CGCMsgSQLStats::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CGCMsgSQLStats::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CGCMsgSQLStats::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCMsgSQLStats)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.schema_catalog_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CGCMsgSQLStats::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CGCMsgSQLStats::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CGCMsgSQLStats, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CGCMsgSQLStats_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 schema_catalog = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGCMsgSQLStats, _impl_.schema_catalog_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CGCMsgSQLStats, _impl_.schema_catalog_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 schema_catalog = 1;
    {PROTOBUF_FIELD_OFFSET(CGCMsgSQLStats, _impl_.schema_catalog_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CGCMsgSQLStats::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgSQLStats)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 schema_catalog = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_schema_catalog(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgSQLStats)
  return target;
}

::size_t CGCMsgSQLStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCMsgSQLStats)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 schema_catalog = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_schema_catalog());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CGCMsgSQLStats::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CGCMsgSQLStats::MergeImpl
};
const ::google::protobuf::Message::ClassData*CGCMsgSQLStats::GetClassData() const { return &_class_data_; }


void CGCMsgSQLStats::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CGCMsgSQLStats*>(&to_msg);
  auto& from = static_cast<const CGCMsgSQLStats&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CGCMsgSQLStats)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_schema_catalog(from._internal_schema_catalog());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CGCMsgSQLStats::CopyFrom(const CGCMsgSQLStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCMsgSQLStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CGCMsgSQLStats::IsInitialized() const {
  return true;
}

void CGCMsgSQLStats::InternalSwap(CGCMsgSQLStats* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.schema_catalog_, other->_impl_.schema_catalog_);
}

::google::protobuf::Metadata CGCMsgSQLStats::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[28]);
}
// ===================================================================

class CGCMsgSQLStatsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CGCMsgSQLStatsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CGCMsgSQLStatsResponse, _impl_._has_bits_);
  static void set_has_threads(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_threads_connected(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_threads_active(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_operations_submitted(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_prepared_statements_executed(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_non_prepared_statements_executed(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_deadlock_retries(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_operations_timed_out_in_queue(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_errors(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
};

CGCMsgSQLStatsResponse::CGCMsgSQLStatsResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CGCMsgSQLStatsResponse)
}
CGCMsgSQLStatsResponse::CGCMsgSQLStatsResponse(const CGCMsgSQLStatsResponse& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CGCMsgSQLStatsResponse)
}
inline void CGCMsgSQLStatsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.threads_){0u},
      decltype(_impl_.threads_connected_){0u},
      decltype(_impl_.threads_active_){0u},
      decltype(_impl_.operations_submitted_){0u},
      decltype(_impl_.prepared_statements_executed_){0u},
      decltype(_impl_.non_prepared_statements_executed_){0u},
      decltype(_impl_.deadlock_retries_){0u},
      decltype(_impl_.operations_timed_out_in_queue_){0u},
      decltype(_impl_.errors_){0u},
  };
}
CGCMsgSQLStatsResponse::~CGCMsgSQLStatsResponse() {
  // @@protoc_insertion_point(destructor:CGCMsgSQLStatsResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CGCMsgSQLStatsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CGCMsgSQLStatsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CGCMsgSQLStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCMsgSQLStatsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.threads_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.operations_timed_out_in_queue_) -
        reinterpret_cast<char*>(&_impl_.threads_)) + sizeof(_impl_.operations_timed_out_in_queue_));
  }
  _impl_.errors_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CGCMsgSQLStatsResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 0, 2> CGCMsgSQLStatsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CGCMsgSQLStatsResponse, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CGCMsgSQLStatsResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 threads = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGCMsgSQLStatsResponse, _impl_.threads_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CGCMsgSQLStatsResponse, _impl_.threads_)}},
    // optional uint32 threads_connected = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGCMsgSQLStatsResponse, _impl_.threads_connected_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CGCMsgSQLStatsResponse, _impl_.threads_connected_)}},
    // optional uint32 threads_active = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGCMsgSQLStatsResponse, _impl_.threads_active_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CGCMsgSQLStatsResponse, _impl_.threads_active_)}},
    // optional uint32 operations_submitted = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGCMsgSQLStatsResponse, _impl_.operations_submitted_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CGCMsgSQLStatsResponse, _impl_.operations_submitted_)}},
    // optional uint32 prepared_statements_executed = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGCMsgSQLStatsResponse, _impl_.prepared_statements_executed_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CGCMsgSQLStatsResponse, _impl_.prepared_statements_executed_)}},
    // optional uint32 non_prepared_statements_executed = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGCMsgSQLStatsResponse, _impl_.non_prepared_statements_executed_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(CGCMsgSQLStatsResponse, _impl_.non_prepared_statements_executed_)}},
    // optional uint32 deadlock_retries = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGCMsgSQLStatsResponse, _impl_.deadlock_retries_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(CGCMsgSQLStatsResponse, _impl_.deadlock_retries_)}},
    // optional uint32 operations_timed_out_in_queue = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGCMsgSQLStatsResponse, _impl_.operations_timed_out_in_queue_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(CGCMsgSQLStatsResponse, _impl_.operations_timed_out_in_queue_)}},
    // optional uint32 errors = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGCMsgSQLStatsResponse, _impl_.errors_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(CGCMsgSQLStatsResponse, _impl_.errors_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 threads = 1;
    {PROTOBUF_FIELD_OFFSET(CGCMsgSQLStatsResponse, _impl_.threads_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 threads_connected = 2;
    {PROTOBUF_FIELD_OFFSET(CGCMsgSQLStatsResponse, _impl_.threads_connected_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 threads_active = 3;
    {PROTOBUF_FIELD_OFFSET(CGCMsgSQLStatsResponse, _impl_.threads_active_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 operations_submitted = 4;
    {PROTOBUF_FIELD_OFFSET(CGCMsgSQLStatsResponse, _impl_.operations_submitted_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 prepared_statements_executed = 5;
    {PROTOBUF_FIELD_OFFSET(CGCMsgSQLStatsResponse, _impl_.prepared_statements_executed_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 non_prepared_statements_executed = 6;
    {PROTOBUF_FIELD_OFFSET(CGCMsgSQLStatsResponse, _impl_.non_prepared_statements_executed_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 deadlock_retries = 7;
    {PROTOBUF_FIELD_OFFSET(CGCMsgSQLStatsResponse, _impl_.deadlock_retries_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 operations_timed_out_in_queue = 8;
    {PROTOBUF_FIELD_OFFSET(CGCMsgSQLStatsResponse, _impl_.operations_timed_out_in_queue_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 errors = 9;
    {PROTOBUF_FIELD_OFFSET(CGCMsgSQLStatsResponse, _impl_.errors_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CGCMsgSQLStatsResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgSQLStatsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 threads = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_threads(), target);
  }

  // optional uint32 threads_connected = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_threads_connected(), target);
  }

  // optional uint32 threads_active = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_threads_active(), target);
  }

  // optional uint32 operations_submitted = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_operations_submitted(), target);
  }

  // optional uint32 prepared_statements_executed = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_prepared_statements_executed(), target);
  }

  // optional uint32 non_prepared_statements_executed = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_non_prepared_statements_executed(), target);
  }

  // optional uint32 deadlock_retries = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_deadlock_retries(), target);
  }

  // optional uint32 operations_timed_out_in_queue = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this->_internal_operations_timed_out_in_queue(), target);
  }

  // optional uint32 errors = 9;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this->_internal_errors(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgSQLStatsResponse)
  return target;
}

::size_t CGCMsgSQLStatsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCMsgSQLStatsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional uint32 threads = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_threads());
    }

    // optional uint32 threads_connected = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_threads_connected());
    }

    // optional uint32 threads_active = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_threads_active());
    }

    // optional uint32 operations_submitted = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_operations_submitted());
    }

    // optional uint32 prepared_statements_executed = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_prepared_statements_executed());
    }

    // optional uint32 non_prepared_statements_executed = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_non_prepared_statements_executed());
    }

    // optional uint32 deadlock_retries = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_deadlock_retries());
    }

    // optional uint32 operations_timed_out_in_queue = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_operations_timed_out_in_queue());
    }

  }
  // optional uint32 errors = 9;
  if (cached_has_bits & 0x00000100u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_errors());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CGCMsgSQLStatsResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CGCMsgSQLStatsResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*CGCMsgSQLStatsResponse::GetClassData() const { return &_class_data_; }


void CGCMsgSQLStatsResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CGCMsgSQLStatsResponse*>(&to_msg);
  auto& from = static_cast<const CGCMsgSQLStatsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CGCMsgSQLStatsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.threads_ = from._impl_.threads_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.threads_connected_ = from._impl_.threads_connected_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.threads_active_ = from._impl_.threads_active_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.operations_submitted_ = from._impl_.operations_submitted_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.prepared_statements_executed_ = from._impl_.prepared_statements_executed_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.non_prepared_statements_executed_ = from._impl_.non_prepared_statements_executed_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.deadlock_retries_ = from._impl_.deadlock_retries_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.operations_timed_out_in_queue_ = from._impl_.operations_timed_out_in_queue_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_internal_set_errors(from._internal_errors());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CGCMsgSQLStatsResponse::CopyFrom(const CGCMsgSQLStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCMsgSQLStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CGCMsgSQLStatsResponse::IsInitialized() const {
  return true;
}

void CGCMsgSQLStatsResponse::InternalSwap(CGCMsgSQLStatsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CGCMsgSQLStatsResponse, _impl_.errors_)
      + sizeof(CGCMsgSQLStatsResponse::_impl_.errors_)
      - PROTOBUF_FIELD_OFFSET(CGCMsgSQLStatsResponse, _impl_.threads_)>(
          reinterpret_cast<char*>(&_impl_.threads_),
          reinterpret_cast<char*>(&other->_impl_.threads_));
}

::google::protobuf::Metadata CGCMsgSQLStatsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[29]);
}
// ===================================================================

class CMsgAMAddFreeLicense::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgAMAddFreeLicense>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgAMAddFreeLicense, _impl_._has_bits_);
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ip_public(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_packageid(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_store_country_code(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgAMAddFreeLicense::CMsgAMAddFreeLicense(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgAMAddFreeLicense)
}
CMsgAMAddFreeLicense::CMsgAMAddFreeLicense(const CMsgAMAddFreeLicense& from) : ::google::protobuf::Message() {
  CMsgAMAddFreeLicense* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.store_country_code_){},
      decltype(_impl_.steamid_){},
      decltype(_impl_.ip_public_){},
      decltype(_impl_.packageid_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.store_country_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.store_country_code_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.store_country_code_.Set(from._internal_store_country_code(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.steamid_, &from._impl_.steamid_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.packageid_) -
    reinterpret_cast<char*>(&_impl_.steamid_)) + sizeof(_impl_.packageid_));

  // @@protoc_insertion_point(copy_constructor:CMsgAMAddFreeLicense)
}
inline void CMsgAMAddFreeLicense::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.store_country_code_){},
      decltype(_impl_.steamid_){::uint64_t{0u}},
      decltype(_impl_.ip_public_){0u},
      decltype(_impl_.packageid_){0u},
  };
  _impl_.store_country_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.store_country_code_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CMsgAMAddFreeLicense::~CMsgAMAddFreeLicense() {
  // @@protoc_insertion_point(destructor:CMsgAMAddFreeLicense)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgAMAddFreeLicense::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.store_country_code_.Destroy();
}
void CMsgAMAddFreeLicense::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgAMAddFreeLicense::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMAddFreeLicense)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.store_country_code_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.steamid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.packageid_) -
        reinterpret_cast<char*>(&_impl_.steamid_)) + sizeof(_impl_.packageid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgAMAddFreeLicense::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 47, 2> CMsgAMAddFreeLicense::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgAMAddFreeLicense, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgAMAddFreeLicense_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string store_country_code = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgAMAddFreeLicense, _impl_.store_country_code_)}},
    // optional fixed64 steamid = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgAMAddFreeLicense, _impl_.steamid_)}},
    // optional uint32 ip_public = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgAMAddFreeLicense, _impl_.ip_public_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgAMAddFreeLicense, _impl_.ip_public_)}},
    // optional uint32 packageid = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgAMAddFreeLicense, _impl_.packageid_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgAMAddFreeLicense, _impl_.packageid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed64 steamid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgAMAddFreeLicense, _impl_.steamid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional uint32 ip_public = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgAMAddFreeLicense, _impl_.ip_public_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 packageid = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgAMAddFreeLicense, _impl_.packageid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string store_country_code = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgAMAddFreeLicense, _impl_.store_country_code_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\24\0\0\0\22\0\0\0"
    "CMsgAMAddFreeLicense"
    "store_country_code"
  }},
};

::uint8_t* CMsgAMAddFreeLicense::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMAddFreeLicense)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        1, this->_internal_steamid(), target);
  }

  // optional uint32 ip_public = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_ip_public(), target);
  }

  // optional uint32 packageid = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_packageid(), target);
  }

  // optional string store_country_code = 4;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_store_country_code();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgAMAddFreeLicense.store_country_code");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMAddFreeLicense)
  return target;
}

::size_t CMsgAMAddFreeLicense::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMAddFreeLicense)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string store_country_code = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_store_country_code());
    }

    // optional fixed64 steamid = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }

    // optional uint32 ip_public = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_ip_public());
    }

    // optional uint32 packageid = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_packageid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgAMAddFreeLicense::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgAMAddFreeLicense::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgAMAddFreeLicense::GetClassData() const { return &_class_data_; }


void CMsgAMAddFreeLicense::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgAMAddFreeLicense*>(&to_msg);
  auto& from = static_cast<const CMsgAMAddFreeLicense&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMAddFreeLicense)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_store_country_code(from._internal_store_country_code());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.steamid_ = from._impl_.steamid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.ip_public_ = from._impl_.ip_public_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.packageid_ = from._impl_.packageid_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgAMAddFreeLicense::CopyFrom(const CMsgAMAddFreeLicense& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMAddFreeLicense)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgAMAddFreeLicense::IsInitialized() const {
  return true;
}

void CMsgAMAddFreeLicense::InternalSwap(CMsgAMAddFreeLicense* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.store_country_code_, lhs_arena,
                                       &other->_impl_.store_country_code_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgAMAddFreeLicense, _impl_.packageid_)
      + sizeof(CMsgAMAddFreeLicense::_impl_.packageid_)
      - PROTOBUF_FIELD_OFFSET(CMsgAMAddFreeLicense, _impl_.steamid_)>(
          reinterpret_cast<char*>(&_impl_.steamid_),
          reinterpret_cast<char*>(&other->_impl_.steamid_));
}

::google::protobuf::Metadata CMsgAMAddFreeLicense::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[30]);
}
// ===================================================================

class CMsgAMAddFreeLicenseResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgAMAddFreeLicenseResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgAMAddFreeLicenseResponse, _impl_._has_bits_);
  static void set_has_eresult(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_purchase_result_detail(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_transid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgAMAddFreeLicenseResponse::CMsgAMAddFreeLicenseResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgAMAddFreeLicenseResponse)
}
CMsgAMAddFreeLicenseResponse::CMsgAMAddFreeLicenseResponse(const CMsgAMAddFreeLicenseResponse& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgAMAddFreeLicenseResponse)
}
inline void CMsgAMAddFreeLicenseResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.transid_){::uint64_t{0u}},
      decltype(_impl_.purchase_result_detail_){0},
      decltype(_impl_.eresult_){2},
  };
}
CMsgAMAddFreeLicenseResponse::~CMsgAMAddFreeLicenseResponse() {
  // @@protoc_insertion_point(destructor:CMsgAMAddFreeLicenseResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgAMAddFreeLicenseResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CMsgAMAddFreeLicenseResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgAMAddFreeLicenseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMAddFreeLicenseResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.transid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.purchase_result_detail_) -
        reinterpret_cast<char*>(&_impl_.transid_)) + sizeof(_impl_.purchase_result_detail_));
    _impl_.eresult_ = 2;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgAMAddFreeLicenseResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> CMsgAMAddFreeLicenseResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgAMAddFreeLicenseResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgAMAddFreeLicenseResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 eresult = 1 [default = 2];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgAMAddFreeLicenseResponse, _impl_.eresult_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgAMAddFreeLicenseResponse, _impl_.eresult_)}},
    // optional int32 purchase_result_detail = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgAMAddFreeLicenseResponse, _impl_.purchase_result_detail_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgAMAddFreeLicenseResponse, _impl_.purchase_result_detail_)}},
    // optional fixed64 transid = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgAMAddFreeLicenseResponse, _impl_.transid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 eresult = 1 [default = 2];
    {PROTOBUF_FIELD_OFFSET(CMsgAMAddFreeLicenseResponse, _impl_.eresult_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 purchase_result_detail = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgAMAddFreeLicenseResponse, _impl_.purchase_result_detail_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional fixed64 transid = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgAMAddFreeLicenseResponse, _impl_.transid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgAMAddFreeLicenseResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMAddFreeLicenseResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_eresult(), target);
  }

  // optional int32 purchase_result_detail = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_purchase_result_detail(), target);
  }

  // optional fixed64 transid = 3;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        3, this->_internal_transid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMAddFreeLicenseResponse)
  return target;
}

::size_t CMsgAMAddFreeLicenseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMAddFreeLicenseResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional fixed64 transid = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 9;
    }

    // optional int32 purchase_result_detail = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_purchase_result_detail());
    }

    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_eresult());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgAMAddFreeLicenseResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgAMAddFreeLicenseResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgAMAddFreeLicenseResponse::GetClassData() const { return &_class_data_; }


void CMsgAMAddFreeLicenseResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgAMAddFreeLicenseResponse*>(&to_msg);
  auto& from = static_cast<const CMsgAMAddFreeLicenseResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMAddFreeLicenseResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.transid_ = from._impl_.transid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.purchase_result_detail_ = from._impl_.purchase_result_detail_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.eresult_ = from._impl_.eresult_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgAMAddFreeLicenseResponse::CopyFrom(const CMsgAMAddFreeLicenseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMAddFreeLicenseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgAMAddFreeLicenseResponse::IsInitialized() const {
  return true;
}

void CMsgAMAddFreeLicenseResponse::InternalSwap(CMsgAMAddFreeLicenseResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgAMAddFreeLicenseResponse, _impl_.eresult_)
      + sizeof(CMsgAMAddFreeLicenseResponse::_impl_.eresult_)
      - PROTOBUF_FIELD_OFFSET(CMsgAMAddFreeLicenseResponse, _impl_.transid_)>(
          reinterpret_cast<char*>(&_impl_.transid_),
          reinterpret_cast<char*>(&other->_impl_.transid_));
}

::google::protobuf::Metadata CMsgAMAddFreeLicenseResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[31]);
}
// ===================================================================

class CGCMsgGetIPLocation::_Internal {
 public:
};

CGCMsgGetIPLocation::CGCMsgGetIPLocation(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CGCMsgGetIPLocation)
}
CGCMsgGetIPLocation::CGCMsgGetIPLocation(const CGCMsgGetIPLocation& from) : ::google::protobuf::Message() {
  CGCMsgGetIPLocation* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ips_){from._impl_.ips_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CGCMsgGetIPLocation)
}
inline void CGCMsgGetIPLocation::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.ips_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
CGCMsgGetIPLocation::~CGCMsgGetIPLocation() {
  // @@protoc_insertion_point(destructor:CGCMsgGetIPLocation)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CGCMsgGetIPLocation::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.ips_.~RepeatedField();
}
void CGCMsgGetIPLocation::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CGCMsgGetIPLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCMsgGetIPLocation)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_ips()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CGCMsgGetIPLocation::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CGCMsgGetIPLocation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CGCMsgGetIPLocation_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated fixed32 ips = 1;
    {::_pbi::TcParser::FastF32R1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(CGCMsgGetIPLocation, _impl_.ips_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated fixed32 ips = 1;
    {PROTOBUF_FIELD_OFFSET(CGCMsgGetIPLocation, _impl_.ips_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFixed32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CGCMsgGetIPLocation::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgGetIPLocation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated fixed32 ips = 1;
  for (int i = 0, n = this->_internal_ips_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        1, this->_internal_ips().Get(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgGetIPLocation)
  return target;
}

::size_t CGCMsgGetIPLocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCMsgGetIPLocation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated fixed32 ips = 1;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_ips_size())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_ips_size());
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CGCMsgGetIPLocation::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CGCMsgGetIPLocation::MergeImpl
};
const ::google::protobuf::Message::ClassData*CGCMsgGetIPLocation::GetClassData() const { return &_class_data_; }


void CGCMsgGetIPLocation::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CGCMsgGetIPLocation*>(&to_msg);
  auto& from = static_cast<const CGCMsgGetIPLocation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CGCMsgGetIPLocation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_ips()->MergeFrom(from._internal_ips());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CGCMsgGetIPLocation::CopyFrom(const CGCMsgGetIPLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCMsgGetIPLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CGCMsgGetIPLocation::IsInitialized() const {
  return true;
}

void CGCMsgGetIPLocation::InternalSwap(CGCMsgGetIPLocation* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.ips_.InternalSwap(&other->_impl_.ips_);
}

::google::protobuf::Metadata CGCMsgGetIPLocation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[32]);
}
// ===================================================================

class CIPLocationInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CIPLocationInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CIPLocationInfo, _impl_._has_bits_);
  static void set_has_ip(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_latitude(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_longitude(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_country(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_state(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_city(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CIPLocationInfo::CIPLocationInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CIPLocationInfo)
}
CIPLocationInfo::CIPLocationInfo(const CIPLocationInfo& from) : ::google::protobuf::Message() {
  CIPLocationInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.country_){},
      decltype(_impl_.state_){},
      decltype(_impl_.city_){},
      decltype(_impl_.ip_){},
      decltype(_impl_.latitude_){},
      decltype(_impl_.longitude_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.country_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.country_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.country_.Set(from._internal_country(), _this->GetArenaForAllocation());
  }
  _impl_.state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.state_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.state_.Set(from._internal_state(), _this->GetArenaForAllocation());
  }
  _impl_.city_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.city_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.city_.Set(from._internal_city(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.ip_, &from._impl_.ip_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.longitude_) -
    reinterpret_cast<char*>(&_impl_.ip_)) + sizeof(_impl_.longitude_));

  // @@protoc_insertion_point(copy_constructor:CIPLocationInfo)
}
inline void CIPLocationInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.country_){},
      decltype(_impl_.state_){},
      decltype(_impl_.city_){},
      decltype(_impl_.ip_){0u},
      decltype(_impl_.latitude_){0},
      decltype(_impl_.longitude_){0},
  };
  _impl_.country_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.country_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.state_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.city_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.city_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CIPLocationInfo::~CIPLocationInfo() {
  // @@protoc_insertion_point(destructor:CIPLocationInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CIPLocationInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.country_.Destroy();
  _impl_.state_.Destroy();
  _impl_.city_.Destroy();
}
void CIPLocationInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CIPLocationInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CIPLocationInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.country_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.state_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.city_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000038u) {
    ::memset(&_impl_.ip_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.longitude_) -
        reinterpret_cast<char*>(&_impl_.ip_)) + sizeof(_impl_.longitude_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CIPLocationInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 40, 2> CIPLocationInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CIPLocationInfo, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CIPLocationInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 ip = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CIPLocationInfo, _impl_.ip_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(CIPLocationInfo, _impl_.ip_)}},
    // optional float latitude = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 4, 0, PROTOBUF_FIELD_OFFSET(CIPLocationInfo, _impl_.latitude_)}},
    // optional float longitude = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 5, 0, PROTOBUF_FIELD_OFFSET(CIPLocationInfo, _impl_.longitude_)}},
    // optional string country = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(CIPLocationInfo, _impl_.country_)}},
    // optional string state = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(CIPLocationInfo, _impl_.state_)}},
    // optional string city = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 2, 0, PROTOBUF_FIELD_OFFSET(CIPLocationInfo, _impl_.city_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 ip = 1;
    {PROTOBUF_FIELD_OFFSET(CIPLocationInfo, _impl_.ip_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional float latitude = 2;
    {PROTOBUF_FIELD_OFFSET(CIPLocationInfo, _impl_.latitude_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float longitude = 3;
    {PROTOBUF_FIELD_OFFSET(CIPLocationInfo, _impl_.longitude_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional string country = 4;
    {PROTOBUF_FIELD_OFFSET(CIPLocationInfo, _impl_.country_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string state = 5;
    {PROTOBUF_FIELD_OFFSET(CIPLocationInfo, _impl_.state_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string city = 6;
    {PROTOBUF_FIELD_OFFSET(CIPLocationInfo, _impl_.city_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\17\0\0\0\7\5\4\0"
    "CIPLocationInfo"
    "country"
    "state"
    "city"
  }},
};

::uint8_t* CIPLocationInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CIPLocationInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 ip = 1;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_ip(), target);
  }

  // optional float latitude = 2;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_latitude(), target);
  }

  // optional float longitude = 3;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_longitude(), target);
  }

  // optional string country = 4;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_country();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CIPLocationInfo.country");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional string state = 5;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_state();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CIPLocationInfo.state");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // optional string city = 6;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_city();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CIPLocationInfo.city");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CIPLocationInfo)
  return target;
}

::size_t CIPLocationInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CIPLocationInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string country = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_country());
    }

    // optional string state = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_state());
    }

    // optional string city = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_city());
    }

    // optional uint32 ip = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_ip());
    }

    // optional float latitude = 2;
    if (cached_has_bits & 0x00000010u) {
      total_size += 5;
    }

    // optional float longitude = 3;
    if (cached_has_bits & 0x00000020u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CIPLocationInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CIPLocationInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*CIPLocationInfo::GetClassData() const { return &_class_data_; }


void CIPLocationInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CIPLocationInfo*>(&to_msg);
  auto& from = static_cast<const CIPLocationInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CIPLocationInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_country(from._internal_country());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_state(from._internal_state());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_city(from._internal_city());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.ip_ = from._impl_.ip_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.latitude_ = from._impl_.latitude_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.longitude_ = from._impl_.longitude_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CIPLocationInfo::CopyFrom(const CIPLocationInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CIPLocationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CIPLocationInfo::IsInitialized() const {
  return true;
}

void CIPLocationInfo::InternalSwap(CIPLocationInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.country_, lhs_arena,
                                       &other->_impl_.country_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.state_, lhs_arena,
                                       &other->_impl_.state_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.city_, lhs_arena,
                                       &other->_impl_.city_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CIPLocationInfo, _impl_.longitude_)
      + sizeof(CIPLocationInfo::_impl_.longitude_)
      - PROTOBUF_FIELD_OFFSET(CIPLocationInfo, _impl_.ip_)>(
          reinterpret_cast<char*>(&_impl_.ip_),
          reinterpret_cast<char*>(&other->_impl_.ip_));
}

::google::protobuf::Metadata CIPLocationInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[33]);
}
// ===================================================================

class CGCMsgGetIPLocationResponse::_Internal {
 public:
};

CGCMsgGetIPLocationResponse::CGCMsgGetIPLocationResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CGCMsgGetIPLocationResponse)
}
CGCMsgGetIPLocationResponse::CGCMsgGetIPLocationResponse(const CGCMsgGetIPLocationResponse& from) : ::google::protobuf::Message() {
  CGCMsgGetIPLocationResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.infos_){from._impl_.infos_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CGCMsgGetIPLocationResponse)
}
inline void CGCMsgGetIPLocationResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.infos_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
CGCMsgGetIPLocationResponse::~CGCMsgGetIPLocationResponse() {
  // @@protoc_insertion_point(destructor:CGCMsgGetIPLocationResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CGCMsgGetIPLocationResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.infos_.~RepeatedPtrField();
}
void CGCMsgGetIPLocationResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CGCMsgGetIPLocationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCMsgGetIPLocationResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_infos()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CGCMsgGetIPLocationResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CGCMsgGetIPLocationResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CGCMsgGetIPLocationResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .CIPLocationInfo infos = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CGCMsgGetIPLocationResponse, _impl_.infos_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .CIPLocationInfo infos = 1;
    {PROTOBUF_FIELD_OFFSET(CGCMsgGetIPLocationResponse, _impl_.infos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CIPLocationInfo>()},
  }}, {{
  }},
};

::uint8_t* CGCMsgGetIPLocationResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgGetIPLocationResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .CIPLocationInfo infos = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_infos_size()); i < n; i++) {
    const auto& repfield = this->_internal_infos().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgGetIPLocationResponse)
  return target;
}

::size_t CGCMsgGetIPLocationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCMsgGetIPLocationResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CIPLocationInfo infos = 1;
  total_size += 1UL * this->_internal_infos_size();
  for (const auto& msg : this->_internal_infos()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CGCMsgGetIPLocationResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CGCMsgGetIPLocationResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*CGCMsgGetIPLocationResponse::GetClassData() const { return &_class_data_; }


void CGCMsgGetIPLocationResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CGCMsgGetIPLocationResponse*>(&to_msg);
  auto& from = static_cast<const CGCMsgGetIPLocationResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CGCMsgGetIPLocationResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_infos()->MergeFrom(from._internal_infos());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CGCMsgGetIPLocationResponse::CopyFrom(const CGCMsgGetIPLocationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCMsgGetIPLocationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CGCMsgGetIPLocationResponse::IsInitialized() const {
  return true;
}

void CGCMsgGetIPLocationResponse::InternalSwap(CGCMsgGetIPLocationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.infos_.InternalSwap(&other->_impl_.infos_);
}

::google::protobuf::Metadata CGCMsgGetIPLocationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[34]);
}
// ===================================================================

class CGCMsgSystemStatsSchema::_Internal {
 public:
  using HasBits = decltype(std::declval<CGCMsgSystemStatsSchema>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CGCMsgSystemStatsSchema, _impl_._has_bits_);
  static void set_has_gc_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_schema_kv(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CGCMsgSystemStatsSchema::CGCMsgSystemStatsSchema(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CGCMsgSystemStatsSchema)
}
CGCMsgSystemStatsSchema::CGCMsgSystemStatsSchema(const CGCMsgSystemStatsSchema& from) : ::google::protobuf::Message() {
  CGCMsgSystemStatsSchema* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.schema_kv_){},
      decltype(_impl_.gc_app_id_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.schema_kv_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.schema_kv_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.schema_kv_.Set(from._internal_schema_kv(), _this->GetArenaForAllocation());
  }
  _this->_impl_.gc_app_id_ = from._impl_.gc_app_id_;

  // @@protoc_insertion_point(copy_constructor:CGCMsgSystemStatsSchema)
}
inline void CGCMsgSystemStatsSchema::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.schema_kv_){},
      decltype(_impl_.gc_app_id_){0u},
  };
  _impl_.schema_kv_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.schema_kv_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CGCMsgSystemStatsSchema::~CGCMsgSystemStatsSchema() {
  // @@protoc_insertion_point(destructor:CGCMsgSystemStatsSchema)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CGCMsgSystemStatsSchema::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.schema_kv_.Destroy();
}
void CGCMsgSystemStatsSchema::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CGCMsgSystemStatsSchema::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCMsgSystemStatsSchema)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.schema_kv_.ClearNonDefaultToEmpty();
  }
  _impl_.gc_app_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CGCMsgSystemStatsSchema::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> CGCMsgSystemStatsSchema::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CGCMsgSystemStatsSchema, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CGCMsgSystemStatsSchema_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bytes schema_kv = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CGCMsgSystemStatsSchema, _impl_.schema_kv_)}},
    // optional uint32 gc_app_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGCMsgSystemStatsSchema, _impl_.gc_app_id_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CGCMsgSystemStatsSchema, _impl_.gc_app_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 gc_app_id = 1;
    {PROTOBUF_FIELD_OFFSET(CGCMsgSystemStatsSchema, _impl_.gc_app_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bytes schema_kv = 2;
    {PROTOBUF_FIELD_OFFSET(CGCMsgSystemStatsSchema, _impl_.schema_kv_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CGCMsgSystemStatsSchema::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgSystemStatsSchema)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 gc_app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_gc_app_id(), target);
  }

  // optional bytes schema_kv = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_schema_kv();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgSystemStatsSchema)
  return target;
}

::size_t CGCMsgSystemStatsSchema::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCMsgSystemStatsSchema)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes schema_kv = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_schema_kv());
    }

    // optional uint32 gc_app_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_gc_app_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CGCMsgSystemStatsSchema::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CGCMsgSystemStatsSchema::MergeImpl
};
const ::google::protobuf::Message::ClassData*CGCMsgSystemStatsSchema::GetClassData() const { return &_class_data_; }


void CGCMsgSystemStatsSchema::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CGCMsgSystemStatsSchema*>(&to_msg);
  auto& from = static_cast<const CGCMsgSystemStatsSchema&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CGCMsgSystemStatsSchema)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_schema_kv(from._internal_schema_kv());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.gc_app_id_ = from._impl_.gc_app_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CGCMsgSystemStatsSchema::CopyFrom(const CGCMsgSystemStatsSchema& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCMsgSystemStatsSchema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CGCMsgSystemStatsSchema::IsInitialized() const {
  return true;
}

void CGCMsgSystemStatsSchema::InternalSwap(CGCMsgSystemStatsSchema* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.schema_kv_, lhs_arena,
                                       &other->_impl_.schema_kv_, rhs_arena);
        swap(_impl_.gc_app_id_, other->_impl_.gc_app_id_);
}

::google::protobuf::Metadata CGCMsgSystemStatsSchema::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[35]);
}
// ===================================================================

class CGCMsgGetSystemStats::_Internal {
 public:
};

CGCMsgGetSystemStats::CGCMsgGetSystemStats(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:CGCMsgGetSystemStats)
}
CGCMsgGetSystemStats::CGCMsgGetSystemStats(const CGCMsgGetSystemStats& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  CGCMsgGetSystemStats* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CGCMsgGetSystemStats)
}




const ::google::protobuf::Message::ClassData CGCMsgGetSystemStats::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*CGCMsgGetSystemStats::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata CGCMsgGetSystemStats::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[36]);
}
// ===================================================================

class CGCMsgGetSystemStatsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CGCMsgGetSystemStatsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _impl_._has_bits_);
  static void set_has_gc_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_stats_kv(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_active_jobs(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_yielding_jobs(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_user_sessions(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_game_server_sessions(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_socaches(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_socaches_to_unload(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_socaches_loading(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_writeback_queue(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_steamid_locks(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_logon_queue(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_logon_jobs(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
};

CGCMsgGetSystemStatsResponse::CGCMsgGetSystemStatsResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CGCMsgGetSystemStatsResponse)
}
CGCMsgGetSystemStatsResponse::CGCMsgGetSystemStatsResponse(const CGCMsgGetSystemStatsResponse& from) : ::google::protobuf::Message() {
  CGCMsgGetSystemStatsResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.stats_kv_){},
      decltype(_impl_.gc_app_id_){},
      decltype(_impl_.active_jobs_){},
      decltype(_impl_.yielding_jobs_){},
      decltype(_impl_.user_sessions_){},
      decltype(_impl_.game_server_sessions_){},
      decltype(_impl_.socaches_){},
      decltype(_impl_.socaches_to_unload_){},
      decltype(_impl_.socaches_loading_){},
      decltype(_impl_.writeback_queue_){},
      decltype(_impl_.steamid_locks_){},
      decltype(_impl_.logon_queue_){},
      decltype(_impl_.logon_jobs_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.stats_kv_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.stats_kv_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.stats_kv_.Set(from._internal_stats_kv(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.gc_app_id_, &from._impl_.gc_app_id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.logon_jobs_) -
    reinterpret_cast<char*>(&_impl_.gc_app_id_)) + sizeof(_impl_.logon_jobs_));

  // @@protoc_insertion_point(copy_constructor:CGCMsgGetSystemStatsResponse)
}
inline void CGCMsgGetSystemStatsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.stats_kv_){},
      decltype(_impl_.gc_app_id_){0u},
      decltype(_impl_.active_jobs_){0u},
      decltype(_impl_.yielding_jobs_){0u},
      decltype(_impl_.user_sessions_){0u},
      decltype(_impl_.game_server_sessions_){0u},
      decltype(_impl_.socaches_){0u},
      decltype(_impl_.socaches_to_unload_){0u},
      decltype(_impl_.socaches_loading_){0u},
      decltype(_impl_.writeback_queue_){0u},
      decltype(_impl_.steamid_locks_){0u},
      decltype(_impl_.logon_queue_){0u},
      decltype(_impl_.logon_jobs_){0u},
  };
  _impl_.stats_kv_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.stats_kv_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CGCMsgGetSystemStatsResponse::~CGCMsgGetSystemStatsResponse() {
  // @@protoc_insertion_point(destructor:CGCMsgGetSystemStatsResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CGCMsgGetSystemStatsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.stats_kv_.Destroy();
}
void CGCMsgGetSystemStatsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CGCMsgGetSystemStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCMsgGetSystemStatsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.stats_kv_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&_impl_.gc_app_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.socaches_to_unload_) -
        reinterpret_cast<char*>(&_impl_.gc_app_id_)) + sizeof(_impl_.socaches_to_unload_));
  }
  if (cached_has_bits & 0x00001f00u) {
    ::memset(&_impl_.socaches_loading_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.logon_jobs_) -
        reinterpret_cast<char*>(&_impl_.socaches_loading_)) + sizeof(_impl_.logon_jobs_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CGCMsgGetSystemStatsResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 0, 0, 2> CGCMsgGetSystemStatsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CGCMsgGetSystemStatsResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 gc_app_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGCMsgGetSystemStatsResponse, _impl_.gc_app_id_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _impl_.gc_app_id_)}},
    // optional bytes stats_kv = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _impl_.stats_kv_)}},
    // optional uint32 active_jobs = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGCMsgGetSystemStatsResponse, _impl_.active_jobs_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _impl_.active_jobs_)}},
    // optional uint32 yielding_jobs = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGCMsgGetSystemStatsResponse, _impl_.yielding_jobs_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _impl_.yielding_jobs_)}},
    // optional uint32 user_sessions = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGCMsgGetSystemStatsResponse, _impl_.user_sessions_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _impl_.user_sessions_)}},
    // optional uint32 game_server_sessions = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGCMsgGetSystemStatsResponse, _impl_.game_server_sessions_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _impl_.game_server_sessions_)}},
    // optional uint32 socaches = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGCMsgGetSystemStatsResponse, _impl_.socaches_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _impl_.socaches_)}},
    // optional uint32 socaches_to_unload = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGCMsgGetSystemStatsResponse, _impl_.socaches_to_unload_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _impl_.socaches_to_unload_)}},
    // optional uint32 socaches_loading = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGCMsgGetSystemStatsResponse, _impl_.socaches_loading_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _impl_.socaches_loading_)}},
    // optional uint32 writeback_queue = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGCMsgGetSystemStatsResponse, _impl_.writeback_queue_), 9>(),
     {80, 9, 0, PROTOBUF_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _impl_.writeback_queue_)}},
    // optional uint32 steamid_locks = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGCMsgGetSystemStatsResponse, _impl_.steamid_locks_), 10>(),
     {88, 10, 0, PROTOBUF_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _impl_.steamid_locks_)}},
    // optional uint32 logon_queue = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGCMsgGetSystemStatsResponse, _impl_.logon_queue_), 11>(),
     {96, 11, 0, PROTOBUF_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _impl_.logon_queue_)}},
    // optional uint32 logon_jobs = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGCMsgGetSystemStatsResponse, _impl_.logon_jobs_), 12>(),
     {104, 12, 0, PROTOBUF_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _impl_.logon_jobs_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 gc_app_id = 1;
    {PROTOBUF_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _impl_.gc_app_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bytes stats_kv = 2;
    {PROTOBUF_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _impl_.stats_kv_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional uint32 active_jobs = 3;
    {PROTOBUF_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _impl_.active_jobs_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 yielding_jobs = 4;
    {PROTOBUF_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _impl_.yielding_jobs_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 user_sessions = 5;
    {PROTOBUF_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _impl_.user_sessions_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 game_server_sessions = 6;
    {PROTOBUF_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _impl_.game_server_sessions_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 socaches = 7;
    {PROTOBUF_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _impl_.socaches_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 socaches_to_unload = 8;
    {PROTOBUF_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _impl_.socaches_to_unload_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 socaches_loading = 9;
    {PROTOBUF_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _impl_.socaches_loading_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 writeback_queue = 10;
    {PROTOBUF_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _impl_.writeback_queue_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 steamid_locks = 11;
    {PROTOBUF_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _impl_.steamid_locks_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 logon_queue = 12;
    {PROTOBUF_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _impl_.logon_queue_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 logon_jobs = 13;
    {PROTOBUF_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _impl_.logon_jobs_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CGCMsgGetSystemStatsResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgGetSystemStatsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 gc_app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_gc_app_id(), target);
  }

  // optional bytes stats_kv = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_stats_kv();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // optional uint32 active_jobs = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_active_jobs(), target);
  }

  // optional uint32 yielding_jobs = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_yielding_jobs(), target);
  }

  // optional uint32 user_sessions = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_user_sessions(), target);
  }

  // optional uint32 game_server_sessions = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_game_server_sessions(), target);
  }

  // optional uint32 socaches = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_socaches(), target);
  }

  // optional uint32 socaches_to_unload = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this->_internal_socaches_to_unload(), target);
  }

  // optional uint32 socaches_loading = 9;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this->_internal_socaches_loading(), target);
  }

  // optional uint32 writeback_queue = 10;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        10, this->_internal_writeback_queue(), target);
  }

  // optional uint32 steamid_locks = 11;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        11, this->_internal_steamid_locks(), target);
  }

  // optional uint32 logon_queue = 12;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        12, this->_internal_logon_queue(), target);
  }

  // optional uint32 logon_jobs = 13;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        13, this->_internal_logon_jobs(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgGetSystemStatsResponse)
  return target;
}

::size_t CGCMsgGetSystemStatsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCMsgGetSystemStatsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional bytes stats_kv = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_stats_kv());
    }

    // optional uint32 gc_app_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_gc_app_id());
    }

    // optional uint32 active_jobs = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_active_jobs());
    }

    // optional uint32 yielding_jobs = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_yielding_jobs());
    }

    // optional uint32 user_sessions = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_user_sessions());
    }

    // optional uint32 game_server_sessions = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_game_server_sessions());
    }

    // optional uint32 socaches = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_socaches());
    }

    // optional uint32 socaches_to_unload = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_socaches_to_unload());
    }

  }
  if (cached_has_bits & 0x00001f00u) {
    // optional uint32 socaches_loading = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_socaches_loading());
    }

    // optional uint32 writeback_queue = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_writeback_queue());
    }

    // optional uint32 steamid_locks = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_steamid_locks());
    }

    // optional uint32 logon_queue = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_logon_queue());
    }

    // optional uint32 logon_jobs = 13;
    if (cached_has_bits & 0x00001000u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_logon_jobs());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CGCMsgGetSystemStatsResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CGCMsgGetSystemStatsResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*CGCMsgGetSystemStatsResponse::GetClassData() const { return &_class_data_; }


void CGCMsgGetSystemStatsResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CGCMsgGetSystemStatsResponse*>(&to_msg);
  auto& from = static_cast<const CGCMsgGetSystemStatsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CGCMsgGetSystemStatsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_stats_kv(from._internal_stats_kv());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.gc_app_id_ = from._impl_.gc_app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.active_jobs_ = from._impl_.active_jobs_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.yielding_jobs_ = from._impl_.yielding_jobs_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.user_sessions_ = from._impl_.user_sessions_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.game_server_sessions_ = from._impl_.game_server_sessions_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.socaches_ = from._impl_.socaches_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.socaches_to_unload_ = from._impl_.socaches_to_unload_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00001f00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.socaches_loading_ = from._impl_.socaches_loading_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.writeback_queue_ = from._impl_.writeback_queue_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.steamid_locks_ = from._impl_.steamid_locks_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.logon_queue_ = from._impl_.logon_queue_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.logon_jobs_ = from._impl_.logon_jobs_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CGCMsgGetSystemStatsResponse::CopyFrom(const CGCMsgGetSystemStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCMsgGetSystemStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CGCMsgGetSystemStatsResponse::IsInitialized() const {
  return true;
}

void CGCMsgGetSystemStatsResponse::InternalSwap(CGCMsgGetSystemStatsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.stats_kv_, lhs_arena,
                                       &other->_impl_.stats_kv_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _impl_.logon_jobs_)
      + sizeof(CGCMsgGetSystemStatsResponse::_impl_.logon_jobs_)
      - PROTOBUF_FIELD_OFFSET(CGCMsgGetSystemStatsResponse, _impl_.gc_app_id_)>(
          reinterpret_cast<char*>(&_impl_.gc_app_id_),
          reinterpret_cast<char*>(&other->_impl_.gc_app_id_));
}

::google::protobuf::Metadata CGCMsgGetSystemStatsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[37]);
}
// ===================================================================

class CMsgAMSendEmail_ReplacementToken::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgAMSendEmail_ReplacementToken>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgAMSendEmail_ReplacementToken, _impl_._has_bits_);
  static void set_has_token_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_token_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgAMSendEmail_ReplacementToken::CMsgAMSendEmail_ReplacementToken(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgAMSendEmail.ReplacementToken)
}
CMsgAMSendEmail_ReplacementToken::CMsgAMSendEmail_ReplacementToken(const CMsgAMSendEmail_ReplacementToken& from) : ::google::protobuf::Message() {
  CMsgAMSendEmail_ReplacementToken* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.token_name_){},
      decltype(_impl_.token_value_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.token_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.token_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.token_name_.Set(from._internal_token_name(), _this->GetArenaForAllocation());
  }
  _impl_.token_value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.token_value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.token_value_.Set(from._internal_token_value(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:CMsgAMSendEmail.ReplacementToken)
}
inline void CMsgAMSendEmail_ReplacementToken::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.token_name_){},
      decltype(_impl_.token_value_){},
  };
  _impl_.token_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.token_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.token_value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.token_value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CMsgAMSendEmail_ReplacementToken::~CMsgAMSendEmail_ReplacementToken() {
  // @@protoc_insertion_point(destructor:CMsgAMSendEmail.ReplacementToken)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgAMSendEmail_ReplacementToken::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.token_name_.Destroy();
  _impl_.token_value_.Destroy();
}
void CMsgAMSendEmail_ReplacementToken::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgAMSendEmail_ReplacementToken::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMSendEmail.ReplacementToken)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.token_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.token_value_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgAMSendEmail_ReplacementToken::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 62, 2> CMsgAMSendEmail_ReplacementToken::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgAMSendEmail_ReplacementToken, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgAMSendEmail_ReplacementToken_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string token_value = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgAMSendEmail_ReplacementToken, _impl_.token_value_)}},
    // optional string token_name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgAMSendEmail_ReplacementToken, _impl_.token_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string token_name = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgAMSendEmail_ReplacementToken, _impl_.token_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string token_value = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgAMSendEmail_ReplacementToken, _impl_.token_value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\12\13\0\0\0\0\0"
    "CMsgAMSendEmail.ReplacementToken"
    "token_name"
    "token_value"
  }},
};

::uint8_t* CMsgAMSendEmail_ReplacementToken::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMSendEmail.ReplacementToken)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string token_name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_token_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgAMSendEmail.ReplacementToken.token_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string token_value = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_token_value();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgAMSendEmail.ReplacementToken.token_value");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMSendEmail.ReplacementToken)
  return target;
}

::size_t CMsgAMSendEmail_ReplacementToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMSendEmail.ReplacementToken)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string token_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_token_name());
    }

    // optional string token_value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_token_value());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgAMSendEmail_ReplacementToken::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgAMSendEmail_ReplacementToken::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgAMSendEmail_ReplacementToken::GetClassData() const { return &_class_data_; }


void CMsgAMSendEmail_ReplacementToken::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgAMSendEmail_ReplacementToken*>(&to_msg);
  auto& from = static_cast<const CMsgAMSendEmail_ReplacementToken&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMSendEmail.ReplacementToken)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_token_name(from._internal_token_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_token_value(from._internal_token_value());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgAMSendEmail_ReplacementToken::CopyFrom(const CMsgAMSendEmail_ReplacementToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMSendEmail.ReplacementToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgAMSendEmail_ReplacementToken::IsInitialized() const {
  return true;
}

void CMsgAMSendEmail_ReplacementToken::InternalSwap(CMsgAMSendEmail_ReplacementToken* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_name_, lhs_arena,
                                       &other->_impl_.token_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_value_, lhs_arena,
                                       &other->_impl_.token_value_, rhs_arena);
}

::google::protobuf::Metadata CMsgAMSendEmail_ReplacementToken::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[38]);
}
// ===================================================================

class CMsgAMSendEmail_PersonaNameReplacementToken::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgAMSendEmail_PersonaNameReplacementToken>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgAMSendEmail_PersonaNameReplacementToken, _impl_._has_bits_);
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_token_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgAMSendEmail_PersonaNameReplacementToken::CMsgAMSendEmail_PersonaNameReplacementToken(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgAMSendEmail.PersonaNameReplacementToken)
}
CMsgAMSendEmail_PersonaNameReplacementToken::CMsgAMSendEmail_PersonaNameReplacementToken(const CMsgAMSendEmail_PersonaNameReplacementToken& from) : ::google::protobuf::Message() {
  CMsgAMSendEmail_PersonaNameReplacementToken* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.token_name_){},
      decltype(_impl_.steamid_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.token_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.token_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.token_name_.Set(from._internal_token_name(), _this->GetArenaForAllocation());
  }
  _this->_impl_.steamid_ = from._impl_.steamid_;

  // @@protoc_insertion_point(copy_constructor:CMsgAMSendEmail.PersonaNameReplacementToken)
}
inline void CMsgAMSendEmail_PersonaNameReplacementToken::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.token_name_){},
      decltype(_impl_.steamid_){::uint64_t{0u}},
  };
  _impl_.token_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.token_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CMsgAMSendEmail_PersonaNameReplacementToken::~CMsgAMSendEmail_PersonaNameReplacementToken() {
  // @@protoc_insertion_point(destructor:CMsgAMSendEmail.PersonaNameReplacementToken)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgAMSendEmail_PersonaNameReplacementToken::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.token_name_.Destroy();
}
void CMsgAMSendEmail_PersonaNameReplacementToken::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgAMSendEmail_PersonaNameReplacementToken::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMSendEmail.PersonaNameReplacementToken)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.token_name_.ClearNonDefaultToEmpty();
  }
  _impl_.steamid_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgAMSendEmail_PersonaNameReplacementToken::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 62, 2> CMsgAMSendEmail_PersonaNameReplacementToken::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgAMSendEmail_PersonaNameReplacementToken, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgAMSendEmail_PersonaNameReplacementToken_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string token_name = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgAMSendEmail_PersonaNameReplacementToken, _impl_.token_name_)}},
    // optional fixed64 steamid = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgAMSendEmail_PersonaNameReplacementToken, _impl_.steamid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed64 steamid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgAMSendEmail_PersonaNameReplacementToken, _impl_.steamid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional string token_name = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgAMSendEmail_PersonaNameReplacementToken, _impl_.token_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\53\0\12\0\0\0\0\0"
    "CMsgAMSendEmail.PersonaNameReplacementToken"
    "token_name"
  }},
};

::uint8_t* CMsgAMSendEmail_PersonaNameReplacementToken::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMSendEmail.PersonaNameReplacementToken)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        1, this->_internal_steamid(), target);
  }

  // optional string token_name = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_token_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgAMSendEmail.PersonaNameReplacementToken.token_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMSendEmail.PersonaNameReplacementToken)
  return target;
}

::size_t CMsgAMSendEmail_PersonaNameReplacementToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMSendEmail.PersonaNameReplacementToken)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string token_name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_token_name());
    }

    // optional fixed64 steamid = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgAMSendEmail_PersonaNameReplacementToken::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgAMSendEmail_PersonaNameReplacementToken::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgAMSendEmail_PersonaNameReplacementToken::GetClassData() const { return &_class_data_; }


void CMsgAMSendEmail_PersonaNameReplacementToken::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgAMSendEmail_PersonaNameReplacementToken*>(&to_msg);
  auto& from = static_cast<const CMsgAMSendEmail_PersonaNameReplacementToken&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMSendEmail.PersonaNameReplacementToken)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_token_name(from._internal_token_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.steamid_ = from._impl_.steamid_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgAMSendEmail_PersonaNameReplacementToken::CopyFrom(const CMsgAMSendEmail_PersonaNameReplacementToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMSendEmail.PersonaNameReplacementToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgAMSendEmail_PersonaNameReplacementToken::IsInitialized() const {
  return true;
}

void CMsgAMSendEmail_PersonaNameReplacementToken::InternalSwap(CMsgAMSendEmail_PersonaNameReplacementToken* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_name_, lhs_arena,
                                       &other->_impl_.token_name_, rhs_arena);
        swap(_impl_.steamid_, other->_impl_.steamid_);
}

::google::protobuf::Metadata CMsgAMSendEmail_PersonaNameReplacementToken::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[39]);
}
// ===================================================================

class CMsgAMSendEmail::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgAMSendEmail>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgAMSendEmail, _impl_._has_bits_);
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_email_msg_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_email_format(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_source_gc(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CMsgAMSendEmail::CMsgAMSendEmail(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgAMSendEmail)
}
CMsgAMSendEmail::CMsgAMSendEmail(const CMsgAMSendEmail& from) : ::google::protobuf::Message() {
  CMsgAMSendEmail* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.persona_name_tokens_){from._impl_.persona_name_tokens_},
      decltype(_impl_.tokens_){from._impl_.tokens_},
      decltype(_impl_.steamid_){},
      decltype(_impl_.email_msg_type_){},
      decltype(_impl_.email_format_){},
      decltype(_impl_.source_gc_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  ::memcpy(&_impl_.steamid_, &from._impl_.steamid_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.source_gc_) -
    reinterpret_cast<char*>(&_impl_.steamid_)) + sizeof(_impl_.source_gc_));

  // @@protoc_insertion_point(copy_constructor:CMsgAMSendEmail)
}
inline void CMsgAMSendEmail::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.persona_name_tokens_){arena},
      decltype(_impl_.tokens_){arena},
      decltype(_impl_.steamid_){::uint64_t{0u}},
      decltype(_impl_.email_msg_type_){0u},
      decltype(_impl_.email_format_){0u},
      decltype(_impl_.source_gc_){0u},
  };
}
CMsgAMSendEmail::~CMsgAMSendEmail() {
  // @@protoc_insertion_point(destructor:CMsgAMSendEmail)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgAMSendEmail::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.persona_name_tokens_.~RepeatedPtrField();
  _impl_.tokens_.~RepeatedPtrField();
}
void CMsgAMSendEmail::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgAMSendEmail::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMSendEmail)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_persona_name_tokens()->Clear();
  _internal_mutable_tokens()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.steamid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.source_gc_) -
        reinterpret_cast<char*>(&_impl_.steamid_)) + sizeof(_impl_.source_gc_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgAMSendEmail::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 0, 2> CMsgAMSendEmail::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgAMSendEmail, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967176,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgAMSendEmail_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional fixed64 steamid = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgAMSendEmail, _impl_.steamid_)}},
    // optional uint32 email_msg_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgAMSendEmail, _impl_.email_msg_type_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgAMSendEmail, _impl_.email_msg_type_)}},
    // optional uint32 email_format = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgAMSendEmail, _impl_.email_format_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgAMSendEmail, _impl_.email_format_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .CMsgAMSendEmail.PersonaNameReplacementToken persona_name_tokens = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgAMSendEmail, _impl_.persona_name_tokens_)}},
    // optional uint32 source_gc = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgAMSendEmail, _impl_.source_gc_), 3>(),
     {48, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgAMSendEmail, _impl_.source_gc_)}},
    // repeated .CMsgAMSendEmail.ReplacementToken tokens = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 1, PROTOBUF_FIELD_OFFSET(CMsgAMSendEmail, _impl_.tokens_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed64 steamid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgAMSendEmail, _impl_.steamid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional uint32 email_msg_type = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgAMSendEmail, _impl_.email_msg_type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 email_format = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgAMSendEmail, _impl_.email_format_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .CMsgAMSendEmail.PersonaNameReplacementToken persona_name_tokens = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgAMSendEmail, _impl_.persona_name_tokens_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 source_gc = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgAMSendEmail, _impl_.source_gc_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .CMsgAMSendEmail.ReplacementToken tokens = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgAMSendEmail, _impl_.tokens_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgAMSendEmail_PersonaNameReplacementToken>()},
    {::_pbi::TcParser::GetTable<::CMsgAMSendEmail_ReplacementToken>()},
  }}, {{
  }},
};

::uint8_t* CMsgAMSendEmail::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMSendEmail)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        1, this->_internal_steamid(), target);
  }

  // optional uint32 email_msg_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_email_msg_type(), target);
  }

  // optional uint32 email_format = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_email_format(), target);
  }

  // repeated .CMsgAMSendEmail.PersonaNameReplacementToken persona_name_tokens = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_persona_name_tokens_size()); i < n; i++) {
    const auto& repfield = this->_internal_persona_name_tokens().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional uint32 source_gc = 6;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_source_gc(), target);
  }

  // repeated .CMsgAMSendEmail.ReplacementToken tokens = 7;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_tokens_size()); i < n; i++) {
    const auto& repfield = this->_internal_tokens().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(7, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMSendEmail)
  return target;
}

::size_t CMsgAMSendEmail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMSendEmail)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgAMSendEmail.PersonaNameReplacementToken persona_name_tokens = 5;
  total_size += 1UL * this->_internal_persona_name_tokens_size();
  for (const auto& msg : this->_internal_persona_name_tokens()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .CMsgAMSendEmail.ReplacementToken tokens = 7;
  total_size += 1UL * this->_internal_tokens_size();
  for (const auto& msg : this->_internal_tokens()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional fixed64 steamid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 9;
    }

    // optional uint32 email_msg_type = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_email_msg_type());
    }

    // optional uint32 email_format = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_email_format());
    }

    // optional uint32 source_gc = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_source_gc());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgAMSendEmail::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgAMSendEmail::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgAMSendEmail::GetClassData() const { return &_class_data_; }


void CMsgAMSendEmail::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgAMSendEmail*>(&to_msg);
  auto& from = static_cast<const CMsgAMSendEmail&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMSendEmail)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_persona_name_tokens()->MergeFrom(from._internal_persona_name_tokens());
  _this->_internal_mutable_tokens()->MergeFrom(from._internal_tokens());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.steamid_ = from._impl_.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.email_msg_type_ = from._impl_.email_msg_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.email_format_ = from._impl_.email_format_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.source_gc_ = from._impl_.source_gc_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgAMSendEmail::CopyFrom(const CMsgAMSendEmail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMSendEmail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgAMSendEmail::IsInitialized() const {
  return true;
}

void CMsgAMSendEmail::InternalSwap(CMsgAMSendEmail* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.persona_name_tokens_.InternalSwap(&other->_impl_.persona_name_tokens_);
  _impl_.tokens_.InternalSwap(&other->_impl_.tokens_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgAMSendEmail, _impl_.source_gc_)
      + sizeof(CMsgAMSendEmail::_impl_.source_gc_)
      - PROTOBUF_FIELD_OFFSET(CMsgAMSendEmail, _impl_.steamid_)>(
          reinterpret_cast<char*>(&_impl_.steamid_),
          reinterpret_cast<char*>(&other->_impl_.steamid_));
}

::google::protobuf::Metadata CMsgAMSendEmail::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[40]);
}
// ===================================================================

class CMsgAMSendEmailResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgAMSendEmailResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgAMSendEmailResponse, _impl_._has_bits_);
  static void set_has_eresult(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgAMSendEmailResponse::CMsgAMSendEmailResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgAMSendEmailResponse)
}
CMsgAMSendEmailResponse::CMsgAMSendEmailResponse(const CMsgAMSendEmailResponse& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgAMSendEmailResponse)
}
inline void CMsgAMSendEmailResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.eresult_){2u},
  };
}
CMsgAMSendEmailResponse::~CMsgAMSendEmailResponse() {
  // @@protoc_insertion_point(destructor:CMsgAMSendEmailResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgAMSendEmailResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CMsgAMSendEmailResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgAMSendEmailResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMSendEmailResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.eresult_ = 2u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgAMSendEmailResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CMsgAMSendEmailResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgAMSendEmailResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgAMSendEmailResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 eresult = 1 [default = 2];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgAMSendEmailResponse, _impl_.eresult_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgAMSendEmailResponse, _impl_.eresult_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 eresult = 1 [default = 2];
    {PROTOBUF_FIELD_OFFSET(CMsgAMSendEmailResponse, _impl_.eresult_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgAMSendEmailResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMSendEmailResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_eresult(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMSendEmailResponse)
  return target;
}

::size_t CMsgAMSendEmailResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMSendEmailResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 eresult = 1 [default = 2];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_eresult());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgAMSendEmailResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgAMSendEmailResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgAMSendEmailResponse::GetClassData() const { return &_class_data_; }


void CMsgAMSendEmailResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgAMSendEmailResponse*>(&to_msg);
  auto& from = static_cast<const CMsgAMSendEmailResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMSendEmailResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_eresult(from._internal_eresult());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgAMSendEmailResponse::CopyFrom(const CMsgAMSendEmailResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMSendEmailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgAMSendEmailResponse::IsInitialized() const {
  return true;
}

void CMsgAMSendEmailResponse::InternalSwap(CMsgAMSendEmailResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.eresult_, other->_impl_.eresult_);
}

::google::protobuf::Metadata CMsgAMSendEmailResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[41]);
}
// ===================================================================

class CMsgGCGetEmailTemplate::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCGetEmailTemplate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgGCGetEmailTemplate, _impl_._has_bits_);
  static void set_has_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_email_msg_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_email_lang(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_email_format(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CMsgGCGetEmailTemplate::CMsgGCGetEmailTemplate(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCGetEmailTemplate)
}
CMsgGCGetEmailTemplate::CMsgGCGetEmailTemplate(const CMsgGCGetEmailTemplate& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgGCGetEmailTemplate)
}
inline void CMsgGCGetEmailTemplate::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.app_id_){0u},
      decltype(_impl_.email_msg_type_){0u},
      decltype(_impl_.email_lang_){0},
      decltype(_impl_.email_format_){0},
  };
}
CMsgGCGetEmailTemplate::~CMsgGCGetEmailTemplate() {
  // @@protoc_insertion_point(destructor:CMsgGCGetEmailTemplate)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCGetEmailTemplate::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CMsgGCGetEmailTemplate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCGetEmailTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCGetEmailTemplate)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.app_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.email_format_) -
        reinterpret_cast<char*>(&_impl_.app_id_)) + sizeof(_impl_.email_format_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCGetEmailTemplate::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> CMsgGCGetEmailTemplate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCGetEmailTemplate, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgGCGetEmailTemplate_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 email_format = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCGetEmailTemplate, _impl_.email_format_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCGetEmailTemplate, _impl_.email_format_)}},
    // optional uint32 app_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCGetEmailTemplate, _impl_.app_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCGetEmailTemplate, _impl_.app_id_)}},
    // optional uint32 email_msg_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCGetEmailTemplate, _impl_.email_msg_type_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCGetEmailTemplate, _impl_.email_msg_type_)}},
    // optional int32 email_lang = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCGetEmailTemplate, _impl_.email_lang_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCGetEmailTemplate, _impl_.email_lang_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 app_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCGetEmailTemplate, _impl_.app_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 email_msg_type = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCGetEmailTemplate, _impl_.email_msg_type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 email_lang = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCGetEmailTemplate, _impl_.email_lang_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 email_format = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCGetEmailTemplate, _impl_.email_format_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgGCGetEmailTemplate::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCGetEmailTemplate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_app_id(), target);
  }

  // optional uint32 email_msg_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_email_msg_type(), target);
  }

  // optional int32 email_lang = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_email_lang(), target);
  }

  // optional int32 email_format = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_email_format(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCGetEmailTemplate)
  return target;
}

::size_t CMsgGCGetEmailTemplate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCGetEmailTemplate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional uint32 app_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_app_id());
    }

    // optional uint32 email_msg_type = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_email_msg_type());
    }

    // optional int32 email_lang = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_email_lang());
    }

    // optional int32 email_format = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_email_format());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCGetEmailTemplate::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCGetEmailTemplate::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCGetEmailTemplate::GetClassData() const { return &_class_data_; }


void CMsgGCGetEmailTemplate::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCGetEmailTemplate*>(&to_msg);
  auto& from = static_cast<const CMsgGCGetEmailTemplate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCGetEmailTemplate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.app_id_ = from._impl_.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.email_msg_type_ = from._impl_.email_msg_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.email_lang_ = from._impl_.email_lang_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.email_format_ = from._impl_.email_format_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCGetEmailTemplate::CopyFrom(const CMsgGCGetEmailTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCGetEmailTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCGetEmailTemplate::IsInitialized() const {
  return true;
}

void CMsgGCGetEmailTemplate::InternalSwap(CMsgGCGetEmailTemplate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCGetEmailTemplate, _impl_.email_format_)
      + sizeof(CMsgGCGetEmailTemplate::_impl_.email_format_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCGetEmailTemplate, _impl_.app_id_)>(
          reinterpret_cast<char*>(&_impl_.app_id_),
          reinterpret_cast<char*>(&other->_impl_.app_id_));
}

::google::protobuf::Metadata CMsgGCGetEmailTemplate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[42]);
}
// ===================================================================

class CMsgGCGetEmailTemplateResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCGetEmailTemplateResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgGCGetEmailTemplateResponse, _impl_._has_bits_);
  static void set_has_eresult(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_template_exists(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_template_(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgGCGetEmailTemplateResponse::CMsgGCGetEmailTemplateResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCGetEmailTemplateResponse)
}
CMsgGCGetEmailTemplateResponse::CMsgGCGetEmailTemplateResponse(const CMsgGCGetEmailTemplateResponse& from) : ::google::protobuf::Message() {
  CMsgGCGetEmailTemplateResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.template__){},
      decltype(_impl_.template_exists_){},
      decltype(_impl_.eresult_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.template__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.template__.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.template__.Set(from._internal_template_(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.template_exists_, &from._impl_.template_exists_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.eresult_) -
    reinterpret_cast<char*>(&_impl_.template_exists_)) + sizeof(_impl_.eresult_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCGetEmailTemplateResponse)
}
inline void CMsgGCGetEmailTemplateResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.template__){},
      decltype(_impl_.template_exists_){false},
      decltype(_impl_.eresult_){2u},
  };
  _impl_.template__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.template__.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CMsgGCGetEmailTemplateResponse::~CMsgGCGetEmailTemplateResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCGetEmailTemplateResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCGetEmailTemplateResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.template__.Destroy();
}
void CMsgGCGetEmailTemplateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCGetEmailTemplateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCGetEmailTemplateResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.template__.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    _impl_.template_exists_ = false;
    _impl_.eresult_ = 2u;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCGetEmailTemplateResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 47, 2> CMsgGCGetEmailTemplateResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCGetEmailTemplateResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgGCGetEmailTemplateResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 eresult = 1 [default = 2];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCGetEmailTemplateResponse, _impl_.eresult_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCGetEmailTemplateResponse, _impl_.eresult_)}},
    // optional bool template_exists = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCGetEmailTemplateResponse, _impl_.template_exists_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCGetEmailTemplateResponse, _impl_.template_exists_)}},
    // optional string template = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCGetEmailTemplateResponse, _impl_.template__)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 eresult = 1 [default = 2];
    {PROTOBUF_FIELD_OFFSET(CMsgGCGetEmailTemplateResponse, _impl_.eresult_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bool template_exists = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCGetEmailTemplateResponse, _impl_.template_exists_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string template = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCGetEmailTemplateResponse, _impl_.template__), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\0\0\10\0\0\0\0"
    "CMsgGCGetEmailTemplateResponse"
    "template"
  }},
};

::uint8_t* CMsgGCGetEmailTemplateResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCGetEmailTemplateResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_eresult(), target);
  }

  // optional bool template_exists = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_template_exists(), target);
  }

  // optional string template = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_template_();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCGetEmailTemplateResponse.template");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCGetEmailTemplateResponse)
  return target;
}

::size_t CMsgGCGetEmailTemplateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCGetEmailTemplateResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string template = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_template_());
    }

    // optional bool template_exists = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }

    // optional uint32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_eresult());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCGetEmailTemplateResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCGetEmailTemplateResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCGetEmailTemplateResponse::GetClassData() const { return &_class_data_; }


void CMsgGCGetEmailTemplateResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCGetEmailTemplateResponse*>(&to_msg);
  auto& from = static_cast<const CMsgGCGetEmailTemplateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCGetEmailTemplateResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_template_(from._internal_template_());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.template_exists_ = from._impl_.template_exists_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.eresult_ = from._impl_.eresult_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCGetEmailTemplateResponse::CopyFrom(const CMsgGCGetEmailTemplateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCGetEmailTemplateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCGetEmailTemplateResponse::IsInitialized() const {
  return true;
}

void CMsgGCGetEmailTemplateResponse::InternalSwap(CMsgGCGetEmailTemplateResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.template__, lhs_arena,
                                       &other->_impl_.template__, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCGetEmailTemplateResponse, _impl_.eresult_)
      + sizeof(CMsgGCGetEmailTemplateResponse::_impl_.eresult_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCGetEmailTemplateResponse, _impl_.template_exists_)>(
          reinterpret_cast<char*>(&_impl_.template_exists_),
          reinterpret_cast<char*>(&other->_impl_.template_exists_));
}

::google::protobuf::Metadata CMsgGCGetEmailTemplateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[43]);
}
// ===================================================================

class CMsgAMGrantGuestPasses2::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgAMGrantGuestPasses2>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgAMGrantGuestPasses2, _impl_._has_bits_);
  static void set_has_steam_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_package_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_passes_to_grant(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_days_to_expiration(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_action(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

CMsgAMGrantGuestPasses2::CMsgAMGrantGuestPasses2(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgAMGrantGuestPasses2)
}
CMsgAMGrantGuestPasses2::CMsgAMGrantGuestPasses2(const CMsgAMGrantGuestPasses2& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgAMGrantGuestPasses2)
}
inline void CMsgAMGrantGuestPasses2::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.steam_id_){::uint64_t{0u}},
      decltype(_impl_.package_id_){0u},
      decltype(_impl_.passes_to_grant_){0},
      decltype(_impl_.days_to_expiration_){0},
      decltype(_impl_.action_){0},
  };
}
CMsgAMGrantGuestPasses2::~CMsgAMGrantGuestPasses2() {
  // @@protoc_insertion_point(destructor:CMsgAMGrantGuestPasses2)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgAMGrantGuestPasses2::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CMsgAMGrantGuestPasses2::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgAMGrantGuestPasses2::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMGrantGuestPasses2)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.steam_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.action_) -
        reinterpret_cast<char*>(&_impl_.steam_id_)) + sizeof(_impl_.action_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgAMGrantGuestPasses2::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> CMsgAMGrantGuestPasses2::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgAMGrantGuestPasses2, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgAMGrantGuestPasses2_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional fixed64 steam_id = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgAMGrantGuestPasses2, _impl_.steam_id_)}},
    // optional uint32 package_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgAMGrantGuestPasses2, _impl_.package_id_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgAMGrantGuestPasses2, _impl_.package_id_)}},
    // optional int32 passes_to_grant = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgAMGrantGuestPasses2, _impl_.passes_to_grant_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgAMGrantGuestPasses2, _impl_.passes_to_grant_)}},
    // optional int32 days_to_expiration = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgAMGrantGuestPasses2, _impl_.days_to_expiration_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgAMGrantGuestPasses2, _impl_.days_to_expiration_)}},
    // optional int32 action = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgAMGrantGuestPasses2, _impl_.action_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgAMGrantGuestPasses2, _impl_.action_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed64 steam_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgAMGrantGuestPasses2, _impl_.steam_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional uint32 package_id = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgAMGrantGuestPasses2, _impl_.package_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 passes_to_grant = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgAMGrantGuestPasses2, _impl_.passes_to_grant_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 days_to_expiration = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgAMGrantGuestPasses2, _impl_.days_to_expiration_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 action = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgAMGrantGuestPasses2, _impl_.action_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgAMGrantGuestPasses2::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMGrantGuestPasses2)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        1, this->_internal_steam_id(), target);
  }

  // optional uint32 package_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_package_id(), target);
  }

  // optional int32 passes_to_grant = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_passes_to_grant(), target);
  }

  // optional int32 days_to_expiration = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_days_to_expiration(), target);
  }

  // optional int32 action = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMGrantGuestPasses2)
  return target;
}

::size_t CMsgAMGrantGuestPasses2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMGrantGuestPasses2)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional fixed64 steam_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 9;
    }

    // optional uint32 package_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_package_id());
    }

    // optional int32 passes_to_grant = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_passes_to_grant());
    }

    // optional int32 days_to_expiration = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_days_to_expiration());
    }

    // optional int32 action = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_action());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgAMGrantGuestPasses2::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgAMGrantGuestPasses2::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgAMGrantGuestPasses2::GetClassData() const { return &_class_data_; }


void CMsgAMGrantGuestPasses2::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgAMGrantGuestPasses2*>(&to_msg);
  auto& from = static_cast<const CMsgAMGrantGuestPasses2&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMGrantGuestPasses2)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.steam_id_ = from._impl_.steam_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.package_id_ = from._impl_.package_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.passes_to_grant_ = from._impl_.passes_to_grant_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.days_to_expiration_ = from._impl_.days_to_expiration_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.action_ = from._impl_.action_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgAMGrantGuestPasses2::CopyFrom(const CMsgAMGrantGuestPasses2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMGrantGuestPasses2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgAMGrantGuestPasses2::IsInitialized() const {
  return true;
}

void CMsgAMGrantGuestPasses2::InternalSwap(CMsgAMGrantGuestPasses2* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgAMGrantGuestPasses2, _impl_.action_)
      + sizeof(CMsgAMGrantGuestPasses2::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(CMsgAMGrantGuestPasses2, _impl_.steam_id_)>(
          reinterpret_cast<char*>(&_impl_.steam_id_),
          reinterpret_cast<char*>(&other->_impl_.steam_id_));
}

::google::protobuf::Metadata CMsgAMGrantGuestPasses2::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[44]);
}
// ===================================================================

class CMsgAMGrantGuestPasses2Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgAMGrantGuestPasses2Response>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgAMGrantGuestPasses2Response, _impl_._has_bits_);
  static void set_has_eresult(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_passes_granted(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgAMGrantGuestPasses2Response::CMsgAMGrantGuestPasses2Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgAMGrantGuestPasses2Response)
}
CMsgAMGrantGuestPasses2Response::CMsgAMGrantGuestPasses2Response(const CMsgAMGrantGuestPasses2Response& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgAMGrantGuestPasses2Response)
}
inline void CMsgAMGrantGuestPasses2Response::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.passes_granted_){0},
      decltype(_impl_.eresult_){2},
  };
}
CMsgAMGrantGuestPasses2Response::~CMsgAMGrantGuestPasses2Response() {
  // @@protoc_insertion_point(destructor:CMsgAMGrantGuestPasses2Response)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgAMGrantGuestPasses2Response::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CMsgAMGrantGuestPasses2Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgAMGrantGuestPasses2Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMGrantGuestPasses2Response)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    _impl_.passes_granted_ = 0;
    _impl_.eresult_ = 2;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgAMGrantGuestPasses2Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> CMsgAMGrantGuestPasses2Response::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgAMGrantGuestPasses2Response, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgAMGrantGuestPasses2Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 passes_granted = 2 [default = 0];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgAMGrantGuestPasses2Response, _impl_.passes_granted_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgAMGrantGuestPasses2Response, _impl_.passes_granted_)}},
    // optional int32 eresult = 1 [default = 2];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgAMGrantGuestPasses2Response, _impl_.eresult_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgAMGrantGuestPasses2Response, _impl_.eresult_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 eresult = 1 [default = 2];
    {PROTOBUF_FIELD_OFFSET(CMsgAMGrantGuestPasses2Response, _impl_.eresult_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 passes_granted = 2 [default = 0];
    {PROTOBUF_FIELD_OFFSET(CMsgAMGrantGuestPasses2Response, _impl_.passes_granted_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgAMGrantGuestPasses2Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMGrantGuestPasses2Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_eresult(), target);
  }

  // optional int32 passes_granted = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_passes_granted(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMGrantGuestPasses2Response)
  return target;
}

::size_t CMsgAMGrantGuestPasses2Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMGrantGuestPasses2Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 passes_granted = 2 [default = 0];
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_passes_granted());
    }

    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_eresult());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgAMGrantGuestPasses2Response::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgAMGrantGuestPasses2Response::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgAMGrantGuestPasses2Response::GetClassData() const { return &_class_data_; }


void CMsgAMGrantGuestPasses2Response::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgAMGrantGuestPasses2Response*>(&to_msg);
  auto& from = static_cast<const CMsgAMGrantGuestPasses2Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMGrantGuestPasses2Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.passes_granted_ = from._impl_.passes_granted_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.eresult_ = from._impl_.eresult_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgAMGrantGuestPasses2Response::CopyFrom(const CMsgAMGrantGuestPasses2Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMGrantGuestPasses2Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgAMGrantGuestPasses2Response::IsInitialized() const {
  return true;
}

void CMsgAMGrantGuestPasses2Response::InternalSwap(CMsgAMGrantGuestPasses2Response* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgAMGrantGuestPasses2Response, _impl_.eresult_)
      + sizeof(CMsgAMGrantGuestPasses2Response::_impl_.eresult_)
      - PROTOBUF_FIELD_OFFSET(CMsgAMGrantGuestPasses2Response, _impl_.passes_granted_)>(
          reinterpret_cast<char*>(&_impl_.passes_granted_),
          reinterpret_cast<char*>(&other->_impl_.passes_granted_));
}

::google::protobuf::Metadata CMsgAMGrantGuestPasses2Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[45]);
}
// ===================================================================

class CGCSystemMsg_GetAccountDetails::_Internal {
 public:
  using HasBits = decltype(std::declval<CGCSystemMsg_GetAccountDetails>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails, _impl_._has_bits_);
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_appid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CGCSystemMsg_GetAccountDetails::CGCSystemMsg_GetAccountDetails(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CGCSystemMsg_GetAccountDetails)
}
CGCSystemMsg_GetAccountDetails::CGCSystemMsg_GetAccountDetails(const CGCSystemMsg_GetAccountDetails& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CGCSystemMsg_GetAccountDetails)
}
inline void CGCSystemMsg_GetAccountDetails::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.steamid_){::uint64_t{0u}},
      decltype(_impl_.appid_){0u},
  };
}
CGCSystemMsg_GetAccountDetails::~CGCSystemMsg_GetAccountDetails() {
  // @@protoc_insertion_point(destructor:CGCSystemMsg_GetAccountDetails)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CGCSystemMsg_GetAccountDetails::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CGCSystemMsg_GetAccountDetails::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CGCSystemMsg_GetAccountDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCSystemMsg_GetAccountDetails)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.steamid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.appid_) -
        reinterpret_cast<char*>(&_impl_.steamid_)) + sizeof(_impl_.appid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CGCSystemMsg_GetAccountDetails::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> CGCSystemMsg_GetAccountDetails::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CGCSystemMsg_GetAccountDetails_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 appid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGCSystemMsg_GetAccountDetails, _impl_.appid_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails, _impl_.appid_)}},
    // optional fixed64 steamid = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails, _impl_.steamid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed64 steamid = 1;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails, _impl_.steamid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional uint32 appid = 2;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails, _impl_.appid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CGCSystemMsg_GetAccountDetails::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCSystemMsg_GetAccountDetails)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        1, this->_internal_steamid(), target);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_appid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCSystemMsg_GetAccountDetails)
  return target;
}

::size_t CGCSystemMsg_GetAccountDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCSystemMsg_GetAccountDetails)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional fixed64 steamid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 9;
    }

    // optional uint32 appid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_appid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CGCSystemMsg_GetAccountDetails::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CGCSystemMsg_GetAccountDetails::MergeImpl
};
const ::google::protobuf::Message::ClassData*CGCSystemMsg_GetAccountDetails::GetClassData() const { return &_class_data_; }


void CGCSystemMsg_GetAccountDetails::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CGCSystemMsg_GetAccountDetails*>(&to_msg);
  auto& from = static_cast<const CGCSystemMsg_GetAccountDetails&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CGCSystemMsg_GetAccountDetails)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.steamid_ = from._impl_.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.appid_ = from._impl_.appid_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CGCSystemMsg_GetAccountDetails::CopyFrom(const CGCSystemMsg_GetAccountDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCSystemMsg_GetAccountDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CGCSystemMsg_GetAccountDetails::IsInitialized() const {
  return true;
}

void CGCSystemMsg_GetAccountDetails::InternalSwap(CGCSystemMsg_GetAccountDetails* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails, _impl_.appid_)
      + sizeof(CGCSystemMsg_GetAccountDetails::_impl_.appid_)
      - PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails, _impl_.steamid_)>(
          reinterpret_cast<char*>(&_impl_.steamid_),
          reinterpret_cast<char*>(&other->_impl_.steamid_));
}

::google::protobuf::Metadata CGCSystemMsg_GetAccountDetails::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[46]);
}
// ===================================================================

class CGCSystemMsg_GetAccountDetails_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CGCSystemMsg_GetAccountDetails_Response>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_._has_bits_);
  static void set_has_eresult_deprecated(HasBits* has_bits) {
    (*has_bits)[1] |= 8u;
  }
  static void set_has_account_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_persona_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_is_profile_public(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_is_inventory_public(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_is_vac_banned(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_is_cyber_cafe(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_is_school_account(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_is_limited(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_is_subscribed(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_package(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_is_free_trial_account(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_free_trial_expiration(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_is_low_violence(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_is_account_locked_down(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_is_community_banned(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_is_trade_banned(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_trade_ban_expiration(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_accountid(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_suspension_end_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_currency(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_steam_level(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_friend_count(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_account_creation_time(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_is_steamguard_enabled(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static void set_has_is_phone_verified(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static void set_has_is_two_factor_auth_enabled(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static void set_has_two_factor_enabled_time(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static void set_has_phone_verification_time(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static void set_has_phone_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static void set_has_is_phone_identifying(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static void set_has_rt_identity_linked(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static void set_has_rt_birth_date(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static void set_has_txn_country_code(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_has_accepted_china_ssa(HasBits* has_bits) {
    (*has_bits)[1] |= 2u;
  }
  static void set_has_is_banned_steam_china(HasBits* has_bits) {
    (*has_bits)[1] |= 4u;
  }
};

CGCSystemMsg_GetAccountDetails_Response::CGCSystemMsg_GetAccountDetails_Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CGCSystemMsg_GetAccountDetails_Response)
}
CGCSystemMsg_GetAccountDetails_Response::CGCSystemMsg_GetAccountDetails_Response(const CGCSystemMsg_GetAccountDetails_Response& from) : ::google::protobuf::Message() {
  CGCSystemMsg_GetAccountDetails_Response* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.account_name_){},
      decltype(_impl_.persona_name_){},
      decltype(_impl_.currency_){},
      decltype(_impl_.txn_country_code_){},
      decltype(_impl_.is_profile_public_){},
      decltype(_impl_.is_inventory_public_){},
      decltype(_impl_.is_vac_banned_){},
      decltype(_impl_.is_cyber_cafe_){},
      decltype(_impl_.is_school_account_){},
      decltype(_impl_.is_limited_){},
      decltype(_impl_.is_subscribed_){},
      decltype(_impl_.is_free_trial_account_){},
      decltype(_impl_.package_){},
      decltype(_impl_.free_trial_expiration_){},
      decltype(_impl_.is_low_violence_){},
      decltype(_impl_.is_account_locked_down_){},
      decltype(_impl_.is_community_banned_){},
      decltype(_impl_.is_trade_banned_){},
      decltype(_impl_.trade_ban_expiration_){},
      decltype(_impl_.accountid_){},
      decltype(_impl_.suspension_end_time_){},
      decltype(_impl_.steam_level_){},
      decltype(_impl_.friend_count_){},
      decltype(_impl_.account_creation_time_){},
      decltype(_impl_.is_steamguard_enabled_){},
      decltype(_impl_.is_phone_verified_){},
      decltype(_impl_.is_two_factor_auth_enabled_){},
      decltype(_impl_.is_phone_identifying_){},
      decltype(_impl_.two_factor_enabled_time_){},
      decltype(_impl_.phone_verification_time_){},
      decltype(_impl_.phone_id_){},
      decltype(_impl_.rt_identity_linked_){},
      decltype(_impl_.rt_birth_date_){},
      decltype(_impl_.has_accepted_china_ssa_){},
      decltype(_impl_.is_banned_steam_china_){},
      decltype(_impl_.eresult_deprecated_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.account_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.account_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.account_name_.Set(from._internal_account_name(), _this->GetArenaForAllocation());
  }
  _impl_.persona_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.persona_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.persona_name_.Set(from._internal_persona_name(), _this->GetArenaForAllocation());
  }
  _impl_.currency_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.currency_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.currency_.Set(from._internal_currency(), _this->GetArenaForAllocation());
  }
  _impl_.txn_country_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.txn_country_code_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000008u) != 0) {
    _this->_impl_.txn_country_code_.Set(from._internal_txn_country_code(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.is_profile_public_, &from._impl_.is_profile_public_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.eresult_deprecated_) -
    reinterpret_cast<char*>(&_impl_.is_profile_public_)) + sizeof(_impl_.eresult_deprecated_));

  // @@protoc_insertion_point(copy_constructor:CGCSystemMsg_GetAccountDetails_Response)
}
inline void CGCSystemMsg_GetAccountDetails_Response::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.account_name_){},
      decltype(_impl_.persona_name_){},
      decltype(_impl_.currency_){},
      decltype(_impl_.txn_country_code_){},
      decltype(_impl_.is_profile_public_){false},
      decltype(_impl_.is_inventory_public_){false},
      decltype(_impl_.is_vac_banned_){false},
      decltype(_impl_.is_cyber_cafe_){false},
      decltype(_impl_.is_school_account_){false},
      decltype(_impl_.is_limited_){false},
      decltype(_impl_.is_subscribed_){false},
      decltype(_impl_.is_free_trial_account_){false},
      decltype(_impl_.package_){0u},
      decltype(_impl_.free_trial_expiration_){0u},
      decltype(_impl_.is_low_violence_){false},
      decltype(_impl_.is_account_locked_down_){false},
      decltype(_impl_.is_community_banned_){false},
      decltype(_impl_.is_trade_banned_){false},
      decltype(_impl_.trade_ban_expiration_){0u},
      decltype(_impl_.accountid_){0u},
      decltype(_impl_.suspension_end_time_){0u},
      decltype(_impl_.steam_level_){0u},
      decltype(_impl_.friend_count_){0u},
      decltype(_impl_.account_creation_time_){0u},
      decltype(_impl_.is_steamguard_enabled_){false},
      decltype(_impl_.is_phone_verified_){false},
      decltype(_impl_.is_two_factor_auth_enabled_){false},
      decltype(_impl_.is_phone_identifying_){false},
      decltype(_impl_.two_factor_enabled_time_){0u},
      decltype(_impl_.phone_verification_time_){0u},
      decltype(_impl_.phone_id_){::uint64_t{0u}},
      decltype(_impl_.rt_identity_linked_){0u},
      decltype(_impl_.rt_birth_date_){0u},
      decltype(_impl_.has_accepted_china_ssa_){false},
      decltype(_impl_.is_banned_steam_china_){false},
      decltype(_impl_.eresult_deprecated_){2u},
  };
  _impl_.account_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.account_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.persona_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.persona_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.currency_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.currency_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.txn_country_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.txn_country_code_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CGCSystemMsg_GetAccountDetails_Response::~CGCSystemMsg_GetAccountDetails_Response() {
  // @@protoc_insertion_point(destructor:CGCSystemMsg_GetAccountDetails_Response)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CGCSystemMsg_GetAccountDetails_Response::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.account_name_.Destroy();
  _impl_.persona_name_.Destroy();
  _impl_.currency_.Destroy();
  _impl_.txn_country_code_.Destroy();
}
void CGCSystemMsg_GetAccountDetails_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CGCSystemMsg_GetAccountDetails_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCSystemMsg_GetAccountDetails_Response)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.account_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.persona_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.currency_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.txn_country_code_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000f0u) {
    ::memset(&_impl_.is_profile_public_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_cyber_cafe_) -
        reinterpret_cast<char*>(&_impl_.is_profile_public_)) + sizeof(_impl_.is_cyber_cafe_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.is_school_account_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_account_locked_down_) -
        reinterpret_cast<char*>(&_impl_.is_school_account_)) + sizeof(_impl_.is_account_locked_down_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.is_community_banned_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.account_creation_time_) -
        reinterpret_cast<char*>(&_impl_.is_community_banned_)) + sizeof(_impl_.account_creation_time_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&_impl_.is_steamguard_enabled_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.rt_identity_linked_) -
        reinterpret_cast<char*>(&_impl_.is_steamguard_enabled_)) + sizeof(_impl_.rt_identity_linked_));
  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.rt_birth_date_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_banned_steam_china_) -
        reinterpret_cast<char*>(&_impl_.rt_birth_date_)) + sizeof(_impl_.is_banned_steam_china_));
    _impl_.eresult_deprecated_ = 2u;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CGCSystemMsg_GetAccountDetails_Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 36, 0, 128, 7> CGCSystemMsg_GetAccountDetails_Response::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_._has_bits_),
    0, // no _extensions_
    39, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    2181038112,  // skipmap
    offsetof(decltype(_table_), field_entries),
    36,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CGCSystemMsg_GetAccountDetails_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string account_name = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.account_name_)}},
    // optional string persona_name = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.persona_name_)}},
    // optional bool is_profile_public = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_profile_public_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_profile_public_)}},
    // optional bool is_inventory_public = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_inventory_public_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_inventory_public_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool is_vac_banned = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_vac_banned_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_vac_banned_)}},
    // optional bool is_cyber_cafe = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_cyber_cafe_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_cyber_cafe_)}},
    // optional bool is_school_account = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_school_account_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_school_account_)}},
    // optional bool is_limited = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_limited_), 9>(),
     {80, 9, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_limited_)}},
    // optional bool is_subscribed = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_subscribed_), 10>(),
     {88, 10, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_subscribed_)}},
    // optional uint32 package = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGCSystemMsg_GetAccountDetails_Response, _impl_.package_), 12>(),
     {96, 12, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.package_)}},
    // optional bool is_free_trial_account = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_free_trial_account_), 11>(),
     {104, 11, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_free_trial_account_)}},
    // optional uint32 free_trial_expiration = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGCSystemMsg_GetAccountDetails_Response, _impl_.free_trial_expiration_), 13>(),
     {112, 13, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.free_trial_expiration_)}},
    // optional bool is_low_violence = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_low_violence_), 14>(),
     {120, 14, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_low_violence_)}},
    // optional bool is_account_locked_down = 16;
    {::_pbi::TcParser::FastV8S2,
     {384, 15, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_account_locked_down_)}},
    // optional bool is_community_banned = 17;
    {::_pbi::TcParser::FastV8S2,
     {392, 16, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_community_banned_)}},
    // optional bool is_trade_banned = 18;
    {::_pbi::TcParser::FastV8S2,
     {400, 17, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_trade_banned_)}},
    // optional uint32 trade_ban_expiration = 19;
    {::_pbi::TcParser::FastV32S2,
     {408, 18, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.trade_ban_expiration_)}},
    // optional uint32 accountid = 20;
    {::_pbi::TcParser::FastV32S2,
     {416, 19, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.accountid_)}},
    // optional uint32 suspension_end_time = 21;
    {::_pbi::TcParser::FastV32S2,
     {424, 20, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.suspension_end_time_)}},
    // optional string currency = 22;
    {::_pbi::TcParser::FastSS2,
     {434, 2, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.currency_)}},
    // optional uint32 steam_level = 23;
    {::_pbi::TcParser::FastV32S2,
     {440, 21, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.steam_level_)}},
    // optional uint32 friend_count = 24;
    {::_pbi::TcParser::FastV32S2,
     {448, 22, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.friend_count_)}},
    // optional uint32 account_creation_time = 25;
    {::_pbi::TcParser::FastV32S2,
     {456, 23, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.account_creation_time_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool is_steamguard_enabled = 27;
    {::_pbi::TcParser::FastV8S2,
     {472, 24, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_steamguard_enabled_)}},
    // optional bool is_phone_verified = 28;
    {::_pbi::TcParser::FastV8S2,
     {480, 25, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_phone_verified_)}},
    // optional bool is_two_factor_auth_enabled = 29;
    {::_pbi::TcParser::FastV8S2,
     {488, 26, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_two_factor_auth_enabled_)}},
    // optional uint32 two_factor_enabled_time = 30;
    {::_pbi::TcParser::FastV32S2,
     {496, 28, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.two_factor_enabled_time_)}},
    // optional uint32 phone_verification_time = 31;
    {::_pbi::TcParser::FastV32S2,
     {504, 29, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.phone_verification_time_)}},
  }}, {{
    33, 0, 1,
    65408, 29,
    65535, 65535
  }}, {{
    // optional uint32 eresult_deprecated = 1 [default = 2];
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.eresult_deprecated_), _Internal::kHasBitsOffset + 35, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string account_name = 2;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.account_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string persona_name = 3;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.persona_name_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool is_profile_public = 4;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_profile_public_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool is_inventory_public = 5;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_inventory_public_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool is_vac_banned = 7;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_vac_banned_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool is_cyber_cafe = 8;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_cyber_cafe_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool is_school_account = 9;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_school_account_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool is_limited = 10;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_limited_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool is_subscribed = 11;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_subscribed_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint32 package = 12;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.package_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bool is_free_trial_account = 13;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_free_trial_account_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint32 free_trial_expiration = 14;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.free_trial_expiration_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bool is_low_violence = 15;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_low_violence_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool is_account_locked_down = 16;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_account_locked_down_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool is_community_banned = 17;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_community_banned_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool is_trade_banned = 18;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_trade_banned_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint32 trade_ban_expiration = 19;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.trade_ban_expiration_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 accountid = 20;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.accountid_), _Internal::kHasBitsOffset + 19, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 suspension_end_time = 21;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.suspension_end_time_), _Internal::kHasBitsOffset + 20, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string currency = 22;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.currency_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 steam_level = 23;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.steam_level_), _Internal::kHasBitsOffset + 21, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 friend_count = 24;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.friend_count_), _Internal::kHasBitsOffset + 22, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 account_creation_time = 25;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.account_creation_time_), _Internal::kHasBitsOffset + 23, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bool is_steamguard_enabled = 27;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_steamguard_enabled_), _Internal::kHasBitsOffset + 24, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool is_phone_verified = 28;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_phone_verified_), _Internal::kHasBitsOffset + 25, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool is_two_factor_auth_enabled = 29;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_two_factor_auth_enabled_), _Internal::kHasBitsOffset + 26, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint32 two_factor_enabled_time = 30;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.two_factor_enabled_time_), _Internal::kHasBitsOffset + 28, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 phone_verification_time = 31;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.phone_verification_time_), _Internal::kHasBitsOffset + 29, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 phone_id = 33;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.phone_id_), _Internal::kHasBitsOffset + 30, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional bool is_phone_identifying = 34;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_phone_identifying_), _Internal::kHasBitsOffset + 27, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint32 rt_identity_linked = 35;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.rt_identity_linked_), _Internal::kHasBitsOffset + 31, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 rt_birth_date = 36;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.rt_birth_date_), _Internal::kHasBitsOffset + 32, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string txn_country_code = 37;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.txn_country_code_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool has_accepted_china_ssa = 38;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.has_accepted_china_ssa_), _Internal::kHasBitsOffset + 33, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool is_banned_steam_china = 39;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_banned_steam_china_), _Internal::kHasBitsOffset + 34, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\47\0\14\14\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\10\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0"
    "CGCSystemMsg_GetAccountDetails_Response"
    "account_name"
    "persona_name"
    "currency"
    "txn_country_code"
  }},
};

::uint8_t* CGCSystemMsg_GetAccountDetails_Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCSystemMsg_GetAccountDetails_Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[1];
  // optional uint32 eresult_deprecated = 1 [default = 2];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_eresult_deprecated(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string account_name = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_account_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CGCSystemMsg_GetAccountDetails_Response.account_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string persona_name = 3;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_persona_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CGCSystemMsg_GetAccountDetails_Response.persona_name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional bool is_profile_public = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_is_profile_public(), target);
  }

  // optional bool is_inventory_public = 5;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_is_inventory_public(), target);
  }

  // optional bool is_vac_banned = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        7, this->_internal_is_vac_banned(), target);
  }

  // optional bool is_cyber_cafe = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        8, this->_internal_is_cyber_cafe(), target);
  }

  // optional bool is_school_account = 9;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        9, this->_internal_is_school_account(), target);
  }

  // optional bool is_limited = 10;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        10, this->_internal_is_limited(), target);
  }

  // optional bool is_subscribed = 11;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        11, this->_internal_is_subscribed(), target);
  }

  // optional uint32 package = 12;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        12, this->_internal_package(), target);
  }

  // optional bool is_free_trial_account = 13;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        13, this->_internal_is_free_trial_account(), target);
  }

  // optional uint32 free_trial_expiration = 14;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        14, this->_internal_free_trial_expiration(), target);
  }

  // optional bool is_low_violence = 15;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        15, this->_internal_is_low_violence(), target);
  }

  // optional bool is_account_locked_down = 16;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        16, this->_internal_is_account_locked_down(), target);
  }

  // optional bool is_community_banned = 17;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        17, this->_internal_is_community_banned(), target);
  }

  // optional bool is_trade_banned = 18;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        18, this->_internal_is_trade_banned(), target);
  }

  // optional uint32 trade_ban_expiration = 19;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        19, this->_internal_trade_ban_expiration(), target);
  }

  // optional uint32 accountid = 20;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        20, this->_internal_accountid(), target);
  }

  // optional uint32 suspension_end_time = 21;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        21, this->_internal_suspension_end_time(), target);
  }

  // optional string currency = 22;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_currency();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CGCSystemMsg_GetAccountDetails_Response.currency");
    target = stream->WriteStringMaybeAliased(22, _s, target);
  }

  // optional uint32 steam_level = 23;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        23, this->_internal_steam_level(), target);
  }

  // optional uint32 friend_count = 24;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        24, this->_internal_friend_count(), target);
  }

  // optional uint32 account_creation_time = 25;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        25, this->_internal_account_creation_time(), target);
  }

  // optional bool is_steamguard_enabled = 27;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        27, this->_internal_is_steamguard_enabled(), target);
  }

  // optional bool is_phone_verified = 28;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        28, this->_internal_is_phone_verified(), target);
  }

  // optional bool is_two_factor_auth_enabled = 29;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        29, this->_internal_is_two_factor_auth_enabled(), target);
  }

  // optional uint32 two_factor_enabled_time = 30;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        30, this->_internal_two_factor_enabled_time(), target);
  }

  // optional uint32 phone_verification_time = 31;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        31, this->_internal_phone_verification_time(), target);
  }

  // optional uint64 phone_id = 33;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        33, this->_internal_phone_id(), target);
  }

  // optional bool is_phone_identifying = 34;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        34, this->_internal_is_phone_identifying(), target);
  }

  // optional uint32 rt_identity_linked = 35;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        35, this->_internal_rt_identity_linked(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional uint32 rt_birth_date = 36;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        36, this->_internal_rt_birth_date(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string txn_country_code = 37;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_txn_country_code();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CGCSystemMsg_GetAccountDetails_Response.txn_country_code");
    target = stream->WriteStringMaybeAliased(37, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool has_accepted_china_ssa = 38;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        38, this->_internal_has_accepted_china_ssa(), target);
  }

  // optional bool is_banned_steam_china = 39;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        39, this->_internal_is_banned_steam_china(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCSystemMsg_GetAccountDetails_Response)
  return target;
}

::size_t CGCSystemMsg_GetAccountDetails_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCSystemMsg_GetAccountDetails_Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string account_name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_account_name());
    }

    // optional string persona_name = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_persona_name());
    }

    // optional string currency = 22;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_currency());
    }

    // optional string txn_country_code = 37;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_txn_country_code());
    }

    // optional bool is_profile_public = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2;
    }

    // optional bool is_inventory_public = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2;
    }

    // optional bool is_vac_banned = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2;
    }

    // optional bool is_cyber_cafe = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional bool is_school_account = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2;
    }

    // optional bool is_limited = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2;
    }

    // optional bool is_subscribed = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2;
    }

    // optional bool is_free_trial_account = 13;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2;
    }

    // optional uint32 package = 12;
    if (cached_has_bits & 0x00001000u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_package());
    }

    // optional uint32 free_trial_expiration = 14;
    if (cached_has_bits & 0x00002000u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_free_trial_expiration());
    }

    // optional bool is_low_violence = 15;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2;
    }

    // optional bool is_account_locked_down = 16;
    if (cached_has_bits & 0x00008000u) {
      total_size += 3;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional bool is_community_banned = 17;
    if (cached_has_bits & 0x00010000u) {
      total_size += 3;
    }

    // optional bool is_trade_banned = 18;
    if (cached_has_bits & 0x00020000u) {
      total_size += 3;
    }

    // optional uint32 trade_ban_expiration = 19;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_trade_ban_expiration());
    }

    // optional uint32 accountid = 20;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_accountid());
    }

    // optional uint32 suspension_end_time = 21;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_suspension_end_time());
    }

    // optional uint32 steam_level = 23;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_steam_level());
    }

    // optional uint32 friend_count = 24;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_friend_count());
    }

    // optional uint32 account_creation_time = 25;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_account_creation_time());
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional bool is_steamguard_enabled = 27;
    if (cached_has_bits & 0x01000000u) {
      total_size += 3;
    }

    // optional bool is_phone_verified = 28;
    if (cached_has_bits & 0x02000000u) {
      total_size += 3;
    }

    // optional bool is_two_factor_auth_enabled = 29;
    if (cached_has_bits & 0x04000000u) {
      total_size += 3;
    }

    // optional bool is_phone_identifying = 34;
    if (cached_has_bits & 0x08000000u) {
      total_size += 3;
    }

    // optional uint32 two_factor_enabled_time = 30;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_two_factor_enabled_time());
    }

    // optional uint32 phone_verification_time = 31;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_phone_verification_time());
    }

    // optional uint64 phone_id = 33;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                      this->_internal_phone_id());
    }

    // optional uint32 rt_identity_linked = 35;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_rt_identity_linked());
    }

  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x0000000fu) {
    // optional uint32 rt_birth_date = 36;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_rt_birth_date());
    }

    // optional bool has_accepted_china_ssa = 38;
    if (cached_has_bits & 0x00000002u) {
      total_size += 3;
    }

    // optional bool is_banned_steam_china = 39;
    if (cached_has_bits & 0x00000004u) {
      total_size += 3;
    }

    // optional uint32 eresult_deprecated = 1 [default = 2];
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_eresult_deprecated());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CGCSystemMsg_GetAccountDetails_Response::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CGCSystemMsg_GetAccountDetails_Response::MergeImpl
};
const ::google::protobuf::Message::ClassData*CGCSystemMsg_GetAccountDetails_Response::GetClassData() const { return &_class_data_; }


void CGCSystemMsg_GetAccountDetails_Response::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CGCSystemMsg_GetAccountDetails_Response*>(&to_msg);
  auto& from = static_cast<const CGCSystemMsg_GetAccountDetails_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CGCSystemMsg_GetAccountDetails_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_account_name(from._internal_account_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_persona_name(from._internal_persona_name());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_currency(from._internal_currency());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_txn_country_code(from._internal_txn_country_code());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.is_profile_public_ = from._impl_.is_profile_public_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.is_inventory_public_ = from._impl_.is_inventory_public_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.is_vac_banned_ = from._impl_.is_vac_banned_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.is_cyber_cafe_ = from._impl_.is_cyber_cafe_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.is_school_account_ = from._impl_.is_school_account_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.is_limited_ = from._impl_.is_limited_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.is_subscribed_ = from._impl_.is_subscribed_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.is_free_trial_account_ = from._impl_.is_free_trial_account_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.package_ = from._impl_.package_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.free_trial_expiration_ = from._impl_.free_trial_expiration_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.is_low_violence_ = from._impl_.is_low_violence_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.is_account_locked_down_ = from._impl_.is_account_locked_down_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.is_community_banned_ = from._impl_.is_community_banned_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.is_trade_banned_ = from._impl_.is_trade_banned_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.trade_ban_expiration_ = from._impl_.trade_ban_expiration_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.accountid_ = from._impl_.accountid_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.suspension_end_time_ = from._impl_.suspension_end_time_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.steam_level_ = from._impl_.steam_level_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.friend_count_ = from._impl_.friend_count_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.account_creation_time_ = from._impl_.account_creation_time_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.is_steamguard_enabled_ = from._impl_.is_steamguard_enabled_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.is_phone_verified_ = from._impl_.is_phone_verified_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.is_two_factor_auth_enabled_ = from._impl_.is_two_factor_auth_enabled_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.is_phone_identifying_ = from._impl_.is_phone_identifying_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.two_factor_enabled_time_ = from._impl_.two_factor_enabled_time_;
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_impl_.phone_verification_time_ = from._impl_.phone_verification_time_;
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_impl_.phone_id_ = from._impl_.phone_id_;
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_impl_.rt_identity_linked_ = from._impl_.rt_identity_linked_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  cached_has_bits = from._impl_._has_bits_[1];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.rt_birth_date_ = from._impl_.rt_birth_date_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.has_accepted_china_ssa_ = from._impl_.has_accepted_china_ssa_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.is_banned_steam_china_ = from._impl_.is_banned_steam_china_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.eresult_deprecated_ = from._impl_.eresult_deprecated_;
    }
    _this->_impl_._has_bits_[1] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CGCSystemMsg_GetAccountDetails_Response::CopyFrom(const CGCSystemMsg_GetAccountDetails_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCSystemMsg_GetAccountDetails_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CGCSystemMsg_GetAccountDetails_Response::IsInitialized() const {
  return true;
}

void CGCSystemMsg_GetAccountDetails_Response::InternalSwap(CGCSystemMsg_GetAccountDetails_Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_._has_bits_[1], other->_impl_._has_bits_[1]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_name_, lhs_arena,
                                       &other->_impl_.account_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.persona_name_, lhs_arena,
                                       &other->_impl_.persona_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.currency_, lhs_arena,
                                       &other->_impl_.currency_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.txn_country_code_, lhs_arena,
                                       &other->_impl_.txn_country_code_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.eresult_deprecated_)
      + sizeof(CGCSystemMsg_GetAccountDetails_Response::_impl_.eresult_deprecated_)
      - PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetAccountDetails_Response, _impl_.is_profile_public_)>(
          reinterpret_cast<char*>(&_impl_.is_profile_public_),
          reinterpret_cast<char*>(&other->_impl_.is_profile_public_));
}

::google::protobuf::Metadata CGCSystemMsg_GetAccountDetails_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[47]);
}
// ===================================================================

class CMsgGCGetPersonaNames::_Internal {
 public:
};

CMsgGCGetPersonaNames::CMsgGCGetPersonaNames(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCGetPersonaNames)
}
CMsgGCGetPersonaNames::CMsgGCGetPersonaNames(const CMsgGCGetPersonaNames& from) : ::google::protobuf::Message() {
  CMsgGCGetPersonaNames* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.steamids_){from._impl_.steamids_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CMsgGCGetPersonaNames)
}
inline void CMsgGCGetPersonaNames::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.steamids_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
CMsgGCGetPersonaNames::~CMsgGCGetPersonaNames() {
  // @@protoc_insertion_point(destructor:CMsgGCGetPersonaNames)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCGetPersonaNames::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.steamids_.~RepeatedField();
}
void CMsgGCGetPersonaNames::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCGetPersonaNames::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCGetPersonaNames)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_steamids()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCGetPersonaNames::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CMsgGCGetPersonaNames::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgGCGetPersonaNames_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated fixed64 steamids = 1;
    {::_pbi::TcParser::FastF64R1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCGetPersonaNames, _impl_.steamids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated fixed64 steamids = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCGetPersonaNames, _impl_.steamids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFixed64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgGCGetPersonaNames::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCGetPersonaNames)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated fixed64 steamids = 1;
  for (int i = 0, n = this->_internal_steamids_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        1, this->_internal_steamids().Get(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCGetPersonaNames)
  return target;
}

::size_t CMsgGCGetPersonaNames::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCGetPersonaNames)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated fixed64 steamids = 1;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_steamids_size())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_steamids_size());
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCGetPersonaNames::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCGetPersonaNames::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCGetPersonaNames::GetClassData() const { return &_class_data_; }


void CMsgGCGetPersonaNames::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCGetPersonaNames*>(&to_msg);
  auto& from = static_cast<const CMsgGCGetPersonaNames&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCGetPersonaNames)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_steamids()->MergeFrom(from._internal_steamids());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCGetPersonaNames::CopyFrom(const CMsgGCGetPersonaNames& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCGetPersonaNames)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCGetPersonaNames::IsInitialized() const {
  return true;
}

void CMsgGCGetPersonaNames::InternalSwap(CMsgGCGetPersonaNames* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.steamids_.InternalSwap(&other->_impl_.steamids_);
}

::google::protobuf::Metadata CMsgGCGetPersonaNames::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[48]);
}
// ===================================================================

class CMsgGCGetPersonaNames_Response_PersonaName::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCGetPersonaNames_Response_PersonaName>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgGCGetPersonaNames_Response_PersonaName, _impl_._has_bits_);
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_persona_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgGCGetPersonaNames_Response_PersonaName::CMsgGCGetPersonaNames_Response_PersonaName(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCGetPersonaNames_Response.PersonaName)
}
CMsgGCGetPersonaNames_Response_PersonaName::CMsgGCGetPersonaNames_Response_PersonaName(const CMsgGCGetPersonaNames_Response_PersonaName& from) : ::google::protobuf::Message() {
  CMsgGCGetPersonaNames_Response_PersonaName* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.persona_name_){},
      decltype(_impl_.steamid_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.persona_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.persona_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.persona_name_.Set(from._internal_persona_name(), _this->GetArenaForAllocation());
  }
  _this->_impl_.steamid_ = from._impl_.steamid_;

  // @@protoc_insertion_point(copy_constructor:CMsgGCGetPersonaNames_Response.PersonaName)
}
inline void CMsgGCGetPersonaNames_Response_PersonaName::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.persona_name_){},
      decltype(_impl_.steamid_){::uint64_t{0u}},
  };
  _impl_.persona_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.persona_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CMsgGCGetPersonaNames_Response_PersonaName::~CMsgGCGetPersonaNames_Response_PersonaName() {
  // @@protoc_insertion_point(destructor:CMsgGCGetPersonaNames_Response.PersonaName)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCGetPersonaNames_Response_PersonaName::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.persona_name_.Destroy();
}
void CMsgGCGetPersonaNames_Response_PersonaName::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCGetPersonaNames_Response_PersonaName::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCGetPersonaNames_Response.PersonaName)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.persona_name_.ClearNonDefaultToEmpty();
  }
  _impl_.steamid_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCGetPersonaNames_Response_PersonaName::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 63, 2> CMsgGCGetPersonaNames_Response_PersonaName::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCGetPersonaNames_Response_PersonaName, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgGCGetPersonaNames_Response_PersonaName_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string persona_name = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCGetPersonaNames_Response_PersonaName, _impl_.persona_name_)}},
    // optional fixed64 steamid = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCGetPersonaNames_Response_PersonaName, _impl_.steamid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed64 steamid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCGetPersonaNames_Response_PersonaName, _impl_.steamid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional string persona_name = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCGetPersonaNames_Response_PersonaName, _impl_.persona_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\52\0\14\0\0\0\0\0"
    "CMsgGCGetPersonaNames_Response.PersonaName"
    "persona_name"
  }},
};

::uint8_t* CMsgGCGetPersonaNames_Response_PersonaName::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCGetPersonaNames_Response.PersonaName)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        1, this->_internal_steamid(), target);
  }

  // optional string persona_name = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_persona_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCGetPersonaNames_Response.PersonaName.persona_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCGetPersonaNames_Response.PersonaName)
  return target;
}

::size_t CMsgGCGetPersonaNames_Response_PersonaName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCGetPersonaNames_Response.PersonaName)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string persona_name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_persona_name());
    }

    // optional fixed64 steamid = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCGetPersonaNames_Response_PersonaName::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCGetPersonaNames_Response_PersonaName::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCGetPersonaNames_Response_PersonaName::GetClassData() const { return &_class_data_; }


void CMsgGCGetPersonaNames_Response_PersonaName::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCGetPersonaNames_Response_PersonaName*>(&to_msg);
  auto& from = static_cast<const CMsgGCGetPersonaNames_Response_PersonaName&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCGetPersonaNames_Response.PersonaName)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_persona_name(from._internal_persona_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.steamid_ = from._impl_.steamid_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCGetPersonaNames_Response_PersonaName::CopyFrom(const CMsgGCGetPersonaNames_Response_PersonaName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCGetPersonaNames_Response.PersonaName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCGetPersonaNames_Response_PersonaName::IsInitialized() const {
  return true;
}

void CMsgGCGetPersonaNames_Response_PersonaName::InternalSwap(CMsgGCGetPersonaNames_Response_PersonaName* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.persona_name_, lhs_arena,
                                       &other->_impl_.persona_name_, rhs_arena);
        swap(_impl_.steamid_, other->_impl_.steamid_);
}

::google::protobuf::Metadata CMsgGCGetPersonaNames_Response_PersonaName::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[49]);
}
// ===================================================================

class CMsgGCGetPersonaNames_Response::_Internal {
 public:
};

CMsgGCGetPersonaNames_Response::CMsgGCGetPersonaNames_Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCGetPersonaNames_Response)
}
CMsgGCGetPersonaNames_Response::CMsgGCGetPersonaNames_Response(const CMsgGCGetPersonaNames_Response& from) : ::google::protobuf::Message() {
  CMsgGCGetPersonaNames_Response* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.succeeded_lookups_){from._impl_.succeeded_lookups_},
      decltype(_impl_.failed_lookup_steamids_){from._impl_.failed_lookup_steamids_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CMsgGCGetPersonaNames_Response)
}
inline void CMsgGCGetPersonaNames_Response::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.succeeded_lookups_){arena},
      decltype(_impl_.failed_lookup_steamids_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
CMsgGCGetPersonaNames_Response::~CMsgGCGetPersonaNames_Response() {
  // @@protoc_insertion_point(destructor:CMsgGCGetPersonaNames_Response)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCGetPersonaNames_Response::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.succeeded_lookups_.~RepeatedPtrField();
  _impl_.failed_lookup_steamids_.~RepeatedField();
}
void CMsgGCGetPersonaNames_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCGetPersonaNames_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCGetPersonaNames_Response)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_succeeded_lookups()->Clear();
  _internal_mutable_failed_lookup_steamids()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCGetPersonaNames_Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> CMsgGCGetPersonaNames_Response::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgGCGetPersonaNames_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated fixed64 failed_lookup_steamids = 2;
    {::_pbi::TcParser::FastF64R1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCGetPersonaNames_Response, _impl_.failed_lookup_steamids_)}},
    // repeated .CMsgGCGetPersonaNames_Response.PersonaName succeeded_lookups = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCGetPersonaNames_Response, _impl_.succeeded_lookups_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .CMsgGCGetPersonaNames_Response.PersonaName succeeded_lookups = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCGetPersonaNames_Response, _impl_.succeeded_lookups_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated fixed64 failed_lookup_steamids = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCGetPersonaNames_Response, _impl_.failed_lookup_steamids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFixed64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgGCGetPersonaNames_Response_PersonaName>()},
  }}, {{
  }},
};

::uint8_t* CMsgGCGetPersonaNames_Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCGetPersonaNames_Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .CMsgGCGetPersonaNames_Response.PersonaName succeeded_lookups = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_succeeded_lookups_size()); i < n; i++) {
    const auto& repfield = this->_internal_succeeded_lookups().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated fixed64 failed_lookup_steamids = 2;
  for (int i = 0, n = this->_internal_failed_lookup_steamids_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        2, this->_internal_failed_lookup_steamids().Get(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCGetPersonaNames_Response)
  return target;
}

::size_t CMsgGCGetPersonaNames_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCGetPersonaNames_Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgGCGetPersonaNames_Response.PersonaName succeeded_lookups = 1;
  total_size += 1UL * this->_internal_succeeded_lookups_size();
  for (const auto& msg : this->_internal_succeeded_lookups()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated fixed64 failed_lookup_steamids = 2;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_failed_lookup_steamids_size())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_failed_lookup_steamids_size());
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCGetPersonaNames_Response::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCGetPersonaNames_Response::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCGetPersonaNames_Response::GetClassData() const { return &_class_data_; }


void CMsgGCGetPersonaNames_Response::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCGetPersonaNames_Response*>(&to_msg);
  auto& from = static_cast<const CMsgGCGetPersonaNames_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCGetPersonaNames_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_succeeded_lookups()->MergeFrom(from._internal_succeeded_lookups());
  _this->_internal_mutable_failed_lookup_steamids()->MergeFrom(from._internal_failed_lookup_steamids());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCGetPersonaNames_Response::CopyFrom(const CMsgGCGetPersonaNames_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCGetPersonaNames_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCGetPersonaNames_Response::IsInitialized() const {
  return true;
}

void CMsgGCGetPersonaNames_Response::InternalSwap(CMsgGCGetPersonaNames_Response* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.succeeded_lookups_.InternalSwap(&other->_impl_.succeeded_lookups_);
  _impl_.failed_lookup_steamids_.InternalSwap(&other->_impl_.failed_lookup_steamids_);
}

::google::protobuf::Metadata CMsgGCGetPersonaNames_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[50]);
}
// ===================================================================

class CMsgGCCheckFriendship::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCCheckFriendship>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgGCCheckFriendship, _impl_._has_bits_);
  static void set_has_steamid_left(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_steamid_right(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgGCCheckFriendship::CMsgGCCheckFriendship(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCheckFriendship)
}
CMsgGCCheckFriendship::CMsgGCCheckFriendship(const CMsgGCCheckFriendship& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgGCCheckFriendship)
}
inline void CMsgGCCheckFriendship::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.steamid_left_){::uint64_t{0u}},
      decltype(_impl_.steamid_right_){::uint64_t{0u}},
  };
}
CMsgGCCheckFriendship::~CMsgGCCheckFriendship() {
  // @@protoc_insertion_point(destructor:CMsgGCCheckFriendship)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCCheckFriendship::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CMsgGCCheckFriendship::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCCheckFriendship::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCheckFriendship)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.steamid_left_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.steamid_right_) -
        reinterpret_cast<char*>(&_impl_.steamid_left_)) + sizeof(_impl_.steamid_right_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCCheckFriendship::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> CMsgGCCheckFriendship::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCheckFriendship, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgGCCheckFriendship_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional fixed64 steamid_right = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCheckFriendship, _impl_.steamid_right_)}},
    // optional fixed64 steamid_left = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCheckFriendship, _impl_.steamid_left_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed64 steamid_left = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCheckFriendship, _impl_.steamid_left_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional fixed64 steamid_right = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCheckFriendship, _impl_.steamid_right_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgGCCheckFriendship::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCheckFriendship)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 steamid_left = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        1, this->_internal_steamid_left(), target);
  }

  // optional fixed64 steamid_right = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        2, this->_internal_steamid_right(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCheckFriendship)
  return target;
}

::size_t CMsgGCCheckFriendship::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCCheckFriendship)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional fixed64 steamid_left = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 9;
    }

    // optional fixed64 steamid_right = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCCheckFriendship::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCCheckFriendship::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCCheckFriendship::GetClassData() const { return &_class_data_; }


void CMsgGCCheckFriendship::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCCheckFriendship*>(&to_msg);
  auto& from = static_cast<const CMsgGCCheckFriendship&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCheckFriendship)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.steamid_left_ = from._impl_.steamid_left_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.steamid_right_ = from._impl_.steamid_right_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCheckFriendship::CopyFrom(const CMsgGCCheckFriendship& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCheckFriendship)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCCheckFriendship::IsInitialized() const {
  return true;
}

void CMsgGCCheckFriendship::InternalSwap(CMsgGCCheckFriendship* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCheckFriendship, _impl_.steamid_right_)
      + sizeof(CMsgGCCheckFriendship::_impl_.steamid_right_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCheckFriendship, _impl_.steamid_left_)>(
          reinterpret_cast<char*>(&_impl_.steamid_left_),
          reinterpret_cast<char*>(&other->_impl_.steamid_left_));
}

::google::protobuf::Metadata CMsgGCCheckFriendship::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[51]);
}
// ===================================================================

class CMsgGCCheckFriendship_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCCheckFriendship_Response>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgGCCheckFriendship_Response, _impl_._has_bits_);
  static void set_has_success(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_found_friendship(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgGCCheckFriendship_Response::CMsgGCCheckFriendship_Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCCheckFriendship_Response)
}
CMsgGCCheckFriendship_Response::CMsgGCCheckFriendship_Response(const CMsgGCCheckFriendship_Response& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgGCCheckFriendship_Response)
}
inline void CMsgGCCheckFriendship_Response::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.success_){false},
      decltype(_impl_.found_friendship_){false},
  };
}
CMsgGCCheckFriendship_Response::~CMsgGCCheckFriendship_Response() {
  // @@protoc_insertion_point(destructor:CMsgGCCheckFriendship_Response)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCCheckFriendship_Response::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CMsgGCCheckFriendship_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCCheckFriendship_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCheckFriendship_Response)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.success_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.found_friendship_) -
      reinterpret_cast<char*>(&_impl_.success_)) + sizeof(_impl_.found_friendship_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCCheckFriendship_Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> CMsgGCCheckFriendship_Response::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCCheckFriendship_Response, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgGCCheckFriendship_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bool found_friendship = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCCheckFriendship_Response, _impl_.found_friendship_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCheckFriendship_Response, _impl_.found_friendship_)}},
    // optional bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCCheckFriendship_Response, _impl_.success_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCCheckFriendship_Response, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool success = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCheckFriendship_Response, _impl_.success_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool found_friendship = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCCheckFriendship_Response, _impl_.found_friendship_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgGCCheckFriendship_Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCheckFriendship_Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_success(), target);
  }

  // optional bool found_friendship = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_found_friendship(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCheckFriendship_Response)
  return target;
}

::size_t CMsgGCCheckFriendship_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCCheckFriendship_Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bool success = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2;
    }

    // optional bool found_friendship = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCCheckFriendship_Response::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCCheckFriendship_Response::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCCheckFriendship_Response::GetClassData() const { return &_class_data_; }


void CMsgGCCheckFriendship_Response::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCCheckFriendship_Response*>(&to_msg);
  auto& from = static_cast<const CMsgGCCheckFriendship_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCheckFriendship_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.success_ = from._impl_.success_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.found_friendship_ = from._impl_.found_friendship_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCCheckFriendship_Response::CopyFrom(const CMsgGCCheckFriendship_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCheckFriendship_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCCheckFriendship_Response::IsInitialized() const {
  return true;
}

void CMsgGCCheckFriendship_Response::InternalSwap(CMsgGCCheckFriendship_Response* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCCheckFriendship_Response, _impl_.found_friendship_)
      + sizeof(CMsgGCCheckFriendship_Response::_impl_.found_friendship_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCCheckFriendship_Response, _impl_.success_)>(
          reinterpret_cast<char*>(&_impl_.success_),
          reinterpret_cast<char*>(&other->_impl_.success_));
}

::google::protobuf::Metadata CMsgGCCheckFriendship_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[52]);
}
// ===================================================================

class CMsgGCMsgMasterSetDirectory_SubGC::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCMsgMasterSetDirectory_SubGC>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory_SubGC, _impl_._has_bits_);
  static void set_has_dir_index(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_box(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_command_line(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_gc_binary(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CMsgGCMsgMasterSetDirectory_SubGC::CMsgGCMsgMasterSetDirectory_SubGC(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCMsgMasterSetDirectory.SubGC)
}
CMsgGCMsgMasterSetDirectory_SubGC::CMsgGCMsgMasterSetDirectory_SubGC(const CMsgGCMsgMasterSetDirectory_SubGC& from) : ::google::protobuf::Message() {
  CMsgGCMsgMasterSetDirectory_SubGC* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.box_){},
      decltype(_impl_.command_line_){},
      decltype(_impl_.gc_binary_){},
      decltype(_impl_.dir_index_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.box_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.box_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.box_.Set(from._internal_box(), _this->GetArenaForAllocation());
  }
  _impl_.command_line_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.command_line_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.command_line_.Set(from._internal_command_line(), _this->GetArenaForAllocation());
  }
  _impl_.gc_binary_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.gc_binary_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000008u) != 0) {
    _this->_impl_.gc_binary_.Set(from._internal_gc_binary(), _this->GetArenaForAllocation());
  }
  _this->_impl_.dir_index_ = from._impl_.dir_index_;

  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgMasterSetDirectory.SubGC)
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.box_){},
      decltype(_impl_.command_line_){},
      decltype(_impl_.gc_binary_){},
      decltype(_impl_.dir_index_){0u},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.box_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.box_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.command_line_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.command_line_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.gc_binary_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.gc_binary_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CMsgGCMsgMasterSetDirectory_SubGC::~CMsgGCMsgMasterSetDirectory_SubGC() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgMasterSetDirectory.SubGC)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.box_.Destroy();
  _impl_.command_line_.Destroy();
  _impl_.gc_binary_.Destroy();
}
void CMsgGCMsgMasterSetDirectory_SubGC::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCMsgMasterSetDirectory_SubGC::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCMsgMasterSetDirectory.SubGC)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.box_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.command_line_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.gc_binary_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.dir_index_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCMsgMasterSetDirectory_SubGC::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 70, 2> CMsgGCMsgMasterSetDirectory_SubGC::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory_SubGC, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgGCMsgMasterSetDirectory_SubGC_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 dir_index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCMsgMasterSetDirectory_SubGC, _impl_.dir_index_), 4>(),
     {8, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory_SubGC, _impl_.dir_index_)}},
    // optional string name = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory_SubGC, _impl_.name_)}},
    // optional string box = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory_SubGC, _impl_.box_)}},
    // optional string command_line = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory_SubGC, _impl_.command_line_)}},
    // optional string gc_binary = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory_SubGC, _impl_.gc_binary_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 dir_index = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory_SubGC, _impl_.dir_index_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string name = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory_SubGC, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string box = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory_SubGC, _impl_.box_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string command_line = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory_SubGC, _impl_.command_line_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string gc_binary = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory_SubGC, _impl_.gc_binary_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\0\4\3\14\11\0\0"
    "CMsgGCMsgMasterSetDirectory.SubGC"
    "name"
    "box"
    "command_line"
    "gc_binary"
  }},
};

::uint8_t* CMsgGCMsgMasterSetDirectory_SubGC::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgMasterSetDirectory.SubGC)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 dir_index = 1;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_dir_index(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCMsgMasterSetDirectory.SubGC.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string box = 3;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_box();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCMsgMasterSetDirectory.SubGC.box");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string command_line = 4;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_command_line();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCMsgMasterSetDirectory.SubGC.command_line");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional string gc_binary = 5;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_gc_binary();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCMsgMasterSetDirectory.SubGC.gc_binary");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgMasterSetDirectory.SubGC)
  return target;
}

::size_t CMsgGCMsgMasterSetDirectory_SubGC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCMsgMasterSetDirectory.SubGC)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }

    // optional string box = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_box());
    }

    // optional string command_line = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_command_line());
    }

    // optional string gc_binary = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_gc_binary());
    }

    // optional uint32 dir_index = 1;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_dir_index());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCMsgMasterSetDirectory_SubGC::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCMsgMasterSetDirectory_SubGC::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCMsgMasterSetDirectory_SubGC::GetClassData() const { return &_class_data_; }


void CMsgGCMsgMasterSetDirectory_SubGC::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCMsgMasterSetDirectory_SubGC*>(&to_msg);
  auto& from = static_cast<const CMsgGCMsgMasterSetDirectory_SubGC&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCMsgMasterSetDirectory.SubGC)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_box(from._internal_box());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_command_line(from._internal_command_line());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_gc_binary(from._internal_gc_binary());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.dir_index_ = from._impl_.dir_index_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCMsgMasterSetDirectory_SubGC::CopyFrom(const CMsgGCMsgMasterSetDirectory_SubGC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCMsgMasterSetDirectory.SubGC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCMsgMasterSetDirectory_SubGC::IsInitialized() const {
  return true;
}

void CMsgGCMsgMasterSetDirectory_SubGC::InternalSwap(CMsgGCMsgMasterSetDirectory_SubGC* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.box_, lhs_arena,
                                       &other->_impl_.box_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.command_line_, lhs_arena,
                                       &other->_impl_.command_line_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.gc_binary_, lhs_arena,
                                       &other->_impl_.gc_binary_, rhs_arena);
        swap(_impl_.dir_index_, other->_impl_.dir_index_);
}

::google::protobuf::Metadata CMsgGCMsgMasterSetDirectory_SubGC::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[53]);
}
// ===================================================================

class CMsgGCMsgMasterSetDirectory::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCMsgMasterSetDirectory>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory, _impl_._has_bits_);
  static void set_has_master_dir_index(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgGCMsgMasterSetDirectory::CMsgGCMsgMasterSetDirectory(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCMsgMasterSetDirectory)
}
CMsgGCMsgMasterSetDirectory::CMsgGCMsgMasterSetDirectory(const CMsgGCMsgMasterSetDirectory& from) : ::google::protobuf::Message() {
  CMsgGCMsgMasterSetDirectory* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.dir_){from._impl_.dir_},
      decltype(_impl_.master_dir_index_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.master_dir_index_ = from._impl_.master_dir_index_;

  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgMasterSetDirectory)
}
inline void CMsgGCMsgMasterSetDirectory::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.dir_){arena},
      decltype(_impl_.master_dir_index_){0u},
  };
}
CMsgGCMsgMasterSetDirectory::~CMsgGCMsgMasterSetDirectory() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgMasterSetDirectory)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCMsgMasterSetDirectory::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.dir_.~RepeatedPtrField();
}
void CMsgGCMsgMasterSetDirectory::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCMsgMasterSetDirectory::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCMsgMasterSetDirectory)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_dir()->Clear();
  _impl_.master_dir_index_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCMsgMasterSetDirectory::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> CMsgGCMsgMasterSetDirectory::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgGCMsgMasterSetDirectory_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .CMsgGCMsgMasterSetDirectory.SubGC dir = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory, _impl_.dir_)}},
    // optional uint32 master_dir_index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCMsgMasterSetDirectory, _impl_.master_dir_index_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory, _impl_.master_dir_index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 master_dir_index = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory, _impl_.master_dir_index_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .CMsgGCMsgMasterSetDirectory.SubGC dir = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory, _impl_.dir_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgGCMsgMasterSetDirectory_SubGC>()},
  }}, {{
  }},
};

::uint8_t* CMsgGCMsgMasterSetDirectory::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgMasterSetDirectory)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 master_dir_index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_master_dir_index(), target);
  }

  // repeated .CMsgGCMsgMasterSetDirectory.SubGC dir = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_dir_size()); i < n; i++) {
    const auto& repfield = this->_internal_dir().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgMasterSetDirectory)
  return target;
}

::size_t CMsgGCMsgMasterSetDirectory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCMsgMasterSetDirectory)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgGCMsgMasterSetDirectory.SubGC dir = 2;
  total_size += 1UL * this->_internal_dir_size();
  for (const auto& msg : this->_internal_dir()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // optional uint32 master_dir_index = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_master_dir_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCMsgMasterSetDirectory::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCMsgMasterSetDirectory::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCMsgMasterSetDirectory::GetClassData() const { return &_class_data_; }


void CMsgGCMsgMasterSetDirectory::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCMsgMasterSetDirectory*>(&to_msg);
  auto& from = static_cast<const CMsgGCMsgMasterSetDirectory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCMsgMasterSetDirectory)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_dir()->MergeFrom(from._internal_dir());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_master_dir_index(from._internal_master_dir_index());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCMsgMasterSetDirectory::CopyFrom(const CMsgGCMsgMasterSetDirectory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCMsgMasterSetDirectory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCMsgMasterSetDirectory::IsInitialized() const {
  return true;
}

void CMsgGCMsgMasterSetDirectory::InternalSwap(CMsgGCMsgMasterSetDirectory* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.dir_.InternalSwap(&other->_impl_.dir_);
        swap(_impl_.master_dir_index_, other->_impl_.master_dir_index_);
}

::google::protobuf::Metadata CMsgGCMsgMasterSetDirectory::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[54]);
}
// ===================================================================

class CMsgGCMsgMasterSetDirectory_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCMsgMasterSetDirectory_Response>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory_Response, _impl_._has_bits_);
  static void set_has_eresult(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgGCMsgMasterSetDirectory_Response::CMsgGCMsgMasterSetDirectory_Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCMsgMasterSetDirectory_Response)
}
CMsgGCMsgMasterSetDirectory_Response::CMsgGCMsgMasterSetDirectory_Response(const CMsgGCMsgMasterSetDirectory_Response& from) : ::google::protobuf::Message() {
  CMsgGCMsgMasterSetDirectory_Response* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.message_){},
      decltype(_impl_.eresult_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.message_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.message_.Set(from._internal_message(), _this->GetArenaForAllocation());
  }
  _this->_impl_.eresult_ = from._impl_.eresult_;

  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgMasterSetDirectory_Response)
}
inline void CMsgGCMsgMasterSetDirectory_Response::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.message_){},
      decltype(_impl_.eresult_){2},
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.message_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CMsgGCMsgMasterSetDirectory_Response::~CMsgGCMsgMasterSetDirectory_Response() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgMasterSetDirectory_Response)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCMsgMasterSetDirectory_Response::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
}
void CMsgGCMsgMasterSetDirectory_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCMsgMasterSetDirectory_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCMsgMasterSetDirectory_Response)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.message_.ClearNonDefaultToEmpty();
    }
    _impl_.eresult_ = 2;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCMsgMasterSetDirectory_Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 52, 2> CMsgGCMsgMasterSetDirectory_Response::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory_Response, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgGCMsgMasterSetDirectory_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string message = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory_Response, _impl_.message_)}},
    // optional int32 eresult = 1 [default = 2];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCMsgMasterSetDirectory_Response, _impl_.eresult_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory_Response, _impl_.eresult_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 eresult = 1 [default = 2];
    {PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory_Response, _impl_.eresult_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string message = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetDirectory_Response, _impl_.message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\0\7\0\0\0\0\0"
    "CMsgGCMsgMasterSetDirectory_Response"
    "message"
  }},
};

::uint8_t* CMsgGCMsgMasterSetDirectory_Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgMasterSetDirectory_Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_eresult(), target);
  }

  // optional string message = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCMsgMasterSetDirectory_Response.message");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgMasterSetDirectory_Response)
  return target;
}

::size_t CMsgGCMsgMasterSetDirectory_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCMsgMasterSetDirectory_Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string message = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_message());
    }

    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_eresult());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCMsgMasterSetDirectory_Response::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCMsgMasterSetDirectory_Response::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCMsgMasterSetDirectory_Response::GetClassData() const { return &_class_data_; }


void CMsgGCMsgMasterSetDirectory_Response::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCMsgMasterSetDirectory_Response*>(&to_msg);
  auto& from = static_cast<const CMsgGCMsgMasterSetDirectory_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCMsgMasterSetDirectory_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_message(from._internal_message());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.eresult_ = from._impl_.eresult_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCMsgMasterSetDirectory_Response::CopyFrom(const CMsgGCMsgMasterSetDirectory_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCMsgMasterSetDirectory_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCMsgMasterSetDirectory_Response::IsInitialized() const {
  return true;
}

void CMsgGCMsgMasterSetDirectory_Response::InternalSwap(CMsgGCMsgMasterSetDirectory_Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, lhs_arena,
                                       &other->_impl_.message_, rhs_arena);
        swap(_impl_.eresult_, other->_impl_.eresult_);
}

::google::protobuf::Metadata CMsgGCMsgMasterSetDirectory_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[55]);
}
// ===================================================================

class CMsgGCMsgWebAPIJobRequestForwardResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCMsgWebAPIJobRequestForwardResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgGCMsgWebAPIJobRequestForwardResponse, _impl_._has_bits_);
  static void set_has_dir_index(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgGCMsgWebAPIJobRequestForwardResponse::CMsgGCMsgWebAPIJobRequestForwardResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCMsgWebAPIJobRequestForwardResponse)
}
CMsgGCMsgWebAPIJobRequestForwardResponse::CMsgGCMsgWebAPIJobRequestForwardResponse(const CMsgGCMsgWebAPIJobRequestForwardResponse& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgWebAPIJobRequestForwardResponse)
}
inline void CMsgGCMsgWebAPIJobRequestForwardResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.dir_index_){0u},
  };
}
CMsgGCMsgWebAPIJobRequestForwardResponse::~CMsgGCMsgWebAPIJobRequestForwardResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgWebAPIJobRequestForwardResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCMsgWebAPIJobRequestForwardResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CMsgGCMsgWebAPIJobRequestForwardResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCMsgWebAPIJobRequestForwardResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCMsgWebAPIJobRequestForwardResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dir_index_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCMsgWebAPIJobRequestForwardResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CMsgGCMsgWebAPIJobRequestForwardResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCMsgWebAPIJobRequestForwardResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgGCMsgWebAPIJobRequestForwardResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 dir_index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCMsgWebAPIJobRequestForwardResponse, _impl_.dir_index_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCMsgWebAPIJobRequestForwardResponse, _impl_.dir_index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 dir_index = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCMsgWebAPIJobRequestForwardResponse, _impl_.dir_index_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgGCMsgWebAPIJobRequestForwardResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgWebAPIJobRequestForwardResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 dir_index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_dir_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgWebAPIJobRequestForwardResponse)
  return target;
}

::size_t CMsgGCMsgWebAPIJobRequestForwardResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCMsgWebAPIJobRequestForwardResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 dir_index = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_dir_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCMsgWebAPIJobRequestForwardResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCMsgWebAPIJobRequestForwardResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCMsgWebAPIJobRequestForwardResponse::GetClassData() const { return &_class_data_; }


void CMsgGCMsgWebAPIJobRequestForwardResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCMsgWebAPIJobRequestForwardResponse*>(&to_msg);
  auto& from = static_cast<const CMsgGCMsgWebAPIJobRequestForwardResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCMsgWebAPIJobRequestForwardResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_dir_index(from._internal_dir_index());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCMsgWebAPIJobRequestForwardResponse::CopyFrom(const CMsgGCMsgWebAPIJobRequestForwardResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCMsgWebAPIJobRequestForwardResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCMsgWebAPIJobRequestForwardResponse::IsInitialized() const {
  return true;
}

void CMsgGCMsgWebAPIJobRequestForwardResponse::InternalSwap(CMsgGCMsgWebAPIJobRequestForwardResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.dir_index_, other->_impl_.dir_index_);
}

::google::protobuf::Metadata CMsgGCMsgWebAPIJobRequestForwardResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[56]);
}
// ===================================================================

class CGCSystemMsg_GetPurchaseTrust_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CGCSystemMsg_GetPurchaseTrust_Request>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetPurchaseTrust_Request, _impl_._has_bits_);
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CGCSystemMsg_GetPurchaseTrust_Request::CGCSystemMsg_GetPurchaseTrust_Request(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CGCSystemMsg_GetPurchaseTrust_Request)
}
CGCSystemMsg_GetPurchaseTrust_Request::CGCSystemMsg_GetPurchaseTrust_Request(const CGCSystemMsg_GetPurchaseTrust_Request& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CGCSystemMsg_GetPurchaseTrust_Request)
}
inline void CGCSystemMsg_GetPurchaseTrust_Request::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.steamid_){::uint64_t{0u}},
  };
}
CGCSystemMsg_GetPurchaseTrust_Request::~CGCSystemMsg_GetPurchaseTrust_Request() {
  // @@protoc_insertion_point(destructor:CGCSystemMsg_GetPurchaseTrust_Request)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CGCSystemMsg_GetPurchaseTrust_Request::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CGCSystemMsg_GetPurchaseTrust_Request::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CGCSystemMsg_GetPurchaseTrust_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCSystemMsg_GetPurchaseTrust_Request)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.steamid_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CGCSystemMsg_GetPurchaseTrust_Request::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CGCSystemMsg_GetPurchaseTrust_Request::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetPurchaseTrust_Request, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CGCSystemMsg_GetPurchaseTrust_Request_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional fixed64 steamid = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetPurchaseTrust_Request, _impl_.steamid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed64 steamid = 1;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetPurchaseTrust_Request, _impl_.steamid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CGCSystemMsg_GetPurchaseTrust_Request::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCSystemMsg_GetPurchaseTrust_Request)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        1, this->_internal_steamid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCSystemMsg_GetPurchaseTrust_Request)
  return target;
}

::size_t CGCSystemMsg_GetPurchaseTrust_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCSystemMsg_GetPurchaseTrust_Request)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional fixed64 steamid = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CGCSystemMsg_GetPurchaseTrust_Request::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CGCSystemMsg_GetPurchaseTrust_Request::MergeImpl
};
const ::google::protobuf::Message::ClassData*CGCSystemMsg_GetPurchaseTrust_Request::GetClassData() const { return &_class_data_; }


void CGCSystemMsg_GetPurchaseTrust_Request::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CGCSystemMsg_GetPurchaseTrust_Request*>(&to_msg);
  auto& from = static_cast<const CGCSystemMsg_GetPurchaseTrust_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CGCSystemMsg_GetPurchaseTrust_Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_steamid(from._internal_steamid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CGCSystemMsg_GetPurchaseTrust_Request::CopyFrom(const CGCSystemMsg_GetPurchaseTrust_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCSystemMsg_GetPurchaseTrust_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CGCSystemMsg_GetPurchaseTrust_Request::IsInitialized() const {
  return true;
}

void CGCSystemMsg_GetPurchaseTrust_Request::InternalSwap(CGCSystemMsg_GetPurchaseTrust_Request* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.steamid_, other->_impl_.steamid_);
}

::google::protobuf::Metadata CGCSystemMsg_GetPurchaseTrust_Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[57]);
}
// ===================================================================

class CGCSystemMsg_GetPurchaseTrust_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CGCSystemMsg_GetPurchaseTrust_Response>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetPurchaseTrust_Response, _impl_._has_bits_);
  static void set_has_has_prior_purchase_history(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_has_no_recent_password_resets(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_is_wallet_cash_trusted(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_time_all_trusted(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CGCSystemMsg_GetPurchaseTrust_Response::CGCSystemMsg_GetPurchaseTrust_Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CGCSystemMsg_GetPurchaseTrust_Response)
}
CGCSystemMsg_GetPurchaseTrust_Response::CGCSystemMsg_GetPurchaseTrust_Response(const CGCSystemMsg_GetPurchaseTrust_Response& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CGCSystemMsg_GetPurchaseTrust_Response)
}
inline void CGCSystemMsg_GetPurchaseTrust_Response::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.has_prior_purchase_history_){false},
      decltype(_impl_.has_no_recent_password_resets_){false},
      decltype(_impl_.is_wallet_cash_trusted_){false},
      decltype(_impl_.time_all_trusted_){0u},
  };
}
CGCSystemMsg_GetPurchaseTrust_Response::~CGCSystemMsg_GetPurchaseTrust_Response() {
  // @@protoc_insertion_point(destructor:CGCSystemMsg_GetPurchaseTrust_Response)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CGCSystemMsg_GetPurchaseTrust_Response::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CGCSystemMsg_GetPurchaseTrust_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CGCSystemMsg_GetPurchaseTrust_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCSystemMsg_GetPurchaseTrust_Response)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.has_prior_purchase_history_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.time_all_trusted_) -
        reinterpret_cast<char*>(&_impl_.has_prior_purchase_history_)) + sizeof(_impl_.time_all_trusted_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CGCSystemMsg_GetPurchaseTrust_Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> CGCSystemMsg_GetPurchaseTrust_Response::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetPurchaseTrust_Response, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CGCSystemMsg_GetPurchaseTrust_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 time_all_trusted = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CGCSystemMsg_GetPurchaseTrust_Response, _impl_.time_all_trusted_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetPurchaseTrust_Response, _impl_.time_all_trusted_)}},
    // optional bool has_prior_purchase_history = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CGCSystemMsg_GetPurchaseTrust_Response, _impl_.has_prior_purchase_history_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetPurchaseTrust_Response, _impl_.has_prior_purchase_history_)}},
    // optional bool has_no_recent_password_resets = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CGCSystemMsg_GetPurchaseTrust_Response, _impl_.has_no_recent_password_resets_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetPurchaseTrust_Response, _impl_.has_no_recent_password_resets_)}},
    // optional bool is_wallet_cash_trusted = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CGCSystemMsg_GetPurchaseTrust_Response, _impl_.is_wallet_cash_trusted_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetPurchaseTrust_Response, _impl_.is_wallet_cash_trusted_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool has_prior_purchase_history = 1;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetPurchaseTrust_Response, _impl_.has_prior_purchase_history_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool has_no_recent_password_resets = 2;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetPurchaseTrust_Response, _impl_.has_no_recent_password_resets_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool is_wallet_cash_trusted = 3;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetPurchaseTrust_Response, _impl_.is_wallet_cash_trusted_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint32 time_all_trusted = 4;
    {PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetPurchaseTrust_Response, _impl_.time_all_trusted_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CGCSystemMsg_GetPurchaseTrust_Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CGCSystemMsg_GetPurchaseTrust_Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool has_prior_purchase_history = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_has_prior_purchase_history(), target);
  }

  // optional bool has_no_recent_password_resets = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_has_no_recent_password_resets(), target);
  }

  // optional bool is_wallet_cash_trusted = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_is_wallet_cash_trusted(), target);
  }

  // optional uint32 time_all_trusted = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_time_all_trusted(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCSystemMsg_GetPurchaseTrust_Response)
  return target;
}

::size_t CGCSystemMsg_GetPurchaseTrust_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCSystemMsg_GetPurchaseTrust_Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional bool has_prior_purchase_history = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2;
    }

    // optional bool has_no_recent_password_resets = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }

    // optional bool is_wallet_cash_trusted = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }

    // optional uint32 time_all_trusted = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_time_all_trusted());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CGCSystemMsg_GetPurchaseTrust_Response::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CGCSystemMsg_GetPurchaseTrust_Response::MergeImpl
};
const ::google::protobuf::Message::ClassData*CGCSystemMsg_GetPurchaseTrust_Response::GetClassData() const { return &_class_data_; }


void CGCSystemMsg_GetPurchaseTrust_Response::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CGCSystemMsg_GetPurchaseTrust_Response*>(&to_msg);
  auto& from = static_cast<const CGCSystemMsg_GetPurchaseTrust_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CGCSystemMsg_GetPurchaseTrust_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.has_prior_purchase_history_ = from._impl_.has_prior_purchase_history_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.has_no_recent_password_resets_ = from._impl_.has_no_recent_password_resets_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.is_wallet_cash_trusted_ = from._impl_.is_wallet_cash_trusted_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.time_all_trusted_ = from._impl_.time_all_trusted_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CGCSystemMsg_GetPurchaseTrust_Response::CopyFrom(const CGCSystemMsg_GetPurchaseTrust_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCSystemMsg_GetPurchaseTrust_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CGCSystemMsg_GetPurchaseTrust_Response::IsInitialized() const {
  return true;
}

void CGCSystemMsg_GetPurchaseTrust_Response::InternalSwap(CGCSystemMsg_GetPurchaseTrust_Response* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetPurchaseTrust_Response, _impl_.time_all_trusted_)
      + sizeof(CGCSystemMsg_GetPurchaseTrust_Response::_impl_.time_all_trusted_)
      - PROTOBUF_FIELD_OFFSET(CGCSystemMsg_GetPurchaseTrust_Response, _impl_.has_prior_purchase_history_)>(
          reinterpret_cast<char*>(&_impl_.has_prior_purchase_history_),
          reinterpret_cast<char*>(&other->_impl_.has_prior_purchase_history_));
}

::google::protobuf::Metadata CGCSystemMsg_GetPurchaseTrust_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[58]);
}
// ===================================================================

class CMsgGCHAccountVacStatusChange::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCHAccountVacStatusChange>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgGCHAccountVacStatusChange, _impl_._has_bits_);
  static void set_has_steam_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_rtime_vacban_starts(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_is_banned_now(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_is_banned_future(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

CMsgGCHAccountVacStatusChange::CMsgGCHAccountVacStatusChange(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCHAccountVacStatusChange)
}
CMsgGCHAccountVacStatusChange::CMsgGCHAccountVacStatusChange(const CMsgGCHAccountVacStatusChange& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgGCHAccountVacStatusChange)
}
inline void CMsgGCHAccountVacStatusChange::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.steam_id_){::uint64_t{0u}},
      decltype(_impl_.app_id_){0u},
      decltype(_impl_.rtime_vacban_starts_){0u},
      decltype(_impl_.is_banned_now_){false},
      decltype(_impl_.is_banned_future_){false},
  };
}
CMsgGCHAccountVacStatusChange::~CMsgGCHAccountVacStatusChange() {
  // @@protoc_insertion_point(destructor:CMsgGCHAccountVacStatusChange)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCHAccountVacStatusChange::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CMsgGCHAccountVacStatusChange::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCHAccountVacStatusChange::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCHAccountVacStatusChange)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.steam_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_banned_future_) -
        reinterpret_cast<char*>(&_impl_.steam_id_)) + sizeof(_impl_.is_banned_future_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCHAccountVacStatusChange::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> CMsgGCHAccountVacStatusChange::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCHAccountVacStatusChange, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgGCHAccountVacStatusChange_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional fixed64 steam_id = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHAccountVacStatusChange, _impl_.steam_id_)}},
    // optional uint32 app_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCHAccountVacStatusChange, _impl_.app_id_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHAccountVacStatusChange, _impl_.app_id_)}},
    // optional uint32 rtime_vacban_starts = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCHAccountVacStatusChange, _impl_.rtime_vacban_starts_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHAccountVacStatusChange, _impl_.rtime_vacban_starts_)}},
    // optional bool is_banned_now = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCHAccountVacStatusChange, _impl_.is_banned_now_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHAccountVacStatusChange, _impl_.is_banned_now_)}},
    // optional bool is_banned_future = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCHAccountVacStatusChange, _impl_.is_banned_future_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHAccountVacStatusChange, _impl_.is_banned_future_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed64 steam_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHAccountVacStatusChange, _impl_.steam_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional uint32 app_id = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHAccountVacStatusChange, _impl_.app_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 rtime_vacban_starts = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHAccountVacStatusChange, _impl_.rtime_vacban_starts_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bool is_banned_now = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHAccountVacStatusChange, _impl_.is_banned_now_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool is_banned_future = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHAccountVacStatusChange, _impl_.is_banned_future_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgGCHAccountVacStatusChange::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCHAccountVacStatusChange)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        1, this->_internal_steam_id(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_app_id(), target);
  }

  // optional uint32 rtime_vacban_starts = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_rtime_vacban_starts(), target);
  }

  // optional bool is_banned_now = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_is_banned_now(), target);
  }

  // optional bool is_banned_future = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_is_banned_future(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCHAccountVacStatusChange)
  return target;
}

::size_t CMsgGCHAccountVacStatusChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCHAccountVacStatusChange)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional fixed64 steam_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 9;
    }

    // optional uint32 app_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_app_id());
    }

    // optional uint32 rtime_vacban_starts = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_rtime_vacban_starts());
    }

    // optional bool is_banned_now = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2;
    }

    // optional bool is_banned_future = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCHAccountVacStatusChange::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCHAccountVacStatusChange::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCHAccountVacStatusChange::GetClassData() const { return &_class_data_; }


void CMsgGCHAccountVacStatusChange::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCHAccountVacStatusChange*>(&to_msg);
  auto& from = static_cast<const CMsgGCHAccountVacStatusChange&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCHAccountVacStatusChange)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.steam_id_ = from._impl_.steam_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.app_id_ = from._impl_.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.rtime_vacban_starts_ = from._impl_.rtime_vacban_starts_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.is_banned_now_ = from._impl_.is_banned_now_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.is_banned_future_ = from._impl_.is_banned_future_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCHAccountVacStatusChange::CopyFrom(const CMsgGCHAccountVacStatusChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCHAccountVacStatusChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCHAccountVacStatusChange::IsInitialized() const {
  return true;
}

void CMsgGCHAccountVacStatusChange::InternalSwap(CMsgGCHAccountVacStatusChange* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCHAccountVacStatusChange, _impl_.is_banned_future_)
      + sizeof(CMsgGCHAccountVacStatusChange::_impl_.is_banned_future_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCHAccountVacStatusChange, _impl_.steam_id_)>(
          reinterpret_cast<char*>(&_impl_.steam_id_),
          reinterpret_cast<char*>(&other->_impl_.steam_id_));
}

::google::protobuf::Metadata CMsgGCHAccountVacStatusChange::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[59]);
}
// ===================================================================

class CMsgGCGetPartnerAccountLink::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCGetPartnerAccountLink>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgGCGetPartnerAccountLink, _impl_._has_bits_);
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgGCGetPartnerAccountLink::CMsgGCGetPartnerAccountLink(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCGetPartnerAccountLink)
}
CMsgGCGetPartnerAccountLink::CMsgGCGetPartnerAccountLink(const CMsgGCGetPartnerAccountLink& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgGCGetPartnerAccountLink)
}
inline void CMsgGCGetPartnerAccountLink::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.steamid_){::uint64_t{0u}},
  };
}
CMsgGCGetPartnerAccountLink::~CMsgGCGetPartnerAccountLink() {
  // @@protoc_insertion_point(destructor:CMsgGCGetPartnerAccountLink)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCGetPartnerAccountLink::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CMsgGCGetPartnerAccountLink::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCGetPartnerAccountLink::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCGetPartnerAccountLink)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.steamid_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCGetPartnerAccountLink::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CMsgGCGetPartnerAccountLink::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCGetPartnerAccountLink, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgGCGetPartnerAccountLink_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional fixed64 steamid = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCGetPartnerAccountLink, _impl_.steamid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed64 steamid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCGetPartnerAccountLink, _impl_.steamid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgGCGetPartnerAccountLink::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCGetPartnerAccountLink)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        1, this->_internal_steamid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCGetPartnerAccountLink)
  return target;
}

::size_t CMsgGCGetPartnerAccountLink::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCGetPartnerAccountLink)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional fixed64 steamid = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCGetPartnerAccountLink::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCGetPartnerAccountLink::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCGetPartnerAccountLink::GetClassData() const { return &_class_data_; }


void CMsgGCGetPartnerAccountLink::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCGetPartnerAccountLink*>(&to_msg);
  auto& from = static_cast<const CMsgGCGetPartnerAccountLink&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCGetPartnerAccountLink)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_steamid(from._internal_steamid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCGetPartnerAccountLink::CopyFrom(const CMsgGCGetPartnerAccountLink& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCGetPartnerAccountLink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCGetPartnerAccountLink::IsInitialized() const {
  return true;
}

void CMsgGCGetPartnerAccountLink::InternalSwap(CMsgGCGetPartnerAccountLink* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.steamid_, other->_impl_.steamid_);
}

::google::protobuf::Metadata CMsgGCGetPartnerAccountLink::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[60]);
}
// ===================================================================

class CMsgGCGetPartnerAccountLink_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCGetPartnerAccountLink_Response>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgGCGetPartnerAccountLink_Response, _impl_._has_bits_);
  static void set_has_pwid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_nexonid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ageclass(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_id_verified(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_is_adult(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CMsgGCGetPartnerAccountLink_Response::CMsgGCGetPartnerAccountLink_Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCGetPartnerAccountLink_Response)
}
CMsgGCGetPartnerAccountLink_Response::CMsgGCGetPartnerAccountLink_Response(const CMsgGCGetPartnerAccountLink_Response& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgGCGetPartnerAccountLink_Response)
}
inline void CMsgGCGetPartnerAccountLink_Response::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.pwid_){0u},
      decltype(_impl_.nexonid_){0u},
      decltype(_impl_.ageclass_){0},
      decltype(_impl_.is_adult_){false},
      decltype(_impl_.id_verified_){true},
  };
}
CMsgGCGetPartnerAccountLink_Response::~CMsgGCGetPartnerAccountLink_Response() {
  // @@protoc_insertion_point(destructor:CMsgGCGetPartnerAccountLink_Response)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCGetPartnerAccountLink_Response::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CMsgGCGetPartnerAccountLink_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCGetPartnerAccountLink_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCGetPartnerAccountLink_Response)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.pwid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_adult_) -
        reinterpret_cast<char*>(&_impl_.pwid_)) + sizeof(_impl_.is_adult_));
    _impl_.id_verified_ = true;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCGetPartnerAccountLink_Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> CMsgGCGetPartnerAccountLink_Response::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCGetPartnerAccountLink_Response, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgGCGetPartnerAccountLink_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 pwid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCGetPartnerAccountLink_Response, _impl_.pwid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCGetPartnerAccountLink_Response, _impl_.pwid_)}},
    // optional uint32 nexonid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCGetPartnerAccountLink_Response, _impl_.nexonid_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCGetPartnerAccountLink_Response, _impl_.nexonid_)}},
    // optional int32 ageclass = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCGetPartnerAccountLink_Response, _impl_.ageclass_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCGetPartnerAccountLink_Response, _impl_.ageclass_)}},
    // optional bool id_verified = 4 [default = true];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCGetPartnerAccountLink_Response, _impl_.id_verified_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgGCGetPartnerAccountLink_Response, _impl_.id_verified_)}},
    // optional bool is_adult = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCGetPartnerAccountLink_Response, _impl_.is_adult_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCGetPartnerAccountLink_Response, _impl_.is_adult_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 pwid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCGetPartnerAccountLink_Response, _impl_.pwid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 nexonid = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCGetPartnerAccountLink_Response, _impl_.nexonid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 ageclass = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCGetPartnerAccountLink_Response, _impl_.ageclass_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool id_verified = 4 [default = true];
    {PROTOBUF_FIELD_OFFSET(CMsgGCGetPartnerAccountLink_Response, _impl_.id_verified_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool is_adult = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCGetPartnerAccountLink_Response, _impl_.is_adult_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgGCGetPartnerAccountLink_Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCGetPartnerAccountLink_Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 pwid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_pwid(), target);
  }

  // optional uint32 nexonid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_nexonid(), target);
  }

  // optional int32 ageclass = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_ageclass(), target);
  }

  // optional bool id_verified = 4 [default = true];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_id_verified(), target);
  }

  // optional bool is_adult = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_is_adult(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCGetPartnerAccountLink_Response)
  return target;
}

::size_t CMsgGCGetPartnerAccountLink_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCGetPartnerAccountLink_Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional uint32 pwid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_pwid());
    }

    // optional uint32 nexonid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_nexonid());
    }

    // optional int32 ageclass = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_ageclass());
    }

    // optional bool is_adult = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2;
    }

    // optional bool id_verified = 4 [default = true];
    if (cached_has_bits & 0x00000010u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCGetPartnerAccountLink_Response::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCGetPartnerAccountLink_Response::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCGetPartnerAccountLink_Response::GetClassData() const { return &_class_data_; }


void CMsgGCGetPartnerAccountLink_Response::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCGetPartnerAccountLink_Response*>(&to_msg);
  auto& from = static_cast<const CMsgGCGetPartnerAccountLink_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCGetPartnerAccountLink_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.pwid_ = from._impl_.pwid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.nexonid_ = from._impl_.nexonid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.ageclass_ = from._impl_.ageclass_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.is_adult_ = from._impl_.is_adult_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.id_verified_ = from._impl_.id_verified_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCGetPartnerAccountLink_Response::CopyFrom(const CMsgGCGetPartnerAccountLink_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCGetPartnerAccountLink_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCGetPartnerAccountLink_Response::IsInitialized() const {
  return true;
}

void CMsgGCGetPartnerAccountLink_Response::InternalSwap(CMsgGCGetPartnerAccountLink_Response* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCGetPartnerAccountLink_Response, _impl_.id_verified_)
      + sizeof(CMsgGCGetPartnerAccountLink_Response::_impl_.id_verified_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCGetPartnerAccountLink_Response, _impl_.pwid_)>(
          reinterpret_cast<char*>(&_impl_.pwid_),
          reinterpret_cast<char*>(&other->_impl_.pwid_));
}

::google::protobuf::Metadata CMsgGCGetPartnerAccountLink_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[61]);
}
// ===================================================================

class CMsgGCRoutingInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCRoutingInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgGCRoutingInfo, _impl_._has_bits_);
  static void set_has_method(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_fallback(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_protobuf_field(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_webapi_param(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgGCRoutingInfo::CMsgGCRoutingInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCRoutingInfo)
}
CMsgGCRoutingInfo::CMsgGCRoutingInfo(const CMsgGCRoutingInfo& from) : ::google::protobuf::Message() {
  CMsgGCRoutingInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.dir_index_){from._impl_.dir_index_},
      decltype(_impl_.webapi_param_){},
      decltype(_impl_.method_){},
      decltype(_impl_.protobuf_field_){},
      decltype(_impl_.fallback_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.webapi_param_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.webapi_param_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.webapi_param_.Set(from._internal_webapi_param(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.method_, &from._impl_.method_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.fallback_) -
    reinterpret_cast<char*>(&_impl_.method_)) + sizeof(_impl_.fallback_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCRoutingInfo)
}
inline void CMsgGCRoutingInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.dir_index_){arena},
      decltype(_impl_.webapi_param_){},
      decltype(_impl_.method_){0},
      decltype(_impl_.protobuf_field_){0u},
      decltype(_impl_.fallback_){1},
  };
  _impl_.webapi_param_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.webapi_param_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CMsgGCRoutingInfo::~CMsgGCRoutingInfo() {
  // @@protoc_insertion_point(destructor:CMsgGCRoutingInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCRoutingInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.dir_index_.~RepeatedField();
  _impl_.webapi_param_.Destroy();
}
void CMsgGCRoutingInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCRoutingInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCRoutingInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_dir_index()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.webapi_param_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.method_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.protobuf_field_) -
        reinterpret_cast<char*>(&_impl_.method_)) + sizeof(_impl_.protobuf_field_));
    _impl_.fallback_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCRoutingInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 38, 2> CMsgGCRoutingInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCRoutingInfo, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgGCRoutingInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated uint32 dir_index = 1;
    {::_pbi::TcParser::FastV32R1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCRoutingInfo, _impl_.dir_index_)}},
    // optional .CMsgGCRoutingInfo.RoutingMethod method = 2 [default = RANDOM];
    {::_pbi::TcParser::FastEr0S1,
     {16, 1, 4, PROTOBUF_FIELD_OFFSET(CMsgGCRoutingInfo, _impl_.method_)}},
    // optional .CMsgGCRoutingInfo.RoutingMethod fallback = 3 [default = DISCARD];
    {::_pbi::TcParser::FastEr0S1,
     {24, 3, 4, PROTOBUF_FIELD_OFFSET(CMsgGCRoutingInfo, _impl_.fallback_)}},
    // optional uint32 protobuf_field = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCRoutingInfo, _impl_.protobuf_field_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCRoutingInfo, _impl_.protobuf_field_)}},
    // optional string webapi_param = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCRoutingInfo, _impl_.webapi_param_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated uint32 dir_index = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCRoutingInfo, _impl_.dir_index_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // optional .CMsgGCRoutingInfo.RoutingMethod method = 2 [default = RANDOM];
    {PROTOBUF_FIELD_OFFSET(CMsgGCRoutingInfo, _impl_.method_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional .CMsgGCRoutingInfo.RoutingMethod fallback = 3 [default = DISCARD];
    {PROTOBUF_FIELD_OFFSET(CMsgGCRoutingInfo, _impl_.fallback_), _Internal::kHasBitsOffset + 3, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional uint32 protobuf_field = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCRoutingInfo, _impl_.protobuf_field_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string webapi_param = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCRoutingInfo, _impl_.webapi_param_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {0, 5},
    {0, 5},
  }}, {{
    "\21\0\0\0\0\14\0\0"
    "CMsgGCRoutingInfo"
    "webapi_param"
  }},
};

::uint8_t* CMsgGCRoutingInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCRoutingInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated uint32 dir_index = 1;
  for (int i = 0, n = this->_internal_dir_index_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_dir_index().Get(i), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgGCRoutingInfo.RoutingMethod method = 2 [default = RANDOM];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_method(), target);
  }

  // optional .CMsgGCRoutingInfo.RoutingMethod fallback = 3 [default = DISCARD];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_fallback(), target);
  }

  // optional uint32 protobuf_field = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_protobuf_field(), target);
  }

  // optional string webapi_param = 5;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_webapi_param();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCRoutingInfo.webapi_param");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCRoutingInfo)
  return target;
}

::size_t CMsgGCRoutingInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCRoutingInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 dir_index = 1;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_dir_index())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_dir_index_size());
    ;
    total_size += tag_size + data_size;
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string webapi_param = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_webapi_param());
    }

    // optional .CMsgGCRoutingInfo.RoutingMethod method = 2 [default = RANDOM];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_method());
    }

    // optional uint32 protobuf_field = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_protobuf_field());
    }

    // optional .CMsgGCRoutingInfo.RoutingMethod fallback = 3 [default = DISCARD];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_fallback());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCRoutingInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCRoutingInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCRoutingInfo::GetClassData() const { return &_class_data_; }


void CMsgGCRoutingInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCRoutingInfo*>(&to_msg);
  auto& from = static_cast<const CMsgGCRoutingInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCRoutingInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_dir_index()->MergeFrom(from._internal_dir_index());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_webapi_param(from._internal_webapi_param());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.method_ = from._impl_.method_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.protobuf_field_ = from._impl_.protobuf_field_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.fallback_ = from._impl_.fallback_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCRoutingInfo::CopyFrom(const CMsgGCRoutingInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCRoutingInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCRoutingInfo::IsInitialized() const {
  return true;
}

void CMsgGCRoutingInfo::InternalSwap(CMsgGCRoutingInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.dir_index_.InternalSwap(&other->_impl_.dir_index_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.webapi_param_, lhs_arena,
                                       &other->_impl_.webapi_param_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCRoutingInfo, _impl_.fallback_)
      + sizeof(CMsgGCRoutingInfo::_impl_.fallback_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCRoutingInfo, _impl_.method_)>(
          reinterpret_cast<char*>(&_impl_.method_),
          reinterpret_cast<char*>(&other->_impl_.method_));
}

::google::protobuf::Metadata CMsgGCRoutingInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[62]);
}
// ===================================================================

class CMsgGCMsgMasterSetWebAPIRouting_Entry::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCMsgMasterSetWebAPIRouting_Entry>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetWebAPIRouting_Entry, _impl_._has_bits_);
  static void set_has_interface_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_method_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgGCRoutingInfo& routing(const CMsgGCMsgMasterSetWebAPIRouting_Entry* msg);
  static void set_has_routing(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::CMsgGCRoutingInfo& CMsgGCMsgMasterSetWebAPIRouting_Entry::_Internal::routing(const CMsgGCMsgMasterSetWebAPIRouting_Entry* msg) {
  return *msg->_impl_.routing_;
}
CMsgGCMsgMasterSetWebAPIRouting_Entry::CMsgGCMsgMasterSetWebAPIRouting_Entry(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCMsgMasterSetWebAPIRouting.Entry)
}
CMsgGCMsgMasterSetWebAPIRouting_Entry::CMsgGCMsgMasterSetWebAPIRouting_Entry(const CMsgGCMsgMasterSetWebAPIRouting_Entry& from) : ::google::protobuf::Message() {
  CMsgGCMsgMasterSetWebAPIRouting_Entry* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.interface_name_){},
      decltype(_impl_.method_name_){},
      decltype(_impl_.routing_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.interface_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.interface_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.interface_name_.Set(from._internal_interface_name(), _this->GetArenaForAllocation());
  }
  _impl_.method_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.method_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.method_name_.Set(from._internal_method_name(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.routing_ = new ::CMsgGCRoutingInfo(*from._impl_.routing_);
  }

  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgMasterSetWebAPIRouting.Entry)
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.interface_name_){},
      decltype(_impl_.method_name_){},
      decltype(_impl_.routing_){nullptr},
  };
  _impl_.interface_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.interface_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.method_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.method_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CMsgGCMsgMasterSetWebAPIRouting_Entry::~CMsgGCMsgMasterSetWebAPIRouting_Entry() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgMasterSetWebAPIRouting.Entry)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.interface_name_.Destroy();
  _impl_.method_name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.routing_;
}
void CMsgGCMsgMasterSetWebAPIRouting_Entry::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCMsgMasterSetWebAPIRouting_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCMsgMasterSetWebAPIRouting.Entry)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.interface_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.method_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.routing_ != nullptr);
      _impl_.routing_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCMsgMasterSetWebAPIRouting_Entry::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 71, 2> CMsgGCMsgMasterSetWebAPIRouting_Entry::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetWebAPIRouting_Entry, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgGCMsgMasterSetWebAPIRouting_Entry_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string interface_name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetWebAPIRouting_Entry, _impl_.interface_name_)}},
    // optional string method_name = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetWebAPIRouting_Entry, _impl_.method_name_)}},
    // optional .CMsgGCRoutingInfo routing = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetWebAPIRouting_Entry, _impl_.routing_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string interface_name = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetWebAPIRouting_Entry, _impl_.interface_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string method_name = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetWebAPIRouting_Entry, _impl_.method_name_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .CMsgGCRoutingInfo routing = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetWebAPIRouting_Entry, _impl_.routing_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgGCRoutingInfo>()},
  }}, {{
    "\45\16\13\0\0\0\0\0"
    "CMsgGCMsgMasterSetWebAPIRouting.Entry"
    "interface_name"
    "method_name"
  }},
};

::uint8_t* CMsgGCMsgMasterSetWebAPIRouting_Entry::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgMasterSetWebAPIRouting.Entry)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string interface_name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_interface_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCMsgMasterSetWebAPIRouting.Entry.interface_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string method_name = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_method_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCMsgMasterSetWebAPIRouting.Entry.method_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional .CMsgGCRoutingInfo routing = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::routing(this),
        _Internal::routing(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgMasterSetWebAPIRouting.Entry)
  return target;
}

::size_t CMsgGCMsgMasterSetWebAPIRouting_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCMsgMasterSetWebAPIRouting.Entry)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string interface_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_interface_name());
    }

    // optional string method_name = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_method_name());
    }

    // optional .CMsgGCRoutingInfo routing = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.routing_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCMsgMasterSetWebAPIRouting_Entry::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCMsgMasterSetWebAPIRouting_Entry::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCMsgMasterSetWebAPIRouting_Entry::GetClassData() const { return &_class_data_; }


void CMsgGCMsgMasterSetWebAPIRouting_Entry::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCMsgMasterSetWebAPIRouting_Entry*>(&to_msg);
  auto& from = static_cast<const CMsgGCMsgMasterSetWebAPIRouting_Entry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCMsgMasterSetWebAPIRouting.Entry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_interface_name(from._internal_interface_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_method_name(from._internal_method_name());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_routing()->::CMsgGCRoutingInfo::MergeFrom(
          from._internal_routing());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCMsgMasterSetWebAPIRouting_Entry::CopyFrom(const CMsgGCMsgMasterSetWebAPIRouting_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCMsgMasterSetWebAPIRouting.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCMsgMasterSetWebAPIRouting_Entry::IsInitialized() const {
  return true;
}

void CMsgGCMsgMasterSetWebAPIRouting_Entry::InternalSwap(CMsgGCMsgMasterSetWebAPIRouting_Entry* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.interface_name_, lhs_arena,
                                       &other->_impl_.interface_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.method_name_, lhs_arena,
                                       &other->_impl_.method_name_, rhs_arena);
  swap(_impl_.routing_, other->_impl_.routing_);
}

::google::protobuf::Metadata CMsgGCMsgMasterSetWebAPIRouting_Entry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[63]);
}
// ===================================================================

class CMsgGCMsgMasterSetWebAPIRouting::_Internal {
 public:
};

CMsgGCMsgMasterSetWebAPIRouting::CMsgGCMsgMasterSetWebAPIRouting(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCMsgMasterSetWebAPIRouting)
}
CMsgGCMsgMasterSetWebAPIRouting::CMsgGCMsgMasterSetWebAPIRouting(const CMsgGCMsgMasterSetWebAPIRouting& from) : ::google::protobuf::Message() {
  CMsgGCMsgMasterSetWebAPIRouting* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.entries_){from._impl_.entries_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgMasterSetWebAPIRouting)
}
inline void CMsgGCMsgMasterSetWebAPIRouting::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.entries_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
CMsgGCMsgMasterSetWebAPIRouting::~CMsgGCMsgMasterSetWebAPIRouting() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgMasterSetWebAPIRouting)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCMsgMasterSetWebAPIRouting::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.entries_.~RepeatedPtrField();
}
void CMsgGCMsgMasterSetWebAPIRouting::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCMsgMasterSetWebAPIRouting::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCMsgMasterSetWebAPIRouting)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_entries()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCMsgMasterSetWebAPIRouting::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CMsgGCMsgMasterSetWebAPIRouting::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgGCMsgMasterSetWebAPIRouting_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .CMsgGCMsgMasterSetWebAPIRouting.Entry entries = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetWebAPIRouting, _impl_.entries_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .CMsgGCMsgMasterSetWebAPIRouting.Entry entries = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetWebAPIRouting, _impl_.entries_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgGCMsgMasterSetWebAPIRouting_Entry>()},
  }}, {{
  }},
};

::uint8_t* CMsgGCMsgMasterSetWebAPIRouting::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgMasterSetWebAPIRouting)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .CMsgGCMsgMasterSetWebAPIRouting.Entry entries = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_entries_size()); i < n; i++) {
    const auto& repfield = this->_internal_entries().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgMasterSetWebAPIRouting)
  return target;
}

::size_t CMsgGCMsgMasterSetWebAPIRouting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCMsgMasterSetWebAPIRouting)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgGCMsgMasterSetWebAPIRouting.Entry entries = 1;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->_internal_entries()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCMsgMasterSetWebAPIRouting::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCMsgMasterSetWebAPIRouting::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCMsgMasterSetWebAPIRouting::GetClassData() const { return &_class_data_; }


void CMsgGCMsgMasterSetWebAPIRouting::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCMsgMasterSetWebAPIRouting*>(&to_msg);
  auto& from = static_cast<const CMsgGCMsgMasterSetWebAPIRouting&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCMsgMasterSetWebAPIRouting)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entries()->MergeFrom(from._internal_entries());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCMsgMasterSetWebAPIRouting::CopyFrom(const CMsgGCMsgMasterSetWebAPIRouting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCMsgMasterSetWebAPIRouting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCMsgMasterSetWebAPIRouting::IsInitialized() const {
  return true;
}

void CMsgGCMsgMasterSetWebAPIRouting::InternalSwap(CMsgGCMsgMasterSetWebAPIRouting* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.entries_.InternalSwap(&other->_impl_.entries_);
}

::google::protobuf::Metadata CMsgGCMsgMasterSetWebAPIRouting::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[64]);
}
// ===================================================================

class CMsgGCMsgMasterSetClientMsgRouting_Entry::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCMsgMasterSetClientMsgRouting_Entry>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetClientMsgRouting_Entry, _impl_._has_bits_);
  static void set_has_msg_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgGCRoutingInfo& routing(const CMsgGCMsgMasterSetClientMsgRouting_Entry* msg);
  static void set_has_routing(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgGCRoutingInfo& CMsgGCMsgMasterSetClientMsgRouting_Entry::_Internal::routing(const CMsgGCMsgMasterSetClientMsgRouting_Entry* msg) {
  return *msg->_impl_.routing_;
}
CMsgGCMsgMasterSetClientMsgRouting_Entry::CMsgGCMsgMasterSetClientMsgRouting_Entry(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCMsgMasterSetClientMsgRouting.Entry)
}
CMsgGCMsgMasterSetClientMsgRouting_Entry::CMsgGCMsgMasterSetClientMsgRouting_Entry(const CMsgGCMsgMasterSetClientMsgRouting_Entry& from) : ::google::protobuf::Message() {
  CMsgGCMsgMasterSetClientMsgRouting_Entry* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.routing_){nullptr},
      decltype(_impl_.msg_type_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.routing_ = new ::CMsgGCRoutingInfo(*from._impl_.routing_);
  }
  _this->_impl_.msg_type_ = from._impl_.msg_type_;

  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgMasterSetClientMsgRouting.Entry)
}
inline void CMsgGCMsgMasterSetClientMsgRouting_Entry::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.routing_){nullptr},
      decltype(_impl_.msg_type_){0u},
  };
}
CMsgGCMsgMasterSetClientMsgRouting_Entry::~CMsgGCMsgMasterSetClientMsgRouting_Entry() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgMasterSetClientMsgRouting.Entry)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCMsgMasterSetClientMsgRouting_Entry::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.routing_;
}
void CMsgGCMsgMasterSetClientMsgRouting_Entry::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCMsgMasterSetClientMsgRouting_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCMsgMasterSetClientMsgRouting.Entry)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.routing_ != nullptr);
    _impl_.routing_->Clear();
  }
  _impl_.msg_type_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCMsgMasterSetClientMsgRouting_Entry::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> CMsgGCMsgMasterSetClientMsgRouting_Entry::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetClientMsgRouting_Entry, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgGCMsgMasterSetClientMsgRouting_Entry_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .CMsgGCRoutingInfo routing = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetClientMsgRouting_Entry, _impl_.routing_)}},
    // optional uint32 msg_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCMsgMasterSetClientMsgRouting_Entry, _impl_.msg_type_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetClientMsgRouting_Entry, _impl_.msg_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 msg_type = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetClientMsgRouting_Entry, _impl_.msg_type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .CMsgGCRoutingInfo routing = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetClientMsgRouting_Entry, _impl_.routing_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgGCRoutingInfo>()},
  }}, {{
  }},
};

::uint8_t* CMsgGCMsgMasterSetClientMsgRouting_Entry::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgMasterSetClientMsgRouting.Entry)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 msg_type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_msg_type(), target);
  }

  // optional .CMsgGCRoutingInfo routing = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::routing(this),
        _Internal::routing(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgMasterSetClientMsgRouting.Entry)
  return target;
}

::size_t CMsgGCMsgMasterSetClientMsgRouting_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCMsgMasterSetClientMsgRouting.Entry)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgGCRoutingInfo routing = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.routing_);
    }

    // optional uint32 msg_type = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_msg_type());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCMsgMasterSetClientMsgRouting_Entry::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCMsgMasterSetClientMsgRouting_Entry::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCMsgMasterSetClientMsgRouting_Entry::GetClassData() const { return &_class_data_; }


void CMsgGCMsgMasterSetClientMsgRouting_Entry::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCMsgMasterSetClientMsgRouting_Entry*>(&to_msg);
  auto& from = static_cast<const CMsgGCMsgMasterSetClientMsgRouting_Entry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCMsgMasterSetClientMsgRouting.Entry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_routing()->::CMsgGCRoutingInfo::MergeFrom(
          from._internal_routing());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.msg_type_ = from._impl_.msg_type_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCMsgMasterSetClientMsgRouting_Entry::CopyFrom(const CMsgGCMsgMasterSetClientMsgRouting_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCMsgMasterSetClientMsgRouting.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCMsgMasterSetClientMsgRouting_Entry::IsInitialized() const {
  return true;
}

void CMsgGCMsgMasterSetClientMsgRouting_Entry::InternalSwap(CMsgGCMsgMasterSetClientMsgRouting_Entry* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetClientMsgRouting_Entry, _impl_.msg_type_)
      + sizeof(CMsgGCMsgMasterSetClientMsgRouting_Entry::_impl_.msg_type_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetClientMsgRouting_Entry, _impl_.routing_)>(
          reinterpret_cast<char*>(&_impl_.routing_),
          reinterpret_cast<char*>(&other->_impl_.routing_));
}

::google::protobuf::Metadata CMsgGCMsgMasterSetClientMsgRouting_Entry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[65]);
}
// ===================================================================

class CMsgGCMsgMasterSetClientMsgRouting::_Internal {
 public:
};

CMsgGCMsgMasterSetClientMsgRouting::CMsgGCMsgMasterSetClientMsgRouting(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCMsgMasterSetClientMsgRouting)
}
CMsgGCMsgMasterSetClientMsgRouting::CMsgGCMsgMasterSetClientMsgRouting(const CMsgGCMsgMasterSetClientMsgRouting& from) : ::google::protobuf::Message() {
  CMsgGCMsgMasterSetClientMsgRouting* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.entries_){from._impl_.entries_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgMasterSetClientMsgRouting)
}
inline void CMsgGCMsgMasterSetClientMsgRouting::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.entries_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
CMsgGCMsgMasterSetClientMsgRouting::~CMsgGCMsgMasterSetClientMsgRouting() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgMasterSetClientMsgRouting)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCMsgMasterSetClientMsgRouting::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.entries_.~RepeatedPtrField();
}
void CMsgGCMsgMasterSetClientMsgRouting::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCMsgMasterSetClientMsgRouting::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCMsgMasterSetClientMsgRouting)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_entries()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCMsgMasterSetClientMsgRouting::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CMsgGCMsgMasterSetClientMsgRouting::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgGCMsgMasterSetClientMsgRouting_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .CMsgGCMsgMasterSetClientMsgRouting.Entry entries = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetClientMsgRouting, _impl_.entries_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .CMsgGCMsgMasterSetClientMsgRouting.Entry entries = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetClientMsgRouting, _impl_.entries_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgGCMsgMasterSetClientMsgRouting_Entry>()},
  }}, {{
  }},
};

::uint8_t* CMsgGCMsgMasterSetClientMsgRouting::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgMasterSetClientMsgRouting)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .CMsgGCMsgMasterSetClientMsgRouting.Entry entries = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_entries_size()); i < n; i++) {
    const auto& repfield = this->_internal_entries().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgMasterSetClientMsgRouting)
  return target;
}

::size_t CMsgGCMsgMasterSetClientMsgRouting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCMsgMasterSetClientMsgRouting)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgGCMsgMasterSetClientMsgRouting.Entry entries = 1;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->_internal_entries()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCMsgMasterSetClientMsgRouting::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCMsgMasterSetClientMsgRouting::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCMsgMasterSetClientMsgRouting::GetClassData() const { return &_class_data_; }


void CMsgGCMsgMasterSetClientMsgRouting::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCMsgMasterSetClientMsgRouting*>(&to_msg);
  auto& from = static_cast<const CMsgGCMsgMasterSetClientMsgRouting&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCMsgMasterSetClientMsgRouting)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entries()->MergeFrom(from._internal_entries());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCMsgMasterSetClientMsgRouting::CopyFrom(const CMsgGCMsgMasterSetClientMsgRouting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCMsgMasterSetClientMsgRouting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCMsgMasterSetClientMsgRouting::IsInitialized() const {
  return true;
}

void CMsgGCMsgMasterSetClientMsgRouting::InternalSwap(CMsgGCMsgMasterSetClientMsgRouting* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.entries_.InternalSwap(&other->_impl_.entries_);
}

::google::protobuf::Metadata CMsgGCMsgMasterSetClientMsgRouting::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[66]);
}
// ===================================================================

class CMsgGCMsgMasterSetWebAPIRouting_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCMsgMasterSetWebAPIRouting_Response>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetWebAPIRouting_Response, _impl_._has_bits_);
  static void set_has_eresult(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgGCMsgMasterSetWebAPIRouting_Response::CMsgGCMsgMasterSetWebAPIRouting_Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCMsgMasterSetWebAPIRouting_Response)
}
CMsgGCMsgMasterSetWebAPIRouting_Response::CMsgGCMsgMasterSetWebAPIRouting_Response(const CMsgGCMsgMasterSetWebAPIRouting_Response& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgMasterSetWebAPIRouting_Response)
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Response::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.eresult_){2},
  };
}
CMsgGCMsgMasterSetWebAPIRouting_Response::~CMsgGCMsgMasterSetWebAPIRouting_Response() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgMasterSetWebAPIRouting_Response)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Response::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CMsgGCMsgMasterSetWebAPIRouting_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCMsgMasterSetWebAPIRouting_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCMsgMasterSetWebAPIRouting_Response)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.eresult_ = 2;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCMsgMasterSetWebAPIRouting_Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CMsgGCMsgMasterSetWebAPIRouting_Response::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetWebAPIRouting_Response, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgGCMsgMasterSetWebAPIRouting_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 eresult = 1 [default = 2];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCMsgMasterSetWebAPIRouting_Response, _impl_.eresult_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetWebAPIRouting_Response, _impl_.eresult_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 eresult = 1 [default = 2];
    {PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetWebAPIRouting_Response, _impl_.eresult_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgGCMsgMasterSetWebAPIRouting_Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgMasterSetWebAPIRouting_Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_eresult(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgMasterSetWebAPIRouting_Response)
  return target;
}

::size_t CMsgGCMsgMasterSetWebAPIRouting_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCMsgMasterSetWebAPIRouting_Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 eresult = 1 [default = 2];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_eresult());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCMsgMasterSetWebAPIRouting_Response::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCMsgMasterSetWebAPIRouting_Response::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCMsgMasterSetWebAPIRouting_Response::GetClassData() const { return &_class_data_; }


void CMsgGCMsgMasterSetWebAPIRouting_Response::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCMsgMasterSetWebAPIRouting_Response*>(&to_msg);
  auto& from = static_cast<const CMsgGCMsgMasterSetWebAPIRouting_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCMsgMasterSetWebAPIRouting_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_eresult(from._internal_eresult());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCMsgMasterSetWebAPIRouting_Response::CopyFrom(const CMsgGCMsgMasterSetWebAPIRouting_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCMsgMasterSetWebAPIRouting_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCMsgMasterSetWebAPIRouting_Response::IsInitialized() const {
  return true;
}

void CMsgGCMsgMasterSetWebAPIRouting_Response::InternalSwap(CMsgGCMsgMasterSetWebAPIRouting_Response* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.eresult_, other->_impl_.eresult_);
}

::google::protobuf::Metadata CMsgGCMsgMasterSetWebAPIRouting_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[67]);
}
// ===================================================================

class CMsgGCMsgMasterSetClientMsgRouting_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCMsgMasterSetClientMsgRouting_Response>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetClientMsgRouting_Response, _impl_._has_bits_);
  static void set_has_eresult(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgGCMsgMasterSetClientMsgRouting_Response::CMsgGCMsgMasterSetClientMsgRouting_Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCMsgMasterSetClientMsgRouting_Response)
}
CMsgGCMsgMasterSetClientMsgRouting_Response::CMsgGCMsgMasterSetClientMsgRouting_Response(const CMsgGCMsgMasterSetClientMsgRouting_Response& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgMasterSetClientMsgRouting_Response)
}
inline void CMsgGCMsgMasterSetClientMsgRouting_Response::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.eresult_){2},
  };
}
CMsgGCMsgMasterSetClientMsgRouting_Response::~CMsgGCMsgMasterSetClientMsgRouting_Response() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgMasterSetClientMsgRouting_Response)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCMsgMasterSetClientMsgRouting_Response::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CMsgGCMsgMasterSetClientMsgRouting_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCMsgMasterSetClientMsgRouting_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCMsgMasterSetClientMsgRouting_Response)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.eresult_ = 2;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCMsgMasterSetClientMsgRouting_Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CMsgGCMsgMasterSetClientMsgRouting_Response::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetClientMsgRouting_Response, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgGCMsgMasterSetClientMsgRouting_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 eresult = 1 [default = 2];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCMsgMasterSetClientMsgRouting_Response, _impl_.eresult_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetClientMsgRouting_Response, _impl_.eresult_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 eresult = 1 [default = 2];
    {PROTOBUF_FIELD_OFFSET(CMsgGCMsgMasterSetClientMsgRouting_Response, _impl_.eresult_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgGCMsgMasterSetClientMsgRouting_Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgMasterSetClientMsgRouting_Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_eresult(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgMasterSetClientMsgRouting_Response)
  return target;
}

::size_t CMsgGCMsgMasterSetClientMsgRouting_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCMsgMasterSetClientMsgRouting_Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 eresult = 1 [default = 2];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_eresult());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCMsgMasterSetClientMsgRouting_Response::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCMsgMasterSetClientMsgRouting_Response::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCMsgMasterSetClientMsgRouting_Response::GetClassData() const { return &_class_data_; }


void CMsgGCMsgMasterSetClientMsgRouting_Response::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCMsgMasterSetClientMsgRouting_Response*>(&to_msg);
  auto& from = static_cast<const CMsgGCMsgMasterSetClientMsgRouting_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCMsgMasterSetClientMsgRouting_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_eresult(from._internal_eresult());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCMsgMasterSetClientMsgRouting_Response::CopyFrom(const CMsgGCMsgMasterSetClientMsgRouting_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCMsgMasterSetClientMsgRouting_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCMsgMasterSetClientMsgRouting_Response::IsInitialized() const {
  return true;
}

void CMsgGCMsgMasterSetClientMsgRouting_Response::InternalSwap(CMsgGCMsgMasterSetClientMsgRouting_Response* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.eresult_, other->_impl_.eresult_);
}

::google::protobuf::Metadata CMsgGCMsgMasterSetClientMsgRouting_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[68]);
}
// ===================================================================

class CMsgGCMsgSetOptions_MessageRange::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCMsgSetOptions_MessageRange>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgGCMsgSetOptions_MessageRange, _impl_._has_bits_);
  static void set_has_low(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_high(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

CMsgGCMsgSetOptions_MessageRange::CMsgGCMsgSetOptions_MessageRange(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCMsgSetOptions.MessageRange)
}
CMsgGCMsgSetOptions_MessageRange::CMsgGCMsgSetOptions_MessageRange(const CMsgGCMsgSetOptions_MessageRange& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgSetOptions.MessageRange)
}
inline void CMsgGCMsgSetOptions_MessageRange::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.low_){0u},
      decltype(_impl_.high_){0u},
  };
}
CMsgGCMsgSetOptions_MessageRange::~CMsgGCMsgSetOptions_MessageRange() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgSetOptions.MessageRange)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCMsgSetOptions_MessageRange::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CMsgGCMsgSetOptions_MessageRange::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCMsgSetOptions_MessageRange::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCMsgSetOptions.MessageRange)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.low_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.high_) -
        reinterpret_cast<char*>(&_impl_.low_)) + sizeof(_impl_.high_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCMsgSetOptions_MessageRange::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> CMsgGCMsgSetOptions_MessageRange::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCMsgSetOptions_MessageRange, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgGCMsgSetOptions_MessageRange_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required uint32 high = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCMsgSetOptions_MessageRange, _impl_.high_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCMsgSetOptions_MessageRange, _impl_.high_)}},
    // required uint32 low = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCMsgSetOptions_MessageRange, _impl_.low_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCMsgSetOptions_MessageRange, _impl_.low_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required uint32 low = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCMsgSetOptions_MessageRange, _impl_.low_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required uint32 high = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCMsgSetOptions_MessageRange, _impl_.high_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgGCMsgSetOptions_MessageRange::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgSetOptions.MessageRange)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required uint32 low = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_low(), target);
  }

  // required uint32 high = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_high(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgSetOptions.MessageRange)
  return target;
}

::size_t CMsgGCMsgSetOptions_MessageRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCMsgSetOptions.MessageRange)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required uint32 low = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_low());
    }

    // required uint32 high = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_high());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCMsgSetOptions_MessageRange::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCMsgSetOptions_MessageRange::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCMsgSetOptions_MessageRange::GetClassData() const { return &_class_data_; }


void CMsgGCMsgSetOptions_MessageRange::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCMsgSetOptions_MessageRange*>(&to_msg);
  auto& from = static_cast<const CMsgGCMsgSetOptions_MessageRange&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCMsgSetOptions.MessageRange)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.low_ = from._impl_.low_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.high_ = from._impl_.high_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCMsgSetOptions_MessageRange::CopyFrom(const CMsgGCMsgSetOptions_MessageRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCMsgSetOptions.MessageRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCMsgSetOptions_MessageRange::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void CMsgGCMsgSetOptions_MessageRange::InternalSwap(CMsgGCMsgSetOptions_MessageRange* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCMsgSetOptions_MessageRange, _impl_.high_)
      + sizeof(CMsgGCMsgSetOptions_MessageRange::_impl_.high_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCMsgSetOptions_MessageRange, _impl_.low_)>(
          reinterpret_cast<char*>(&_impl_.low_),
          reinterpret_cast<char*>(&other->_impl_.low_));
}

::google::protobuf::Metadata CMsgGCMsgSetOptions_MessageRange::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[69]);
}
// ===================================================================

class CMsgGCMsgSetOptions::_Internal {
 public:
};

CMsgGCMsgSetOptions::CMsgGCMsgSetOptions(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCMsgSetOptions)
}
CMsgGCMsgSetOptions::CMsgGCMsgSetOptions(const CMsgGCMsgSetOptions& from) : ::google::protobuf::Message() {
  CMsgGCMsgSetOptions* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.options_){from._internal_options()},
      decltype(_impl_.client_msg_ranges_){from._impl_.client_msg_ranges_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgSetOptions)
}
inline void CMsgGCMsgSetOptions::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.options_){arena},
      decltype(_impl_.client_msg_ranges_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
CMsgGCMsgSetOptions::~CMsgGCMsgSetOptions() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgSetOptions)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCMsgSetOptions::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_options()->~RepeatedField();
  _impl_.client_msg_ranges_.~RepeatedPtrField();
}
void CMsgGCMsgSetOptions::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCMsgSetOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCMsgSetOptions)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_options()->Clear();
  _internal_mutable_client_msg_ranges()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCMsgSetOptions::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> CMsgGCMsgSetOptions::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgGCMsgSetOptions_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .CMsgGCMsgSetOptions.MessageRange client_msg_ranges = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(CMsgGCMsgSetOptions, _impl_.client_msg_ranges_)}},
    // repeated .CMsgGCMsgSetOptions.Option options = 1;
    {::_pbi::TcParser::FastEr0R1,
     {8, 63, 3, PROTOBUF_FIELD_OFFSET(CMsgGCMsgSetOptions, _impl_.options_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .CMsgGCMsgSetOptions.Option options = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCMsgSetOptions, _impl_.options_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kEnumRange)},
    // repeated .CMsgGCMsgSetOptions.MessageRange client_msg_ranges = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCMsgSetOptions, _impl_.client_msg_ranges_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {0, 4},
    {::_pbi::TcParser::GetTable<::CMsgGCMsgSetOptions_MessageRange>()},
  }}, {{
  }},
};

::uint8_t* CMsgGCMsgSetOptions::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgSetOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .CMsgGCMsgSetOptions.Option options = 1;
  for (int i = 0, n = this->_internal_options_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, static_cast<::CMsgGCMsgSetOptions_Option>(this->_internal_options().Get(i)),
        target);
  }

  // repeated .CMsgGCMsgSetOptions.MessageRange client_msg_ranges = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_client_msg_ranges_size()); i < n; i++) {
    const auto& repfield = this->_internal_client_msg_ranges().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgSetOptions)
  return target;
}

::size_t CMsgGCMsgSetOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCMsgSetOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgGCMsgSetOptions.Option options = 1;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_options_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_options().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    total_size += std::size_t{1} * count;
  }
  // repeated .CMsgGCMsgSetOptions.MessageRange client_msg_ranges = 2;
  total_size += 1UL * this->_internal_client_msg_ranges_size();
  for (const auto& msg : this->_internal_client_msg_ranges()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCMsgSetOptions::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCMsgSetOptions::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCMsgSetOptions::GetClassData() const { return &_class_data_; }


void CMsgGCMsgSetOptions::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCMsgSetOptions*>(&to_msg);
  auto& from = static_cast<const CMsgGCMsgSetOptions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCMsgSetOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_options()->MergeFrom(from._internal_options());
  _this->_internal_mutable_client_msg_ranges()->MergeFrom(from._internal_client_msg_ranges());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCMsgSetOptions::CopyFrom(const CMsgGCMsgSetOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCMsgSetOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCMsgSetOptions::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_client_msg_ranges()))
    return false;
  return true;
}

void CMsgGCMsgSetOptions::InternalSwap(CMsgGCMsgSetOptions* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.options_.InternalSwap(&other->_impl_.options_);
  _impl_.client_msg_ranges_.InternalSwap(&other->_impl_.client_msg_ranges_);
}

::google::protobuf::Metadata CMsgGCMsgSetOptions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[70]);
}
// ===================================================================

class CMsgGCHUpdateSession_ExtraField::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCHUpdateSession_ExtraField>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession_ExtraField, _impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgGCHUpdateSession_ExtraField::CMsgGCHUpdateSession_ExtraField(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCHUpdateSession.ExtraField)
}
CMsgGCHUpdateSession_ExtraField::CMsgGCHUpdateSession_ExtraField(const CMsgGCHUpdateSession_ExtraField& from) : ::google::protobuf::Message() {
  CMsgGCHUpdateSession_ExtraField* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.value_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.value_.Set(from._internal_value(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:CMsgGCHUpdateSession.ExtraField)
}
inline void CMsgGCHUpdateSession_ExtraField::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.value_){},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CMsgGCHUpdateSession_ExtraField::~CMsgGCHUpdateSession_ExtraField() {
  // @@protoc_insertion_point(destructor:CMsgGCHUpdateSession.ExtraField)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCHUpdateSession_ExtraField::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.value_.Destroy();
}
void CMsgGCHUpdateSession_ExtraField::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCHUpdateSession_ExtraField::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCHUpdateSession.ExtraField)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.value_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCHUpdateSession_ExtraField::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 49, 2> CMsgGCHUpdateSession_ExtraField::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession_ExtraField, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgGCHUpdateSession_ExtraField_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string value = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession_ExtraField, _impl_.value_)}},
    // optional string name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession_ExtraField, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession_ExtraField, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string value = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession_ExtraField, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\4\5\0\0\0\0\0"
    "CMsgGCHUpdateSession.ExtraField"
    "name"
    "value"
  }},
};

::uint8_t* CMsgGCHUpdateSession_ExtraField::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCHUpdateSession.ExtraField)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCHUpdateSession.ExtraField.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_value();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgGCHUpdateSession.ExtraField.value");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCHUpdateSession.ExtraField)
  return target;
}

::size_t CMsgGCHUpdateSession_ExtraField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCHUpdateSession.ExtraField)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }

    // optional string value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_value());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCHUpdateSession_ExtraField::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCHUpdateSession_ExtraField::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCHUpdateSession_ExtraField::GetClassData() const { return &_class_data_; }


void CMsgGCHUpdateSession_ExtraField::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCHUpdateSession_ExtraField*>(&to_msg);
  auto& from = static_cast<const CMsgGCHUpdateSession_ExtraField&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCHUpdateSession.ExtraField)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_value(from._internal_value());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCHUpdateSession_ExtraField::CopyFrom(const CMsgGCHUpdateSession_ExtraField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCHUpdateSession.ExtraField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCHUpdateSession_ExtraField::IsInitialized() const {
  return true;
}

void CMsgGCHUpdateSession_ExtraField::InternalSwap(CMsgGCHUpdateSession_ExtraField* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, lhs_arena,
                                       &other->_impl_.value_, rhs_arena);
}

::google::protobuf::Metadata CMsgGCHUpdateSession_ExtraField::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[71]);
}
// ===================================================================

class CMsgGCHUpdateSession::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCHUpdateSession>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession, _impl_._has_bits_);
  static void set_has_steam_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_online(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_server_steam_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_server_addr(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_server_port(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_os_type(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_client_addr(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_owner_id(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_cm_session_sysid(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_cm_session_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
};

CMsgGCHUpdateSession::CMsgGCHUpdateSession(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCHUpdateSession)
}
CMsgGCHUpdateSession::CMsgGCHUpdateSession(const CMsgGCHUpdateSession& from) : ::google::protobuf::Message() {
  CMsgGCHUpdateSession* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.extra_fields_){from._impl_.extra_fields_},
      decltype(_impl_.depot_ids_){from._impl_.depot_ids_},
      decltype(_impl_.steam_id_){},
      decltype(_impl_.app_id_){},
      decltype(_impl_.online_){},
      decltype(_impl_.server_steam_id_){},
      decltype(_impl_.server_addr_){},
      decltype(_impl_.server_port_){},
      decltype(_impl_.os_type_){},
      decltype(_impl_.client_addr_){},
      decltype(_impl_.owner_id_){},
      decltype(_impl_.cm_session_sysid_){},
      decltype(_impl_.cm_session_identifier_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  ::memcpy(&_impl_.steam_id_, &from._impl_.steam_id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.cm_session_identifier_) -
    reinterpret_cast<char*>(&_impl_.steam_id_)) + sizeof(_impl_.cm_session_identifier_));

  // @@protoc_insertion_point(copy_constructor:CMsgGCHUpdateSession)
}
inline void CMsgGCHUpdateSession::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.extra_fields_){arena},
      decltype(_impl_.depot_ids_){arena},
      decltype(_impl_.steam_id_){::uint64_t{0u}},
      decltype(_impl_.app_id_){0u},
      decltype(_impl_.online_){false},
      decltype(_impl_.server_steam_id_){::uint64_t{0u}},
      decltype(_impl_.server_addr_){0u},
      decltype(_impl_.server_port_){0u},
      decltype(_impl_.os_type_){0u},
      decltype(_impl_.client_addr_){0u},
      decltype(_impl_.owner_id_){::uint64_t{0u}},
      decltype(_impl_.cm_session_sysid_){0u},
      decltype(_impl_.cm_session_identifier_){0u},
  };
}
CMsgGCHUpdateSession::~CMsgGCHUpdateSession() {
  // @@protoc_insertion_point(destructor:CMsgGCHUpdateSession)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCHUpdateSession::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.extra_fields_.~RepeatedPtrField();
  _impl_.depot_ids_.~RepeatedField();
}
void CMsgGCHUpdateSession::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCHUpdateSession::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCHUpdateSession)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_extra_fields()->Clear();
  _internal_mutable_depot_ids()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.steam_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.client_addr_) -
        reinterpret_cast<char*>(&_impl_.steam_id_)) + sizeof(_impl_.client_addr_));
  }
  if (cached_has_bits & 0x00000700u) {
    ::memset(&_impl_.owner_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.cm_session_identifier_) -
        reinterpret_cast<char*>(&_impl_.owner_id_)) + sizeof(_impl_.cm_session_identifier_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCHUpdateSession::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 1, 0, 2> CMsgGCHUpdateSession::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgGCHUpdateSession_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional fixed64 steam_id = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession, _impl_.steam_id_)}},
    // optional uint32 app_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCHUpdateSession, _impl_.app_id_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession, _impl_.app_id_)}},
    // optional bool online = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCHUpdateSession, _impl_.online_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession, _impl_.online_)}},
    // optional fixed64 server_steam_id = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession, _impl_.server_steam_id_)}},
    // optional uint32 server_addr = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCHUpdateSession, _impl_.server_addr_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession, _impl_.server_addr_)}},
    // optional uint32 server_port = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCHUpdateSession, _impl_.server_port_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession, _impl_.server_port_)}},
    // optional uint32 os_type = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCHUpdateSession, _impl_.os_type_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession, _impl_.os_type_)}},
    // optional uint32 client_addr = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCHUpdateSession, _impl_.client_addr_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession, _impl_.client_addr_)}},
    // repeated .CMsgGCHUpdateSession.ExtraField extra_fields = 9;
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession, _impl_.extra_fields_)}},
    // optional fixed64 owner_id = 10;
    {::_pbi::TcParser::FastF64S1,
     {81, 8, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession, _impl_.owner_id_)}},
    // optional uint32 cm_session_sysid = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCHUpdateSession, _impl_.cm_session_sysid_), 9>(),
     {88, 9, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession, _impl_.cm_session_sysid_)}},
    // optional uint32 cm_session_identifier = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCHUpdateSession, _impl_.cm_session_identifier_), 10>(),
     {96, 10, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession, _impl_.cm_session_identifier_)}},
    // repeated uint32 depot_ids = 13;
    {::_pbi::TcParser::FastV32R1,
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession, _impl_.depot_ids_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed64 steam_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession, _impl_.steam_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional uint32 app_id = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession, _impl_.app_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bool online = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession, _impl_.online_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional fixed64 server_steam_id = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession, _impl_.server_steam_id_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional uint32 server_addr = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession, _impl_.server_addr_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 server_port = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession, _impl_.server_port_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 os_type = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession, _impl_.os_type_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 client_addr = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession, _impl_.client_addr_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .CMsgGCHUpdateSession.ExtraField extra_fields = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession, _impl_.extra_fields_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional fixed64 owner_id = 10;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession, _impl_.owner_id_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional uint32 cm_session_sysid = 11;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession, _impl_.cm_session_sysid_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 cm_session_identifier = 12;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession, _impl_.cm_session_identifier_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated uint32 depot_ids = 13;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession, _impl_.depot_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgGCHUpdateSession_ExtraField>()},
  }}, {{
  }},
};

::uint8_t* CMsgGCHUpdateSession::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCHUpdateSession)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        1, this->_internal_steam_id(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_app_id(), target);
  }

  // optional bool online = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_online(), target);
  }

  // optional fixed64 server_steam_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        4, this->_internal_server_steam_id(), target);
  }

  // optional uint32 server_addr = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_server_addr(), target);
  }

  // optional uint32 server_port = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_server_port(), target);
  }

  // optional uint32 os_type = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_os_type(), target);
  }

  // optional uint32 client_addr = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this->_internal_client_addr(), target);
  }

  // repeated .CMsgGCHUpdateSession.ExtraField extra_fields = 9;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_extra_fields_size()); i < n; i++) {
    const auto& repfield = this->_internal_extra_fields().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(9, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional fixed64 owner_id = 10;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        10, this->_internal_owner_id(), target);
  }

  // optional uint32 cm_session_sysid = 11;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        11, this->_internal_cm_session_sysid(), target);
  }

  // optional uint32 cm_session_identifier = 12;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        12, this->_internal_cm_session_identifier(), target);
  }

  // repeated uint32 depot_ids = 13;
  for (int i = 0, n = this->_internal_depot_ids_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        13, this->_internal_depot_ids().Get(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCHUpdateSession)
  return target;
}

::size_t CMsgGCHUpdateSession::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCHUpdateSession)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgGCHUpdateSession.ExtraField extra_fields = 9;
  total_size += 1UL * this->_internal_extra_fields_size();
  for (const auto& msg : this->_internal_extra_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated uint32 depot_ids = 13;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_depot_ids())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_depot_ids_size());
    ;
    total_size += tag_size + data_size;
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional fixed64 steam_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 9;
    }

    // optional uint32 app_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_app_id());
    }

    // optional bool online = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }

    // optional fixed64 server_steam_id = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 9;
    }

    // optional uint32 server_addr = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_server_addr());
    }

    // optional uint32 server_port = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_server_port());
    }

    // optional uint32 os_type = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_os_type());
    }

    // optional uint32 client_addr = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_client_addr());
    }

  }
  if (cached_has_bits & 0x00000700u) {
    // optional fixed64 owner_id = 10;
    if (cached_has_bits & 0x00000100u) {
      total_size += 9;
    }

    // optional uint32 cm_session_sysid = 11;
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_cm_session_sysid());
    }

    // optional uint32 cm_session_identifier = 12;
    if (cached_has_bits & 0x00000400u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_cm_session_identifier());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCHUpdateSession::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCHUpdateSession::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCHUpdateSession::GetClassData() const { return &_class_data_; }


void CMsgGCHUpdateSession::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCHUpdateSession*>(&to_msg);
  auto& from = static_cast<const CMsgGCHUpdateSession&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCHUpdateSession)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_extra_fields()->MergeFrom(from._internal_extra_fields());
  _this->_internal_mutable_depot_ids()->MergeFrom(from._internal_depot_ids());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.steam_id_ = from._impl_.steam_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.app_id_ = from._impl_.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.online_ = from._impl_.online_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.server_steam_id_ = from._impl_.server_steam_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.server_addr_ = from._impl_.server_addr_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.server_port_ = from._impl_.server_port_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.os_type_ = from._impl_.os_type_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.client_addr_ = from._impl_.client_addr_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.owner_id_ = from._impl_.owner_id_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.cm_session_sysid_ = from._impl_.cm_session_sysid_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.cm_session_identifier_ = from._impl_.cm_session_identifier_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCHUpdateSession::CopyFrom(const CMsgGCHUpdateSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCHUpdateSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCHUpdateSession::IsInitialized() const {
  return true;
}

void CMsgGCHUpdateSession::InternalSwap(CMsgGCHUpdateSession* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.extra_fields_.InternalSwap(&other->_impl_.extra_fields_);
  _impl_.depot_ids_.InternalSwap(&other->_impl_.depot_ids_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession, _impl_.cm_session_identifier_)
      + sizeof(CMsgGCHUpdateSession::_impl_.cm_session_identifier_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCHUpdateSession, _impl_.steam_id_)>(
          reinterpret_cast<char*>(&_impl_.steam_id_),
          reinterpret_cast<char*>(&other->_impl_.steam_id_));
}

::google::protobuf::Metadata CMsgGCHUpdateSession::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[72]);
}
// ===================================================================

class CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgNotificationOfSuspiciousActivity_MultipleGameInstances>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgNotificationOfSuspiciousActivity_MultipleGameInstances, _impl_._has_bits_);
  static void set_has_app_instance_count(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
}
CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances(const CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& from) : ::google::protobuf::Message() {
  CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.other_steamids_){from._impl_.other_steamids_},
      decltype(_impl_.app_instance_count_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.app_instance_count_ = from._impl_.app_instance_count_;

  // @@protoc_insertion_point(copy_constructor:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
}
inline void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.other_steamids_){arena},
      decltype(_impl_.app_instance_count_){0u},
  };
}
CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::~CMsgNotificationOfSuspiciousActivity_MultipleGameInstances() {
  // @@protoc_insertion_point(destructor:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.other_steamids_.~RepeatedField();
}
void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_other_steamids()->Clear();
  _impl_.app_instance_count_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgNotificationOfSuspiciousActivity_MultipleGameInstances, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgNotificationOfSuspiciousActivity_MultipleGameInstances_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated fixed64 other_steamids = 2;
    {::_pbi::TcParser::FastF64R1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgNotificationOfSuspiciousActivity_MultipleGameInstances, _impl_.other_steamids_)}},
    // optional uint32 app_instance_count = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgNotificationOfSuspiciousActivity_MultipleGameInstances, _impl_.app_instance_count_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgNotificationOfSuspiciousActivity_MultipleGameInstances, _impl_.app_instance_count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 app_instance_count = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgNotificationOfSuspiciousActivity_MultipleGameInstances, _impl_.app_instance_count_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated fixed64 other_steamids = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgNotificationOfSuspiciousActivity_MultipleGameInstances, _impl_.other_steamids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFixed64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 app_instance_count = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_app_instance_count(), target);
  }

  // repeated fixed64 other_steamids = 2;
  for (int i = 0, n = this->_internal_other_steamids_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        2, this->_internal_other_steamids().Get(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
  return target;
}

::size_t CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated fixed64 other_steamids = 2;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_other_steamids_size())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_other_steamids_size());
    ;
    total_size += tag_size + data_size;
  }
  // optional uint32 app_instance_count = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_app_instance_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::GetClassData() const { return &_class_data_; }


void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgNotificationOfSuspiciousActivity_MultipleGameInstances*>(&to_msg);
  auto& from = static_cast<const CMsgNotificationOfSuspiciousActivity_MultipleGameInstances&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_other_steamids()->MergeFrom(from._internal_other_steamids());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_app_instance_count(from._internal_app_instance_count());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::CopyFrom(const CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::IsInitialized() const {
  return true;
}

void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::InternalSwap(CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.other_steamids_.InternalSwap(&other->_impl_.other_steamids_);
        swap(_impl_.app_instance_count_, other->_impl_.app_instance_count_);
}

::google::protobuf::Metadata CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[73]);
}
// ===================================================================

class CMsgNotificationOfSuspiciousActivity::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgNotificationOfSuspiciousActivity>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgNotificationOfSuspiciousActivity, _impl_._has_bits_);
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_appid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& multiple_instances(const CMsgNotificationOfSuspiciousActivity* msg);
  static void set_has_multiple_instances(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& CMsgNotificationOfSuspiciousActivity::_Internal::multiple_instances(const CMsgNotificationOfSuspiciousActivity* msg) {
  return *msg->_impl_.multiple_instances_;
}
CMsgNotificationOfSuspiciousActivity::CMsgNotificationOfSuspiciousActivity(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgNotificationOfSuspiciousActivity)
}
CMsgNotificationOfSuspiciousActivity::CMsgNotificationOfSuspiciousActivity(const CMsgNotificationOfSuspiciousActivity& from) : ::google::protobuf::Message() {
  CMsgNotificationOfSuspiciousActivity* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.multiple_instances_){nullptr},
      decltype(_impl_.steamid_){},
      decltype(_impl_.appid_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.multiple_instances_ = new ::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances(*from._impl_.multiple_instances_);
  }
  ::memcpy(&_impl_.steamid_, &from._impl_.steamid_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.appid_) -
    reinterpret_cast<char*>(&_impl_.steamid_)) + sizeof(_impl_.appid_));

  // @@protoc_insertion_point(copy_constructor:CMsgNotificationOfSuspiciousActivity)
}
inline void CMsgNotificationOfSuspiciousActivity::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.multiple_instances_){nullptr},
      decltype(_impl_.steamid_){::uint64_t{0u}},
      decltype(_impl_.appid_){0u},
  };
}
CMsgNotificationOfSuspiciousActivity::~CMsgNotificationOfSuspiciousActivity() {
  // @@protoc_insertion_point(destructor:CMsgNotificationOfSuspiciousActivity)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgNotificationOfSuspiciousActivity::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.multiple_instances_;
}
void CMsgNotificationOfSuspiciousActivity::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgNotificationOfSuspiciousActivity::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgNotificationOfSuspiciousActivity)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.multiple_instances_ != nullptr);
    _impl_.multiple_instances_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.steamid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.appid_) -
        reinterpret_cast<char*>(&_impl_.steamid_)) + sizeof(_impl_.appid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgNotificationOfSuspiciousActivity::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> CMsgNotificationOfSuspiciousActivity::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgNotificationOfSuspiciousActivity, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgNotificationOfSuspiciousActivity_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional fixed64 steamid = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgNotificationOfSuspiciousActivity, _impl_.steamid_)}},
    // optional uint32 appid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgNotificationOfSuspiciousActivity, _impl_.appid_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgNotificationOfSuspiciousActivity, _impl_.appid_)}},
    // optional .CMsgNotificationOfSuspiciousActivity.MultipleGameInstances multiple_instances = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgNotificationOfSuspiciousActivity, _impl_.multiple_instances_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed64 steamid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgNotificationOfSuspiciousActivity, _impl_.steamid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional uint32 appid = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgNotificationOfSuspiciousActivity, _impl_.appid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .CMsgNotificationOfSuspiciousActivity.MultipleGameInstances multiple_instances = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgNotificationOfSuspiciousActivity, _impl_.multiple_instances_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances>()},
  }}, {{
  }},
};

::uint8_t* CMsgNotificationOfSuspiciousActivity::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgNotificationOfSuspiciousActivity)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        1, this->_internal_steamid(), target);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_appid(), target);
  }

  // optional .CMsgNotificationOfSuspiciousActivity.MultipleGameInstances multiple_instances = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::multiple_instances(this),
        _Internal::multiple_instances(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgNotificationOfSuspiciousActivity)
  return target;
}

::size_t CMsgNotificationOfSuspiciousActivity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgNotificationOfSuspiciousActivity)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .CMsgNotificationOfSuspiciousActivity.MultipleGameInstances multiple_instances = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.multiple_instances_);
    }

    // optional fixed64 steamid = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }

    // optional uint32 appid = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_appid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgNotificationOfSuspiciousActivity::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgNotificationOfSuspiciousActivity::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgNotificationOfSuspiciousActivity::GetClassData() const { return &_class_data_; }


void CMsgNotificationOfSuspiciousActivity::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgNotificationOfSuspiciousActivity*>(&to_msg);
  auto& from = static_cast<const CMsgNotificationOfSuspiciousActivity&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgNotificationOfSuspiciousActivity)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_multiple_instances()->::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::MergeFrom(
          from._internal_multiple_instances());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.steamid_ = from._impl_.steamid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.appid_ = from._impl_.appid_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgNotificationOfSuspiciousActivity::CopyFrom(const CMsgNotificationOfSuspiciousActivity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgNotificationOfSuspiciousActivity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgNotificationOfSuspiciousActivity::IsInitialized() const {
  return true;
}

void CMsgNotificationOfSuspiciousActivity::InternalSwap(CMsgNotificationOfSuspiciousActivity* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgNotificationOfSuspiciousActivity, _impl_.appid_)
      + sizeof(CMsgNotificationOfSuspiciousActivity::_impl_.appid_)
      - PROTOBUF_FIELD_OFFSET(CMsgNotificationOfSuspiciousActivity, _impl_.multiple_instances_)>(
          reinterpret_cast<char*>(&_impl_.multiple_instances_),
          reinterpret_cast<char*>(&other->_impl_.multiple_instances_));
}

::google::protobuf::Metadata CMsgNotificationOfSuspiciousActivity::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[74]);
}
// ===================================================================

class CMsgDPPartnerMicroTxns_PartnerMicroTxn::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgDPPartnerMicroTxns_PartnerMicroTxn>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_._has_bits_);
  static void set_has_init_time(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_last_update_time(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_txn_id(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_line_item(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_item_id(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_def_index(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_price(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_tax(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_price_usd(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_tax_usd(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_purchase_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_steam_txn_type(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_country_code(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_region_code(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_quantity(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_ref_trans_id(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
};

CMsgDPPartnerMicroTxns_PartnerMicroTxn::CMsgDPPartnerMicroTxns_PartnerMicroTxn(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgDPPartnerMicroTxns.PartnerMicroTxn)
}
CMsgDPPartnerMicroTxns_PartnerMicroTxn::CMsgDPPartnerMicroTxns_PartnerMicroTxn(const CMsgDPPartnerMicroTxns_PartnerMicroTxn& from) : ::google::protobuf::Message() {
  CMsgDPPartnerMicroTxns_PartnerMicroTxn* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.country_code_){},
      decltype(_impl_.region_code_){},
      decltype(_impl_.init_time_){},
      decltype(_impl_.last_update_time_){},
      decltype(_impl_.txn_id_){},
      decltype(_impl_.account_id_){},
      decltype(_impl_.line_item_){},
      decltype(_impl_.item_id_){},
      decltype(_impl_.price_){},
      decltype(_impl_.tax_){},
      decltype(_impl_.def_index_){},
      decltype(_impl_.purchase_type_){},
      decltype(_impl_.price_usd_){},
      decltype(_impl_.tax_usd_){},
      decltype(_impl_.steam_txn_type_){},
      decltype(_impl_.quantity_){},
      decltype(_impl_.ref_trans_id_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.country_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.country_code_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.country_code_.Set(from._internal_country_code(), _this->GetArenaForAllocation());
  }
  _impl_.region_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.region_code_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.region_code_.Set(from._internal_region_code(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.init_time_, &from._impl_.init_time_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.ref_trans_id_) -
    reinterpret_cast<char*>(&_impl_.init_time_)) + sizeof(_impl_.ref_trans_id_));

  // @@protoc_insertion_point(copy_constructor:CMsgDPPartnerMicroTxns.PartnerMicroTxn)
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.country_code_){},
      decltype(_impl_.region_code_){},
      decltype(_impl_.init_time_){0u},
      decltype(_impl_.last_update_time_){0u},
      decltype(_impl_.txn_id_){::uint64_t{0u}},
      decltype(_impl_.account_id_){0u},
      decltype(_impl_.line_item_){0u},
      decltype(_impl_.item_id_){::uint64_t{0u}},
      decltype(_impl_.price_){::uint64_t{0u}},
      decltype(_impl_.tax_){::uint64_t{0u}},
      decltype(_impl_.def_index_){0u},
      decltype(_impl_.purchase_type_){0u},
      decltype(_impl_.price_usd_){::uint64_t{0u}},
      decltype(_impl_.tax_usd_){::uint64_t{0u}},
      decltype(_impl_.steam_txn_type_){0u},
      decltype(_impl_.quantity_){0},
      decltype(_impl_.ref_trans_id_){::uint64_t{0u}},
  };
  _impl_.country_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.country_code_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.region_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.region_code_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CMsgDPPartnerMicroTxns_PartnerMicroTxn::~CMsgDPPartnerMicroTxns_PartnerMicroTxn() {
  // @@protoc_insertion_point(destructor:CMsgDPPartnerMicroTxns.PartnerMicroTxn)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.country_code_.Destroy();
  _impl_.region_code_.Destroy();
}
void CMsgDPPartnerMicroTxns_PartnerMicroTxn::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgDPPartnerMicroTxns_PartnerMicroTxn::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgDPPartnerMicroTxns.PartnerMicroTxn)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.country_code_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.region_code_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000fcu) {
    ::memset(&_impl_.init_time_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.item_id_) -
        reinterpret_cast<char*>(&_impl_.init_time_)) + sizeof(_impl_.item_id_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.price_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.quantity_) -
        reinterpret_cast<char*>(&_impl_.price_)) + sizeof(_impl_.quantity_));
  }
  _impl_.ref_trans_id_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgDPPartnerMicroTxns_PartnerMicroTxn::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 17, 0, 86, 2> CMsgDPPartnerMicroTxns_PartnerMicroTxn::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_._has_bits_),
    0, // no _extensions_
    17, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294836224,  // skipmap
    offsetof(decltype(_table_), field_entries),
    17,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgDPPartnerMicroTxns_PartnerMicroTxn_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 init_time = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.init_time_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.init_time_)}},
    // optional uint32 last_update_time = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.last_update_time_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.last_update_time_)}},
    // optional uint64 txn_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.txn_id_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.txn_id_)}},
    // optional uint32 account_id = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.account_id_), 5>(),
     {32, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.account_id_)}},
    // optional uint32 line_item = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.line_item_), 6>(),
     {40, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.line_item_)}},
    // optional uint64 item_id = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.item_id_), 7>(),
     {48, 7, 0, PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.item_id_)}},
    // optional uint32 def_index = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.def_index_), 10>(),
     {56, 10, 0, PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.def_index_)}},
    // optional uint64 price = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.price_), 8>(),
     {64, 8, 0, PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.price_)}},
    // optional uint64 tax = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.tax_), 9>(),
     {72, 9, 0, PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.tax_)}},
    // optional uint64 price_usd = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.price_usd_), 12>(),
     {80, 12, 0, PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.price_usd_)}},
    // optional uint64 tax_usd = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.tax_usd_), 13>(),
     {88, 13, 0, PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.tax_usd_)}},
    // optional uint32 purchase_type = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.purchase_type_), 11>(),
     {96, 11, 0, PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.purchase_type_)}},
    // optional uint32 steam_txn_type = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.steam_txn_type_), 14>(),
     {104, 14, 0, PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.steam_txn_type_)}},
    // optional string country_code = 14;
    {::_pbi::TcParser::FastSS1,
     {114, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.country_code_)}},
    // optional string region_code = 15;
    {::_pbi::TcParser::FastSS1,
     {122, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.region_code_)}},
    // optional int32 quantity = 16;
    {::_pbi::TcParser::FastV32S2,
     {384, 15, 0, PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.quantity_)}},
    // optional uint64 ref_trans_id = 17;
    {::_pbi::TcParser::FastV64S2,
     {392, 16, 0, PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.ref_trans_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 init_time = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.init_time_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 last_update_time = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.last_update_time_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 txn_id = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.txn_id_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 account_id = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.account_id_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 line_item = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.line_item_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 item_id = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.item_id_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 def_index = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.def_index_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 price = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.price_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 tax = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.tax_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 price_usd = 10;
    {PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.price_usd_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 tax_usd = 11;
    {PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.tax_usd_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 purchase_type = 12;
    {PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.purchase_type_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 steam_txn_type = 13;
    {PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.steam_txn_type_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string country_code = 14;
    {PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.country_code_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string region_code = 15;
    {PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.region_code_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 quantity = 16;
    {PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.quantity_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint64 ref_trans_id = 17;
    {PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.ref_trans_id_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\46\0\0\0\0\0\0\0\0\0\0\0\0\0\14\13\0\0\0\0\0\0\0\0"
    "CMsgDPPartnerMicroTxns.PartnerMicroTxn"
    "country_code"
    "region_code"
  }},
};

::uint8_t* CMsgDPPartnerMicroTxns_PartnerMicroTxn::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgDPPartnerMicroTxns.PartnerMicroTxn)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 init_time = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_init_time(), target);
  }

  // optional uint32 last_update_time = 2;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_last_update_time(), target);
  }

  // optional uint64 txn_id = 3;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_txn_id(), target);
  }

  // optional uint32 account_id = 4;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_account_id(), target);
  }

  // optional uint32 line_item = 5;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_line_item(), target);
  }

  // optional uint64 item_id = 6;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        6, this->_internal_item_id(), target);
  }

  // optional uint32 def_index = 7;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_def_index(), target);
  }

  // optional uint64 price = 8;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        8, this->_internal_price(), target);
  }

  // optional uint64 tax = 9;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        9, this->_internal_tax(), target);
  }

  // optional uint64 price_usd = 10;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        10, this->_internal_price_usd(), target);
  }

  // optional uint64 tax_usd = 11;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        11, this->_internal_tax_usd(), target);
  }

  // optional uint32 purchase_type = 12;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        12, this->_internal_purchase_type(), target);
  }

  // optional uint32 steam_txn_type = 13;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        13, this->_internal_steam_txn_type(), target);
  }

  // optional string country_code = 14;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_country_code();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgDPPartnerMicroTxns.PartnerMicroTxn.country_code");
    target = stream->WriteStringMaybeAliased(14, _s, target);
  }

  // optional string region_code = 15;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_region_code();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgDPPartnerMicroTxns.PartnerMicroTxn.region_code");
    target = stream->WriteStringMaybeAliased(15, _s, target);
  }

  // optional int32 quantity = 16;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        16, this->_internal_quantity(), target);
  }

  // optional uint64 ref_trans_id = 17;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        17, this->_internal_ref_trans_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgDPPartnerMicroTxns.PartnerMicroTxn)
  return target;
}

::size_t CMsgDPPartnerMicroTxns_PartnerMicroTxn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgDPPartnerMicroTxns.PartnerMicroTxn)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string country_code = 14;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_country_code());
    }

    // optional string region_code = 15;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_region_code());
    }

    // optional uint32 init_time = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_init_time());
    }

    // optional uint32 last_update_time = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_last_update_time());
    }

    // optional uint64 txn_id = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_txn_id());
    }

    // optional uint32 account_id = 4;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_account_id());
    }

    // optional uint32 line_item = 5;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_line_item());
    }

    // optional uint64 item_id = 6;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_item_id());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional uint64 price = 8;
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_price());
    }

    // optional uint64 tax = 9;
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_tax());
    }

    // optional uint32 def_index = 7;
    if (cached_has_bits & 0x00000400u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_def_index());
    }

    // optional uint32 purchase_type = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_purchase_type());
    }

    // optional uint64 price_usd = 10;
    if (cached_has_bits & 0x00001000u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_price_usd());
    }

    // optional uint64 tax_usd = 11;
    if (cached_has_bits & 0x00002000u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_tax_usd());
    }

    // optional uint32 steam_txn_type = 13;
    if (cached_has_bits & 0x00004000u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_steam_txn_type());
    }

    // optional int32 quantity = 16;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_quantity());
    }

  }
  // optional uint64 ref_trans_id = 17;
  if (cached_has_bits & 0x00010000u) {
    total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                    this->_internal_ref_trans_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgDPPartnerMicroTxns_PartnerMicroTxn::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgDPPartnerMicroTxns_PartnerMicroTxn::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgDPPartnerMicroTxns_PartnerMicroTxn::GetClassData() const { return &_class_data_; }


void CMsgDPPartnerMicroTxns_PartnerMicroTxn::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgDPPartnerMicroTxns_PartnerMicroTxn*>(&to_msg);
  auto& from = static_cast<const CMsgDPPartnerMicroTxns_PartnerMicroTxn&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgDPPartnerMicroTxns.PartnerMicroTxn)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_country_code(from._internal_country_code());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_region_code(from._internal_region_code());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.init_time_ = from._impl_.init_time_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.last_update_time_ = from._impl_.last_update_time_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.txn_id_ = from._impl_.txn_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.account_id_ = from._impl_.account_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.line_item_ = from._impl_.line_item_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.item_id_ = from._impl_.item_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.price_ = from._impl_.price_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.tax_ = from._impl_.tax_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.def_index_ = from._impl_.def_index_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.purchase_type_ = from._impl_.purchase_type_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.price_usd_ = from._impl_.price_usd_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.tax_usd_ = from._impl_.tax_usd_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.steam_txn_type_ = from._impl_.steam_txn_type_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.quantity_ = from._impl_.quantity_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00010000u) {
    _this->_internal_set_ref_trans_id(from._internal_ref_trans_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgDPPartnerMicroTxns_PartnerMicroTxn::CopyFrom(const CMsgDPPartnerMicroTxns_PartnerMicroTxn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgDPPartnerMicroTxns.PartnerMicroTxn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::IsInitialized() const {
  return true;
}

void CMsgDPPartnerMicroTxns_PartnerMicroTxn::InternalSwap(CMsgDPPartnerMicroTxns_PartnerMicroTxn* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.country_code_, lhs_arena,
                                       &other->_impl_.country_code_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.region_code_, lhs_arena,
                                       &other->_impl_.region_code_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.ref_trans_id_)
      + sizeof(CMsgDPPartnerMicroTxns_PartnerMicroTxn::_impl_.ref_trans_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerMicroTxn, _impl_.init_time_)>(
          reinterpret_cast<char*>(&_impl_.init_time_),
          reinterpret_cast<char*>(&other->_impl_.init_time_));
}

::google::protobuf::Metadata CMsgDPPartnerMicroTxns_PartnerMicroTxn::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[75]);
}
// ===================================================================

class CMsgDPPartnerMicroTxns_PartnerInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgDPPartnerMicroTxns_PartnerInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerInfo, _impl_._has_bits_);
  static void set_has_partner_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_partner_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_currency_code(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_currency_name(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgDPPartnerMicroTxns_PartnerInfo::CMsgDPPartnerMicroTxns_PartnerInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgDPPartnerMicroTxns.PartnerInfo)
}
CMsgDPPartnerMicroTxns_PartnerInfo::CMsgDPPartnerMicroTxns_PartnerInfo(const CMsgDPPartnerMicroTxns_PartnerInfo& from) : ::google::protobuf::Message() {
  CMsgDPPartnerMicroTxns_PartnerInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.partner_name_){},
      decltype(_impl_.currency_code_){},
      decltype(_impl_.currency_name_){},
      decltype(_impl_.partner_id_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.partner_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.partner_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.partner_name_.Set(from._internal_partner_name(), _this->GetArenaForAllocation());
  }
  _impl_.currency_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.currency_code_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.currency_code_.Set(from._internal_currency_code(), _this->GetArenaForAllocation());
  }
  _impl_.currency_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.currency_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.currency_name_.Set(from._internal_currency_name(), _this->GetArenaForAllocation());
  }
  _this->_impl_.partner_id_ = from._impl_.partner_id_;

  // @@protoc_insertion_point(copy_constructor:CMsgDPPartnerMicroTxns.PartnerInfo)
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.partner_name_){},
      decltype(_impl_.currency_code_){},
      decltype(_impl_.currency_name_){},
      decltype(_impl_.partner_id_){0u},
  };
  _impl_.partner_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.partner_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.currency_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.currency_code_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.currency_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.currency_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CMsgDPPartnerMicroTxns_PartnerInfo::~CMsgDPPartnerMicroTxns_PartnerInfo() {
  // @@protoc_insertion_point(destructor:CMsgDPPartnerMicroTxns.PartnerInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.partner_name_.Destroy();
  _impl_.currency_code_.Destroy();
  _impl_.currency_name_.Destroy();
}
void CMsgDPPartnerMicroTxns_PartnerInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgDPPartnerMicroTxns_PartnerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgDPPartnerMicroTxns.PartnerInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.partner_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.currency_code_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.currency_name_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.partner_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgDPPartnerMicroTxns_PartnerInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 81, 2> CMsgDPPartnerMicroTxns_PartnerInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerInfo, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgDPPartnerMicroTxns_PartnerInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string currency_name = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerInfo, _impl_.currency_name_)}},
    // optional uint32 partner_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgDPPartnerMicroTxns_PartnerInfo, _impl_.partner_id_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerInfo, _impl_.partner_id_)}},
    // optional string partner_name = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerInfo, _impl_.partner_name_)}},
    // optional string currency_code = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerInfo, _impl_.currency_code_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 partner_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerInfo, _impl_.partner_id_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string partner_name = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerInfo, _impl_.partner_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string currency_code = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerInfo, _impl_.currency_code_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string currency_name = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns_PartnerInfo, _impl_.currency_name_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\0\14\15\15\0\0\0"
    "CMsgDPPartnerMicroTxns.PartnerInfo"
    "partner_name"
    "currency_code"
    "currency_name"
  }},
};

::uint8_t* CMsgDPPartnerMicroTxns_PartnerInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgDPPartnerMicroTxns.PartnerInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 partner_id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_partner_id(), target);
  }

  // optional string partner_name = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_partner_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgDPPartnerMicroTxns.PartnerInfo.partner_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string currency_code = 3;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_currency_code();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgDPPartnerMicroTxns.PartnerInfo.currency_code");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string currency_name = 4;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_currency_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgDPPartnerMicroTxns.PartnerInfo.currency_name");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgDPPartnerMicroTxns.PartnerInfo)
  return target;
}

::size_t CMsgDPPartnerMicroTxns_PartnerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgDPPartnerMicroTxns.PartnerInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string partner_name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_partner_name());
    }

    // optional string currency_code = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_currency_code());
    }

    // optional string currency_name = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_currency_name());
    }

    // optional uint32 partner_id = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_partner_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgDPPartnerMicroTxns_PartnerInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgDPPartnerMicroTxns_PartnerInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgDPPartnerMicroTxns_PartnerInfo::GetClassData() const { return &_class_data_; }


void CMsgDPPartnerMicroTxns_PartnerInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgDPPartnerMicroTxns_PartnerInfo*>(&to_msg);
  auto& from = static_cast<const CMsgDPPartnerMicroTxns_PartnerInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgDPPartnerMicroTxns.PartnerInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_partner_name(from._internal_partner_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_currency_code(from._internal_currency_code());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_currency_name(from._internal_currency_name());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.partner_id_ = from._impl_.partner_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgDPPartnerMicroTxns_PartnerInfo::CopyFrom(const CMsgDPPartnerMicroTxns_PartnerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgDPPartnerMicroTxns.PartnerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgDPPartnerMicroTxns_PartnerInfo::IsInitialized() const {
  return true;
}

void CMsgDPPartnerMicroTxns_PartnerInfo::InternalSwap(CMsgDPPartnerMicroTxns_PartnerInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.partner_name_, lhs_arena,
                                       &other->_impl_.partner_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.currency_code_, lhs_arena,
                                       &other->_impl_.currency_code_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.currency_name_, lhs_arena,
                                       &other->_impl_.currency_name_, rhs_arena);
        swap(_impl_.partner_id_, other->_impl_.partner_id_);
}

::google::protobuf::Metadata CMsgDPPartnerMicroTxns_PartnerInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[76]);
}
// ===================================================================

class CMsgDPPartnerMicroTxns::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgDPPartnerMicroTxns>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns, _impl_._has_bits_);
  static void set_has_appid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_gc_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::CMsgDPPartnerMicroTxns_PartnerInfo& partner(const CMsgDPPartnerMicroTxns* msg);
  static void set_has_partner(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::CMsgDPPartnerMicroTxns_PartnerInfo& CMsgDPPartnerMicroTxns::_Internal::partner(const CMsgDPPartnerMicroTxns* msg) {
  return *msg->_impl_.partner_;
}
CMsgDPPartnerMicroTxns::CMsgDPPartnerMicroTxns(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgDPPartnerMicroTxns)
}
CMsgDPPartnerMicroTxns::CMsgDPPartnerMicroTxns(const CMsgDPPartnerMicroTxns& from) : ::google::protobuf::Message() {
  CMsgDPPartnerMicroTxns* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.transactions_){from._impl_.transactions_},
      decltype(_impl_.gc_name_){},
      decltype(_impl_.partner_){nullptr},
      decltype(_impl_.appid_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.gc_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.gc_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.gc_name_.Set(from._internal_gc_name(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.partner_ = new ::CMsgDPPartnerMicroTxns_PartnerInfo(*from._impl_.partner_);
  }
  _this->_impl_.appid_ = from._impl_.appid_;

  // @@protoc_insertion_point(copy_constructor:CMsgDPPartnerMicroTxns)
}
inline void CMsgDPPartnerMicroTxns::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.transactions_){arena},
      decltype(_impl_.gc_name_){},
      decltype(_impl_.partner_){nullptr},
      decltype(_impl_.appid_){0u},
  };
  _impl_.gc_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.gc_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CMsgDPPartnerMicroTxns::~CMsgDPPartnerMicroTxns() {
  // @@protoc_insertion_point(destructor:CMsgDPPartnerMicroTxns)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgDPPartnerMicroTxns::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.transactions_.~RepeatedPtrField();
  _impl_.gc_name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.partner_;
}
void CMsgDPPartnerMicroTxns::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgDPPartnerMicroTxns::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgDPPartnerMicroTxns)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_transactions()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.gc_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.partner_ != nullptr);
      _impl_.partner_->Clear();
    }
  }
  _impl_.appid_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgDPPartnerMicroTxns::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 38, 2> CMsgDPPartnerMicroTxns::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgDPPartnerMicroTxns_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .CMsgDPPartnerMicroTxns.PartnerMicroTxn transactions = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns, _impl_.transactions_)}},
    // optional uint32 appid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgDPPartnerMicroTxns, _impl_.appid_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns, _impl_.appid_)}},
    // optional string gc_name = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns, _impl_.gc_name_)}},
    // optional .CMsgDPPartnerMicroTxns.PartnerInfo partner = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns, _impl_.partner_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 appid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns, _impl_.appid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string gc_name = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns, _impl_.gc_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .CMsgDPPartnerMicroTxns.PartnerInfo partner = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns, _impl_.partner_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .CMsgDPPartnerMicroTxns.PartnerMicroTxn transactions = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns, _impl_.transactions_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgDPPartnerMicroTxns_PartnerInfo>()},
    {::_pbi::TcParser::GetTable<::CMsgDPPartnerMicroTxns_PartnerMicroTxn>()},
  }}, {{
    "\26\0\7\0\0\0\0\0"
    "CMsgDPPartnerMicroTxns"
    "gc_name"
  }},
};

::uint8_t* CMsgDPPartnerMicroTxns::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgDPPartnerMicroTxns)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_appid(), target);
  }

  // optional string gc_name = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_gc_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgDPPartnerMicroTxns.gc_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional .CMsgDPPartnerMicroTxns.PartnerInfo partner = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::partner(this),
        _Internal::partner(this).GetCachedSize(), target, stream);
  }

  // repeated .CMsgDPPartnerMicroTxns.PartnerMicroTxn transactions = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_transactions_size()); i < n; i++) {
    const auto& repfield = this->_internal_transactions().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgDPPartnerMicroTxns)
  return target;
}

::size_t CMsgDPPartnerMicroTxns::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgDPPartnerMicroTxns)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgDPPartnerMicroTxns.PartnerMicroTxn transactions = 4;
  total_size += 1UL * this->_internal_transactions_size();
  for (const auto& msg : this->_internal_transactions()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string gc_name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_gc_name());
    }

    // optional .CMsgDPPartnerMicroTxns.PartnerInfo partner = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.partner_);
    }

    // optional uint32 appid = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_appid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgDPPartnerMicroTxns::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgDPPartnerMicroTxns::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgDPPartnerMicroTxns::GetClassData() const { return &_class_data_; }


void CMsgDPPartnerMicroTxns::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgDPPartnerMicroTxns*>(&to_msg);
  auto& from = static_cast<const CMsgDPPartnerMicroTxns&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgDPPartnerMicroTxns)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_transactions()->MergeFrom(from._internal_transactions());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_gc_name(from._internal_gc_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_partner()->::CMsgDPPartnerMicroTxns_PartnerInfo::MergeFrom(
          from._internal_partner());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.appid_ = from._impl_.appid_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgDPPartnerMicroTxns::CopyFrom(const CMsgDPPartnerMicroTxns& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgDPPartnerMicroTxns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgDPPartnerMicroTxns::IsInitialized() const {
  return true;
}

void CMsgDPPartnerMicroTxns::InternalSwap(CMsgDPPartnerMicroTxns* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.transactions_.InternalSwap(&other->_impl_.transactions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.gc_name_, lhs_arena,
                                       &other->_impl_.gc_name_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns, _impl_.appid_)
      + sizeof(CMsgDPPartnerMicroTxns::_impl_.appid_)
      - PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxns, _impl_.partner_)>(
          reinterpret_cast<char*>(&_impl_.partner_),
          reinterpret_cast<char*>(&other->_impl_.partner_));
}

::google::protobuf::Metadata CMsgDPPartnerMicroTxns::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[77]);
}
// ===================================================================

class CMsgDPPartnerMicroTxnsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgDPPartnerMicroTxnsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxnsResponse, _impl_._has_bits_);
  static void set_has_eresult(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_eerrorcode(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgDPPartnerMicroTxnsResponse::CMsgDPPartnerMicroTxnsResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgDPPartnerMicroTxnsResponse)
}
CMsgDPPartnerMicroTxnsResponse::CMsgDPPartnerMicroTxnsResponse(const CMsgDPPartnerMicroTxnsResponse& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgDPPartnerMicroTxnsResponse)
}
inline void CMsgDPPartnerMicroTxnsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.eerrorcode_){0},
      decltype(_impl_.eresult_){2u},
  };
}
CMsgDPPartnerMicroTxnsResponse::~CMsgDPPartnerMicroTxnsResponse() {
  // @@protoc_insertion_point(destructor:CMsgDPPartnerMicroTxnsResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgDPPartnerMicroTxnsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CMsgDPPartnerMicroTxnsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgDPPartnerMicroTxnsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgDPPartnerMicroTxnsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    _impl_.eerrorcode_ = 0;
    _impl_.eresult_ = 2u;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgDPPartnerMicroTxnsResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> CMsgDPPartnerMicroTxnsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxnsResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgDPPartnerMicroTxnsResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .CMsgDPPartnerMicroTxnsResponse.EErrorCode eerrorcode = 2 [default = k_MsgValid];
    {::_pbi::TcParser::FastEvS1,
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxnsResponse, _impl_.eerrorcode_)}},
    // optional uint32 eresult = 1 [default = 2];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgDPPartnerMicroTxnsResponse, _impl_.eresult_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxnsResponse, _impl_.eresult_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 eresult = 1 [default = 2];
    {PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxnsResponse, _impl_.eresult_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .CMsgDPPartnerMicroTxnsResponse.EErrorCode eerrorcode = 2 [default = k_MsgValid];
    {PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxnsResponse, _impl_.eerrorcode_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
  }}, {{
    {::CMsgDPPartnerMicroTxnsResponse_EErrorCode_IsValid},
  }}, {{
  }},
};

::uint8_t* CMsgDPPartnerMicroTxnsResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgDPPartnerMicroTxnsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_eresult(), target);
  }

  // optional .CMsgDPPartnerMicroTxnsResponse.EErrorCode eerrorcode = 2 [default = k_MsgValid];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_eerrorcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgDPPartnerMicroTxnsResponse)
  return target;
}

::size_t CMsgDPPartnerMicroTxnsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgDPPartnerMicroTxnsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgDPPartnerMicroTxnsResponse.EErrorCode eerrorcode = 2 [default = k_MsgValid];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_eerrorcode());
    }

    // optional uint32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_eresult());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgDPPartnerMicroTxnsResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgDPPartnerMicroTxnsResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgDPPartnerMicroTxnsResponse::GetClassData() const { return &_class_data_; }


void CMsgDPPartnerMicroTxnsResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgDPPartnerMicroTxnsResponse*>(&to_msg);
  auto& from = static_cast<const CMsgDPPartnerMicroTxnsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgDPPartnerMicroTxnsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.eerrorcode_ = from._impl_.eerrorcode_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.eresult_ = from._impl_.eresult_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgDPPartnerMicroTxnsResponse::CopyFrom(const CMsgDPPartnerMicroTxnsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgDPPartnerMicroTxnsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgDPPartnerMicroTxnsResponse::IsInitialized() const {
  return true;
}

void CMsgDPPartnerMicroTxnsResponse::InternalSwap(CMsgDPPartnerMicroTxnsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxnsResponse, _impl_.eresult_)
      + sizeof(CMsgDPPartnerMicroTxnsResponse::_impl_.eresult_)
      - PROTOBUF_FIELD_OFFSET(CMsgDPPartnerMicroTxnsResponse, _impl_.eerrorcode_)>(
          reinterpret_cast<char*>(&_impl_.eerrorcode_),
          reinterpret_cast<char*>(&other->_impl_.eerrorcode_));
}

::google::protobuf::Metadata CMsgDPPartnerMicroTxnsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[78]);
}
// ===================================================================

class CChinaAgreementSessions_StartAgreementSessionInGame_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CChinaAgreementSessions_StartAgreementSessionInGame_Request>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_._has_bits_);
  static void set_has_appid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_client_ipaddress(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CChinaAgreementSessions_StartAgreementSessionInGame_Request::CChinaAgreementSessions_StartAgreementSessionInGame_Request(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CChinaAgreementSessions_StartAgreementSessionInGame_Request)
}
CChinaAgreementSessions_StartAgreementSessionInGame_Request::CChinaAgreementSessions_StartAgreementSessionInGame_Request(const CChinaAgreementSessions_StartAgreementSessionInGame_Request& from) : ::google::protobuf::Message() {
  CChinaAgreementSessions_StartAgreementSessionInGame_Request* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.client_ipaddress_){},
      decltype(_impl_.steamid_){},
      decltype(_impl_.appid_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.client_ipaddress_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.client_ipaddress_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.client_ipaddress_.Set(from._internal_client_ipaddress(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.steamid_, &from._impl_.steamid_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.appid_) -
    reinterpret_cast<char*>(&_impl_.steamid_)) + sizeof(_impl_.appid_));

  // @@protoc_insertion_point(copy_constructor:CChinaAgreementSessions_StartAgreementSessionInGame_Request)
}
inline void CChinaAgreementSessions_StartAgreementSessionInGame_Request::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.client_ipaddress_){},
      decltype(_impl_.steamid_){::uint64_t{0u}},
      decltype(_impl_.appid_){0u},
  };
  _impl_.client_ipaddress_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.client_ipaddress_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CChinaAgreementSessions_StartAgreementSessionInGame_Request::~CChinaAgreementSessions_StartAgreementSessionInGame_Request() {
  // @@protoc_insertion_point(destructor:CChinaAgreementSessions_StartAgreementSessionInGame_Request)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CChinaAgreementSessions_StartAgreementSessionInGame_Request::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.client_ipaddress_.Destroy();
}
void CChinaAgreementSessions_StartAgreementSessionInGame_Request::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CChinaAgreementSessions_StartAgreementSessionInGame_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CChinaAgreementSessions_StartAgreementSessionInGame_Request)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.client_ipaddress_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.steamid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.appid_) -
        reinterpret_cast<char*>(&_impl_.steamid_)) + sizeof(_impl_.appid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CChinaAgreementSessions_StartAgreementSessionInGame_Request::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 84, 2> CChinaAgreementSessions_StartAgreementSessionInGame_Request::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CChinaAgreementSessions_StartAgreementSessionInGame_Request_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 appid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_.appid_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_.appid_)}},
    // optional fixed64 steamid = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_.steamid_)}},
    // optional string client_ipaddress = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_.client_ipaddress_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 appid = 1;
    {PROTOBUF_FIELD_OFFSET(CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_.appid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional fixed64 steamid = 2;
    {PROTOBUF_FIELD_OFFSET(CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_.steamid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional string client_ipaddress = 3;
    {PROTOBUF_FIELD_OFFSET(CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_.client_ipaddress_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\73\0\0\20\0\0\0\0"
    "CChinaAgreementSessions_StartAgreementSessionInGame_Request"
    "client_ipaddress"
  }},
};

::uint8_t* CChinaAgreementSessions_StartAgreementSessionInGame_Request::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CChinaAgreementSessions_StartAgreementSessionInGame_Request)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_appid(), target);
  }

  // optional fixed64 steamid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        2, this->_internal_steamid(), target);
  }

  // optional string client_ipaddress = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_client_ipaddress();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CChinaAgreementSessions_StartAgreementSessionInGame_Request.client_ipaddress");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CChinaAgreementSessions_StartAgreementSessionInGame_Request)
  return target;
}

::size_t CChinaAgreementSessions_StartAgreementSessionInGame_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CChinaAgreementSessions_StartAgreementSessionInGame_Request)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string client_ipaddress = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_client_ipaddress());
    }

    // optional fixed64 steamid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }

    // optional uint32 appid = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_appid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CChinaAgreementSessions_StartAgreementSessionInGame_Request::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CChinaAgreementSessions_StartAgreementSessionInGame_Request::MergeImpl
};
const ::google::protobuf::Message::ClassData*CChinaAgreementSessions_StartAgreementSessionInGame_Request::GetClassData() const { return &_class_data_; }


void CChinaAgreementSessions_StartAgreementSessionInGame_Request::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CChinaAgreementSessions_StartAgreementSessionInGame_Request*>(&to_msg);
  auto& from = static_cast<const CChinaAgreementSessions_StartAgreementSessionInGame_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CChinaAgreementSessions_StartAgreementSessionInGame_Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_client_ipaddress(from._internal_client_ipaddress());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.steamid_ = from._impl_.steamid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.appid_ = from._impl_.appid_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CChinaAgreementSessions_StartAgreementSessionInGame_Request::CopyFrom(const CChinaAgreementSessions_StartAgreementSessionInGame_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CChinaAgreementSessions_StartAgreementSessionInGame_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CChinaAgreementSessions_StartAgreementSessionInGame_Request::IsInitialized() const {
  return true;
}

void CChinaAgreementSessions_StartAgreementSessionInGame_Request::InternalSwap(CChinaAgreementSessions_StartAgreementSessionInGame_Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_ipaddress_, lhs_arena,
                                       &other->_impl_.client_ipaddress_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_.appid_)
      + sizeof(CChinaAgreementSessions_StartAgreementSessionInGame_Request::_impl_.appid_)
      - PROTOBUF_FIELD_OFFSET(CChinaAgreementSessions_StartAgreementSessionInGame_Request, _impl_.steamid_)>(
          reinterpret_cast<char*>(&_impl_.steamid_),
          reinterpret_cast<char*>(&other->_impl_.steamid_));
}

::google::protobuf::Metadata CChinaAgreementSessions_StartAgreementSessionInGame_Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[79]);
}
// ===================================================================

class CChinaAgreementSessions_StartAgreementSessionInGame_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CChinaAgreementSessions_StartAgreementSessionInGame_Response>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CChinaAgreementSessions_StartAgreementSessionInGame_Response, _impl_._has_bits_);
  static void set_has_agreement_url(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CChinaAgreementSessions_StartAgreementSessionInGame_Response::CChinaAgreementSessions_StartAgreementSessionInGame_Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CChinaAgreementSessions_StartAgreementSessionInGame_Response)
}
CChinaAgreementSessions_StartAgreementSessionInGame_Response::CChinaAgreementSessions_StartAgreementSessionInGame_Response(const CChinaAgreementSessions_StartAgreementSessionInGame_Response& from) : ::google::protobuf::Message() {
  CChinaAgreementSessions_StartAgreementSessionInGame_Response* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.agreement_url_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.agreement_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.agreement_url_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.agreement_url_.Set(from._internal_agreement_url(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:CChinaAgreementSessions_StartAgreementSessionInGame_Response)
}
inline void CChinaAgreementSessions_StartAgreementSessionInGame_Response::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.agreement_url_){},
  };
  _impl_.agreement_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.agreement_url_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CChinaAgreementSessions_StartAgreementSessionInGame_Response::~CChinaAgreementSessions_StartAgreementSessionInGame_Response() {
  // @@protoc_insertion_point(destructor:CChinaAgreementSessions_StartAgreementSessionInGame_Response)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CChinaAgreementSessions_StartAgreementSessionInGame_Response::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.agreement_url_.Destroy();
}
void CChinaAgreementSessions_StartAgreementSessionInGame_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CChinaAgreementSessions_StartAgreementSessionInGame_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CChinaAgreementSessions_StartAgreementSessionInGame_Response)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.agreement_url_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CChinaAgreementSessions_StartAgreementSessionInGame_Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 82, 2> CChinaAgreementSessions_StartAgreementSessionInGame_Response::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CChinaAgreementSessions_StartAgreementSessionInGame_Response, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CChinaAgreementSessions_StartAgreementSessionInGame_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string agreement_url = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CChinaAgreementSessions_StartAgreementSessionInGame_Response, _impl_.agreement_url_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string agreement_url = 1;
    {PROTOBUF_FIELD_OFFSET(CChinaAgreementSessions_StartAgreementSessionInGame_Response, _impl_.agreement_url_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\74\15\0\0\0\0\0\0"
    "CChinaAgreementSessions_StartAgreementSessionInGame_Response"
    "agreement_url"
  }},
};

::uint8_t* CChinaAgreementSessions_StartAgreementSessionInGame_Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CChinaAgreementSessions_StartAgreementSessionInGame_Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string agreement_url = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_agreement_url();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CChinaAgreementSessions_StartAgreementSessionInGame_Response.agreement_url");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CChinaAgreementSessions_StartAgreementSessionInGame_Response)
  return target;
}

::size_t CChinaAgreementSessions_StartAgreementSessionInGame_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CChinaAgreementSessions_StartAgreementSessionInGame_Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string agreement_url = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_agreement_url());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CChinaAgreementSessions_StartAgreementSessionInGame_Response::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CChinaAgreementSessions_StartAgreementSessionInGame_Response::MergeImpl
};
const ::google::protobuf::Message::ClassData*CChinaAgreementSessions_StartAgreementSessionInGame_Response::GetClassData() const { return &_class_data_; }


void CChinaAgreementSessions_StartAgreementSessionInGame_Response::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CChinaAgreementSessions_StartAgreementSessionInGame_Response*>(&to_msg);
  auto& from = static_cast<const CChinaAgreementSessions_StartAgreementSessionInGame_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CChinaAgreementSessions_StartAgreementSessionInGame_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_agreement_url(from._internal_agreement_url());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CChinaAgreementSessions_StartAgreementSessionInGame_Response::CopyFrom(const CChinaAgreementSessions_StartAgreementSessionInGame_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CChinaAgreementSessions_StartAgreementSessionInGame_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CChinaAgreementSessions_StartAgreementSessionInGame_Response::IsInitialized() const {
  return true;
}

void CChinaAgreementSessions_StartAgreementSessionInGame_Response::InternalSwap(CChinaAgreementSessions_StartAgreementSessionInGame_Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.agreement_url_, lhs_arena,
                                       &other->_impl_.agreement_url_, rhs_arena);
}

::google::protobuf::Metadata CChinaAgreementSessions_StartAgreementSessionInGame_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_steammessages_2eproto_getter, &descriptor_table_steammessages_2eproto_once,
      file_level_metadata_steammessages_2eproto[80]);
}
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false>
  key_field(kKeyFieldFieldNumber, false, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5, false>
  msgpool_soft_limit(kMsgpoolSoftLimitFieldNumber, 32, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5, false>
  msgpool_hard_limit(kMsgpoolHardLimitFieldNumber, 384, nullptr);
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
