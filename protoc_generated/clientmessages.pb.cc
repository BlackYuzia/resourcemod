// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: clientmessages.proto

#include "clientmessages.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
        template <typename>
PROTOBUF_CONSTEXPR CClientMsg_CustomGameEvent::CClientMsg_CustomGameEvent(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.event_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.data_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct CClientMsg_CustomGameEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CClientMsg_CustomGameEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CClientMsg_CustomGameEventDefaultTypeInternal() {}
  union {
    CClientMsg_CustomGameEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CClientMsg_CustomGameEventDefaultTypeInternal _CClientMsg_CustomGameEvent_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CClientMsg_CustomGameEventBounce::CClientMsg_CustomGameEventBounce(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.event_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.data_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.player_slot_)*/ -1,
    } {}
struct CClientMsg_CustomGameEventBounceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CClientMsg_CustomGameEventBounceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CClientMsg_CustomGameEventBounceDefaultTypeInternal() {}
  union {
    CClientMsg_CustomGameEventBounce _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CClientMsg_CustomGameEventBounceDefaultTypeInternal _CClientMsg_CustomGameEventBounce_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CClientMsg_ClientUIEvent::CClientMsg_ClientUIEvent(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.data1_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.data2_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.event_)*/ 0,
      /*decltype(_impl_.ent_ehandle_)*/ 0u,
      /*decltype(_impl_.client_ehandle_)*/ 0u,
    } {}
struct CClientMsg_ClientUIEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CClientMsg_ClientUIEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CClientMsg_ClientUIEventDefaultTypeInternal() {}
  union {
    CClientMsg_ClientUIEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CClientMsg_ClientUIEventDefaultTypeInternal _CClientMsg_ClientUIEvent_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CClientMsg_DevPaletteVisibilityChangedEvent::CClientMsg_DevPaletteVisibilityChangedEvent(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.visible_)*/ false,
    } {}
struct CClientMsg_DevPaletteVisibilityChangedEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CClientMsg_DevPaletteVisibilityChangedEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CClientMsg_DevPaletteVisibilityChangedEventDefaultTypeInternal() {}
  union {
    CClientMsg_DevPaletteVisibilityChangedEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CClientMsg_DevPaletteVisibilityChangedEventDefaultTypeInternal _CClientMsg_DevPaletteVisibilityChangedEvent_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CClientMsg_WorldUIControllerHasPanelChangedEvent::CClientMsg_WorldUIControllerHasPanelChangedEvent(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.has_panel_)*/ false,
      /*decltype(_impl_.client_ehandle_)*/ 0u,
      /*decltype(_impl_.literal_hand_type_)*/ 0u,
    } {}
struct CClientMsg_WorldUIControllerHasPanelChangedEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CClientMsg_WorldUIControllerHasPanelChangedEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CClientMsg_WorldUIControllerHasPanelChangedEventDefaultTypeInternal() {}
  union {
    CClientMsg_WorldUIControllerHasPanelChangedEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CClientMsg_WorldUIControllerHasPanelChangedEventDefaultTypeInternal _CClientMsg_WorldUIControllerHasPanelChangedEvent_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CClientMsg_RotateAnchor::CClientMsg_RotateAnchor(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.angle_)*/ 0,
    } {}
struct CClientMsg_RotateAnchorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CClientMsg_RotateAnchorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CClientMsg_RotateAnchorDefaultTypeInternal() {}
  union {
    CClientMsg_RotateAnchor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CClientMsg_RotateAnchorDefaultTypeInternal _CClientMsg_RotateAnchor_default_instance_;
static ::_pb::Metadata file_level_metadata_clientmessages_2eproto[6];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_clientmessages_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_clientmessages_2eproto = nullptr;
const ::uint32_t TableStruct_clientmessages_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::CClientMsg_CustomGameEvent, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CClientMsg_CustomGameEvent, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CClientMsg_CustomGameEvent, _impl_.event_name_),
    PROTOBUF_FIELD_OFFSET(::CClientMsg_CustomGameEvent, _impl_.data_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::CClientMsg_CustomGameEventBounce, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CClientMsg_CustomGameEventBounce, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CClientMsg_CustomGameEventBounce, _impl_.event_name_),
    PROTOBUF_FIELD_OFFSET(::CClientMsg_CustomGameEventBounce, _impl_.data_),
    PROTOBUF_FIELD_OFFSET(::CClientMsg_CustomGameEventBounce, _impl_.player_slot_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::CClientMsg_ClientUIEvent, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CClientMsg_ClientUIEvent, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CClientMsg_ClientUIEvent, _impl_.event_),
    PROTOBUF_FIELD_OFFSET(::CClientMsg_ClientUIEvent, _impl_.ent_ehandle_),
    PROTOBUF_FIELD_OFFSET(::CClientMsg_ClientUIEvent, _impl_.client_ehandle_),
    PROTOBUF_FIELD_OFFSET(::CClientMsg_ClientUIEvent, _impl_.data1_),
    PROTOBUF_FIELD_OFFSET(::CClientMsg_ClientUIEvent, _impl_.data2_),
    2,
    3,
    4,
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::CClientMsg_DevPaletteVisibilityChangedEvent, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CClientMsg_DevPaletteVisibilityChangedEvent, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CClientMsg_DevPaletteVisibilityChangedEvent, _impl_.visible_),
    0,
    PROTOBUF_FIELD_OFFSET(::CClientMsg_WorldUIControllerHasPanelChangedEvent, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CClientMsg_WorldUIControllerHasPanelChangedEvent, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CClientMsg_WorldUIControllerHasPanelChangedEvent, _impl_.has_panel_),
    PROTOBUF_FIELD_OFFSET(::CClientMsg_WorldUIControllerHasPanelChangedEvent, _impl_.client_ehandle_),
    PROTOBUF_FIELD_OFFSET(::CClientMsg_WorldUIControllerHasPanelChangedEvent, _impl_.literal_hand_type_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::CClientMsg_RotateAnchor, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CClientMsg_RotateAnchor, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CClientMsg_RotateAnchor, _impl_.angle_),
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::CClientMsg_CustomGameEvent)},
        {12, 23, -1, sizeof(::CClientMsg_CustomGameEventBounce)},
        {26, 39, -1, sizeof(::CClientMsg_ClientUIEvent)},
        {44, 53, -1, sizeof(::CClientMsg_DevPaletteVisibilityChangedEvent)},
        {54, 65, -1, sizeof(::CClientMsg_WorldUIControllerHasPanelChangedEvent)},
        {68, 77, -1, sizeof(::CClientMsg_RotateAnchor)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_CClientMsg_CustomGameEvent_default_instance_._instance,
    &::_CClientMsg_CustomGameEventBounce_default_instance_._instance,
    &::_CClientMsg_ClientUIEvent_default_instance_._instance,
    &::_CClientMsg_DevPaletteVisibilityChangedEvent_default_instance_._instance,
    &::_CClientMsg_WorldUIControllerHasPanelChangedEvent_default_instance_._instance,
    &::_CClientMsg_RotateAnchor_default_instance_._instance,
};
const char descriptor_table_protodef_clientmessages_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\024clientmessages.proto\">\n\032CClientMsg_Cus"
    "tomGameEvent\022\022\n\nevent_name\030\001 \001(\t\022\014\n\004data"
    "\030\002 \001(\014\"]\n CClientMsg_CustomGameEventBoun"
    "ce\022\022\n\nevent_name\030\001 \001(\t\022\014\n\004data\030\002 \001(\014\022\027\n\013"
    "player_slot\030\003 \001(\005:\002-1\"\235\001\n\030CClientMsg_Cli"
    "entUIEvent\0226\n\005event\030\001 \001(\0162\017.EClientUIEve"
    "nt:\026EClientUIEvent_Invalid\022\023\n\013ent_ehandl"
    "e\030\002 \001(\r\022\026\n\016client_ehandle\030\003 \001(\r\022\r\n\005data1"
    "\030\004 \001(\t\022\r\n\005data2\030\005 \001(\t\">\n+CClientMsg_DevP"
    "aletteVisibilityChangedEvent\022\017\n\007visible\030"
    "\001 \001(\010\"x\n0CClientMsg_WorldUIControllerHas"
    "PanelChangedEvent\022\021\n\thas_panel\030\001 \001(\010\022\026\n\016"
    "client_ehandle\030\002 \001(\r\022\031\n\021literal_hand_typ"
    "e\030\003 \001(\r\"(\n\027CClientMsg_RotateAnchor\022\r\n\005an"
    "gle\030\001 \001(\002*\333\001\n\023EBaseClientMessages\022\027\n\022CM_"
    "CustomGameEvent\020\230\002\022\035\n\030CM_CustomGameEvent"
    "Bounce\020\231\002\022\025\n\020CM_ClientUIEvent\020\232\002\022#\n\036CM_D"
    "evPaletteVisibilityChanged\020\233\002\022(\n#CM_Worl"
    "dUIControllerHasPanelChanged\020\234\002\022\024\n\017CM_Ro"
    "tateAnchor\020\235\002\022\020\n\013CM_MAX_BASE\020\254\002*n\n\016EClie"
    "ntUIEvent\022\032\n\026EClientUIEvent_Invalid\020\000\022!\n"
    "\035EClientUIEvent_DialogFinished\020\001\022\035\n\031ECli"
    "entUIEvent_FireOutput\020\002"
};
static ::absl::once_flag descriptor_table_clientmessages_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_clientmessages_2eproto = {
    false,
    false,
    903,
    descriptor_table_protodef_clientmessages_2eproto,
    "clientmessages.proto",
    &descriptor_table_clientmessages_2eproto_once,
    nullptr,
    0,
    6,
    schemas,
    file_default_instances,
    TableStruct_clientmessages_2eproto::offsets,
    file_level_metadata_clientmessages_2eproto,
    file_level_enum_descriptors_clientmessages_2eproto,
    file_level_service_descriptors_clientmessages_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_clientmessages_2eproto_getter() {
  return &descriptor_table_clientmessages_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_clientmessages_2eproto(&descriptor_table_clientmessages_2eproto);
const ::google::protobuf::EnumDescriptor* EBaseClientMessages_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_clientmessages_2eproto);
  return file_level_enum_descriptors_clientmessages_2eproto[0];
}
bool EBaseClientMessages_IsValid(int value) {
  switch (value) {
    case 280:
    case 281:
    case 282:
    case 283:
    case 284:
    case 285:
    case 300:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* EClientUIEvent_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_clientmessages_2eproto);
  return file_level_enum_descriptors_clientmessages_2eproto[1];
}
bool EClientUIEvent_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}
// ===================================================================

class CClientMsg_CustomGameEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<CClientMsg_CustomGameEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CClientMsg_CustomGameEvent, _impl_._has_bits_);
  static void set_has_event_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CClientMsg_CustomGameEvent::CClientMsg_CustomGameEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CClientMsg_CustomGameEvent)
}
CClientMsg_CustomGameEvent::CClientMsg_CustomGameEvent(const CClientMsg_CustomGameEvent& from) : ::google::protobuf::Message() {
  CClientMsg_CustomGameEvent* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.event_name_){},
      decltype(_impl_.data_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.event_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.event_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.event_name_.Set(from._internal_event_name(), _this->GetArenaForAllocation());
  }
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.data_.Set(from._internal_data(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:CClientMsg_CustomGameEvent)
}
inline void CClientMsg_CustomGameEvent::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.event_name_){},
      decltype(_impl_.data_){},
  };
  _impl_.event_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.event_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CClientMsg_CustomGameEvent::~CClientMsg_CustomGameEvent() {
  // @@protoc_insertion_point(destructor:CClientMsg_CustomGameEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CClientMsg_CustomGameEvent::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.event_name_.Destroy();
  _impl_.data_.Destroy();
}
void CClientMsg_CustomGameEvent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CClientMsg_CustomGameEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:CClientMsg_CustomGameEvent)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.event_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.data_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CClientMsg_CustomGameEvent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 45, 2> CClientMsg_CustomGameEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CClientMsg_CustomGameEvent, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CClientMsg_CustomGameEvent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bytes data = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CClientMsg_CustomGameEvent, _impl_.data_)}},
    // optional string event_name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CClientMsg_CustomGameEvent, _impl_.event_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string event_name = 1;
    {PROTOBUF_FIELD_OFFSET(CClientMsg_CustomGameEvent, _impl_.event_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bytes data = 2;
    {PROTOBUF_FIELD_OFFSET(CClientMsg_CustomGameEvent, _impl_.data_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\12\0\0\0\0\0\0"
    "CClientMsg_CustomGameEvent"
    "event_name"
  }},
};

::uint8_t* CClientMsg_CustomGameEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CClientMsg_CustomGameEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string event_name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_event_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CClientMsg_CustomGameEvent.event_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional bytes data = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CClientMsg_CustomGameEvent)
  return target;
}

::size_t CClientMsg_CustomGameEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CClientMsg_CustomGameEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string event_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_event_name());
    }

    // optional bytes data = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_data());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CClientMsg_CustomGameEvent::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CClientMsg_CustomGameEvent::MergeImpl
};
const ::google::protobuf::Message::ClassData*CClientMsg_CustomGameEvent::GetClassData() const { return &_class_data_; }


void CClientMsg_CustomGameEvent::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CClientMsg_CustomGameEvent*>(&to_msg);
  auto& from = static_cast<const CClientMsg_CustomGameEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CClientMsg_CustomGameEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_event_name(from._internal_event_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_data(from._internal_data());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CClientMsg_CustomGameEvent::CopyFrom(const CClientMsg_CustomGameEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CClientMsg_CustomGameEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CClientMsg_CustomGameEvent::IsInitialized() const {
  return true;
}

void CClientMsg_CustomGameEvent::InternalSwap(CClientMsg_CustomGameEvent* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.event_name_, lhs_arena,
                                       &other->_impl_.event_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, lhs_arena,
                                       &other->_impl_.data_, rhs_arena);
}

::google::protobuf::Metadata CClientMsg_CustomGameEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_clientmessages_2eproto_getter, &descriptor_table_clientmessages_2eproto_once,
      file_level_metadata_clientmessages_2eproto[0]);
}
// ===================================================================

class CClientMsg_CustomGameEventBounce::_Internal {
 public:
  using HasBits = decltype(std::declval<CClientMsg_CustomGameEventBounce>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CClientMsg_CustomGameEventBounce, _impl_._has_bits_);
  static void set_has_event_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_player_slot(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CClientMsg_CustomGameEventBounce::CClientMsg_CustomGameEventBounce(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CClientMsg_CustomGameEventBounce)
}
CClientMsg_CustomGameEventBounce::CClientMsg_CustomGameEventBounce(const CClientMsg_CustomGameEventBounce& from) : ::google::protobuf::Message() {
  CClientMsg_CustomGameEventBounce* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.event_name_){},
      decltype(_impl_.data_){},
      decltype(_impl_.player_slot_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.event_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.event_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.event_name_.Set(from._internal_event_name(), _this->GetArenaForAllocation());
  }
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.data_.Set(from._internal_data(), _this->GetArenaForAllocation());
  }
  _this->_impl_.player_slot_ = from._impl_.player_slot_;

  // @@protoc_insertion_point(copy_constructor:CClientMsg_CustomGameEventBounce)
}
inline void CClientMsg_CustomGameEventBounce::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.event_name_){},
      decltype(_impl_.data_){},
      decltype(_impl_.player_slot_){-1},
  };
  _impl_.event_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.event_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CClientMsg_CustomGameEventBounce::~CClientMsg_CustomGameEventBounce() {
  // @@protoc_insertion_point(destructor:CClientMsg_CustomGameEventBounce)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CClientMsg_CustomGameEventBounce::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.event_name_.Destroy();
  _impl_.data_.Destroy();
}
void CClientMsg_CustomGameEventBounce::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CClientMsg_CustomGameEventBounce::Clear() {
// @@protoc_insertion_point(message_clear_start:CClientMsg_CustomGameEventBounce)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.event_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.data_.ClearNonDefaultToEmpty();
    }
    _impl_.player_slot_ = -1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CClientMsg_CustomGameEventBounce::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 51, 2> CClientMsg_CustomGameEventBounce::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CClientMsg_CustomGameEventBounce, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CClientMsg_CustomGameEventBounce_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string event_name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CClientMsg_CustomGameEventBounce, _impl_.event_name_)}},
    // optional bytes data = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CClientMsg_CustomGameEventBounce, _impl_.data_)}},
    // optional int32 player_slot = 3 [default = -1];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CClientMsg_CustomGameEventBounce, _impl_.player_slot_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CClientMsg_CustomGameEventBounce, _impl_.player_slot_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string event_name = 1;
    {PROTOBUF_FIELD_OFFSET(CClientMsg_CustomGameEventBounce, _impl_.event_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bytes data = 2;
    {PROTOBUF_FIELD_OFFSET(CClientMsg_CustomGameEventBounce, _impl_.data_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional int32 player_slot = 3 [default = -1];
    {PROTOBUF_FIELD_OFFSET(CClientMsg_CustomGameEventBounce, _impl_.player_slot_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\40\12\0\0\0\0\0\0"
    "CClientMsg_CustomGameEventBounce"
    "event_name"
  }},
};

::uint8_t* CClientMsg_CustomGameEventBounce::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CClientMsg_CustomGameEventBounce)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string event_name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_event_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CClientMsg_CustomGameEventBounce.event_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional bytes data = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // optional int32 player_slot = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_player_slot(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CClientMsg_CustomGameEventBounce)
  return target;
}

::size_t CClientMsg_CustomGameEventBounce::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CClientMsg_CustomGameEventBounce)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string event_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_event_name());
    }

    // optional bytes data = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_data());
    }

    // optional int32 player_slot = 3 [default = -1];
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_player_slot());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CClientMsg_CustomGameEventBounce::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CClientMsg_CustomGameEventBounce::MergeImpl
};
const ::google::protobuf::Message::ClassData*CClientMsg_CustomGameEventBounce::GetClassData() const { return &_class_data_; }


void CClientMsg_CustomGameEventBounce::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CClientMsg_CustomGameEventBounce*>(&to_msg);
  auto& from = static_cast<const CClientMsg_CustomGameEventBounce&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CClientMsg_CustomGameEventBounce)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_event_name(from._internal_event_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_data(from._internal_data());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.player_slot_ = from._impl_.player_slot_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CClientMsg_CustomGameEventBounce::CopyFrom(const CClientMsg_CustomGameEventBounce& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CClientMsg_CustomGameEventBounce)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CClientMsg_CustomGameEventBounce::IsInitialized() const {
  return true;
}

void CClientMsg_CustomGameEventBounce::InternalSwap(CClientMsg_CustomGameEventBounce* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.event_name_, lhs_arena,
                                       &other->_impl_.event_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, lhs_arena,
                                       &other->_impl_.data_, rhs_arena);
        swap(_impl_.player_slot_, other->_impl_.player_slot_);
}

::google::protobuf::Metadata CClientMsg_CustomGameEventBounce::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_clientmessages_2eproto_getter, &descriptor_table_clientmessages_2eproto_once,
      file_level_metadata_clientmessages_2eproto[1]);
}
// ===================================================================

class CClientMsg_ClientUIEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<CClientMsg_ClientUIEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CClientMsg_ClientUIEvent, _impl_._has_bits_);
  static void set_has_event(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_ent_ehandle(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_client_ehandle(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_data1(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_data2(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CClientMsg_ClientUIEvent::CClientMsg_ClientUIEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CClientMsg_ClientUIEvent)
}
CClientMsg_ClientUIEvent::CClientMsg_ClientUIEvent(const CClientMsg_ClientUIEvent& from) : ::google::protobuf::Message() {
  CClientMsg_ClientUIEvent* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data1_){},
      decltype(_impl_.data2_){},
      decltype(_impl_.event_){},
      decltype(_impl_.ent_ehandle_){},
      decltype(_impl_.client_ehandle_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.data1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data1_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.data1_.Set(from._internal_data1(), _this->GetArenaForAllocation());
  }
  _impl_.data2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data2_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.data2_.Set(from._internal_data2(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.event_, &from._impl_.event_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.client_ehandle_) -
    reinterpret_cast<char*>(&_impl_.event_)) + sizeof(_impl_.client_ehandle_));

  // @@protoc_insertion_point(copy_constructor:CClientMsg_ClientUIEvent)
}
inline void CClientMsg_ClientUIEvent::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data1_){},
      decltype(_impl_.data2_){},
      decltype(_impl_.event_){0},
      decltype(_impl_.ent_ehandle_){0u},
      decltype(_impl_.client_ehandle_){0u},
  };
  _impl_.data1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data1_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.data2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data2_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CClientMsg_ClientUIEvent::~CClientMsg_ClientUIEvent() {
  // @@protoc_insertion_point(destructor:CClientMsg_ClientUIEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CClientMsg_ClientUIEvent::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data1_.Destroy();
  _impl_.data2_.Destroy();
}
void CClientMsg_ClientUIEvent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CClientMsg_ClientUIEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:CClientMsg_ClientUIEvent)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.data1_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.data2_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&_impl_.event_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.client_ehandle_) -
        reinterpret_cast<char*>(&_impl_.event_)) + sizeof(_impl_.client_ehandle_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CClientMsg_ClientUIEvent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 43, 2> CClientMsg_ClientUIEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CClientMsg_ClientUIEvent, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CClientMsg_ClientUIEvent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .EClientUIEvent event = 1 [default = EClientUIEvent_Invalid];
    {::_pbi::TcParser::FastEr0S1,
     {8, 2, 2, PROTOBUF_FIELD_OFFSET(CClientMsg_ClientUIEvent, _impl_.event_)}},
    // optional uint32 ent_ehandle = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CClientMsg_ClientUIEvent, _impl_.ent_ehandle_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(CClientMsg_ClientUIEvent, _impl_.ent_ehandle_)}},
    // optional uint32 client_ehandle = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CClientMsg_ClientUIEvent, _impl_.client_ehandle_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(CClientMsg_ClientUIEvent, _impl_.client_ehandle_)}},
    // optional string data1 = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(CClientMsg_ClientUIEvent, _impl_.data1_)}},
    // optional string data2 = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(CClientMsg_ClientUIEvent, _impl_.data2_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .EClientUIEvent event = 1 [default = EClientUIEvent_Invalid];
    {PROTOBUF_FIELD_OFFSET(CClientMsg_ClientUIEvent, _impl_.event_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional uint32 ent_ehandle = 2;
    {PROTOBUF_FIELD_OFFSET(CClientMsg_ClientUIEvent, _impl_.ent_ehandle_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 client_ehandle = 3;
    {PROTOBUF_FIELD_OFFSET(CClientMsg_ClientUIEvent, _impl_.client_ehandle_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string data1 = 4;
    {PROTOBUF_FIELD_OFFSET(CClientMsg_ClientUIEvent, _impl_.data1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string data2 = 5;
    {PROTOBUF_FIELD_OFFSET(CClientMsg_ClientUIEvent, _impl_.data2_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {0, 3},
  }}, {{
    "\30\0\0\0\5\5\0\0"
    "CClientMsg_ClientUIEvent"
    "data1"
    "data2"
  }},
};

::uint8_t* CClientMsg_ClientUIEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CClientMsg_ClientUIEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .EClientUIEvent event = 1 [default = EClientUIEvent_Invalid];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_event(), target);
  }

  // optional uint32 ent_ehandle = 2;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_ent_ehandle(), target);
  }

  // optional uint32 client_ehandle = 3;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_client_ehandle(), target);
  }

  // optional string data1 = 4;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_data1();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CClientMsg_ClientUIEvent.data1");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional string data2 = 5;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_data2();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CClientMsg_ClientUIEvent.data2");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CClientMsg_ClientUIEvent)
  return target;
}

::size_t CClientMsg_ClientUIEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CClientMsg_ClientUIEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string data1 = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_data1());
    }

    // optional string data2 = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_data2());
    }

    // optional .EClientUIEvent event = 1 [default = EClientUIEvent_Invalid];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_event());
    }

    // optional uint32 ent_ehandle = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_ent_ehandle());
    }

    // optional uint32 client_ehandle = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_client_ehandle());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CClientMsg_ClientUIEvent::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CClientMsg_ClientUIEvent::MergeImpl
};
const ::google::protobuf::Message::ClassData*CClientMsg_ClientUIEvent::GetClassData() const { return &_class_data_; }


void CClientMsg_ClientUIEvent::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CClientMsg_ClientUIEvent*>(&to_msg);
  auto& from = static_cast<const CClientMsg_ClientUIEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CClientMsg_ClientUIEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_data1(from._internal_data1());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_data2(from._internal_data2());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.event_ = from._impl_.event_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.ent_ehandle_ = from._impl_.ent_ehandle_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.client_ehandle_ = from._impl_.client_ehandle_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CClientMsg_ClientUIEvent::CopyFrom(const CClientMsg_ClientUIEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CClientMsg_ClientUIEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CClientMsg_ClientUIEvent::IsInitialized() const {
  return true;
}

void CClientMsg_ClientUIEvent::InternalSwap(CClientMsg_ClientUIEvent* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data1_, lhs_arena,
                                       &other->_impl_.data1_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data2_, lhs_arena,
                                       &other->_impl_.data2_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CClientMsg_ClientUIEvent, _impl_.client_ehandle_)
      + sizeof(CClientMsg_ClientUIEvent::_impl_.client_ehandle_)
      - PROTOBUF_FIELD_OFFSET(CClientMsg_ClientUIEvent, _impl_.event_)>(
          reinterpret_cast<char*>(&_impl_.event_),
          reinterpret_cast<char*>(&other->_impl_.event_));
}

::google::protobuf::Metadata CClientMsg_ClientUIEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_clientmessages_2eproto_getter, &descriptor_table_clientmessages_2eproto_once,
      file_level_metadata_clientmessages_2eproto[2]);
}
// ===================================================================

class CClientMsg_DevPaletteVisibilityChangedEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<CClientMsg_DevPaletteVisibilityChangedEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CClientMsg_DevPaletteVisibilityChangedEvent, _impl_._has_bits_);
  static void set_has_visible(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CClientMsg_DevPaletteVisibilityChangedEvent::CClientMsg_DevPaletteVisibilityChangedEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CClientMsg_DevPaletteVisibilityChangedEvent)
}
CClientMsg_DevPaletteVisibilityChangedEvent::CClientMsg_DevPaletteVisibilityChangedEvent(const CClientMsg_DevPaletteVisibilityChangedEvent& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CClientMsg_DevPaletteVisibilityChangedEvent)
}
inline void CClientMsg_DevPaletteVisibilityChangedEvent::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.visible_){false},
  };
}
CClientMsg_DevPaletteVisibilityChangedEvent::~CClientMsg_DevPaletteVisibilityChangedEvent() {
  // @@protoc_insertion_point(destructor:CClientMsg_DevPaletteVisibilityChangedEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CClientMsg_DevPaletteVisibilityChangedEvent::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CClientMsg_DevPaletteVisibilityChangedEvent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CClientMsg_DevPaletteVisibilityChangedEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:CClientMsg_DevPaletteVisibilityChangedEvent)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.visible_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CClientMsg_DevPaletteVisibilityChangedEvent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CClientMsg_DevPaletteVisibilityChangedEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CClientMsg_DevPaletteVisibilityChangedEvent, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CClientMsg_DevPaletteVisibilityChangedEvent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bool visible = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CClientMsg_DevPaletteVisibilityChangedEvent, _impl_.visible_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CClientMsg_DevPaletteVisibilityChangedEvent, _impl_.visible_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool visible = 1;
    {PROTOBUF_FIELD_OFFSET(CClientMsg_DevPaletteVisibilityChangedEvent, _impl_.visible_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CClientMsg_DevPaletteVisibilityChangedEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CClientMsg_DevPaletteVisibilityChangedEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool visible = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_visible(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CClientMsg_DevPaletteVisibilityChangedEvent)
  return target;
}

::size_t CClientMsg_DevPaletteVisibilityChangedEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CClientMsg_DevPaletteVisibilityChangedEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool visible = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CClientMsg_DevPaletteVisibilityChangedEvent::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CClientMsg_DevPaletteVisibilityChangedEvent::MergeImpl
};
const ::google::protobuf::Message::ClassData*CClientMsg_DevPaletteVisibilityChangedEvent::GetClassData() const { return &_class_data_; }


void CClientMsg_DevPaletteVisibilityChangedEvent::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CClientMsg_DevPaletteVisibilityChangedEvent*>(&to_msg);
  auto& from = static_cast<const CClientMsg_DevPaletteVisibilityChangedEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CClientMsg_DevPaletteVisibilityChangedEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_visible(from._internal_visible());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CClientMsg_DevPaletteVisibilityChangedEvent::CopyFrom(const CClientMsg_DevPaletteVisibilityChangedEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CClientMsg_DevPaletteVisibilityChangedEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CClientMsg_DevPaletteVisibilityChangedEvent::IsInitialized() const {
  return true;
}

void CClientMsg_DevPaletteVisibilityChangedEvent::InternalSwap(CClientMsg_DevPaletteVisibilityChangedEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.visible_, other->_impl_.visible_);
}

::google::protobuf::Metadata CClientMsg_DevPaletteVisibilityChangedEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_clientmessages_2eproto_getter, &descriptor_table_clientmessages_2eproto_once,
      file_level_metadata_clientmessages_2eproto[3]);
}
// ===================================================================

class CClientMsg_WorldUIControllerHasPanelChangedEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<CClientMsg_WorldUIControllerHasPanelChangedEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CClientMsg_WorldUIControllerHasPanelChangedEvent, _impl_._has_bits_);
  static void set_has_has_panel(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_client_ehandle(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_literal_hand_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CClientMsg_WorldUIControllerHasPanelChangedEvent::CClientMsg_WorldUIControllerHasPanelChangedEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CClientMsg_WorldUIControllerHasPanelChangedEvent)
}
CClientMsg_WorldUIControllerHasPanelChangedEvent::CClientMsg_WorldUIControllerHasPanelChangedEvent(const CClientMsg_WorldUIControllerHasPanelChangedEvent& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CClientMsg_WorldUIControllerHasPanelChangedEvent)
}
inline void CClientMsg_WorldUIControllerHasPanelChangedEvent::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.has_panel_){false},
      decltype(_impl_.client_ehandle_){0u},
      decltype(_impl_.literal_hand_type_){0u},
  };
}
CClientMsg_WorldUIControllerHasPanelChangedEvent::~CClientMsg_WorldUIControllerHasPanelChangedEvent() {
  // @@protoc_insertion_point(destructor:CClientMsg_WorldUIControllerHasPanelChangedEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CClientMsg_WorldUIControllerHasPanelChangedEvent::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CClientMsg_WorldUIControllerHasPanelChangedEvent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CClientMsg_WorldUIControllerHasPanelChangedEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:CClientMsg_WorldUIControllerHasPanelChangedEvent)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.has_panel_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.literal_hand_type_) -
        reinterpret_cast<char*>(&_impl_.has_panel_)) + sizeof(_impl_.literal_hand_type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CClientMsg_WorldUIControllerHasPanelChangedEvent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> CClientMsg_WorldUIControllerHasPanelChangedEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CClientMsg_WorldUIControllerHasPanelChangedEvent, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CClientMsg_WorldUIControllerHasPanelChangedEvent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool has_panel = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CClientMsg_WorldUIControllerHasPanelChangedEvent, _impl_.has_panel_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CClientMsg_WorldUIControllerHasPanelChangedEvent, _impl_.has_panel_)}},
    // optional uint32 client_ehandle = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CClientMsg_WorldUIControllerHasPanelChangedEvent, _impl_.client_ehandle_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CClientMsg_WorldUIControllerHasPanelChangedEvent, _impl_.client_ehandle_)}},
    // optional uint32 literal_hand_type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CClientMsg_WorldUIControllerHasPanelChangedEvent, _impl_.literal_hand_type_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CClientMsg_WorldUIControllerHasPanelChangedEvent, _impl_.literal_hand_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool has_panel = 1;
    {PROTOBUF_FIELD_OFFSET(CClientMsg_WorldUIControllerHasPanelChangedEvent, _impl_.has_panel_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint32 client_ehandle = 2;
    {PROTOBUF_FIELD_OFFSET(CClientMsg_WorldUIControllerHasPanelChangedEvent, _impl_.client_ehandle_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 literal_hand_type = 3;
    {PROTOBUF_FIELD_OFFSET(CClientMsg_WorldUIControllerHasPanelChangedEvent, _impl_.literal_hand_type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CClientMsg_WorldUIControllerHasPanelChangedEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CClientMsg_WorldUIControllerHasPanelChangedEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool has_panel = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_has_panel(), target);
  }

  // optional uint32 client_ehandle = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_client_ehandle(), target);
  }

  // optional uint32 literal_hand_type = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_literal_hand_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CClientMsg_WorldUIControllerHasPanelChangedEvent)
  return target;
}

::size_t CClientMsg_WorldUIControllerHasPanelChangedEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CClientMsg_WorldUIControllerHasPanelChangedEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bool has_panel = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2;
    }

    // optional uint32 client_ehandle = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_client_ehandle());
    }

    // optional uint32 literal_hand_type = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_literal_hand_type());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CClientMsg_WorldUIControllerHasPanelChangedEvent::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CClientMsg_WorldUIControllerHasPanelChangedEvent::MergeImpl
};
const ::google::protobuf::Message::ClassData*CClientMsg_WorldUIControllerHasPanelChangedEvent::GetClassData() const { return &_class_data_; }


void CClientMsg_WorldUIControllerHasPanelChangedEvent::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CClientMsg_WorldUIControllerHasPanelChangedEvent*>(&to_msg);
  auto& from = static_cast<const CClientMsg_WorldUIControllerHasPanelChangedEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CClientMsg_WorldUIControllerHasPanelChangedEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.has_panel_ = from._impl_.has_panel_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.client_ehandle_ = from._impl_.client_ehandle_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.literal_hand_type_ = from._impl_.literal_hand_type_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CClientMsg_WorldUIControllerHasPanelChangedEvent::CopyFrom(const CClientMsg_WorldUIControllerHasPanelChangedEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CClientMsg_WorldUIControllerHasPanelChangedEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CClientMsg_WorldUIControllerHasPanelChangedEvent::IsInitialized() const {
  return true;
}

void CClientMsg_WorldUIControllerHasPanelChangedEvent::InternalSwap(CClientMsg_WorldUIControllerHasPanelChangedEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CClientMsg_WorldUIControllerHasPanelChangedEvent, _impl_.literal_hand_type_)
      + sizeof(CClientMsg_WorldUIControllerHasPanelChangedEvent::_impl_.literal_hand_type_)
      - PROTOBUF_FIELD_OFFSET(CClientMsg_WorldUIControllerHasPanelChangedEvent, _impl_.has_panel_)>(
          reinterpret_cast<char*>(&_impl_.has_panel_),
          reinterpret_cast<char*>(&other->_impl_.has_panel_));
}

::google::protobuf::Metadata CClientMsg_WorldUIControllerHasPanelChangedEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_clientmessages_2eproto_getter, &descriptor_table_clientmessages_2eproto_once,
      file_level_metadata_clientmessages_2eproto[4]);
}
// ===================================================================

class CClientMsg_RotateAnchor::_Internal {
 public:
  using HasBits = decltype(std::declval<CClientMsg_RotateAnchor>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CClientMsg_RotateAnchor, _impl_._has_bits_);
  static void set_has_angle(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CClientMsg_RotateAnchor::CClientMsg_RotateAnchor(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CClientMsg_RotateAnchor)
}
CClientMsg_RotateAnchor::CClientMsg_RotateAnchor(const CClientMsg_RotateAnchor& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CClientMsg_RotateAnchor)
}
inline void CClientMsg_RotateAnchor::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.angle_){0},
  };
}
CClientMsg_RotateAnchor::~CClientMsg_RotateAnchor() {
  // @@protoc_insertion_point(destructor:CClientMsg_RotateAnchor)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CClientMsg_RotateAnchor::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CClientMsg_RotateAnchor::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CClientMsg_RotateAnchor::Clear() {
// @@protoc_insertion_point(message_clear_start:CClientMsg_RotateAnchor)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.angle_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CClientMsg_RotateAnchor::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CClientMsg_RotateAnchor::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CClientMsg_RotateAnchor, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CClientMsg_RotateAnchor_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional float angle = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(CClientMsg_RotateAnchor, _impl_.angle_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional float angle = 1;
    {PROTOBUF_FIELD_OFFSET(CClientMsg_RotateAnchor, _impl_.angle_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CClientMsg_RotateAnchor::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CClientMsg_RotateAnchor)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional float angle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_angle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CClientMsg_RotateAnchor)
  return target;
}

::size_t CClientMsg_RotateAnchor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CClientMsg_RotateAnchor)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional float angle = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CClientMsg_RotateAnchor::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CClientMsg_RotateAnchor::MergeImpl
};
const ::google::protobuf::Message::ClassData*CClientMsg_RotateAnchor::GetClassData() const { return &_class_data_; }


void CClientMsg_RotateAnchor::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CClientMsg_RotateAnchor*>(&to_msg);
  auto& from = static_cast<const CClientMsg_RotateAnchor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CClientMsg_RotateAnchor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_angle(from._internal_angle());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CClientMsg_RotateAnchor::CopyFrom(const CClientMsg_RotateAnchor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CClientMsg_RotateAnchor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CClientMsg_RotateAnchor::IsInitialized() const {
  return true;
}

void CClientMsg_RotateAnchor::InternalSwap(CClientMsg_RotateAnchor* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.angle_, other->_impl_.angle_);
}

::google::protobuf::Metadata CClientMsg_RotateAnchor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_clientmessages_2eproto_getter, &descriptor_table_clientmessages_2eproto_once,
      file_level_metadata_clientmessages_2eproto[5]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
