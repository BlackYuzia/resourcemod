// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: netmessages.proto

#include "netmessages.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
        template <typename>
PROTOBUF_CONSTEXPR CCLCMsg_ClientInfo::CCLCMsg_ClientInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.friends_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.send_table_crc_)*/ 0u,
      /*decltype(_impl_.server_count_)*/ 0u,
      /*decltype(_impl_.is_hltv_)*/ false,
      /*decltype(_impl_.friends_id_)*/ 0u,
    } {}
struct CCLCMsg_ClientInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CCLCMsg_ClientInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CCLCMsg_ClientInfoDefaultTypeInternal() {}
  union {
    CCLCMsg_ClientInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CCLCMsg_ClientInfoDefaultTypeInternal _CCLCMsg_ClientInfo_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CCLCMsg_Move::CCLCMsg_Move(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.data_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.command_number_)*/ 0u,
      /*decltype(_impl_.num_commands_)*/ 0u,
    } {}
struct CCLCMsg_MoveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CCLCMsg_MoveDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CCLCMsg_MoveDefaultTypeInternal() {}
  union {
    CCLCMsg_Move _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CCLCMsg_MoveDefaultTypeInternal _CCLCMsg_Move_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgVoiceAudio::CMsgVoiceAudio(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.voice_data_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.format_)*/ 0,
      /*decltype(_impl_.sequence_bytes_)*/ 0,
      /*decltype(_impl_.section_number_)*/ 0u,
      /*decltype(_impl_.sample_rate_)*/ 0u,
      /*decltype(_impl_.uncompressed_sample_offset_)*/ 0u,
    } {}
struct CMsgVoiceAudioDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgVoiceAudioDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgVoiceAudioDefaultTypeInternal() {}
  union {
    CMsgVoiceAudio _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgVoiceAudioDefaultTypeInternal _CMsgVoiceAudio_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CCLCMsg_VoiceData::CCLCMsg_VoiceData(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.audio_)*/ nullptr,
      /*decltype(_impl_.xuid_)*/ ::uint64_t{0u},
      /*decltype(_impl_.tick_)*/ 0u,
    } {}
struct CCLCMsg_VoiceDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CCLCMsg_VoiceDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CCLCMsg_VoiceDataDefaultTypeInternal() {}
  union {
    CCLCMsg_VoiceData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CCLCMsg_VoiceDataDefaultTypeInternal _CCLCMsg_VoiceData_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CCLCMsg_BaselineAck::CCLCMsg_BaselineAck(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.baseline_tick_)*/ 0,
      /*decltype(_impl_.baseline_nr_)*/ 0,
    } {}
struct CCLCMsg_BaselineAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CCLCMsg_BaselineAckDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CCLCMsg_BaselineAckDefaultTypeInternal() {}
  union {
    CCLCMsg_BaselineAck _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CCLCMsg_BaselineAckDefaultTypeInternal _CCLCMsg_BaselineAck_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CCLCMsg_ListenEvents::CCLCMsg_ListenEvents(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.event_mask_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CCLCMsg_ListenEventsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CCLCMsg_ListenEventsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CCLCMsg_ListenEventsDefaultTypeInternal() {}
  union {
    CCLCMsg_ListenEvents _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CCLCMsg_ListenEventsDefaultTypeInternal _CCLCMsg_ListenEvents_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CCLCMsg_RespondCvarValue::CCLCMsg_RespondCvarValue(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.value_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.cookie_)*/ 0,
      /*decltype(_impl_.status_code_)*/ 0,
    } {}
struct CCLCMsg_RespondCvarValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CCLCMsg_RespondCvarValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CCLCMsg_RespondCvarValueDefaultTypeInternal() {}
  union {
    CCLCMsg_RespondCvarValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CCLCMsg_RespondCvarValueDefaultTypeInternal _CCLCMsg_RespondCvarValue_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CCLCMsg_FileCRCCheck::CCLCMsg_FileCRCCheck(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.path_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.filename_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.code_path_)*/ 0,
      /*decltype(_impl_.code_filename_)*/ 0,
      /*decltype(_impl_.crc_)*/ 0u,
    } {}
struct CCLCMsg_FileCRCCheckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CCLCMsg_FileCRCCheckDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CCLCMsg_FileCRCCheckDefaultTypeInternal() {}
  union {
    CCLCMsg_FileCRCCheck _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CCLCMsg_FileCRCCheckDefaultTypeInternal _CCLCMsg_FileCRCCheck_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CCLCMsg_LoadingProgress::CCLCMsg_LoadingProgress(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.progress_)*/ 0,
    } {}
struct CCLCMsg_LoadingProgressDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CCLCMsg_LoadingProgressDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CCLCMsg_LoadingProgressDefaultTypeInternal() {}
  union {
    CCLCMsg_LoadingProgress _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CCLCMsg_LoadingProgressDefaultTypeInternal _CCLCMsg_LoadingProgress_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CCLCMsg_SplitPlayerConnect::CCLCMsg_SplitPlayerConnect(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.playername_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct CCLCMsg_SplitPlayerConnectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CCLCMsg_SplitPlayerConnectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CCLCMsg_SplitPlayerConnectDefaultTypeInternal() {}
  union {
    CCLCMsg_SplitPlayerConnect _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CCLCMsg_SplitPlayerConnectDefaultTypeInternal _CCLCMsg_SplitPlayerConnect_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CCLCMsg_ClientMessage::CCLCMsg_ClientMessage(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.data_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.msg_type_)*/ 0,
    } {}
struct CCLCMsg_ClientMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CCLCMsg_ClientMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CCLCMsg_ClientMessageDefaultTypeInternal() {}
  union {
    CCLCMsg_ClientMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CCLCMsg_ClientMessageDefaultTypeInternal _CCLCMsg_ClientMessage_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CCLCMsg_SplitPlayerDisconnect::CCLCMsg_SplitPlayerDisconnect(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.slot_)*/ 0,
    } {}
struct CCLCMsg_SplitPlayerDisconnectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CCLCMsg_SplitPlayerDisconnectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CCLCMsg_SplitPlayerDisconnectDefaultTypeInternal() {}
  union {
    CCLCMsg_SplitPlayerDisconnect _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CCLCMsg_SplitPlayerDisconnectDefaultTypeInternal _CCLCMsg_SplitPlayerDisconnect_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CCLCMsg_ServerStatus::CCLCMsg_ServerStatus(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.simplified_)*/ false,
    } {}
struct CCLCMsg_ServerStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CCLCMsg_ServerStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CCLCMsg_ServerStatusDefaultTypeInternal() {}
  union {
    CCLCMsg_ServerStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CCLCMsg_ServerStatusDefaultTypeInternal _CCLCMsg_ServerStatus_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR CCLCMsg_ServerPing::CCLCMsg_ServerPing(::_pbi::ConstantInitialized) {}
struct CCLCMsg_ServerPingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CCLCMsg_ServerPingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CCLCMsg_ServerPingDefaultTypeInternal() {}
  union {
    CCLCMsg_ServerPing _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CCLCMsg_ServerPingDefaultTypeInternal _CCLCMsg_ServerPing_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CCLCMsg_RequestPause::CCLCMsg_RequestPause(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.pause_type_)*/ 0,
      /*decltype(_impl_.pause_group_)*/ 0,
    } {}
struct CCLCMsg_RequestPauseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CCLCMsg_RequestPauseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CCLCMsg_RequestPauseDefaultTypeInternal() {}
  union {
    CCLCMsg_RequestPause _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CCLCMsg_RequestPauseDefaultTypeInternal _CCLCMsg_RequestPause_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CCLCMsg_CmdKeyValues::CCLCMsg_CmdKeyValues(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.data_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct CCLCMsg_CmdKeyValuesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CCLCMsg_CmdKeyValuesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CCLCMsg_CmdKeyValuesDefaultTypeInternal() {}
  union {
    CCLCMsg_CmdKeyValues _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CCLCMsg_CmdKeyValuesDefaultTypeInternal _CCLCMsg_CmdKeyValues_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CCLCMsg_RconServerDetails::CCLCMsg_RconServerDetails(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.token_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct CCLCMsg_RconServerDetailsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CCLCMsg_RconServerDetailsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CCLCMsg_RconServerDetailsDefaultTypeInternal() {}
  union {
    CCLCMsg_RconServerDetails _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CCLCMsg_RconServerDetailsDefaultTypeInternal _CCLCMsg_RconServerDetails_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_ServerInfo::CSVCMsg_ServerInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.game_dir_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.map_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.sky_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.host_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.addon_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.game_session_manifest_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.game_session_config_)*/ nullptr,
      /*decltype(_impl_.protocol_)*/ 0,
      /*decltype(_impl_.server_count_)*/ 0,
      /*decltype(_impl_.is_dedicated_)*/ false,
      /*decltype(_impl_.is_hltv_)*/ false,
      /*decltype(_impl_.c_os_)*/ 0,
      /*decltype(_impl_.max_clients_)*/ 0,
      /*decltype(_impl_.max_classes_)*/ 0,
      /*decltype(_impl_.tick_interval_)*/ 0,
      /*decltype(_impl_.player_slot_)*/ -1,
    } {}
struct CSVCMsg_ServerInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_ServerInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_ServerInfoDefaultTypeInternal() {}
  union {
    CSVCMsg_ServerInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_ServerInfoDefaultTypeInternal _CSVCMsg_ServerInfo_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_ClassInfo_class_t::CSVCMsg_ClassInfo_class_t(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.class_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.class_id_)*/ 0,
    } {}
struct CSVCMsg_ClassInfo_class_tDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_ClassInfo_class_tDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_ClassInfo_class_tDefaultTypeInternal() {}
  union {
    CSVCMsg_ClassInfo_class_t _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_ClassInfo_class_tDefaultTypeInternal _CSVCMsg_ClassInfo_class_t_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_ClassInfo::CSVCMsg_ClassInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.classes_)*/ {},
      /*decltype(_impl_.create_on_client_)*/ false,
    } {}
struct CSVCMsg_ClassInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_ClassInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_ClassInfoDefaultTypeInternal() {}
  union {
    CSVCMsg_ClassInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_ClassInfoDefaultTypeInternal _CSVCMsg_ClassInfo_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_SetPause::CSVCMsg_SetPause(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.paused_)*/ false,
    } {}
struct CSVCMsg_SetPauseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_SetPauseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_SetPauseDefaultTypeInternal() {}
  union {
    CSVCMsg_SetPause _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_SetPauseDefaultTypeInternal _CSVCMsg_SetPause_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_VoiceInit::CSVCMsg_VoiceInit(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.codec_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.quality_)*/ 0,
      /*decltype(_impl_.version_)*/ 0,
    } {}
struct CSVCMsg_VoiceInitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_VoiceInitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_VoiceInitDefaultTypeInternal() {}
  union {
    CSVCMsg_VoiceInit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_VoiceInitDefaultTypeInternal _CSVCMsg_VoiceInit_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_Print::CSVCMsg_Print(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.text_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct CSVCMsg_PrintDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_PrintDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_PrintDefaultTypeInternal() {}
  union {
    CSVCMsg_Print _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_PrintDefaultTypeInternal _CSVCMsg_Print_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_Sounds_sounddata_t::CSVCMsg_Sounds_sounddata_t(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.origin_x_)*/ 0,
      /*decltype(_impl_.origin_y_)*/ 0,
      /*decltype(_impl_.origin_z_)*/ 0,
      /*decltype(_impl_.volume_)*/ 0u,
      /*decltype(_impl_.delay_value_)*/ 0,
      /*decltype(_impl_.sequence_number_)*/ 0,
      /*decltype(_impl_.channel_)*/ 0,
      /*decltype(_impl_.pitch_)*/ 0,
      /*decltype(_impl_.flags_)*/ 0,
      /*decltype(_impl_.sound_num_)*/ 0u,
      /*decltype(_impl_.sound_num_handle_)*/ 0u,
      /*decltype(_impl_.speaker_entity_)*/ 0,
      /*decltype(_impl_.random_seed_)*/ 0,
      /*decltype(_impl_.sound_level_)*/ 0,
      /*decltype(_impl_.is_sentence_)*/ false,
      /*decltype(_impl_.is_ambient_)*/ false,
      /*decltype(_impl_.guid_)*/ 0u,
      /*decltype(_impl_.sound_resource_id_)*/ ::uint64_t{0u},
      /*decltype(_impl_.entity_index_)*/ -1,
    } {}
struct CSVCMsg_Sounds_sounddata_tDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_Sounds_sounddata_tDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_Sounds_sounddata_tDefaultTypeInternal() {}
  union {
    CSVCMsg_Sounds_sounddata_t _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_Sounds_sounddata_tDefaultTypeInternal _CSVCMsg_Sounds_sounddata_t_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_Sounds::CSVCMsg_Sounds(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.sounds_)*/ {},
      /*decltype(_impl_.reliable_sound_)*/ false,
    } {}
struct CSVCMsg_SoundsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_SoundsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_SoundsDefaultTypeInternal() {}
  union {
    CSVCMsg_Sounds _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_SoundsDefaultTypeInternal _CSVCMsg_Sounds_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_Prefetch::CSVCMsg_Prefetch(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.sound_index_)*/ 0,
      /*decltype(_impl_.resource_type_)*/ 0,
    } {}
struct CSVCMsg_PrefetchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_PrefetchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_PrefetchDefaultTypeInternal() {}
  union {
    CSVCMsg_Prefetch _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_PrefetchDefaultTypeInternal _CSVCMsg_Prefetch_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_SetView::CSVCMsg_SetView(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.entity_index_)*/ -1,
      /*decltype(_impl_.slot_)*/ -1,
    } {}
struct CSVCMsg_SetViewDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_SetViewDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_SetViewDefaultTypeInternal() {}
  union {
    CSVCMsg_SetView _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_SetViewDefaultTypeInternal _CSVCMsg_SetView_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_FixAngle::CSVCMsg_FixAngle(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.angle_)*/ nullptr,
      /*decltype(_impl_.relative_)*/ false,
    } {}
struct CSVCMsg_FixAngleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_FixAngleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_FixAngleDefaultTypeInternal() {}
  union {
    CSVCMsg_FixAngle _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_FixAngleDefaultTypeInternal _CSVCMsg_FixAngle_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_CrosshairAngle::CSVCMsg_CrosshairAngle(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.angle_)*/ nullptr,
    } {}
struct CSVCMsg_CrosshairAngleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_CrosshairAngleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_CrosshairAngleDefaultTypeInternal() {}
  union {
    CSVCMsg_CrosshairAngle _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_CrosshairAngleDefaultTypeInternal _CSVCMsg_CrosshairAngle_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_BSPDecal::CSVCMsg_BSPDecal(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.pos_)*/ nullptr,
      /*decltype(_impl_.decal_texture_index_)*/ 0,
      /*decltype(_impl_.model_index_)*/ 0,
      /*decltype(_impl_.low_priority_)*/ false,
      /*decltype(_impl_.entity_index_)*/ -1,
    } {}
struct CSVCMsg_BSPDecalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_BSPDecalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_BSPDecalDefaultTypeInternal() {}
  union {
    CSVCMsg_BSPDecal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_BSPDecalDefaultTypeInternal _CSVCMsg_BSPDecal_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_SplitScreen::CSVCMsg_SplitScreen(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.type_)*/ 0,
      /*decltype(_impl_.slot_)*/ 0,
      /*decltype(_impl_.player_index_)*/ -1,
    } {}
struct CSVCMsg_SplitScreenDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_SplitScreenDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_SplitScreenDefaultTypeInternal() {}
  union {
    CSVCMsg_SplitScreen _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_SplitScreenDefaultTypeInternal _CSVCMsg_SplitScreen_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_GetCvarValue::CSVCMsg_GetCvarValue(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.cvar_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.cookie_)*/ 0,
    } {}
struct CSVCMsg_GetCvarValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_GetCvarValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_GetCvarValueDefaultTypeInternal() {}
  union {
    CSVCMsg_GetCvarValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_GetCvarValueDefaultTypeInternal _CSVCMsg_GetCvarValue_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_Menu::CSVCMsg_Menu(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.menu_key_values_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.dialog_type_)*/ 0,
    } {}
struct CSVCMsg_MenuDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_MenuDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_MenuDefaultTypeInternal() {}
  union {
    CSVCMsg_Menu _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_MenuDefaultTypeInternal _CSVCMsg_Menu_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_UserMessage::CSVCMsg_UserMessage(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.msg_data_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.msg_type_)*/ 0,
      /*decltype(_impl_.passthrough_)*/ 0,
    } {}
struct CSVCMsg_UserMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_UserMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_UserMessageDefaultTypeInternal() {}
  union {
    CSVCMsg_UserMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_UserMessageDefaultTypeInternal _CSVCMsg_UserMessage_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_SendTable_sendprop_t::CSVCMsg_SendTable_sendprop_t(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.var_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.dt_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.type_)*/ 0,
      /*decltype(_impl_.flags_)*/ 0,
      /*decltype(_impl_.priority_)*/ 0,
      /*decltype(_impl_.num_elements_)*/ 0,
      /*decltype(_impl_.low_value_)*/ 0,
      /*decltype(_impl_.high_value_)*/ 0,
      /*decltype(_impl_.num_bits_)*/ 0,
    } {}
struct CSVCMsg_SendTable_sendprop_tDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_SendTable_sendprop_tDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_SendTable_sendprop_tDefaultTypeInternal() {}
  union {
    CSVCMsg_SendTable_sendprop_t _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_SendTable_sendprop_tDefaultTypeInternal _CSVCMsg_SendTable_sendprop_t_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_SendTable::CSVCMsg_SendTable(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.props_)*/ {},
      /*decltype(_impl_.net_table_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.is_end_)*/ false,
      /*decltype(_impl_.needs_decoder_)*/ false,
    } {}
struct CSVCMsg_SendTableDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_SendTableDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_SendTableDefaultTypeInternal() {}
  union {
    CSVCMsg_SendTable _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_SendTableDefaultTypeInternal _CSVCMsg_SendTable_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_GameEventList_key_t::CSVCMsg_GameEventList_key_t(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.type_)*/ 0,
    } {}
struct CSVCMsg_GameEventList_key_tDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_GameEventList_key_tDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_GameEventList_key_tDefaultTypeInternal() {}
  union {
    CSVCMsg_GameEventList_key_t _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_GameEventList_key_tDefaultTypeInternal _CSVCMsg_GameEventList_key_t_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_GameEventList_descriptor_t::CSVCMsg_GameEventList_descriptor_t(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.keys_)*/ {},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.eventid_)*/ 0,
    } {}
struct CSVCMsg_GameEventList_descriptor_tDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_GameEventList_descriptor_tDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_GameEventList_descriptor_tDefaultTypeInternal() {}
  union {
    CSVCMsg_GameEventList_descriptor_t _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_GameEventList_descriptor_tDefaultTypeInternal _CSVCMsg_GameEventList_descriptor_t_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_GameEventList::CSVCMsg_GameEventList(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.descriptors_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CSVCMsg_GameEventListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_GameEventListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_GameEventListDefaultTypeInternal() {}
  union {
    CSVCMsg_GameEventList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_GameEventListDefaultTypeInternal _CSVCMsg_GameEventList_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_PacketEntities_command_queue_info_t::CSVCMsg_PacketEntities_command_queue_info_t(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.commands_queued_)*/ 0u,
      /*decltype(_impl_.command_queue_desired_size_)*/ 0u,
      /*decltype(_impl_.starved_command_ticks_)*/ 0u,
      /*decltype(_impl_.time_dilation_percent_)*/ 0,
      /*decltype(_impl_.discarded_command_ticks_)*/ 0u,
    } {}
struct CSVCMsg_PacketEntities_command_queue_info_tDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_PacketEntities_command_queue_info_tDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_PacketEntities_command_queue_info_tDefaultTypeInternal() {}
  union {
    CSVCMsg_PacketEntities_command_queue_info_t _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_PacketEntities_command_queue_info_tDefaultTypeInternal _CSVCMsg_PacketEntities_command_queue_info_t_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_PacketEntities_alternate_baseline_t::CSVCMsg_PacketEntities_alternate_baseline_t(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.entity_index_)*/ 0,
      /*decltype(_impl_.baseline_index_)*/ 0,
    } {}
struct CSVCMsg_PacketEntities_alternate_baseline_tDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_PacketEntities_alternate_baseline_tDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_PacketEntities_alternate_baseline_tDefaultTypeInternal() {}
  union {
    CSVCMsg_PacketEntities_alternate_baseline_t _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_PacketEntities_alternate_baseline_tDefaultTypeInternal _CSVCMsg_PacketEntities_alternate_baseline_t_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_PacketEntities::CSVCMsg_PacketEntities(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.alternate_baselines_)*/ {},
      /*decltype(_impl_.entity_data_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.serialized_entities_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.command_queue_info_)*/ nullptr,
      /*decltype(_impl_.max_entries_)*/ 0,
      /*decltype(_impl_.updated_entries_)*/ 0,
      /*decltype(_impl_.baseline_)*/ 0,
      /*decltype(_impl_.is_delta_)*/ false,
      /*decltype(_impl_.update_baseline_)*/ false,
      /*decltype(_impl_.pending_full_frame_)*/ false,
      /*decltype(_impl_.delta_from_)*/ 0,
      /*decltype(_impl_.active_spawngroup_handle_)*/ 0u,
      /*decltype(_impl_.max_spawngroup_creationsequence_)*/ 0u,
      /*decltype(_impl_.last_cmd_number_)*/ 0u,
      /*decltype(_impl_.server_tick_)*/ 0u,
    } {}
struct CSVCMsg_PacketEntitiesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_PacketEntitiesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_PacketEntitiesDefaultTypeInternal() {}
  union {
    CSVCMsg_PacketEntities _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_PacketEntitiesDefaultTypeInternal _CSVCMsg_PacketEntities_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_TempEntities::CSVCMsg_TempEntities(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.entity_data_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.reliable_)*/ false,
      /*decltype(_impl_.num_entries_)*/ 0,
    } {}
struct CSVCMsg_TempEntitiesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_TempEntitiesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_TempEntitiesDefaultTypeInternal() {}
  union {
    CSVCMsg_TempEntities _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_TempEntitiesDefaultTypeInternal _CSVCMsg_TempEntities_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_CreateStringTable::CSVCMsg_CreateStringTable(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.string_data_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.num_entries_)*/ 0,
      /*decltype(_impl_.user_data_size_)*/ 0,
      /*decltype(_impl_.user_data_size_bits_)*/ 0,
      /*decltype(_impl_.flags_)*/ 0,
      /*decltype(_impl_.user_data_fixed_size_)*/ false,
      /*decltype(_impl_.data_compressed_)*/ false,
      /*decltype(_impl_.using_varint_bitcounts_)*/ false,
      /*decltype(_impl_.uncompressed_size_)*/ 0,
    } {}
struct CSVCMsg_CreateStringTableDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_CreateStringTableDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_CreateStringTableDefaultTypeInternal() {}
  union {
    CSVCMsg_CreateStringTable _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_CreateStringTableDefaultTypeInternal _CSVCMsg_CreateStringTable_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_UpdateStringTable::CSVCMsg_UpdateStringTable(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.string_data_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.table_id_)*/ 0,
      /*decltype(_impl_.num_changed_entries_)*/ 0,
    } {}
struct CSVCMsg_UpdateStringTableDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_UpdateStringTableDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_UpdateStringTableDefaultTypeInternal() {}
  union {
    CSVCMsg_UpdateStringTable _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_UpdateStringTableDefaultTypeInternal _CSVCMsg_UpdateStringTable_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_VoiceData::CSVCMsg_VoiceData(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.audio_)*/ nullptr,
      /*decltype(_impl_.xuid_)*/ ::uint64_t{0u},
      /*decltype(_impl_.proximity_)*/ false,
      /*decltype(_impl_.audible_mask_)*/ 0,
      /*decltype(_impl_.tick_)*/ 0u,
      /*decltype(_impl_.passthrough_)*/ 0,
      /*decltype(_impl_.client_)*/ -1,
    } {}
struct CSVCMsg_VoiceDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_VoiceDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_VoiceDataDefaultTypeInternal() {}
  union {
    CSVCMsg_VoiceData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_VoiceDataDefaultTypeInternal _CSVCMsg_VoiceData_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_PacketReliable::CSVCMsg_PacketReliable(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.tick_)*/ 0,
      /*decltype(_impl_.messagessize_)*/ 0,
      /*decltype(_impl_.state_)*/ false,
    } {}
struct CSVCMsg_PacketReliableDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_PacketReliableDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_PacketReliableDefaultTypeInternal() {}
  union {
    CSVCMsg_PacketReliable _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_PacketReliableDefaultTypeInternal _CSVCMsg_PacketReliable_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_FullFrameSplit::CSVCMsg_FullFrameSplit(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.data_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.tick_)*/ 0,
      /*decltype(_impl_.section_)*/ 0,
      /*decltype(_impl_.total_)*/ 0,
    } {}
struct CSVCMsg_FullFrameSplitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_FullFrameSplitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_FullFrameSplitDefaultTypeInternal() {}
  union {
    CSVCMsg_FullFrameSplit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_FullFrameSplitDefaultTypeInternal _CSVCMsg_FullFrameSplit_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_HLTVStatus::CSVCMsg_HLTVStatus(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.master_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.clients_)*/ 0,
      /*decltype(_impl_.slots_)*/ 0,
      /*decltype(_impl_.proxies_)*/ 0,
    } {}
struct CSVCMsg_HLTVStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_HLTVStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_HLTVStatusDefaultTypeInternal() {}
  union {
    CSVCMsg_HLTVStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_HLTVStatusDefaultTypeInternal _CSVCMsg_HLTVStatus_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_ServerSteamID::CSVCMsg_ServerSteamID(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.steam_id_)*/ ::uint64_t{0u},
    } {}
struct CSVCMsg_ServerSteamIDDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_ServerSteamIDDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_ServerSteamIDDefaultTypeInternal() {}
  union {
    CSVCMsg_ServerSteamID _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_ServerSteamIDDefaultTypeInternal _CSVCMsg_ServerSteamID_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_CmdKeyValues::CSVCMsg_CmdKeyValues(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.data_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct CSVCMsg_CmdKeyValuesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_CmdKeyValuesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_CmdKeyValuesDefaultTypeInternal() {}
  union {
    CSVCMsg_CmdKeyValues _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_CmdKeyValuesDefaultTypeInternal _CSVCMsg_CmdKeyValues_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_RconServerDetails::CSVCMsg_RconServerDetails(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.token_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.details_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct CSVCMsg_RconServerDetailsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_RconServerDetailsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_RconServerDetailsDefaultTypeInternal() {}
  union {
    CSVCMsg_RconServerDetails _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_RconServerDetailsDefaultTypeInternal _CSVCMsg_RconServerDetails_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgIPCAddress::CMsgIPCAddress(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.computer_guid_)*/ ::uint64_t{0u},
      /*decltype(_impl_.process_id_)*/ 0u,
    } {}
struct CMsgIPCAddressDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgIPCAddressDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgIPCAddressDefaultTypeInternal() {}
  union {
    CMsgIPCAddress _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgIPCAddressDefaultTypeInternal _CMsgIPCAddress_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgServerPeer::CMsgServerPeer(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.ipc_)*/ nullptr,
      /*decltype(_impl_.steamid_)*/ ::uint64_t{0u},
      /*decltype(_impl_.they_hear_you_)*/ false,
      /*decltype(_impl_.you_hear_them_)*/ false,
      /*decltype(_impl_.is_listenserver_host_)*/ false,
      /*decltype(_impl_.player_slot_)*/ -1,
    } {}
struct CMsgServerPeerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgServerPeerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgServerPeerDefaultTypeInternal() {}
  union {
    CMsgServerPeer _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgServerPeerDefaultTypeInternal _CMsgServerPeer_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_PeerList::CSVCMsg_PeerList(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.peer_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CSVCMsg_PeerListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_PeerListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_PeerListDefaultTypeInternal() {}
  union {
    CSVCMsg_PeerList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_PeerListDefaultTypeInternal _CSVCMsg_PeerList_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_ClearAllStringTables::CSVCMsg_ClearAllStringTables(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.mapname_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.create_tables_skipped_)*/ false,
    } {}
struct CSVCMsg_ClearAllStringTablesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_ClearAllStringTablesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_ClearAllStringTablesDefaultTypeInternal() {}
  union {
    CSVCMsg_ClearAllStringTables _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_ClearAllStringTablesDefaultTypeInternal _CSVCMsg_ClearAllStringTables_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ProtoFlattenedSerializerField_t_polymorphic_field_t::ProtoFlattenedSerializerField_t_polymorphic_field_t(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.polymorphic_field_serializer_name_sym_)*/ 0,
      /*decltype(_impl_.polymorphic_field_serializer_version_)*/ 0,
    } {}
struct ProtoFlattenedSerializerField_t_polymorphic_field_tDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProtoFlattenedSerializerField_t_polymorphic_field_tDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProtoFlattenedSerializerField_t_polymorphic_field_tDefaultTypeInternal() {}
  union {
    ProtoFlattenedSerializerField_t_polymorphic_field_t _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProtoFlattenedSerializerField_t_polymorphic_field_tDefaultTypeInternal _ProtoFlattenedSerializerField_t_polymorphic_field_t_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ProtoFlattenedSerializerField_t::ProtoFlattenedSerializerField_t(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.polymorphic_types_)*/ {},
      /*decltype(_impl_.var_type_sym_)*/ 0,
      /*decltype(_impl_.var_name_sym_)*/ 0,
      /*decltype(_impl_.bit_count_)*/ 0,
      /*decltype(_impl_.low_value_)*/ 0,
      /*decltype(_impl_.high_value_)*/ 0,
      /*decltype(_impl_.encode_flags_)*/ 0,
      /*decltype(_impl_.field_serializer_name_sym_)*/ 0,
      /*decltype(_impl_.field_serializer_version_)*/ 0,
      /*decltype(_impl_.send_node_sym_)*/ 0,
      /*decltype(_impl_.var_encoder_sym_)*/ 0,
    } {}
struct ProtoFlattenedSerializerField_tDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProtoFlattenedSerializerField_tDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProtoFlattenedSerializerField_tDefaultTypeInternal() {}
  union {
    ProtoFlattenedSerializerField_t _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProtoFlattenedSerializerField_tDefaultTypeInternal _ProtoFlattenedSerializerField_t_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ProtoFlattenedSerializer_t::ProtoFlattenedSerializer_t(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.fields_index_)*/ {},
      /*decltype(_impl_.serializer_name_sym_)*/ 0,
      /*decltype(_impl_.serializer_version_)*/ 0,
    } {}
struct ProtoFlattenedSerializer_tDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProtoFlattenedSerializer_tDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProtoFlattenedSerializer_tDefaultTypeInternal() {}
  union {
    ProtoFlattenedSerializer_t _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProtoFlattenedSerializer_tDefaultTypeInternal _ProtoFlattenedSerializer_t_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_FlattenedSerializer::CSVCMsg_FlattenedSerializer(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.serializers_)*/ {},
      /*decltype(_impl_.symbols_)*/ {},
      /*decltype(_impl_.fields_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CSVCMsg_FlattenedSerializerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_FlattenedSerializerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_FlattenedSerializerDefaultTypeInternal() {}
  union {
    CSVCMsg_FlattenedSerializer _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_FlattenedSerializerDefaultTypeInternal _CSVCMsg_FlattenedSerializer_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_StopSound::CSVCMsg_StopSound(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.guid_)*/ 0u,
    } {}
struct CSVCMsg_StopSoundDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_StopSoundDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_StopSoundDefaultTypeInternal() {}
  union {
    CSVCMsg_StopSound _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_StopSoundDefaultTypeInternal _CSVCMsg_StopSound_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CBidirMsg_RebroadcastGameEvent::CBidirMsg_RebroadcastGameEvent(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.posttoserver_)*/ false,
      /*decltype(_impl_.buftype_)*/ 0,
      /*decltype(_impl_.receivingclients_)*/ ::uint64_t{0u},
      /*decltype(_impl_.clientbitcount_)*/ 0u,
    } {}
struct CBidirMsg_RebroadcastGameEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CBidirMsg_RebroadcastGameEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CBidirMsg_RebroadcastGameEventDefaultTypeInternal() {}
  union {
    CBidirMsg_RebroadcastGameEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CBidirMsg_RebroadcastGameEventDefaultTypeInternal _CBidirMsg_RebroadcastGameEvent_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CBidirMsg_RebroadcastSource::CBidirMsg_RebroadcastSource(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.eventsource_)*/ 0,
    } {}
struct CBidirMsg_RebroadcastSourceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CBidirMsg_RebroadcastSourceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CBidirMsg_RebroadcastSourceDefaultTypeInternal() {}
  union {
    CBidirMsg_RebroadcastSource _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CBidirMsg_RebroadcastSourceDefaultTypeInternal _CBidirMsg_RebroadcastSource_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgServerNetworkStats_Port::CMsgServerNetworkStats_Port(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.port_)*/ 0,
    } {}
struct CMsgServerNetworkStats_PortDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgServerNetworkStats_PortDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgServerNetworkStats_PortDefaultTypeInternal() {}
  union {
    CMsgServerNetworkStats_Port _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgServerNetworkStats_PortDefaultTypeInternal _CMsgServerNetworkStats_Port_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgServerNetworkStats_Player::CMsgServerNetworkStats_Player(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.remote_addr_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.steamid_)*/ ::uint64_t{0u},
      /*decltype(_impl_.ping_stddev_ms_)*/ 0,
      /*decltype(_impl_.ping_avg_ms_)*/ 0,
      /*decltype(_impl_.packet_loss_pct_)*/ 0,
      /*decltype(_impl_.is_bot_)*/ false,
    } {}
struct CMsgServerNetworkStats_PlayerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgServerNetworkStats_PlayerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgServerNetworkStats_PlayerDefaultTypeInternal() {}
  union {
    CMsgServerNetworkStats_Player _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgServerNetworkStats_PlayerDefaultTypeInternal _CMsgServerNetworkStats_Player_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgServerNetworkStats::CMsgServerNetworkStats(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.ports_)*/ {},
      /*decltype(_impl_.players_)*/ {},
      /*decltype(_impl_.dedicated_)*/ false,
      /*decltype(_impl_.cpu_usage_)*/ 0,
      /*decltype(_impl_.memory_used_mb_)*/ 0,
      /*decltype(_impl_.memory_free_mb_)*/ 0,
      /*decltype(_impl_.uptime_)*/ 0,
      /*decltype(_impl_.spawn_count_)*/ 0,
      /*decltype(_impl_.num_clients_)*/ 0,
      /*decltype(_impl_.num_bots_)*/ 0,
      /*decltype(_impl_.num_spectators_)*/ 0,
      /*decltype(_impl_.num_tv_relays_)*/ 0,
      /*decltype(_impl_.fps_)*/ 0,
      /*decltype(_impl_.avg_latency_out_)*/ 0,
      /*decltype(_impl_.avg_latency_in_)*/ 0,
      /*decltype(_impl_.avg_packets_out_)*/ 0,
      /*decltype(_impl_.avg_packets_in_)*/ 0,
      /*decltype(_impl_.avg_loss_out_)*/ 0,
      /*decltype(_impl_.avg_loss_in_)*/ 0,
      /*decltype(_impl_.avg_data_out_)*/ 0,
      /*decltype(_impl_.total_data_in_)*/ ::uint64_t{0u},
      /*decltype(_impl_.total_packets_in_)*/ ::uint64_t{0u},
      /*decltype(_impl_.total_data_out_)*/ ::uint64_t{0u},
      /*decltype(_impl_.total_packets_out_)*/ ::uint64_t{0u},
      /*decltype(_impl_.avg_data_in_)*/ 0,
    } {}
struct CMsgServerNetworkStatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgServerNetworkStatsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgServerNetworkStatsDefaultTypeInternal() {}
  union {
    CMsgServerNetworkStats _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgServerNetworkStatsDefaultTypeInternal _CMsgServerNetworkStats_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_HltvReplay::CSVCMsg_HltvReplay(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.delay_)*/ 0,
      /*decltype(_impl_.replay_stop_at_)*/ 0,
      /*decltype(_impl_.replay_start_at_)*/ 0,
      /*decltype(_impl_.replay_slowdown_begin_)*/ 0,
      /*decltype(_impl_.replay_slowdown_end_)*/ 0,
      /*decltype(_impl_.replay_slowdown_rate_)*/ 0,
      /*decltype(_impl_.reason_)*/ 0,
      /*decltype(_impl_.primary_target_)*/ -1,
    } {}
struct CSVCMsg_HltvReplayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_HltvReplayDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_HltvReplayDefaultTypeInternal() {}
  union {
    CSVCMsg_HltvReplay _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_HltvReplayDefaultTypeInternal _CSVCMsg_HltvReplay_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CCLCMsg_HltvReplay::CCLCMsg_HltvReplay(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.request_)*/ 0,
      /*decltype(_impl_.slowdown_length_)*/ 0,
      /*decltype(_impl_.slowdown_rate_)*/ 0,
      /*decltype(_impl_.event_time_)*/ 0,
      /*decltype(_impl_.primary_target_)*/ -1,
    } {}
struct CCLCMsg_HltvReplayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CCLCMsg_HltvReplayDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CCLCMsg_HltvReplayDefaultTypeInternal() {}
  union {
    CCLCMsg_HltvReplay _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CCLCMsg_HltvReplayDefaultTypeInternal _CCLCMsg_HltvReplay_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_Broadcast_Command::CSVCMsg_Broadcast_Command(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.cmd_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct CSVCMsg_Broadcast_CommandDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_Broadcast_CommandDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_Broadcast_CommandDefaultTypeInternal() {}
  union {
    CSVCMsg_Broadcast_Command _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_Broadcast_CommandDefaultTypeInternal _CSVCMsg_Broadcast_Command_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CCLCMsg_HltvFixupOperatorTick::CCLCMsg_HltvFixupOperatorTick(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.props_data_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.origin_)*/ nullptr,
      /*decltype(_impl_.eye_angles_)*/ nullptr,
      /*decltype(_impl_.view_offset_)*/ nullptr,
      /*decltype(_impl_.tick_)*/ 0,
      /*decltype(_impl_.observer_mode_)*/ 0,
      /*decltype(_impl_.cameraman_scoreboard_)*/ false,
      /*decltype(_impl_.observer_target_)*/ 0,
    } {}
struct CCLCMsg_HltvFixupOperatorTickDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CCLCMsg_HltvFixupOperatorTickDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CCLCMsg_HltvFixupOperatorTickDefaultTypeInternal() {}
  union {
    CCLCMsg_HltvFixupOperatorTick _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CCLCMsg_HltvFixupOperatorTickDefaultTypeInternal _CCLCMsg_HltvFixupOperatorTick_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CSVCMsg_HltvFixupOperatorStatus::CSVCMsg_HltvFixupOperatorStatus(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.override_operator_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.mode_)*/ 0u,
    } {}
struct CSVCMsg_HltvFixupOperatorStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSVCMsg_HltvFixupOperatorStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSVCMsg_HltvFixupOperatorStatusDefaultTypeInternal() {}
  union {
    CSVCMsg_HltvFixupOperatorStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSVCMsg_HltvFixupOperatorStatusDefaultTypeInternal _CSVCMsg_HltvFixupOperatorStatus_default_instance_;
static ::_pb::Metadata file_level_metadata_netmessages_2eproto[71];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_netmessages_2eproto[12];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_netmessages_2eproto = nullptr;
const ::uint32_t TableStruct_netmessages_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_ClientInfo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_ClientInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_ClientInfo, _impl_.send_table_crc_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_ClientInfo, _impl_.server_count_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_ClientInfo, _impl_.is_hltv_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_ClientInfo, _impl_.friends_id_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_ClientInfo, _impl_.friends_name_),
    1,
    2,
    3,
    4,
    0,
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_Move, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_Move, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_Move, _impl_.data_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_Move, _impl_.command_number_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_Move, _impl_.num_commands_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::CMsgVoiceAudio, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgVoiceAudio, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgVoiceAudio, _impl_.format_),
    PROTOBUF_FIELD_OFFSET(::CMsgVoiceAudio, _impl_.voice_data_),
    PROTOBUF_FIELD_OFFSET(::CMsgVoiceAudio, _impl_.sequence_bytes_),
    PROTOBUF_FIELD_OFFSET(::CMsgVoiceAudio, _impl_.section_number_),
    PROTOBUF_FIELD_OFFSET(::CMsgVoiceAudio, _impl_.sample_rate_),
    PROTOBUF_FIELD_OFFSET(::CMsgVoiceAudio, _impl_.uncompressed_sample_offset_),
    1,
    0,
    2,
    3,
    4,
    5,
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_VoiceData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_VoiceData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_VoiceData, _impl_.audio_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_VoiceData, _impl_.xuid_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_VoiceData, _impl_.tick_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_BaselineAck, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_BaselineAck, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_BaselineAck, _impl_.baseline_tick_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_BaselineAck, _impl_.baseline_nr_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_ListenEvents, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_ListenEvents, _impl_.event_mask_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_RespondCvarValue, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_RespondCvarValue, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_RespondCvarValue, _impl_.cookie_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_RespondCvarValue, _impl_.status_code_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_RespondCvarValue, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_RespondCvarValue, _impl_.value_),
    2,
    3,
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_FileCRCCheck, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_FileCRCCheck, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_FileCRCCheck, _impl_.code_path_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_FileCRCCheck, _impl_.path_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_FileCRCCheck, _impl_.code_filename_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_FileCRCCheck, _impl_.filename_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_FileCRCCheck, _impl_.crc_),
    2,
    0,
    3,
    1,
    4,
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_LoadingProgress, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_LoadingProgress, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_LoadingProgress, _impl_.progress_),
    0,
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_SplitPlayerConnect, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_SplitPlayerConnect, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_SplitPlayerConnect, _impl_.playername_),
    0,
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_ClientMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_ClientMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_ClientMessage, _impl_.msg_type_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_ClientMessage, _impl_.data_),
    1,
    0,
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_SplitPlayerDisconnect, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_SplitPlayerDisconnect, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_SplitPlayerDisconnect, _impl_.slot_),
    0,
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_ServerStatus, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_ServerStatus, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_ServerStatus, _impl_.simplified_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_ServerPing, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_RequestPause, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_RequestPause, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_RequestPause, _impl_.pause_type_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_RequestPause, _impl_.pause_group_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_CmdKeyValues, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_CmdKeyValues, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_CmdKeyValues, _impl_.data_),
    0,
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_RconServerDetails, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_RconServerDetails, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_RconServerDetails, _impl_.token_),
    0,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ServerInfo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ServerInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ServerInfo, _impl_.protocol_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ServerInfo, _impl_.server_count_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ServerInfo, _impl_.is_dedicated_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ServerInfo, _impl_.is_hltv_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ServerInfo, _impl_.c_os_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ServerInfo, _impl_.max_clients_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ServerInfo, _impl_.max_classes_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ServerInfo, _impl_.player_slot_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ServerInfo, _impl_.tick_interval_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ServerInfo, _impl_.game_dir_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ServerInfo, _impl_.map_name_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ServerInfo, _impl_.sky_name_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ServerInfo, _impl_.host_name_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ServerInfo, _impl_.addon_name_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ServerInfo, _impl_.game_session_config_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ServerInfo, _impl_.game_session_manifest_),
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    15,
    14,
    0,
    1,
    2,
    3,
    4,
    6,
    5,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ClassInfo_class_t, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ClassInfo_class_t, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ClassInfo_class_t, _impl_.class_id_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ClassInfo_class_t, _impl_.class_name_),
    1,
    0,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ClassInfo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ClassInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ClassInfo, _impl_.create_on_client_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ClassInfo, _impl_.classes_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_SetPause, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_SetPause, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_SetPause, _impl_.paused_),
    0,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_VoiceInit, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_VoiceInit, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_VoiceInit, _impl_.quality_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_VoiceInit, _impl_.codec_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_VoiceInit, _impl_.version_),
    1,
    0,
    2,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Print, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Print, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Print, _impl_.text_),
    0,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, _impl_.origin_x_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, _impl_.origin_y_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, _impl_.origin_z_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, _impl_.volume_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, _impl_.delay_value_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, _impl_.sequence_number_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, _impl_.entity_index_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, _impl_.channel_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, _impl_.pitch_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, _impl_.flags_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, _impl_.sound_num_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, _impl_.sound_num_handle_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, _impl_.speaker_entity_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, _impl_.random_seed_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, _impl_.sound_level_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, _impl_.is_sentence_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, _impl_.is_ambient_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, _impl_.guid_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, _impl_.sound_resource_id_),
    0,
    1,
    2,
    3,
    4,
    5,
    18,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Sounds, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Sounds, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Sounds, _impl_.reliable_sound_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Sounds, _impl_.sounds_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Prefetch, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Prefetch, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Prefetch, _impl_.sound_index_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Prefetch, _impl_.resource_type_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_SetView, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_SetView, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_SetView, _impl_.entity_index_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_SetView, _impl_.slot_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_FixAngle, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_FixAngle, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_FixAngle, _impl_.relative_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_FixAngle, _impl_.angle_),
    1,
    0,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_CrosshairAngle, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_CrosshairAngle, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_CrosshairAngle, _impl_.angle_),
    0,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_BSPDecal, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_BSPDecal, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_BSPDecal, _impl_.pos_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_BSPDecal, _impl_.decal_texture_index_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_BSPDecal, _impl_.entity_index_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_BSPDecal, _impl_.model_index_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_BSPDecal, _impl_.low_priority_),
    0,
    1,
    4,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_SplitScreen, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_SplitScreen, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_SplitScreen, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_SplitScreen, _impl_.slot_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_SplitScreen, _impl_.player_index_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GetCvarValue, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GetCvarValue, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GetCvarValue, _impl_.cookie_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GetCvarValue, _impl_.cvar_name_),
    1,
    0,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Menu, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Menu, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Menu, _impl_.dialog_type_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Menu, _impl_.menu_key_values_),
    1,
    0,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_UserMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_UserMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_UserMessage, _impl_.msg_type_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_UserMessage, _impl_.msg_data_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_UserMessage, _impl_.passthrough_),
    1,
    0,
    2,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_SendTable_sendprop_t, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_SendTable_sendprop_t, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_SendTable_sendprop_t, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_SendTable_sendprop_t, _impl_.var_name_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_SendTable_sendprop_t, _impl_.flags_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_SendTable_sendprop_t, _impl_.priority_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_SendTable_sendprop_t, _impl_.dt_name_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_SendTable_sendprop_t, _impl_.num_elements_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_SendTable_sendprop_t, _impl_.low_value_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_SendTable_sendprop_t, _impl_.high_value_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_SendTable_sendprop_t, _impl_.num_bits_),
    2,
    0,
    3,
    4,
    1,
    5,
    6,
    7,
    8,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_SendTable, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_SendTable, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_SendTable, _impl_.is_end_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_SendTable, _impl_.net_table_name_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_SendTable, _impl_.needs_decoder_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_SendTable, _impl_.props_),
    1,
    0,
    2,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameEventList_key_t, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameEventList_key_t, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameEventList_key_t, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameEventList_key_t, _impl_.name_),
    1,
    0,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameEventList_descriptor_t, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameEventList_descriptor_t, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameEventList_descriptor_t, _impl_.eventid_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameEventList_descriptor_t, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameEventList_descriptor_t, _impl_.keys_),
    1,
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameEventList, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_GameEventList, _impl_.descriptors_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketEntities_command_queue_info_t, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketEntities_command_queue_info_t, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketEntities_command_queue_info_t, _impl_.commands_queued_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketEntities_command_queue_info_t, _impl_.command_queue_desired_size_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketEntities_command_queue_info_t, _impl_.starved_command_ticks_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketEntities_command_queue_info_t, _impl_.time_dilation_percent_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketEntities_command_queue_info_t, _impl_.discarded_command_ticks_),
    0,
    1,
    2,
    3,
    4,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketEntities_alternate_baseline_t, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketEntities_alternate_baseline_t, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketEntities_alternate_baseline_t, _impl_.entity_index_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketEntities_alternate_baseline_t, _impl_.baseline_index_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketEntities, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketEntities, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketEntities, _impl_.max_entries_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketEntities, _impl_.updated_entries_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketEntities, _impl_.is_delta_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketEntities, _impl_.update_baseline_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketEntities, _impl_.baseline_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketEntities, _impl_.delta_from_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketEntities, _impl_.entity_data_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketEntities, _impl_.pending_full_frame_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketEntities, _impl_.active_spawngroup_handle_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketEntities, _impl_.max_spawngroup_creationsequence_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketEntities, _impl_.last_cmd_number_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketEntities, _impl_.server_tick_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketEntities, _impl_.serialized_entities_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketEntities, _impl_.command_queue_info_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketEntities, _impl_.alternate_baselines_),
    3,
    4,
    6,
    7,
    5,
    9,
    0,
    8,
    10,
    11,
    12,
    13,
    1,
    2,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_TempEntities, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_TempEntities, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_TempEntities, _impl_.reliable_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_TempEntities, _impl_.num_entries_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_TempEntities, _impl_.entity_data_),
    1,
    2,
    0,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_CreateStringTable, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_CreateStringTable, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_CreateStringTable, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_CreateStringTable, _impl_.num_entries_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_CreateStringTable, _impl_.user_data_fixed_size_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_CreateStringTable, _impl_.user_data_size_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_CreateStringTable, _impl_.user_data_size_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_CreateStringTable, _impl_.flags_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_CreateStringTable, _impl_.string_data_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_CreateStringTable, _impl_.uncompressed_size_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_CreateStringTable, _impl_.data_compressed_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_CreateStringTable, _impl_.using_varint_bitcounts_),
    0,
    2,
    6,
    3,
    4,
    5,
    1,
    9,
    7,
    8,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_UpdateStringTable, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_UpdateStringTable, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_UpdateStringTable, _impl_.table_id_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_UpdateStringTable, _impl_.num_changed_entries_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_UpdateStringTable, _impl_.string_data_),
    1,
    2,
    0,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_VoiceData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_VoiceData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_VoiceData, _impl_.audio_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_VoiceData, _impl_.client_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_VoiceData, _impl_.proximity_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_VoiceData, _impl_.xuid_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_VoiceData, _impl_.audible_mask_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_VoiceData, _impl_.tick_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_VoiceData, _impl_.passthrough_),
    0,
    6,
    2,
    1,
    3,
    4,
    5,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketReliable, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketReliable, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketReliable, _impl_.tick_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketReliable, _impl_.messagessize_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PacketReliable, _impl_.state_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_FullFrameSplit, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_FullFrameSplit, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_FullFrameSplit, _impl_.tick_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_FullFrameSplit, _impl_.section_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_FullFrameSplit, _impl_.total_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_FullFrameSplit, _impl_.data_),
    1,
    2,
    3,
    0,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_HLTVStatus, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_HLTVStatus, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_HLTVStatus, _impl_.master_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_HLTVStatus, _impl_.clients_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_HLTVStatus, _impl_.slots_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_HLTVStatus, _impl_.proxies_),
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ServerSteamID, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ServerSteamID, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ServerSteamID, _impl_.steam_id_),
    0,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_CmdKeyValues, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_CmdKeyValues, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_CmdKeyValues, _impl_.data_),
    0,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_RconServerDetails, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_RconServerDetails, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_RconServerDetails, _impl_.token_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_RconServerDetails, _impl_.details_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::CMsgIPCAddress, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgIPCAddress, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgIPCAddress, _impl_.computer_guid_),
    PROTOBUF_FIELD_OFFSET(::CMsgIPCAddress, _impl_.process_id_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::CMsgServerPeer, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerPeer, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgServerPeer, _impl_.player_slot_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerPeer, _impl_.steamid_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerPeer, _impl_.ipc_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerPeer, _impl_.they_hear_you_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerPeer, _impl_.you_hear_them_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerPeer, _impl_.is_listenserver_host_),
    5,
    1,
    0,
    2,
    3,
    4,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PeerList, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_PeerList, _impl_.peer_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ClearAllStringTables, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ClearAllStringTables, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ClearAllStringTables, _impl_.mapname_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_ClearAllStringTables, _impl_.create_tables_skipped_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::ProtoFlattenedSerializerField_t_polymorphic_field_t, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ProtoFlattenedSerializerField_t_polymorphic_field_t, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ProtoFlattenedSerializerField_t_polymorphic_field_t, _impl_.polymorphic_field_serializer_name_sym_),
    PROTOBUF_FIELD_OFFSET(::ProtoFlattenedSerializerField_t_polymorphic_field_t, _impl_.polymorphic_field_serializer_version_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::ProtoFlattenedSerializerField_t, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ProtoFlattenedSerializerField_t, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ProtoFlattenedSerializerField_t, _impl_.var_type_sym_),
    PROTOBUF_FIELD_OFFSET(::ProtoFlattenedSerializerField_t, _impl_.var_name_sym_),
    PROTOBUF_FIELD_OFFSET(::ProtoFlattenedSerializerField_t, _impl_.bit_count_),
    PROTOBUF_FIELD_OFFSET(::ProtoFlattenedSerializerField_t, _impl_.low_value_),
    PROTOBUF_FIELD_OFFSET(::ProtoFlattenedSerializerField_t, _impl_.high_value_),
    PROTOBUF_FIELD_OFFSET(::ProtoFlattenedSerializerField_t, _impl_.encode_flags_),
    PROTOBUF_FIELD_OFFSET(::ProtoFlattenedSerializerField_t, _impl_.field_serializer_name_sym_),
    PROTOBUF_FIELD_OFFSET(::ProtoFlattenedSerializerField_t, _impl_.field_serializer_version_),
    PROTOBUF_FIELD_OFFSET(::ProtoFlattenedSerializerField_t, _impl_.send_node_sym_),
    PROTOBUF_FIELD_OFFSET(::ProtoFlattenedSerializerField_t, _impl_.var_encoder_sym_),
    PROTOBUF_FIELD_OFFSET(::ProtoFlattenedSerializerField_t, _impl_.polymorphic_types_),
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::ProtoFlattenedSerializer_t, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ProtoFlattenedSerializer_t, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ProtoFlattenedSerializer_t, _impl_.serializer_name_sym_),
    PROTOBUF_FIELD_OFFSET(::ProtoFlattenedSerializer_t, _impl_.serializer_version_),
    PROTOBUF_FIELD_OFFSET(::ProtoFlattenedSerializer_t, _impl_.fields_index_),
    0,
    1,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_FlattenedSerializer, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_FlattenedSerializer, _impl_.serializers_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_FlattenedSerializer, _impl_.symbols_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_FlattenedSerializer, _impl_.fields_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_StopSound, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_StopSound, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_StopSound, _impl_.guid_),
    0,
    PROTOBUF_FIELD_OFFSET(::CBidirMsg_RebroadcastGameEvent, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CBidirMsg_RebroadcastGameEvent, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CBidirMsg_RebroadcastGameEvent, _impl_.posttoserver_),
    PROTOBUF_FIELD_OFFSET(::CBidirMsg_RebroadcastGameEvent, _impl_.buftype_),
    PROTOBUF_FIELD_OFFSET(::CBidirMsg_RebroadcastGameEvent, _impl_.clientbitcount_),
    PROTOBUF_FIELD_OFFSET(::CBidirMsg_RebroadcastGameEvent, _impl_.receivingclients_),
    0,
    1,
    3,
    2,
    PROTOBUF_FIELD_OFFSET(::CBidirMsg_RebroadcastSource, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CBidirMsg_RebroadcastSource, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CBidirMsg_RebroadcastSource, _impl_.eventsource_),
    0,
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats_Port, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats_Port, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats_Port, _impl_.port_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats_Port, _impl_.name_),
    1,
    0,
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats_Player, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats_Player, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats_Player, _impl_.steamid_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats_Player, _impl_.remote_addr_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats_Player, _impl_.ping_stddev_ms_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats_Player, _impl_.ping_avg_ms_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats_Player, _impl_.packet_loss_pct_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats_Player, _impl_.is_bot_),
    1,
    0,
    2,
    3,
    4,
    5,
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats, _impl_.dedicated_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats, _impl_.cpu_usage_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats, _impl_.memory_used_mb_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats, _impl_.memory_free_mb_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats, _impl_.uptime_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats, _impl_.spawn_count_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats, _impl_.num_clients_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats, _impl_.num_bots_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats, _impl_.num_spectators_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats, _impl_.num_tv_relays_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats, _impl_.fps_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats, _impl_.ports_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats, _impl_.avg_latency_out_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats, _impl_.avg_latency_in_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats, _impl_.avg_packets_out_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats, _impl_.avg_packets_in_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats, _impl_.avg_loss_out_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats, _impl_.avg_loss_in_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats, _impl_.avg_data_out_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats, _impl_.avg_data_in_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats, _impl_.total_data_in_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats, _impl_.total_packets_in_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats, _impl_.total_data_out_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats, _impl_.total_packets_out_),
    PROTOBUF_FIELD_OFFSET(::CMsgServerNetworkStats, _impl_.players_),
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    ~0u,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    22,
    18,
    19,
    20,
    21,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_HltvReplay, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_HltvReplay, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_HltvReplay, _impl_.delay_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_HltvReplay, _impl_.primary_target_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_HltvReplay, _impl_.replay_stop_at_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_HltvReplay, _impl_.replay_start_at_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_HltvReplay, _impl_.replay_slowdown_begin_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_HltvReplay, _impl_.replay_slowdown_end_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_HltvReplay, _impl_.replay_slowdown_rate_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_HltvReplay, _impl_.reason_),
    0,
    7,
    1,
    2,
    3,
    4,
    5,
    6,
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_HltvReplay, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_HltvReplay, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_HltvReplay, _impl_.request_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_HltvReplay, _impl_.slowdown_length_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_HltvReplay, _impl_.slowdown_rate_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_HltvReplay, _impl_.primary_target_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_HltvReplay, _impl_.event_time_),
    0,
    1,
    2,
    4,
    3,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Broadcast_Command, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Broadcast_Command, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_Broadcast_Command, _impl_.cmd_),
    0,
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_HltvFixupOperatorTick, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_HltvFixupOperatorTick, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_HltvFixupOperatorTick, _impl_.tick_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_HltvFixupOperatorTick, _impl_.props_data_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_HltvFixupOperatorTick, _impl_.origin_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_HltvFixupOperatorTick, _impl_.eye_angles_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_HltvFixupOperatorTick, _impl_.observer_mode_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_HltvFixupOperatorTick, _impl_.cameraman_scoreboard_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_HltvFixupOperatorTick, _impl_.observer_target_),
    PROTOBUF_FIELD_OFFSET(::CCLCMsg_HltvFixupOperatorTick, _impl_.view_offset_),
    4,
    0,
    1,
    2,
    5,
    6,
    7,
    3,
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_HltvFixupOperatorStatus, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_HltvFixupOperatorStatus, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_HltvFixupOperatorStatus, _impl_.mode_),
    PROTOBUF_FIELD_OFFSET(::CSVCMsg_HltvFixupOperatorStatus, _impl_.override_operator_name_),
    1,
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 13, -1, sizeof(::CCLCMsg_ClientInfo)},
        {18, 29, -1, sizeof(::CCLCMsg_Move)},
        {32, 46, -1, sizeof(::CMsgVoiceAudio)},
        {52, 63, -1, sizeof(::CCLCMsg_VoiceData)},
        {66, 76, -1, sizeof(::CCLCMsg_BaselineAck)},
        {78, -1, -1, sizeof(::CCLCMsg_ListenEvents)},
        {87, 99, -1, sizeof(::CCLCMsg_RespondCvarValue)},
        {103, 116, -1, sizeof(::CCLCMsg_FileCRCCheck)},
        {121, 130, -1, sizeof(::CCLCMsg_LoadingProgress)},
        {131, 140, -1, sizeof(::CCLCMsg_SplitPlayerConnect)},
        {141, 151, -1, sizeof(::CCLCMsg_ClientMessage)},
        {153, 162, -1, sizeof(::CCLCMsg_SplitPlayerDisconnect)},
        {163, 172, -1, sizeof(::CCLCMsg_ServerStatus)},
        {173, -1, -1, sizeof(::CCLCMsg_ServerPing)},
        {181, 191, -1, sizeof(::CCLCMsg_RequestPause)},
        {193, 202, -1, sizeof(::CCLCMsg_CmdKeyValues)},
        {203, 212, -1, sizeof(::CCLCMsg_RconServerDetails)},
        {213, 237, -1, sizeof(::CSVCMsg_ServerInfo)},
        {253, 263, -1, sizeof(::CSVCMsg_ClassInfo_class_t)},
        {265, 275, -1, sizeof(::CSVCMsg_ClassInfo)},
        {277, 286, -1, sizeof(::CSVCMsg_SetPause)},
        {287, 298, -1, sizeof(::CSVCMsg_VoiceInit)},
        {301, 310, -1, sizeof(::CSVCMsg_Print)},
        {311, 338, -1, sizeof(::CSVCMsg_Sounds_sounddata_t)},
        {357, 367, -1, sizeof(::CSVCMsg_Sounds)},
        {369, 379, -1, sizeof(::CSVCMsg_Prefetch)},
        {381, 391, -1, sizeof(::CSVCMsg_SetView)},
        {393, 403, -1, sizeof(::CSVCMsg_FixAngle)},
        {405, 414, -1, sizeof(::CSVCMsg_CrosshairAngle)},
        {415, 428, -1, sizeof(::CSVCMsg_BSPDecal)},
        {433, 444, -1, sizeof(::CSVCMsg_SplitScreen)},
        {447, 457, -1, sizeof(::CSVCMsg_GetCvarValue)},
        {459, 469, -1, sizeof(::CSVCMsg_Menu)},
        {471, 482, -1, sizeof(::CSVCMsg_UserMessage)},
        {485, 502, -1, sizeof(::CSVCMsg_SendTable_sendprop_t)},
        {511, 523, -1, sizeof(::CSVCMsg_SendTable)},
        {527, 537, -1, sizeof(::CSVCMsg_GameEventList_key_t)},
        {539, 550, -1, sizeof(::CSVCMsg_GameEventList_descriptor_t)},
        {553, -1, -1, sizeof(::CSVCMsg_GameEventList)},
        {562, 575, -1, sizeof(::CSVCMsg_PacketEntities_command_queue_info_t)},
        {580, 590, -1, sizeof(::CSVCMsg_PacketEntities_alternate_baseline_t)},
        {592, 615, -1, sizeof(::CSVCMsg_PacketEntities)},
        {630, 641, -1, sizeof(::CSVCMsg_TempEntities)},
        {644, 662, -1, sizeof(::CSVCMsg_CreateStringTable)},
        {672, 683, -1, sizeof(::CSVCMsg_UpdateStringTable)},
        {686, 701, -1, sizeof(::CSVCMsg_VoiceData)},
        {708, 719, -1, sizeof(::CSVCMsg_PacketReliable)},
        {722, 734, -1, sizeof(::CSVCMsg_FullFrameSplit)},
        {738, 750, -1, sizeof(::CSVCMsg_HLTVStatus)},
        {754, 763, -1, sizeof(::CSVCMsg_ServerSteamID)},
        {764, 773, -1, sizeof(::CSVCMsg_CmdKeyValues)},
        {774, 784, -1, sizeof(::CSVCMsg_RconServerDetails)},
        {786, 796, -1, sizeof(::CMsgIPCAddress)},
        {798, 812, -1, sizeof(::CMsgServerPeer)},
        {818, -1, -1, sizeof(::CSVCMsg_PeerList)},
        {827, 837, -1, sizeof(::CSVCMsg_ClearAllStringTables)},
        {839, 849, -1, sizeof(::ProtoFlattenedSerializerField_t_polymorphic_field_t)},
        {851, 870, -1, sizeof(::ProtoFlattenedSerializerField_t)},
        {881, 892, -1, sizeof(::ProtoFlattenedSerializer_t)},
        {895, -1, -1, sizeof(::CSVCMsg_FlattenedSerializer)},
        {906, 915, -1, sizeof(::CSVCMsg_StopSound)},
        {916, 928, -1, sizeof(::CBidirMsg_RebroadcastGameEvent)},
        {932, 941, -1, sizeof(::CBidirMsg_RebroadcastSource)},
        {942, 952, -1, sizeof(::CMsgServerNetworkStats_Port)},
        {954, 968, -1, sizeof(::CMsgServerNetworkStats_Player)},
        {974, 1007, -1, sizeof(::CMsgServerNetworkStats)},
        {1032, 1048, -1, sizeof(::CSVCMsg_HltvReplay)},
        {1056, 1069, -1, sizeof(::CCLCMsg_HltvReplay)},
        {1074, 1083, -1, sizeof(::CSVCMsg_Broadcast_Command)},
        {1084, 1100, -1, sizeof(::CCLCMsg_HltvFixupOperatorTick)},
        {1108, 1118, -1, sizeof(::CSVCMsg_HltvFixupOperatorStatus)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_CCLCMsg_ClientInfo_default_instance_._instance,
    &::_CCLCMsg_Move_default_instance_._instance,
    &::_CMsgVoiceAudio_default_instance_._instance,
    &::_CCLCMsg_VoiceData_default_instance_._instance,
    &::_CCLCMsg_BaselineAck_default_instance_._instance,
    &::_CCLCMsg_ListenEvents_default_instance_._instance,
    &::_CCLCMsg_RespondCvarValue_default_instance_._instance,
    &::_CCLCMsg_FileCRCCheck_default_instance_._instance,
    &::_CCLCMsg_LoadingProgress_default_instance_._instance,
    &::_CCLCMsg_SplitPlayerConnect_default_instance_._instance,
    &::_CCLCMsg_ClientMessage_default_instance_._instance,
    &::_CCLCMsg_SplitPlayerDisconnect_default_instance_._instance,
    &::_CCLCMsg_ServerStatus_default_instance_._instance,
    &::_CCLCMsg_ServerPing_default_instance_._instance,
    &::_CCLCMsg_RequestPause_default_instance_._instance,
    &::_CCLCMsg_CmdKeyValues_default_instance_._instance,
    &::_CCLCMsg_RconServerDetails_default_instance_._instance,
    &::_CSVCMsg_ServerInfo_default_instance_._instance,
    &::_CSVCMsg_ClassInfo_class_t_default_instance_._instance,
    &::_CSVCMsg_ClassInfo_default_instance_._instance,
    &::_CSVCMsg_SetPause_default_instance_._instance,
    &::_CSVCMsg_VoiceInit_default_instance_._instance,
    &::_CSVCMsg_Print_default_instance_._instance,
    &::_CSVCMsg_Sounds_sounddata_t_default_instance_._instance,
    &::_CSVCMsg_Sounds_default_instance_._instance,
    &::_CSVCMsg_Prefetch_default_instance_._instance,
    &::_CSVCMsg_SetView_default_instance_._instance,
    &::_CSVCMsg_FixAngle_default_instance_._instance,
    &::_CSVCMsg_CrosshairAngle_default_instance_._instance,
    &::_CSVCMsg_BSPDecal_default_instance_._instance,
    &::_CSVCMsg_SplitScreen_default_instance_._instance,
    &::_CSVCMsg_GetCvarValue_default_instance_._instance,
    &::_CSVCMsg_Menu_default_instance_._instance,
    &::_CSVCMsg_UserMessage_default_instance_._instance,
    &::_CSVCMsg_SendTable_sendprop_t_default_instance_._instance,
    &::_CSVCMsg_SendTable_default_instance_._instance,
    &::_CSVCMsg_GameEventList_key_t_default_instance_._instance,
    &::_CSVCMsg_GameEventList_descriptor_t_default_instance_._instance,
    &::_CSVCMsg_GameEventList_default_instance_._instance,
    &::_CSVCMsg_PacketEntities_command_queue_info_t_default_instance_._instance,
    &::_CSVCMsg_PacketEntities_alternate_baseline_t_default_instance_._instance,
    &::_CSVCMsg_PacketEntities_default_instance_._instance,
    &::_CSVCMsg_TempEntities_default_instance_._instance,
    &::_CSVCMsg_CreateStringTable_default_instance_._instance,
    &::_CSVCMsg_UpdateStringTable_default_instance_._instance,
    &::_CSVCMsg_VoiceData_default_instance_._instance,
    &::_CSVCMsg_PacketReliable_default_instance_._instance,
    &::_CSVCMsg_FullFrameSplit_default_instance_._instance,
    &::_CSVCMsg_HLTVStatus_default_instance_._instance,
    &::_CSVCMsg_ServerSteamID_default_instance_._instance,
    &::_CSVCMsg_CmdKeyValues_default_instance_._instance,
    &::_CSVCMsg_RconServerDetails_default_instance_._instance,
    &::_CMsgIPCAddress_default_instance_._instance,
    &::_CMsgServerPeer_default_instance_._instance,
    &::_CSVCMsg_PeerList_default_instance_._instance,
    &::_CSVCMsg_ClearAllStringTables_default_instance_._instance,
    &::_ProtoFlattenedSerializerField_t_polymorphic_field_t_default_instance_._instance,
    &::_ProtoFlattenedSerializerField_t_default_instance_._instance,
    &::_ProtoFlattenedSerializer_t_default_instance_._instance,
    &::_CSVCMsg_FlattenedSerializer_default_instance_._instance,
    &::_CSVCMsg_StopSound_default_instance_._instance,
    &::_CBidirMsg_RebroadcastGameEvent_default_instance_._instance,
    &::_CBidirMsg_RebroadcastSource_default_instance_._instance,
    &::_CMsgServerNetworkStats_Port_default_instance_._instance,
    &::_CMsgServerNetworkStats_Player_default_instance_._instance,
    &::_CMsgServerNetworkStats_default_instance_._instance,
    &::_CSVCMsg_HltvReplay_default_instance_._instance,
    &::_CCLCMsg_HltvReplay_default_instance_._instance,
    &::_CSVCMsg_Broadcast_Command_default_instance_._instance,
    &::_CCLCMsg_HltvFixupOperatorTick_default_instance_._instance,
    &::_CSVCMsg_HltvFixupOperatorStatus_default_instance_._instance,
};
const char descriptor_table_protodef_netmessages_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\021netmessages.proto\032\026networkbasetypes.pr"
    "oto\"}\n\022CCLCMsg_ClientInfo\022\026\n\016send_table_"
    "crc\030\001 \001(\007\022\024\n\014server_count\030\002 \001(\r\022\017\n\007is_hl"
    "tv\030\003 \001(\010\022\022\n\nfriends_id\030\005 \001(\r\022\024\n\014friends_"
    "name\030\006 \001(\t\"J\n\014CCLCMsg_Move\022\014\n\004data\030\003 \001(\014"
    "\022\026\n\016command_number\030\004 \001(\r\022\024\n\014num_commands"
    "\030\005 \001(\r\"\311\001\n\016CMsgVoiceAudio\022:\n\006format\030\001 \001("
    "\0162\022.VoiceDataFormat_t:\026VOICEDATA_FORMAT_"
    "STEAM\022\022\n\nvoice_data\030\002 \001(\014\022\026\n\016sequence_by"
    "tes\030\003 \001(\005\022\026\n\016section_number\030\004 \001(\r\022\023\n\013sam"
    "ple_rate\030\005 \001(\r\022\"\n\032uncompressed_sample_of"
    "fset\030\006 \001(\r\"O\n\021CCLCMsg_VoiceData\022\036\n\005audio"
    "\030\001 \001(\0132\017.CMsgVoiceAudio\022\014\n\004xuid\030\002 \001(\006\022\014\n"
    "\004tick\030\003 \001(\r\"A\n\023CCLCMsg_BaselineAck\022\025\n\rba"
    "seline_tick\030\001 \001(\005\022\023\n\013baseline_nr\030\002 \001(\005\"*"
    "\n\024CCLCMsg_ListenEvents\022\022\n\nevent_mask\030\001 \003"
    "(\007\"\\\n\030CCLCMsg_RespondCvarValue\022\016\n\006cookie"
    "\030\001 \001(\005\022\023\n\013status_code\030\002 \001(\005\022\014\n\004name\030\003 \001("
    "\t\022\r\n\005value\030\004 \001(\t\"m\n\024CCLCMsg_FileCRCCheck"
    "\022\021\n\tcode_path\030\001 \001(\005\022\014\n\004path\030\002 \001(\t\022\025\n\rcod"
    "e_filename\030\003 \001(\005\022\020\n\010filename\030\004 \001(\t\022\013\n\003cr"
    "c\030\005 \001(\007\"+\n\027CCLCMsg_LoadingProgress\022\020\n\010pr"
    "ogress\030\001 \001(\005\"0\n\032CCLCMsg_SplitPlayerConne"
    "ct\022\022\n\nplayername\030\001 \001(\t\"7\n\025CCLCMsg_Client"
    "Message\022\020\n\010msg_type\030\001 \001(\005\022\014\n\004data\030\002 \001(\014\""
    "-\n\035CCLCMsg_SplitPlayerDisconnect\022\014\n\004slot"
    "\030\001 \001(\005\"*\n\024CCLCMsg_ServerStatus\022\022\n\nsimpli"
    "fied\030\001 \001(\010\"\024\n\022CCLCMsg_ServerPing\"Z\n\024CCLC"
    "Msg_RequestPause\022-\n\npause_type\030\001 \001(\0162\017.R"
    "equestPause_t:\010RP_PAUSE\022\023\n\013pause_group\030\002"
    " \001(\005\"$\n\024CCLCMsg_CmdKeyValues\022\014\n\004data\030\001 \001"
    "(\014\"*\n\031CCLCMsg_RconServerDetails\022\r\n\005token"
    "\030\001 \001(\014\"\207\003\n\022CSVCMsg_ServerInfo\022\020\n\010protoco"
    "l\030\001 \001(\005\022\024\n\014server_count\030\002 \001(\005\022\024\n\014is_dedi"
    "cated\030\003 \001(\010\022\017\n\007is_hltv\030\004 \001(\010\022\014\n\004c_os\030\006 \001"
    "(\005\022\023\n\013max_clients\030\n \001(\005\022\023\n\013max_classes\030\013"
    " \001(\005\022\027\n\013player_slot\030\014 \001(\005:\002-1\022\025\n\rtick_in"
    "terval\030\r \001(\002\022\020\n\010game_dir\030\016 \001(\t\022\020\n\010map_na"
    "me\030\017 \001(\t\022\020\n\010sky_name\030\020 \001(\t\022\021\n\thost_name\030"
    "\021 \001(\t\022\022\n\naddon_name\030\022 \001(\t\022>\n\023game_sessio"
    "n_config\030\023 \001(\0132!.CSVCMsg_GameSessionConf"
    "iguration\022\035\n\025game_session_manifest\030\024 \001(\014"
    "\"\213\001\n\021CSVCMsg_ClassInfo\022\030\n\020create_on_clie"
    "nt\030\001 \001(\010\022+\n\007classes\030\002 \003(\0132\032.CSVCMsg_Clas"
    "sInfo.class_t\032/\n\007class_t\022\020\n\010class_id\030\001 \001"
    "(\005\022\022\n\nclass_name\030\003 \001(\t\"\"\n\020CSVCMsg_SetPau"
    "se\022\016\n\006paused\030\001 \001(\010\"G\n\021CSVCMsg_VoiceInit\022"
    "\017\n\007quality\030\001 \001(\005\022\r\n\005codec\030\002 \001(\t\022\022\n\007versi"
    "on\030\003 \001(\005:\0010\"\035\n\rCSVCMsg_Print\022\014\n\004text\030\001 \001"
    "(\t\"\343\003\n\016CSVCMsg_Sounds\022\026\n\016reliable_sound\030"
    "\001 \001(\010\022+\n\006sounds\030\002 \003(\0132\033.CSVCMsg_Sounds.s"
    "ounddata_t\032\213\003\n\013sounddata_t\022\020\n\010origin_x\030\001"
    " \001(\021\022\020\n\010origin_y\030\002 \001(\021\022\020\n\010origin_z\030\003 \001(\021"
    "\022\016\n\006volume\030\004 \001(\r\022\023\n\013delay_value\030\005 \001(\002\022\027\n"
    "\017sequence_number\030\006 \001(\005\022\030\n\014entity_index\030\007"
    " \001(\005:\002-1\022\017\n\007channel\030\010 \001(\005\022\r\n\005pitch\030\t \001(\005"
    "\022\r\n\005flags\030\n \001(\005\022\021\n\tsound_num\030\013 \001(\r\022\030\n\020so"
    "und_num_handle\030\014 \001(\007\022\026\n\016speaker_entity\030\r"
    " \001(\005\022\023\n\013random_seed\030\016 \001(\005\022\023\n\013sound_level"
    "\030\017 \001(\005\022\023\n\013is_sentence\030\020 \001(\010\022\022\n\nis_ambien"
    "t\030\021 \001(\010\022\014\n\004guid\030\022 \001(\r\022\031\n\021sound_resource_"
    "id\030\023 \001(\006\"X\n\020CSVCMsg_Prefetch\022\023\n\013sound_in"
    "dex\030\001 \001(\005\022/\n\rresource_type\030\002 \001(\0162\r.Prefe"
    "tchType:\tPFT_SOUND\"=\n\017CSVCMsg_SetView\022\030\n"
    "\014entity_index\030\001 \001(\005:\002-1\022\020\n\004slot\030\002 \001(\005:\002-"
    "1\"@\n\020CSVCMsg_FixAngle\022\020\n\010relative\030\001 \001(\010\022"
    "\032\n\005angle\030\002 \001(\0132\013.CMsgQAngle\"4\n\026CSVCMsg_C"
    "rosshairAngle\022\032\n\005angle\030\001 \001(\0132\013.CMsgQAngl"
    "e\"\216\001\n\020CSVCMsg_BSPDecal\022\030\n\003pos\030\001 \001(\0132\013.CM"
    "sgVector\022\033\n\023decal_texture_index\030\002 \001(\005\022\030\n"
    "\014entity_index\030\003 \001(\005:\002-1\022\023\n\013model_index\030\004"
    " \001(\005\022\024\n\014low_priority\030\005 \001(\010\"~\n\023CSVCMsg_Sp"
    "litScreen\022\?\n\004type\030\001 \001(\0162\030.ESplitScreenMe"
    "ssageType:\027MSG_SPLITSCREEN_ADDUSER\022\014\n\004sl"
    "ot\030\002 \001(\005\022\030\n\014player_index\030\003 \001(\005:\002-1\"9\n\024CS"
    "VCMsg_GetCvarValue\022\016\n\006cookie\030\001 \001(\005\022\021\n\tcv"
    "ar_name\030\002 \001(\t\"<\n\014CSVCMsg_Menu\022\023\n\013dialog_"
    "type\030\001 \001(\005\022\027\n\017menu_key_values\030\002 \001(\014\"N\n\023C"
    "SVCMsg_UserMessage\022\020\n\010msg_type\030\001 \001(\005\022\020\n\010"
    "msg_data\030\002 \001(\014\022\023\n\013passthrough\030\003 \001(\005\"\260\002\n\021"
    "CSVCMsg_SendTable\022\016\n\006is_end\030\001 \001(\010\022\026\n\016net"
    "_table_name\030\002 \001(\t\022\025\n\rneeds_decoder\030\003 \001(\010"
    "\022,\n\005props\030\004 \003(\0132\035.CSVCMsg_SendTable.send"
    "prop_t\032\255\001\n\nsendprop_t\022\014\n\004type\030\001 \001(\005\022\020\n\010v"
    "ar_name\030\002 \001(\t\022\r\n\005flags\030\003 \001(\005\022\020\n\010priority"
    "\030\004 \001(\005\022\017\n\007dt_name\030\005 \001(\t\022\024\n\014num_elements\030"
    "\006 \001(\005\022\021\n\tlow_value\030\007 \001(\002\022\022\n\nhigh_value\030\010"
    " \001(\002\022\020\n\010num_bits\030\t \001(\005\"\321\001\n\025CSVCMsg_GameE"
    "ventList\0228\n\013descriptors\030\001 \003(\0132#.CSVCMsg_"
    "GameEventList.descriptor_t\032#\n\005key_t\022\014\n\004t"
    "ype\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\032Y\n\014descriptor_t\022"
    "\017\n\007eventid\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022*\n\004keys\030\003"
    " \003(\0132\034.CSVCMsg_GameEventList.key_t\"\356\005\n\026C"
    "SVCMsg_PacketEntities\022\023\n\013max_entries\030\001 \001"
    "(\005\022\027\n\017updated_entries\030\002 \001(\005\022\020\n\010is_delta\030"
    "\003 \001(\010\022\027\n\017update_baseline\030\004 \001(\010\022\020\n\010baseli"
    "ne\030\005 \001(\005\022\022\n\ndelta_from\030\006 \001(\005\022\023\n\013entity_d"
    "ata\030\007 \001(\014\022\032\n\022pending_full_frame\030\010 \001(\010\022 \n"
    "\030active_spawngroup_handle\030\t \001(\r\022\'\n\037max_s"
    "pawngroup_creationsequence\030\n \001(\r\022\027\n\017last"
    "_cmd_number\030\013 \001(\r\022\023\n\013server_tick\030\014 \001(\r\022\033"
    "\n\023serialized_entities\030\r \001(\014\022H\n\022command_q"
    "ueue_info\030\016 \001(\0132,.CSVCMsg_PacketEntities"
    ".command_queue_info_t\022I\n\023alternate_basel"
    "ines\030\017 \003(\0132,.CSVCMsg_PacketEntities.alte"
    "rnate_baseline_t\032\262\001\n\024command_queue_info_"
    "t\022\027\n\017commands_queued\030\001 \001(\r\022\"\n\032command_qu"
    "eue_desired_size\030\002 \001(\r\022\035\n\025starved_comman"
    "d_ticks\030\003 \001(\r\022\035\n\025time_dilation_percent\030\004"
    " \001(\002\022\037\n\027discarded_command_ticks\030\005 \001(\r\032D\n"
    "\024alternate_baseline_t\022\024\n\014entity_index\030\001 "
    "\001(\005\022\026\n\016baseline_index\030\002 \001(\005\"R\n\024CSVCMsg_T"
    "empEntities\022\020\n\010reliable\030\001 \001(\010\022\023\n\013num_ent"
    "ries\030\002 \001(\005\022\023\n\013entity_data\030\003 \001(\014\"\211\002\n\031CSVC"
    "Msg_CreateStringTable\022\014\n\004name\030\001 \001(\t\022\023\n\013n"
    "um_entries\030\002 \001(\005\022\034\n\024user_data_fixed_size"
    "\030\003 \001(\010\022\026\n\016user_data_size\030\004 \001(\005\022\033\n\023user_d"
    "ata_size_bits\030\005 \001(\005\022\r\n\005flags\030\006 \001(\005\022\023\n\013st"
    "ring_data\030\007 \001(\014\022\031\n\021uncompressed_size\030\010 \001"
    "(\005\022\027\n\017data_compressed\030\t \001(\010\022\036\n\026using_var"
    "int_bitcounts\030\n \001(\010\"_\n\031CSVCMsg_UpdateStr"
    "ingTable\022\020\n\010table_id\030\001 \001(\005\022\033\n\023num_change"
    "d_entries\030\002 \001(\005\022\023\n\013string_data\030\003 \001(\014\"\241\001\n"
    "\021CSVCMsg_VoiceData\022\036\n\005audio\030\001 \001(\0132\017.CMsg"
    "VoiceAudio\022\022\n\006client\030\002 \001(\005:\002-1\022\021\n\tproxim"
    "ity\030\003 \001(\010\022\014\n\004xuid\030\004 \001(\006\022\024\n\014audible_mask\030"
    "\005 \001(\005\022\014\n\004tick\030\006 \001(\r\022\023\n\013passthrough\030\007 \001(\005"
    "\"K\n\026CSVCMsg_PacketReliable\022\014\n\004tick\030\001 \001(\005"
    "\022\024\n\014messagessize\030\002 \001(\005\022\r\n\005state\030\003 \001(\010\"T\n"
    "\026CSVCMsg_FullFrameSplit\022\014\n\004tick\030\001 \001(\005\022\017\n"
    "\007section\030\002 \001(\005\022\r\n\005total\030\003 \001(\005\022\014\n\004data\030\004 "
    "\001(\014\"U\n\022CSVCMsg_HLTVStatus\022\016\n\006master\030\001 \001("
    "\t\022\017\n\007clients\030\002 \001(\005\022\r\n\005slots\030\003 \001(\005\022\017\n\007pro"
    "xies\030\004 \001(\005\")\n\025CSVCMsg_ServerSteamID\022\020\n\010s"
    "team_id\030\001 \001(\004\"$\n\024CSVCMsg_CmdKeyValues\022\014\n"
    "\004data\030\001 \001(\014\";\n\031CSVCMsg_RconServerDetails"
    "\022\r\n\005token\030\001 \001(\014\022\017\n\007details\030\002 \001(\t\";\n\016CMsg"
    "IPCAddress\022\025\n\rcomputer_guid\030\001 \001(\006\022\022\n\npro"
    "cess_id\030\002 \001(\r\"\244\001\n\016CMsgServerPeer\022\027\n\013play"
    "er_slot\030\001 \001(\005:\002-1\022\017\n\007steamid\030\002 \001(\006\022\034\n\003ip"
    "c\030\003 \001(\0132\017.CMsgIPCAddress\022\025\n\rthey_hear_yo"
    "u\030\004 \001(\010\022\025\n\ryou_hear_them\030\005 \001(\010\022\034\n\024is_lis"
    "tenserver_host\030\006 \001(\010\"1\n\020CSVCMsg_PeerList"
    "\022\035\n\004peer\030\001 \003(\0132\017.CMsgServerPeer\"N\n\034CSVCM"
    "sg_ClearAllStringTables\022\017\n\007mapname\030\001 \001(\t"
    "\022\035\n\025create_tables_skipped\030\003 \001(\010\"\327\003\n\037Prot"
    "oFlattenedSerializerField_t\022\024\n\014var_type_"
    "sym\030\001 \001(\005\022\024\n\014var_name_sym\030\002 \001(\005\022\021\n\tbit_c"
    "ount\030\003 \001(\005\022\021\n\tlow_value\030\004 \001(\002\022\022\n\nhigh_va"
    "lue\030\005 \001(\002\022\024\n\014encode_flags\030\006 \001(\005\022!\n\031field"
    "_serializer_name_sym\030\007 \001(\005\022 \n\030field_seri"
    "alizer_version\030\010 \001(\005\022\025\n\rsend_node_sym\030\t "
    "\001(\005\022\027\n\017var_encoder_sym\030\n \001(\005\022O\n\021polymorp"
    "hic_types\030\013 \003(\01324.ProtoFlattenedSerializ"
    "erField_t.polymorphic_field_t\032r\n\023polymor"
    "phic_field_t\022-\n%polymorphic_field_serial"
    "izer_name_sym\030\001 \001(\005\022,\n$polymorphic_field"
    "_serializer_version\030\002 \001(\005\"k\n\032ProtoFlatte"
    "nedSerializer_t\022\033\n\023serializer_name_sym\030\001"
    " \001(\005\022\032\n\022serializer_version\030\002 \001(\005\022\024\n\014fiel"
    "ds_index\030\003 \003(\005\"\222\001\n\033CSVCMsg_FlattenedSeri"
    "alizer\0220\n\013serializers\030\001 \003(\0132\033.ProtoFlatt"
    "enedSerializer_t\022\017\n\007symbols\030\002 \003(\t\0220\n\006fie"
    "lds\030\003 \003(\0132 .ProtoFlattenedSerializerFiel"
    "d_t\"!\n\021CSVCMsg_StopSound\022\014\n\004guid\030\001 \001(\007\"y"
    "\n\036CBidirMsg_RebroadcastGameEvent\022\024\n\014post"
    "toserver\030\001 \001(\010\022\017\n\007buftype\030\002 \001(\005\022\026\n\016clien"
    "tbitcount\030\003 \001(\r\022\030\n\020receivingclients\030\004 \001("
    "\004\"2\n\033CBidirMsg_RebroadcastSource\022\023\n\013even"
    "tsource\030\001 \001(\005\"\233\006\n\026CMsgServerNetworkStats"
    "\022\021\n\tdedicated\030\001 \001(\010\022\021\n\tcpu_usage\030\002 \001(\005\022\026"
    "\n\016memory_used_mb\030\003 \001(\005\022\026\n\016memory_free_mb"
    "\030\004 \001(\005\022\016\n\006uptime\030\005 \001(\005\022\023\n\013spawn_count\030\006 "
    "\001(\005\022\023\n\013num_clients\030\010 \001(\005\022\020\n\010num_bots\030\t \001"
    "(\005\022\026\n\016num_spectators\030\n \001(\005\022\025\n\rnum_tv_rel"
    "ays\030\013 \001(\005\022\013\n\003fps\030\014 \001(\002\022+\n\005ports\030\021 \003(\0132\034."
    "CMsgServerNetworkStats.Port\022\027\n\017avg_laten"
    "cy_out\030\022 \001(\002\022\026\n\016avg_latency_in\030\023 \001(\002\022\027\n\017"
    "avg_packets_out\030\024 \001(\002\022\026\n\016avg_packets_in\030"
    "\025 \001(\002\022\024\n\014avg_loss_out\030\026 \001(\002\022\023\n\013avg_loss_"
    "in\030\027 \001(\002\022\024\n\014avg_data_out\030\030 \001(\002\022\023\n\013avg_da"
    "ta_in\030\031 \001(\002\022\025\n\rtotal_data_in\030\032 \001(\004\022\030\n\020to"
    "tal_packets_in\030\033 \001(\004\022\026\n\016total_data_out\030\034"
    " \001(\004\022\031\n\021total_packets_out\030\035 \001(\004\022/\n\007playe"
    "rs\030\036 \003(\0132\036.CMsgServerNetworkStats.Player"
    "\032\"\n\004Port\022\014\n\004port\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\032\204\001\n"
    "\006Player\022\017\n\007steamid\030\001 \001(\004\022\023\n\013remote_addr\030"
    "\002 \001(\t\022\026\n\016ping_stddev_ms\030\003 \001(\005\022\023\n\013ping_av"
    "g_ms\030\004 \001(\005\022\027\n\017packet_loss_pct\030\005 \001(\002\022\016\n\006i"
    "s_bot\030\006 \001(\010\"\332\001\n\022CSVCMsg_HltvReplay\022\r\n\005de"
    "lay\030\001 \001(\005\022\032\n\016primary_target\030\002 \001(\005:\002-1\022\026\n"
    "\016replay_stop_at\030\003 \001(\005\022\027\n\017replay_start_at"
    "\030\004 \001(\005\022\035\n\025replay_slowdown_begin\030\005 \001(\005\022\033\n"
    "\023replay_slowdown_end\030\006 \001(\005\022\034\n\024replay_slo"
    "wdown_rate\030\007 \001(\002\022\016\n\006reason\030\010 \001(\005\"\205\001\n\022CCL"
    "CMsg_HltvReplay\022\017\n\007request\030\001 \001(\005\022\027\n\017slow"
    "down_length\030\002 \001(\002\022\025\n\rslowdown_rate\030\003 \001(\002"
    "\022\032\n\016primary_target\030\004 \001(\005:\002-1\022\022\n\nevent_ti"
    "me\030\005 \001(\002\"(\n\031CSVCMsg_Broadcast_Command\022\013\n"
    "\003cmd\030\001 \001(\t\"\357\001\n\035CCLCMsg_HltvFixupOperator"
    "Tick\022\014\n\004tick\030\001 \001(\005\022\022\n\nprops_data\030\002 \001(\014\022\033"
    "\n\006origin\030\003 \001(\0132\013.CMsgVector\022\037\n\neye_angle"
    "s\030\004 \001(\0132\013.CMsgQAngle\022\025\n\robserver_mode\030\005 "
    "\001(\005\022\034\n\024cameraman_scoreboard\030\006 \001(\010\022\027\n\017obs"
    "erver_target\030\007 \001(\005\022 \n\013view_offset\030\010 \001(\0132"
    "\013.CMsgVector\"O\n\037CSVCMsg_HltvFixupOperato"
    "rStatus\022\014\n\004mode\030\001 \001(\r\022\036\n\026override_operat"
    "or_name\030\002 \001(\t*\216\003\n\014CLC_Messages\022\022\n\016clc_Cl"
    "ientInfo\020\024\022\014\n\010clc_Move\020\025\022\021\n\rclc_VoiceDat"
    "a\020\026\022\023\n\017clc_BaselineAck\020\027\022\024\n\020clc_ListenEv"
    "ents\020\030\022\030\n\024clc_RespondCvarValue\020\031\022\024\n\020clc_"
    "FileCRCCheck\020\032\022\027\n\023clc_LoadingProgress\020\033\022"
    "\032\n\026clc_SplitPlayerConnect\020\034\022\025\n\021clc_Clien"
    "tMessage\020\035\022\035\n\031clc_SplitPlayerDisconnect\020"
    "\036\022\024\n\020clc_ServerStatus\020\037\022\022\n\016clc_ServerPin"
    "g\020 \022\024\n\020clc_RequestPause\020!\022\024\n\020clc_CmdKeyV"
    "alues\020\"\022\031\n\025clc_RconServerDetails\020#\022\022\n\016cl"
    "c_HltvReplay\020$*\231\005\n\014SVC_Messages\022\022\n\016svc_S"
    "erverInfo\020(\022\033\n\027svc_FlattenedSerializer\020)"
    "\022\021\n\rsvc_ClassInfo\020*\022\020\n\014svc_SetPause\020+\022\031\n"
    "\025svc_CreateStringTable\020,\022\031\n\025svc_UpdateSt"
    "ringTable\020-\022\021\n\rsvc_VoiceInit\020.\022\021\n\rsvc_Vo"
    "iceData\020/\022\r\n\tsvc_Print\0200\022\016\n\nsvc_Sounds\0201"
    "\022\017\n\013svc_SetView\0202\022\034\n\030svc_ClearAllStringT"
    "ables\0203\022\024\n\020svc_CmdKeyValues\0204\022\020\n\014svc_BSP"
    "Decal\0205\022\023\n\017svc_SplitScreen\0206\022\026\n\022svc_Pack"
    "etEntities\0207\022\020\n\014svc_Prefetch\0208\022\014\n\010svc_Me"
    "nu\0209\022\024\n\020svc_GetCvarValue\020:\022\021\n\rsvc_StopSo"
    "und\020;\022\020\n\014svc_PeerList\020<\022\026\n\022svc_PacketRel"
    "iable\020=\022\022\n\016svc_HLTVStatus\020>\022\025\n\021svc_Serve"
    "rSteamID\020\?\022\026\n\022svc_FullFrameSplit\020F\022\031\n\025sv"
    "c_RconServerDetails\020G\022\023\n\017svc_UserMessage"
    "\020H\022\022\n\016svc_HltvReplay\020I\022\031\n\025svc_Broadcast_"
    "Command\020J\022\037\n\033svc_HltvFixupOperatorStatus"
    "\020K*L\n\021VoiceDataFormat_t\022\032\n\026VOICEDATA_FOR"
    "MAT_STEAM\020\000\022\033\n\027VOICEDATA_FORMAT_ENGINE\020\001"
    "*B\n\016RequestPause_t\022\014\n\010RP_PAUSE\020\000\022\016\n\nRP_U"
    "NPAUSE\020\001\022\022\n\016RP_TOGGLEPAUSE\020\002*\035\n\014Prefetch"
    "Type\022\r\n\tPFT_SOUND\020\000*V\n\027ESplitScreenMessa"
    "geType\022\033\n\027MSG_SPLITSCREEN_ADDUSER\020\000\022\036\n\032M"
    "SG_SPLITSCREEN_REMOVEUSER\020\001*\263\001\n\025EQueryCv"
    "arValueStatus\022%\n!eQueryCvarValueStatus_V"
    "alueIntact\020\000\022&\n\"eQueryCvarValueStatus_Cv"
    "arNotFound\020\001\022\"\n\036eQueryCvarValueStatus_No"
    "tACvar\020\002\022\'\n#eQueryCvarValueStatus_CvarPr"
    "otected\020\003*h\n\013DIALOG_TYPE\022\016\n\nDIALOG_MSG\020\000"
    "\022\017\n\013DIALOG_MENU\020\001\022\017\n\013DIALOG_TEXT\020\002\022\020\n\014DI"
    "ALOG_ENTRY\020\003\022\025\n\021DIALOG_ASKCONNECT\020\004*+\n\031S"
    "VC_Messages_LowFrequency\022\016\n\tsvc_dummy\020\330\004"
    "*a\n\026Bidirectional_Messages\022\033\n\027bi_Rebroad"
    "castGameEvent\020\020\022\030\n\024bi_RebroadcastSource\020"
    "\021\022\020\n\014bi_GameEvent\020\022*M\n#Bidirectional_Mes"
    "sages_LowFrequency\022\021\n\014bi_RelayInfo\020\274\005\022\023\n"
    "\016bi_RelayPacket\020\275\005*\241\001\n\021ReplayEventType_t"
    "\022\027\n\023REPLAY_EVENT_CANCEL\020\000\022\026\n\022REPLAY_EVEN"
    "T_DEATH\020\001\022\030\n\024REPLAY_EVENT_GENERIC\020\002\022\'\n#R"
    "EPLAY_EVENT_STUCK_NEED_FULL_UPDATE\020\003\022\030\n\024"
    "REPLAY_EVENT_VICTORY\020\004"
};
static const ::_pbi::DescriptorTable* const descriptor_table_netmessages_2eproto_deps[1] =
    {
        &::descriptor_table_networkbasetypes_2eproto,
};
static ::absl::once_flag descriptor_table_netmessages_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_netmessages_2eproto = {
    false,
    false,
    10302,
    descriptor_table_protodef_netmessages_2eproto,
    "netmessages.proto",
    &descriptor_table_netmessages_2eproto_once,
    descriptor_table_netmessages_2eproto_deps,
    1,
    71,
    schemas,
    file_default_instances,
    TableStruct_netmessages_2eproto::offsets,
    file_level_metadata_netmessages_2eproto,
    file_level_enum_descriptors_netmessages_2eproto,
    file_level_service_descriptors_netmessages_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_netmessages_2eproto_getter() {
  return &descriptor_table_netmessages_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_netmessages_2eproto(&descriptor_table_netmessages_2eproto);
const ::google::protobuf::EnumDescriptor* CLC_Messages_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_netmessages_2eproto);
  return file_level_enum_descriptors_netmessages_2eproto[0];
}
bool CLC_Messages_IsValid(int value) {
  switch (value) {
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* SVC_Messages_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_netmessages_2eproto);
  return file_level_enum_descriptors_netmessages_2eproto[1];
}
bool SVC_Messages_IsValid(int value) {
  switch (value) {
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* VoiceDataFormat_t_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_netmessages_2eproto);
  return file_level_enum_descriptors_netmessages_2eproto[2];
}
bool VoiceDataFormat_t_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* RequestPause_t_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_netmessages_2eproto);
  return file_level_enum_descriptors_netmessages_2eproto[3];
}
bool RequestPause_t_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* PrefetchType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_netmessages_2eproto);
  return file_level_enum_descriptors_netmessages_2eproto[4];
}
bool PrefetchType_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* ESplitScreenMessageType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_netmessages_2eproto);
  return file_level_enum_descriptors_netmessages_2eproto[5];
}
bool ESplitScreenMessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* EQueryCvarValueStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_netmessages_2eproto);
  return file_level_enum_descriptors_netmessages_2eproto[6];
}
bool EQueryCvarValueStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* DIALOG_TYPE_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_netmessages_2eproto);
  return file_level_enum_descriptors_netmessages_2eproto[7];
}
bool DIALOG_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* SVC_Messages_LowFrequency_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_netmessages_2eproto);
  return file_level_enum_descriptors_netmessages_2eproto[8];
}
bool SVC_Messages_LowFrequency_IsValid(int value) {
  switch (value) {
    case 600:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* Bidirectional_Messages_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_netmessages_2eproto);
  return file_level_enum_descriptors_netmessages_2eproto[9];
}
bool Bidirectional_Messages_IsValid(int value) {
  switch (value) {
    case 16:
    case 17:
    case 18:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* Bidirectional_Messages_LowFrequency_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_netmessages_2eproto);
  return file_level_enum_descriptors_netmessages_2eproto[10];
}
bool Bidirectional_Messages_LowFrequency_IsValid(int value) {
  switch (value) {
    case 700:
    case 701:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* ReplayEventType_t_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_netmessages_2eproto);
  return file_level_enum_descriptors_netmessages_2eproto[11];
}
bool ReplayEventType_t_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}
// ===================================================================

class CCLCMsg_ClientInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CCLCMsg_ClientInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CCLCMsg_ClientInfo, _impl_._has_bits_);
  static void set_has_send_table_crc(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_server_count(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_is_hltv(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_friends_id(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_friends_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CCLCMsg_ClientInfo::CCLCMsg_ClientInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CCLCMsg_ClientInfo)
}
CCLCMsg_ClientInfo::CCLCMsg_ClientInfo(const CCLCMsg_ClientInfo& from) : ::google::protobuf::Message() {
  CCLCMsg_ClientInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.friends_name_){},
      decltype(_impl_.send_table_crc_){},
      decltype(_impl_.server_count_){},
      decltype(_impl_.is_hltv_){},
      decltype(_impl_.friends_id_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.friends_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.friends_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.friends_name_.Set(from._internal_friends_name(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.send_table_crc_, &from._impl_.send_table_crc_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.friends_id_) -
    reinterpret_cast<char*>(&_impl_.send_table_crc_)) + sizeof(_impl_.friends_id_));

  // @@protoc_insertion_point(copy_constructor:CCLCMsg_ClientInfo)
}
inline void CCLCMsg_ClientInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.friends_name_){},
      decltype(_impl_.send_table_crc_){0u},
      decltype(_impl_.server_count_){0u},
      decltype(_impl_.is_hltv_){false},
      decltype(_impl_.friends_id_){0u},
  };
  _impl_.friends_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.friends_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CCLCMsg_ClientInfo::~CCLCMsg_ClientInfo() {
  // @@protoc_insertion_point(destructor:CCLCMsg_ClientInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CCLCMsg_ClientInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.friends_name_.Destroy();
}
void CCLCMsg_ClientInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CCLCMsg_ClientInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_ClientInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.friends_name_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&_impl_.send_table_crc_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.friends_id_) -
        reinterpret_cast<char*>(&_impl_.send_table_crc_)) + sizeof(_impl_.friends_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CCLCMsg_ClientInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 39, 2> CCLCMsg_ClientInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CCLCMsg_ClientInfo, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967240,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CCLCMsg_ClientInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional fixed32 send_table_crc = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 1, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_ClientInfo, _impl_.send_table_crc_)}},
    // optional uint32 server_count = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CCLCMsg_ClientInfo, _impl_.server_count_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_ClientInfo, _impl_.server_count_)}},
    // optional bool is_hltv = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CCLCMsg_ClientInfo, _impl_.is_hltv_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_ClientInfo, _impl_.is_hltv_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 friends_id = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CCLCMsg_ClientInfo, _impl_.friends_id_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_ClientInfo, _impl_.friends_id_)}},
    // optional string friends_name = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_ClientInfo, _impl_.friends_name_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed32 send_table_crc = 1;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_ClientInfo, _impl_.send_table_crc_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional uint32 server_count = 2;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_ClientInfo, _impl_.server_count_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bool is_hltv = 3;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_ClientInfo, _impl_.is_hltv_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint32 friends_id = 5;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_ClientInfo, _impl_.friends_id_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string friends_name = 6;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_ClientInfo, _impl_.friends_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\22\0\0\0\0\14\0\0"
    "CCLCMsg_ClientInfo"
    "friends_name"
  }},
};

::uint8_t* CCLCMsg_ClientInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_ClientInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed32 send_table_crc = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        1, this->_internal_send_table_crc(), target);
  }

  // optional uint32 server_count = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_server_count(), target);
  }

  // optional bool is_hltv = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_is_hltv(), target);
  }

  // optional uint32 friends_id = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_friends_id(), target);
  }

  // optional string friends_name = 6;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_friends_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CCLCMsg_ClientInfo.friends_name");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_ClientInfo)
  return target;
}

::size_t CCLCMsg_ClientInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_ClientInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string friends_name = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_friends_name());
    }

    // optional fixed32 send_table_crc = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }

    // optional uint32 server_count = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_server_count());
    }

    // optional bool is_hltv = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2;
    }

    // optional uint32 friends_id = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_friends_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CCLCMsg_ClientInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CCLCMsg_ClientInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*CCLCMsg_ClientInfo::GetClassData() const { return &_class_data_; }


void CCLCMsg_ClientInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CCLCMsg_ClientInfo*>(&to_msg);
  auto& from = static_cast<const CCLCMsg_ClientInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_ClientInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_friends_name(from._internal_friends_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.send_table_crc_ = from._impl_.send_table_crc_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.server_count_ = from._impl_.server_count_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.is_hltv_ = from._impl_.is_hltv_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.friends_id_ = from._impl_.friends_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CCLCMsg_ClientInfo::CopyFrom(const CCLCMsg_ClientInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_ClientInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CCLCMsg_ClientInfo::IsInitialized() const {
  return true;
}

void CCLCMsg_ClientInfo::InternalSwap(CCLCMsg_ClientInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.friends_name_, lhs_arena,
                                       &other->_impl_.friends_name_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CCLCMsg_ClientInfo, _impl_.friends_id_)
      + sizeof(CCLCMsg_ClientInfo::_impl_.friends_id_)
      - PROTOBUF_FIELD_OFFSET(CCLCMsg_ClientInfo, _impl_.send_table_crc_)>(
          reinterpret_cast<char*>(&_impl_.send_table_crc_),
          reinterpret_cast<char*>(&other->_impl_.send_table_crc_));
}

::google::protobuf::Metadata CCLCMsg_ClientInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[0]);
}
// ===================================================================

class CCLCMsg_Move::_Internal {
 public:
  using HasBits = decltype(std::declval<CCLCMsg_Move>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CCLCMsg_Move, _impl_._has_bits_);
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_command_number(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_num_commands(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CCLCMsg_Move::CCLCMsg_Move(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CCLCMsg_Move)
}
CCLCMsg_Move::CCLCMsg_Move(const CCLCMsg_Move& from) : ::google::protobuf::Message() {
  CCLCMsg_Move* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){},
      decltype(_impl_.command_number_){},
      decltype(_impl_.num_commands_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.data_.Set(from._internal_data(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.command_number_, &from._impl_.command_number_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.num_commands_) -
    reinterpret_cast<char*>(&_impl_.command_number_)) + sizeof(_impl_.num_commands_));

  // @@protoc_insertion_point(copy_constructor:CCLCMsg_Move)
}
inline void CCLCMsg_Move::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){},
      decltype(_impl_.command_number_){0u},
      decltype(_impl_.num_commands_){0u},
  };
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CCLCMsg_Move::~CCLCMsg_Move() {
  // @@protoc_insertion_point(destructor:CCLCMsg_Move)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CCLCMsg_Move::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.Destroy();
}
void CCLCMsg_Move::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CCLCMsg_Move::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_Move)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.data_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.command_number_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.num_commands_) -
        reinterpret_cast<char*>(&_impl_.command_number_)) + sizeof(_impl_.num_commands_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CCLCMsg_Move::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> CCLCMsg_Move::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CCLCMsg_Move, _impl_._has_bits_),
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967267,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CCLCMsg_Move_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 command_number = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CCLCMsg_Move, _impl_.command_number_), 1>(),
     {32, 1, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_Move, _impl_.command_number_)}},
    // optional uint32 num_commands = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CCLCMsg_Move, _impl_.num_commands_), 2>(),
     {40, 2, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_Move, _impl_.num_commands_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional bytes data = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_Move, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes data = 3;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_Move, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional uint32 command_number = 4;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_Move, _impl_.command_number_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 num_commands = 5;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_Move, _impl_.num_commands_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CCLCMsg_Move::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_Move)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes data = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  // optional uint32 command_number = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_command_number(), target);
  }

  // optional uint32 num_commands = 5;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_num_commands(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_Move)
  return target;
}

::size_t CCLCMsg_Move::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_Move)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bytes data = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_data());
    }

    // optional uint32 command_number = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_command_number());
    }

    // optional uint32 num_commands = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_num_commands());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CCLCMsg_Move::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CCLCMsg_Move::MergeImpl
};
const ::google::protobuf::Message::ClassData*CCLCMsg_Move::GetClassData() const { return &_class_data_; }


void CCLCMsg_Move::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CCLCMsg_Move*>(&to_msg);
  auto& from = static_cast<const CCLCMsg_Move&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_Move)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_data(from._internal_data());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.command_number_ = from._impl_.command_number_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.num_commands_ = from._impl_.num_commands_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CCLCMsg_Move::CopyFrom(const CCLCMsg_Move& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_Move)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CCLCMsg_Move::IsInitialized() const {
  return true;
}

void CCLCMsg_Move::InternalSwap(CCLCMsg_Move* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, lhs_arena,
                                       &other->_impl_.data_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CCLCMsg_Move, _impl_.num_commands_)
      + sizeof(CCLCMsg_Move::_impl_.num_commands_)
      - PROTOBUF_FIELD_OFFSET(CCLCMsg_Move, _impl_.command_number_)>(
          reinterpret_cast<char*>(&_impl_.command_number_),
          reinterpret_cast<char*>(&other->_impl_.command_number_));
}

::google::protobuf::Metadata CCLCMsg_Move::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[1]);
}
// ===================================================================

class CMsgVoiceAudio::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgVoiceAudio>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgVoiceAudio, _impl_._has_bits_);
  static void set_has_format(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_voice_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_sequence_bytes(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_section_number(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_sample_rate(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_uncompressed_sample_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

CMsgVoiceAudio::CMsgVoiceAudio(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgVoiceAudio)
}
CMsgVoiceAudio::CMsgVoiceAudio(const CMsgVoiceAudio& from) : ::google::protobuf::Message() {
  CMsgVoiceAudio* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.voice_data_){},
      decltype(_impl_.format_){},
      decltype(_impl_.sequence_bytes_){},
      decltype(_impl_.section_number_){},
      decltype(_impl_.sample_rate_){},
      decltype(_impl_.uncompressed_sample_offset_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.voice_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.voice_data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.voice_data_.Set(from._internal_voice_data(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.format_, &from._impl_.format_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.uncompressed_sample_offset_) -
    reinterpret_cast<char*>(&_impl_.format_)) + sizeof(_impl_.uncompressed_sample_offset_));

  // @@protoc_insertion_point(copy_constructor:CMsgVoiceAudio)
}
inline void CMsgVoiceAudio::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.voice_data_){},
      decltype(_impl_.format_){0},
      decltype(_impl_.sequence_bytes_){0},
      decltype(_impl_.section_number_){0u},
      decltype(_impl_.sample_rate_){0u},
      decltype(_impl_.uncompressed_sample_offset_){0u},
  };
  _impl_.voice_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.voice_data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CMsgVoiceAudio::~CMsgVoiceAudio() {
  // @@protoc_insertion_point(destructor:CMsgVoiceAudio)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgVoiceAudio::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.voice_data_.Destroy();
}
void CMsgVoiceAudio::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgVoiceAudio::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgVoiceAudio)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.voice_data_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000003eu) {
    ::memset(&_impl_.format_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.uncompressed_sample_offset_) -
        reinterpret_cast<char*>(&_impl_.format_)) + sizeof(_impl_.uncompressed_sample_offset_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgVoiceAudio::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 0, 2> CMsgVoiceAudio::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgVoiceAudio, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgVoiceAudio_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .VoiceDataFormat_t format = 1 [default = VOICEDATA_FORMAT_STEAM];
    {::_pbi::TcParser::FastEr0S1,
     {8, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgVoiceAudio, _impl_.format_)}},
    // optional bytes voice_data = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgVoiceAudio, _impl_.voice_data_)}},
    // optional int32 sequence_bytes = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgVoiceAudio, _impl_.sequence_bytes_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgVoiceAudio, _impl_.sequence_bytes_)}},
    // optional uint32 section_number = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgVoiceAudio, _impl_.section_number_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgVoiceAudio, _impl_.section_number_)}},
    // optional uint32 sample_rate = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgVoiceAudio, _impl_.sample_rate_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgVoiceAudio, _impl_.sample_rate_)}},
    // optional uint32 uncompressed_sample_offset = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgVoiceAudio, _impl_.uncompressed_sample_offset_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgVoiceAudio, _impl_.uncompressed_sample_offset_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .VoiceDataFormat_t format = 1 [default = VOICEDATA_FORMAT_STEAM];
    {PROTOBUF_FIELD_OFFSET(CMsgVoiceAudio, _impl_.format_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional bytes voice_data = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgVoiceAudio, _impl_.voice_data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional int32 sequence_bytes = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgVoiceAudio, _impl_.sequence_bytes_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 section_number = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgVoiceAudio, _impl_.section_number_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 sample_rate = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgVoiceAudio, _impl_.sample_rate_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 uncompressed_sample_offset = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgVoiceAudio, _impl_.uncompressed_sample_offset_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {0, 2},
  }}, {{
  }},
};

::uint8_t* CMsgVoiceAudio::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgVoiceAudio)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .VoiceDataFormat_t format = 1 [default = VOICEDATA_FORMAT_STEAM];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_format(), target);
  }

  // optional bytes voice_data = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_voice_data();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // optional int32 sequence_bytes = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_sequence_bytes(), target);
  }

  // optional uint32 section_number = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_section_number(), target);
  }

  // optional uint32 sample_rate = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_sample_rate(), target);
  }

  // optional uint32 uncompressed_sample_offset = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_uncompressed_sample_offset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgVoiceAudio)
  return target;
}

::size_t CMsgVoiceAudio::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgVoiceAudio)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional bytes voice_data = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_voice_data());
    }

    // optional .VoiceDataFormat_t format = 1 [default = VOICEDATA_FORMAT_STEAM];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_format());
    }

    // optional int32 sequence_bytes = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_sequence_bytes());
    }

    // optional uint32 section_number = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_section_number());
    }

    // optional uint32 sample_rate = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_sample_rate());
    }

    // optional uint32 uncompressed_sample_offset = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_uncompressed_sample_offset());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgVoiceAudio::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgVoiceAudio::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgVoiceAudio::GetClassData() const { return &_class_data_; }


void CMsgVoiceAudio::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgVoiceAudio*>(&to_msg);
  auto& from = static_cast<const CMsgVoiceAudio&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgVoiceAudio)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_voice_data(from._internal_voice_data());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.format_ = from._impl_.format_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.sequence_bytes_ = from._impl_.sequence_bytes_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.section_number_ = from._impl_.section_number_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.sample_rate_ = from._impl_.sample_rate_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.uncompressed_sample_offset_ = from._impl_.uncompressed_sample_offset_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgVoiceAudio::CopyFrom(const CMsgVoiceAudio& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgVoiceAudio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgVoiceAudio::IsInitialized() const {
  return true;
}

void CMsgVoiceAudio::InternalSwap(CMsgVoiceAudio* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.voice_data_, lhs_arena,
                                       &other->_impl_.voice_data_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgVoiceAudio, _impl_.uncompressed_sample_offset_)
      + sizeof(CMsgVoiceAudio::_impl_.uncompressed_sample_offset_)
      - PROTOBUF_FIELD_OFFSET(CMsgVoiceAudio, _impl_.format_)>(
          reinterpret_cast<char*>(&_impl_.format_),
          reinterpret_cast<char*>(&other->_impl_.format_));
}

::google::protobuf::Metadata CMsgVoiceAudio::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[2]);
}
// ===================================================================

class CCLCMsg_VoiceData::_Internal {
 public:
  using HasBits = decltype(std::declval<CCLCMsg_VoiceData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CCLCMsg_VoiceData, _impl_._has_bits_);
  static const ::CMsgVoiceAudio& audio(const CCLCMsg_VoiceData* msg);
  static void set_has_audio(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_xuid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_tick(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::CMsgVoiceAudio& CCLCMsg_VoiceData::_Internal::audio(const CCLCMsg_VoiceData* msg) {
  return *msg->_impl_.audio_;
}
CCLCMsg_VoiceData::CCLCMsg_VoiceData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CCLCMsg_VoiceData)
}
CCLCMsg_VoiceData::CCLCMsg_VoiceData(const CCLCMsg_VoiceData& from) : ::google::protobuf::Message() {
  CCLCMsg_VoiceData* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.audio_){nullptr},
      decltype(_impl_.xuid_){},
      decltype(_impl_.tick_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.audio_ = new ::CMsgVoiceAudio(*from._impl_.audio_);
  }
  ::memcpy(&_impl_.xuid_, &from._impl_.xuid_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.tick_) -
    reinterpret_cast<char*>(&_impl_.xuid_)) + sizeof(_impl_.tick_));

  // @@protoc_insertion_point(copy_constructor:CCLCMsg_VoiceData)
}
inline void CCLCMsg_VoiceData::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.audio_){nullptr},
      decltype(_impl_.xuid_){::uint64_t{0u}},
      decltype(_impl_.tick_){0u},
  };
}
CCLCMsg_VoiceData::~CCLCMsg_VoiceData() {
  // @@protoc_insertion_point(destructor:CCLCMsg_VoiceData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CCLCMsg_VoiceData::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.audio_;
}
void CCLCMsg_VoiceData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CCLCMsg_VoiceData::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_VoiceData)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.audio_ != nullptr);
    _impl_.audio_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.xuid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.tick_) -
        reinterpret_cast<char*>(&_impl_.xuid_)) + sizeof(_impl_.tick_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CCLCMsg_VoiceData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> CCLCMsg_VoiceData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CCLCMsg_VoiceData, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CCLCMsg_VoiceData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CMsgVoiceAudio audio = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_VoiceData, _impl_.audio_)}},
    // optional fixed64 xuid = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_VoiceData, _impl_.xuid_)}},
    // optional uint32 tick = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CCLCMsg_VoiceData, _impl_.tick_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_VoiceData, _impl_.tick_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVoiceAudio audio = 1;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_VoiceData, _impl_.audio_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional fixed64 xuid = 2;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_VoiceData, _impl_.xuid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional uint32 tick = 3;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_VoiceData, _impl_.tick_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgVoiceAudio>()},
  }}, {{
  }},
};

::uint8_t* CCLCMsg_VoiceData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_VoiceData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgVoiceAudio audio = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::audio(this),
        _Internal::audio(this).GetCachedSize(), target, stream);
  }

  // optional fixed64 xuid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        2, this->_internal_xuid(), target);
  }

  // optional uint32 tick = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_tick(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_VoiceData)
  return target;
}

::size_t CCLCMsg_VoiceData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_VoiceData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .CMsgVoiceAudio audio = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.audio_);
    }

    // optional fixed64 xuid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }

    // optional uint32 tick = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_tick());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CCLCMsg_VoiceData::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CCLCMsg_VoiceData::MergeImpl
};
const ::google::protobuf::Message::ClassData*CCLCMsg_VoiceData::GetClassData() const { return &_class_data_; }


void CCLCMsg_VoiceData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CCLCMsg_VoiceData*>(&to_msg);
  auto& from = static_cast<const CCLCMsg_VoiceData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_VoiceData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_audio()->::CMsgVoiceAudio::MergeFrom(
          from._internal_audio());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.xuid_ = from._impl_.xuid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.tick_ = from._impl_.tick_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CCLCMsg_VoiceData::CopyFrom(const CCLCMsg_VoiceData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_VoiceData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CCLCMsg_VoiceData::IsInitialized() const {
  return true;
}

void CCLCMsg_VoiceData::InternalSwap(CCLCMsg_VoiceData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CCLCMsg_VoiceData, _impl_.tick_)
      + sizeof(CCLCMsg_VoiceData::_impl_.tick_)
      - PROTOBUF_FIELD_OFFSET(CCLCMsg_VoiceData, _impl_.audio_)>(
          reinterpret_cast<char*>(&_impl_.audio_),
          reinterpret_cast<char*>(&other->_impl_.audio_));
}

::google::protobuf::Metadata CCLCMsg_VoiceData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[3]);
}
// ===================================================================

class CCLCMsg_BaselineAck::_Internal {
 public:
  using HasBits = decltype(std::declval<CCLCMsg_BaselineAck>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CCLCMsg_BaselineAck, _impl_._has_bits_);
  static void set_has_baseline_tick(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_baseline_nr(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CCLCMsg_BaselineAck::CCLCMsg_BaselineAck(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CCLCMsg_BaselineAck)
}
CCLCMsg_BaselineAck::CCLCMsg_BaselineAck(const CCLCMsg_BaselineAck& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CCLCMsg_BaselineAck)
}
inline void CCLCMsg_BaselineAck::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.baseline_tick_){0},
      decltype(_impl_.baseline_nr_){0},
  };
}
CCLCMsg_BaselineAck::~CCLCMsg_BaselineAck() {
  // @@protoc_insertion_point(destructor:CCLCMsg_BaselineAck)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CCLCMsg_BaselineAck::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CCLCMsg_BaselineAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CCLCMsg_BaselineAck::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_BaselineAck)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.baseline_tick_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.baseline_nr_) -
        reinterpret_cast<char*>(&_impl_.baseline_tick_)) + sizeof(_impl_.baseline_nr_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CCLCMsg_BaselineAck::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> CCLCMsg_BaselineAck::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CCLCMsg_BaselineAck, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CCLCMsg_BaselineAck_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 baseline_nr = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CCLCMsg_BaselineAck, _impl_.baseline_nr_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_BaselineAck, _impl_.baseline_nr_)}},
    // optional int32 baseline_tick = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CCLCMsg_BaselineAck, _impl_.baseline_tick_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_BaselineAck, _impl_.baseline_tick_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 baseline_tick = 1;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_BaselineAck, _impl_.baseline_tick_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 baseline_nr = 2;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_BaselineAck, _impl_.baseline_nr_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CCLCMsg_BaselineAck::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_BaselineAck)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 baseline_tick = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_baseline_tick(), target);
  }

  // optional int32 baseline_nr = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_baseline_nr(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_BaselineAck)
  return target;
}

::size_t CCLCMsg_BaselineAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_BaselineAck)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 baseline_tick = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_baseline_tick());
    }

    // optional int32 baseline_nr = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_baseline_nr());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CCLCMsg_BaselineAck::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CCLCMsg_BaselineAck::MergeImpl
};
const ::google::protobuf::Message::ClassData*CCLCMsg_BaselineAck::GetClassData() const { return &_class_data_; }


void CCLCMsg_BaselineAck::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CCLCMsg_BaselineAck*>(&to_msg);
  auto& from = static_cast<const CCLCMsg_BaselineAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_BaselineAck)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.baseline_tick_ = from._impl_.baseline_tick_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.baseline_nr_ = from._impl_.baseline_nr_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CCLCMsg_BaselineAck::CopyFrom(const CCLCMsg_BaselineAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_BaselineAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CCLCMsg_BaselineAck::IsInitialized() const {
  return true;
}

void CCLCMsg_BaselineAck::InternalSwap(CCLCMsg_BaselineAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CCLCMsg_BaselineAck, _impl_.baseline_nr_)
      + sizeof(CCLCMsg_BaselineAck::_impl_.baseline_nr_)
      - PROTOBUF_FIELD_OFFSET(CCLCMsg_BaselineAck, _impl_.baseline_tick_)>(
          reinterpret_cast<char*>(&_impl_.baseline_tick_),
          reinterpret_cast<char*>(&other->_impl_.baseline_tick_));
}

::google::protobuf::Metadata CCLCMsg_BaselineAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[4]);
}
// ===================================================================

class CCLCMsg_ListenEvents::_Internal {
 public:
};

CCLCMsg_ListenEvents::CCLCMsg_ListenEvents(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CCLCMsg_ListenEvents)
}
CCLCMsg_ListenEvents::CCLCMsg_ListenEvents(const CCLCMsg_ListenEvents& from) : ::google::protobuf::Message() {
  CCLCMsg_ListenEvents* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.event_mask_){from._impl_.event_mask_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CCLCMsg_ListenEvents)
}
inline void CCLCMsg_ListenEvents::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.event_mask_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
CCLCMsg_ListenEvents::~CCLCMsg_ListenEvents() {
  // @@protoc_insertion_point(destructor:CCLCMsg_ListenEvents)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CCLCMsg_ListenEvents::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.event_mask_.~RepeatedField();
}
void CCLCMsg_ListenEvents::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CCLCMsg_ListenEvents::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_ListenEvents)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_event_mask()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CCLCMsg_ListenEvents::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CCLCMsg_ListenEvents::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CCLCMsg_ListenEvents_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated fixed32 event_mask = 1;
    {::_pbi::TcParser::FastF32R1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_ListenEvents, _impl_.event_mask_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated fixed32 event_mask = 1;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_ListenEvents, _impl_.event_mask_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFixed32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CCLCMsg_ListenEvents::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_ListenEvents)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated fixed32 event_mask = 1;
  for (int i = 0, n = this->_internal_event_mask_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        1, this->_internal_event_mask().Get(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_ListenEvents)
  return target;
}

::size_t CCLCMsg_ListenEvents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_ListenEvents)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated fixed32 event_mask = 1;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_event_mask_size())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_event_mask_size());
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CCLCMsg_ListenEvents::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CCLCMsg_ListenEvents::MergeImpl
};
const ::google::protobuf::Message::ClassData*CCLCMsg_ListenEvents::GetClassData() const { return &_class_data_; }


void CCLCMsg_ListenEvents::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CCLCMsg_ListenEvents*>(&to_msg);
  auto& from = static_cast<const CCLCMsg_ListenEvents&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_ListenEvents)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_event_mask()->MergeFrom(from._internal_event_mask());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CCLCMsg_ListenEvents::CopyFrom(const CCLCMsg_ListenEvents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_ListenEvents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CCLCMsg_ListenEvents::IsInitialized() const {
  return true;
}

void CCLCMsg_ListenEvents::InternalSwap(CCLCMsg_ListenEvents* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.event_mask_.InternalSwap(&other->_impl_.event_mask_);
}

::google::protobuf::Metadata CCLCMsg_ListenEvents::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[5]);
}
// ===================================================================

class CCLCMsg_RespondCvarValue::_Internal {
 public:
  using HasBits = decltype(std::declval<CCLCMsg_RespondCvarValue>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CCLCMsg_RespondCvarValue, _impl_._has_bits_);
  static void set_has_cookie(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_status_code(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CCLCMsg_RespondCvarValue::CCLCMsg_RespondCvarValue(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CCLCMsg_RespondCvarValue)
}
CCLCMsg_RespondCvarValue::CCLCMsg_RespondCvarValue(const CCLCMsg_RespondCvarValue& from) : ::google::protobuf::Message() {
  CCLCMsg_RespondCvarValue* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.value_){},
      decltype(_impl_.cookie_){},
      decltype(_impl_.status_code_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.value_.Set(from._internal_value(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.cookie_, &from._impl_.cookie_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.status_code_) -
    reinterpret_cast<char*>(&_impl_.cookie_)) + sizeof(_impl_.status_code_));

  // @@protoc_insertion_point(copy_constructor:CCLCMsg_RespondCvarValue)
}
inline void CCLCMsg_RespondCvarValue::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.value_){},
      decltype(_impl_.cookie_){0},
      decltype(_impl_.status_code_){0},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CCLCMsg_RespondCvarValue::~CCLCMsg_RespondCvarValue() {
  // @@protoc_insertion_point(destructor:CCLCMsg_RespondCvarValue)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CCLCMsg_RespondCvarValue::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.value_.Destroy();
}
void CCLCMsg_RespondCvarValue::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CCLCMsg_RespondCvarValue::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_RespondCvarValue)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.value_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&_impl_.cookie_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.status_code_) -
        reinterpret_cast<char*>(&_impl_.cookie_)) + sizeof(_impl_.status_code_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CCLCMsg_RespondCvarValue::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 42, 2> CCLCMsg_RespondCvarValue::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CCLCMsg_RespondCvarValue, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CCLCMsg_RespondCvarValue_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string value = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_RespondCvarValue, _impl_.value_)}},
    // optional int32 cookie = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CCLCMsg_RespondCvarValue, _impl_.cookie_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_RespondCvarValue, _impl_.cookie_)}},
    // optional int32 status_code = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CCLCMsg_RespondCvarValue, _impl_.status_code_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_RespondCvarValue, _impl_.status_code_)}},
    // optional string name = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_RespondCvarValue, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 cookie = 1;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_RespondCvarValue, _impl_.cookie_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 status_code = 2;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_RespondCvarValue, _impl_.status_code_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string name = 3;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_RespondCvarValue, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string value = 4;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_RespondCvarValue, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\0\0\4\5\0\0\0"
    "CCLCMsg_RespondCvarValue"
    "name"
    "value"
  }},
};

::uint8_t* CCLCMsg_RespondCvarValue::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_RespondCvarValue)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 cookie = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_cookie(), target);
  }

  // optional int32 status_code = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_status_code(), target);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CCLCMsg_RespondCvarValue.name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string value = 4;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_value();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CCLCMsg_RespondCvarValue.value");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_RespondCvarValue)
  return target;
}

::size_t CCLCMsg_RespondCvarValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_RespondCvarValue)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string name = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }

    // optional string value = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_value());
    }

    // optional int32 cookie = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_cookie());
    }

    // optional int32 status_code = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_status_code());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CCLCMsg_RespondCvarValue::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CCLCMsg_RespondCvarValue::MergeImpl
};
const ::google::protobuf::Message::ClassData*CCLCMsg_RespondCvarValue::GetClassData() const { return &_class_data_; }


void CCLCMsg_RespondCvarValue::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CCLCMsg_RespondCvarValue*>(&to_msg);
  auto& from = static_cast<const CCLCMsg_RespondCvarValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_RespondCvarValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_value(from._internal_value());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.cookie_ = from._impl_.cookie_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.status_code_ = from._impl_.status_code_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CCLCMsg_RespondCvarValue::CopyFrom(const CCLCMsg_RespondCvarValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_RespondCvarValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CCLCMsg_RespondCvarValue::IsInitialized() const {
  return true;
}

void CCLCMsg_RespondCvarValue::InternalSwap(CCLCMsg_RespondCvarValue* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, lhs_arena,
                                       &other->_impl_.value_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CCLCMsg_RespondCvarValue, _impl_.status_code_)
      + sizeof(CCLCMsg_RespondCvarValue::_impl_.status_code_)
      - PROTOBUF_FIELD_OFFSET(CCLCMsg_RespondCvarValue, _impl_.cookie_)>(
          reinterpret_cast<char*>(&_impl_.cookie_),
          reinterpret_cast<char*>(&other->_impl_.cookie_));
}

::google::protobuf::Metadata CCLCMsg_RespondCvarValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[6]);
}
// ===================================================================

class CCLCMsg_FileCRCCheck::_Internal {
 public:
  using HasBits = decltype(std::declval<CCLCMsg_FileCRCCheck>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CCLCMsg_FileCRCCheck, _impl_._has_bits_);
  static void set_has_code_path(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_code_filename(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_filename(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_crc(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

CCLCMsg_FileCRCCheck::CCLCMsg_FileCRCCheck(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CCLCMsg_FileCRCCheck)
}
CCLCMsg_FileCRCCheck::CCLCMsg_FileCRCCheck(const CCLCMsg_FileCRCCheck& from) : ::google::protobuf::Message() {
  CCLCMsg_FileCRCCheck* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.path_){},
      decltype(_impl_.filename_){},
      decltype(_impl_.code_path_){},
      decltype(_impl_.code_filename_){},
      decltype(_impl_.crc_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.path_.Set(from._internal_path(), _this->GetArenaForAllocation());
  }
  _impl_.filename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.filename_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.filename_.Set(from._internal_filename(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.code_path_, &from._impl_.code_path_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.crc_) -
    reinterpret_cast<char*>(&_impl_.code_path_)) + sizeof(_impl_.crc_));

  // @@protoc_insertion_point(copy_constructor:CCLCMsg_FileCRCCheck)
}
inline void CCLCMsg_FileCRCCheck::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.path_){},
      decltype(_impl_.filename_){},
      decltype(_impl_.code_path_){0},
      decltype(_impl_.code_filename_){0},
      decltype(_impl_.crc_){0u},
  };
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.filename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.filename_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CCLCMsg_FileCRCCheck::~CCLCMsg_FileCRCCheck() {
  // @@protoc_insertion_point(destructor:CCLCMsg_FileCRCCheck)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CCLCMsg_FileCRCCheck::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.path_.Destroy();
  _impl_.filename_.Destroy();
}
void CCLCMsg_FileCRCCheck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CCLCMsg_FileCRCCheck::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_FileCRCCheck)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.filename_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&_impl_.code_path_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.crc_) -
        reinterpret_cast<char*>(&_impl_.code_path_)) + sizeof(_impl_.crc_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CCLCMsg_FileCRCCheck::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 41, 2> CCLCMsg_FileCRCCheck::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CCLCMsg_FileCRCCheck, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CCLCMsg_FileCRCCheck_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 code_path = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CCLCMsg_FileCRCCheck, _impl_.code_path_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_FileCRCCheck, _impl_.code_path_)}},
    // optional string path = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_FileCRCCheck, _impl_.path_)}},
    // optional int32 code_filename = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CCLCMsg_FileCRCCheck, _impl_.code_filename_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_FileCRCCheck, _impl_.code_filename_)}},
    // optional string filename = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_FileCRCCheck, _impl_.filename_)}},
    // optional fixed32 crc = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_FileCRCCheck, _impl_.crc_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 code_path = 1;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_FileCRCCheck, _impl_.code_path_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string path = 2;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_FileCRCCheck, _impl_.path_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 code_filename = 3;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_FileCRCCheck, _impl_.code_filename_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string filename = 4;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_FileCRCCheck, _impl_.filename_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional fixed32 crc = 5;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_FileCRCCheck, _impl_.crc_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
  }},
  // no aux_entries
  {{
    "\24\0\4\0\10\0\0\0"
    "CCLCMsg_FileCRCCheck"
    "path"
    "filename"
  }},
};

::uint8_t* CCLCMsg_FileCRCCheck::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_FileCRCCheck)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 code_path = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_code_path(), target);
  }

  // optional string path = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_path();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CCLCMsg_FileCRCCheck.path");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional int32 code_filename = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_code_filename(), target);
  }

  // optional string filename = 4;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_filename();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CCLCMsg_FileCRCCheck.filename");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional fixed32 crc = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        5, this->_internal_crc(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_FileCRCCheck)
  return target;
}

::size_t CCLCMsg_FileCRCCheck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_FileCRCCheck)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string path = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_path());
    }

    // optional string filename = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_filename());
    }

    // optional int32 code_path = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_code_path());
    }

    // optional int32 code_filename = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_code_filename());
    }

    // optional fixed32 crc = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CCLCMsg_FileCRCCheck::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CCLCMsg_FileCRCCheck::MergeImpl
};
const ::google::protobuf::Message::ClassData*CCLCMsg_FileCRCCheck::GetClassData() const { return &_class_data_; }


void CCLCMsg_FileCRCCheck::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CCLCMsg_FileCRCCheck*>(&to_msg);
  auto& from = static_cast<const CCLCMsg_FileCRCCheck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_FileCRCCheck)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_filename(from._internal_filename());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.code_path_ = from._impl_.code_path_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.code_filename_ = from._impl_.code_filename_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.crc_ = from._impl_.crc_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CCLCMsg_FileCRCCheck::CopyFrom(const CCLCMsg_FileCRCCheck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_FileCRCCheck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CCLCMsg_FileCRCCheck::IsInitialized() const {
  return true;
}

void CCLCMsg_FileCRCCheck::InternalSwap(CCLCMsg_FileCRCCheck* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, lhs_arena,
                                       &other->_impl_.path_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.filename_, lhs_arena,
                                       &other->_impl_.filename_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CCLCMsg_FileCRCCheck, _impl_.crc_)
      + sizeof(CCLCMsg_FileCRCCheck::_impl_.crc_)
      - PROTOBUF_FIELD_OFFSET(CCLCMsg_FileCRCCheck, _impl_.code_path_)>(
          reinterpret_cast<char*>(&_impl_.code_path_),
          reinterpret_cast<char*>(&other->_impl_.code_path_));
}

::google::protobuf::Metadata CCLCMsg_FileCRCCheck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[7]);
}
// ===================================================================

class CCLCMsg_LoadingProgress::_Internal {
 public:
  using HasBits = decltype(std::declval<CCLCMsg_LoadingProgress>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CCLCMsg_LoadingProgress, _impl_._has_bits_);
  static void set_has_progress(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CCLCMsg_LoadingProgress::CCLCMsg_LoadingProgress(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CCLCMsg_LoadingProgress)
}
CCLCMsg_LoadingProgress::CCLCMsg_LoadingProgress(const CCLCMsg_LoadingProgress& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CCLCMsg_LoadingProgress)
}
inline void CCLCMsg_LoadingProgress::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.progress_){0},
  };
}
CCLCMsg_LoadingProgress::~CCLCMsg_LoadingProgress() {
  // @@protoc_insertion_point(destructor:CCLCMsg_LoadingProgress)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CCLCMsg_LoadingProgress::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CCLCMsg_LoadingProgress::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CCLCMsg_LoadingProgress::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_LoadingProgress)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.progress_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CCLCMsg_LoadingProgress::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CCLCMsg_LoadingProgress::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CCLCMsg_LoadingProgress, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CCLCMsg_LoadingProgress_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 progress = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CCLCMsg_LoadingProgress, _impl_.progress_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_LoadingProgress, _impl_.progress_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 progress = 1;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_LoadingProgress, _impl_.progress_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CCLCMsg_LoadingProgress::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_LoadingProgress)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 progress = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_progress(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_LoadingProgress)
  return target;
}

::size_t CCLCMsg_LoadingProgress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_LoadingProgress)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 progress = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_progress());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CCLCMsg_LoadingProgress::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CCLCMsg_LoadingProgress::MergeImpl
};
const ::google::protobuf::Message::ClassData*CCLCMsg_LoadingProgress::GetClassData() const { return &_class_data_; }


void CCLCMsg_LoadingProgress::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CCLCMsg_LoadingProgress*>(&to_msg);
  auto& from = static_cast<const CCLCMsg_LoadingProgress&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_LoadingProgress)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_progress(from._internal_progress());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CCLCMsg_LoadingProgress::CopyFrom(const CCLCMsg_LoadingProgress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_LoadingProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CCLCMsg_LoadingProgress::IsInitialized() const {
  return true;
}

void CCLCMsg_LoadingProgress::InternalSwap(CCLCMsg_LoadingProgress* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.progress_, other->_impl_.progress_);
}

::google::protobuf::Metadata CCLCMsg_LoadingProgress::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[8]);
}
// ===================================================================

class CCLCMsg_SplitPlayerConnect::_Internal {
 public:
  using HasBits = decltype(std::declval<CCLCMsg_SplitPlayerConnect>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CCLCMsg_SplitPlayerConnect, _impl_._has_bits_);
  static void set_has_playername(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CCLCMsg_SplitPlayerConnect::CCLCMsg_SplitPlayerConnect(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CCLCMsg_SplitPlayerConnect)
}
CCLCMsg_SplitPlayerConnect::CCLCMsg_SplitPlayerConnect(const CCLCMsg_SplitPlayerConnect& from) : ::google::protobuf::Message() {
  CCLCMsg_SplitPlayerConnect* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.playername_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.playername_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.playername_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.playername_.Set(from._internal_playername(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:CCLCMsg_SplitPlayerConnect)
}
inline void CCLCMsg_SplitPlayerConnect::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.playername_){},
  };
  _impl_.playername_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.playername_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CCLCMsg_SplitPlayerConnect::~CCLCMsg_SplitPlayerConnect() {
  // @@protoc_insertion_point(destructor:CCLCMsg_SplitPlayerConnect)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CCLCMsg_SplitPlayerConnect::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.playername_.Destroy();
}
void CCLCMsg_SplitPlayerConnect::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CCLCMsg_SplitPlayerConnect::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_SplitPlayerConnect)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.playername_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CCLCMsg_SplitPlayerConnect::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 45, 2> CCLCMsg_SplitPlayerConnect::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CCLCMsg_SplitPlayerConnect, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CCLCMsg_SplitPlayerConnect_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string playername = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_SplitPlayerConnect, _impl_.playername_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string playername = 1;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_SplitPlayerConnect, _impl_.playername_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\12\0\0\0\0\0\0"
    "CCLCMsg_SplitPlayerConnect"
    "playername"
  }},
};

::uint8_t* CCLCMsg_SplitPlayerConnect::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_SplitPlayerConnect)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string playername = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_playername();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CCLCMsg_SplitPlayerConnect.playername");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_SplitPlayerConnect)
  return target;
}

::size_t CCLCMsg_SplitPlayerConnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_SplitPlayerConnect)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string playername = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_playername());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CCLCMsg_SplitPlayerConnect::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CCLCMsg_SplitPlayerConnect::MergeImpl
};
const ::google::protobuf::Message::ClassData*CCLCMsg_SplitPlayerConnect::GetClassData() const { return &_class_data_; }


void CCLCMsg_SplitPlayerConnect::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CCLCMsg_SplitPlayerConnect*>(&to_msg);
  auto& from = static_cast<const CCLCMsg_SplitPlayerConnect&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_SplitPlayerConnect)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_playername(from._internal_playername());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CCLCMsg_SplitPlayerConnect::CopyFrom(const CCLCMsg_SplitPlayerConnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_SplitPlayerConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CCLCMsg_SplitPlayerConnect::IsInitialized() const {
  return true;
}

void CCLCMsg_SplitPlayerConnect::InternalSwap(CCLCMsg_SplitPlayerConnect* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.playername_, lhs_arena,
                                       &other->_impl_.playername_, rhs_arena);
}

::google::protobuf::Metadata CCLCMsg_SplitPlayerConnect::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[9]);
}
// ===================================================================

class CCLCMsg_ClientMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<CCLCMsg_ClientMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CCLCMsg_ClientMessage, _impl_._has_bits_);
  static void set_has_msg_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CCLCMsg_ClientMessage::CCLCMsg_ClientMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CCLCMsg_ClientMessage)
}
CCLCMsg_ClientMessage::CCLCMsg_ClientMessage(const CCLCMsg_ClientMessage& from) : ::google::protobuf::Message() {
  CCLCMsg_ClientMessage* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){},
      decltype(_impl_.msg_type_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.data_.Set(from._internal_data(), _this->GetArenaForAllocation());
  }
  _this->_impl_.msg_type_ = from._impl_.msg_type_;

  // @@protoc_insertion_point(copy_constructor:CCLCMsg_ClientMessage)
}
inline void CCLCMsg_ClientMessage::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){},
      decltype(_impl_.msg_type_){0},
  };
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CCLCMsg_ClientMessage::~CCLCMsg_ClientMessage() {
  // @@protoc_insertion_point(destructor:CCLCMsg_ClientMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CCLCMsg_ClientMessage::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.Destroy();
}
void CCLCMsg_ClientMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CCLCMsg_ClientMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_ClientMessage)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.data_.ClearNonDefaultToEmpty();
  }
  _impl_.msg_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CCLCMsg_ClientMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> CCLCMsg_ClientMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CCLCMsg_ClientMessage, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CCLCMsg_ClientMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bytes data = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_ClientMessage, _impl_.data_)}},
    // optional int32 msg_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CCLCMsg_ClientMessage, _impl_.msg_type_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_ClientMessage, _impl_.msg_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 msg_type = 1;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_ClientMessage, _impl_.msg_type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bytes data = 2;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_ClientMessage, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CCLCMsg_ClientMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_ClientMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 msg_type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_msg_type(), target);
  }

  // optional bytes data = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_ClientMessage)
  return target;
}

::size_t CCLCMsg_ClientMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_ClientMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes data = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_data());
    }

    // optional int32 msg_type = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_msg_type());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CCLCMsg_ClientMessage::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CCLCMsg_ClientMessage::MergeImpl
};
const ::google::protobuf::Message::ClassData*CCLCMsg_ClientMessage::GetClassData() const { return &_class_data_; }


void CCLCMsg_ClientMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CCLCMsg_ClientMessage*>(&to_msg);
  auto& from = static_cast<const CCLCMsg_ClientMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_ClientMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_data(from._internal_data());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.msg_type_ = from._impl_.msg_type_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CCLCMsg_ClientMessage::CopyFrom(const CCLCMsg_ClientMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_ClientMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CCLCMsg_ClientMessage::IsInitialized() const {
  return true;
}

void CCLCMsg_ClientMessage::InternalSwap(CCLCMsg_ClientMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, lhs_arena,
                                       &other->_impl_.data_, rhs_arena);
        swap(_impl_.msg_type_, other->_impl_.msg_type_);
}

::google::protobuf::Metadata CCLCMsg_ClientMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[10]);
}
// ===================================================================

class CCLCMsg_SplitPlayerDisconnect::_Internal {
 public:
  using HasBits = decltype(std::declval<CCLCMsg_SplitPlayerDisconnect>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CCLCMsg_SplitPlayerDisconnect, _impl_._has_bits_);
  static void set_has_slot(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CCLCMsg_SplitPlayerDisconnect::CCLCMsg_SplitPlayerDisconnect(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CCLCMsg_SplitPlayerDisconnect)
}
CCLCMsg_SplitPlayerDisconnect::CCLCMsg_SplitPlayerDisconnect(const CCLCMsg_SplitPlayerDisconnect& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CCLCMsg_SplitPlayerDisconnect)
}
inline void CCLCMsg_SplitPlayerDisconnect::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.slot_){0},
  };
}
CCLCMsg_SplitPlayerDisconnect::~CCLCMsg_SplitPlayerDisconnect() {
  // @@protoc_insertion_point(destructor:CCLCMsg_SplitPlayerDisconnect)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CCLCMsg_SplitPlayerDisconnect::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CCLCMsg_SplitPlayerDisconnect::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CCLCMsg_SplitPlayerDisconnect::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_SplitPlayerDisconnect)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.slot_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CCLCMsg_SplitPlayerDisconnect::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CCLCMsg_SplitPlayerDisconnect::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CCLCMsg_SplitPlayerDisconnect, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CCLCMsg_SplitPlayerDisconnect_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 slot = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CCLCMsg_SplitPlayerDisconnect, _impl_.slot_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_SplitPlayerDisconnect, _impl_.slot_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 slot = 1;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_SplitPlayerDisconnect, _impl_.slot_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CCLCMsg_SplitPlayerDisconnect::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_SplitPlayerDisconnect)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 slot = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_slot(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_SplitPlayerDisconnect)
  return target;
}

::size_t CCLCMsg_SplitPlayerDisconnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_SplitPlayerDisconnect)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 slot = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_slot());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CCLCMsg_SplitPlayerDisconnect::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CCLCMsg_SplitPlayerDisconnect::MergeImpl
};
const ::google::protobuf::Message::ClassData*CCLCMsg_SplitPlayerDisconnect::GetClassData() const { return &_class_data_; }


void CCLCMsg_SplitPlayerDisconnect::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CCLCMsg_SplitPlayerDisconnect*>(&to_msg);
  auto& from = static_cast<const CCLCMsg_SplitPlayerDisconnect&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_SplitPlayerDisconnect)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_slot(from._internal_slot());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CCLCMsg_SplitPlayerDisconnect::CopyFrom(const CCLCMsg_SplitPlayerDisconnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_SplitPlayerDisconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CCLCMsg_SplitPlayerDisconnect::IsInitialized() const {
  return true;
}

void CCLCMsg_SplitPlayerDisconnect::InternalSwap(CCLCMsg_SplitPlayerDisconnect* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.slot_, other->_impl_.slot_);
}

::google::protobuf::Metadata CCLCMsg_SplitPlayerDisconnect::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[11]);
}
// ===================================================================

class CCLCMsg_ServerStatus::_Internal {
 public:
  using HasBits = decltype(std::declval<CCLCMsg_ServerStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CCLCMsg_ServerStatus, _impl_._has_bits_);
  static void set_has_simplified(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CCLCMsg_ServerStatus::CCLCMsg_ServerStatus(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CCLCMsg_ServerStatus)
}
CCLCMsg_ServerStatus::CCLCMsg_ServerStatus(const CCLCMsg_ServerStatus& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CCLCMsg_ServerStatus)
}
inline void CCLCMsg_ServerStatus::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.simplified_){false},
  };
}
CCLCMsg_ServerStatus::~CCLCMsg_ServerStatus() {
  // @@protoc_insertion_point(destructor:CCLCMsg_ServerStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CCLCMsg_ServerStatus::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CCLCMsg_ServerStatus::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CCLCMsg_ServerStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_ServerStatus)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.simplified_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CCLCMsg_ServerStatus::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CCLCMsg_ServerStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CCLCMsg_ServerStatus, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CCLCMsg_ServerStatus_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bool simplified = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CCLCMsg_ServerStatus, _impl_.simplified_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_ServerStatus, _impl_.simplified_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool simplified = 1;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_ServerStatus, _impl_.simplified_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CCLCMsg_ServerStatus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_ServerStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool simplified = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_simplified(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_ServerStatus)
  return target;
}

::size_t CCLCMsg_ServerStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_ServerStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool simplified = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CCLCMsg_ServerStatus::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CCLCMsg_ServerStatus::MergeImpl
};
const ::google::protobuf::Message::ClassData*CCLCMsg_ServerStatus::GetClassData() const { return &_class_data_; }


void CCLCMsg_ServerStatus::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CCLCMsg_ServerStatus*>(&to_msg);
  auto& from = static_cast<const CCLCMsg_ServerStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_ServerStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_simplified(from._internal_simplified());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CCLCMsg_ServerStatus::CopyFrom(const CCLCMsg_ServerStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_ServerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CCLCMsg_ServerStatus::IsInitialized() const {
  return true;
}

void CCLCMsg_ServerStatus::InternalSwap(CCLCMsg_ServerStatus* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.simplified_, other->_impl_.simplified_);
}

::google::protobuf::Metadata CCLCMsg_ServerStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[12]);
}
// ===================================================================

class CCLCMsg_ServerPing::_Internal {
 public:
};

CCLCMsg_ServerPing::CCLCMsg_ServerPing(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:CCLCMsg_ServerPing)
}
CCLCMsg_ServerPing::CCLCMsg_ServerPing(const CCLCMsg_ServerPing& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  CCLCMsg_ServerPing* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CCLCMsg_ServerPing)
}




const ::google::protobuf::Message::ClassData CCLCMsg_ServerPing::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*CCLCMsg_ServerPing::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata CCLCMsg_ServerPing::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[13]);
}
// ===================================================================

class CCLCMsg_RequestPause::_Internal {
 public:
  using HasBits = decltype(std::declval<CCLCMsg_RequestPause>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CCLCMsg_RequestPause, _impl_._has_bits_);
  static void set_has_pause_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_pause_group(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CCLCMsg_RequestPause::CCLCMsg_RequestPause(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CCLCMsg_RequestPause)
}
CCLCMsg_RequestPause::CCLCMsg_RequestPause(const CCLCMsg_RequestPause& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CCLCMsg_RequestPause)
}
inline void CCLCMsg_RequestPause::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.pause_type_){0},
      decltype(_impl_.pause_group_){0},
  };
}
CCLCMsg_RequestPause::~CCLCMsg_RequestPause() {
  // @@protoc_insertion_point(destructor:CCLCMsg_RequestPause)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CCLCMsg_RequestPause::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CCLCMsg_RequestPause::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CCLCMsg_RequestPause::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_RequestPause)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.pause_type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.pause_group_) -
        reinterpret_cast<char*>(&_impl_.pause_type_)) + sizeof(_impl_.pause_group_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CCLCMsg_RequestPause::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> CCLCMsg_RequestPause::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CCLCMsg_RequestPause, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CCLCMsg_RequestPause_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 pause_group = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CCLCMsg_RequestPause, _impl_.pause_group_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_RequestPause, _impl_.pause_group_)}},
    // optional .RequestPause_t pause_type = 1 [default = RP_PAUSE];
    {::_pbi::TcParser::FastEr0S1,
     {8, 0, 2, PROTOBUF_FIELD_OFFSET(CCLCMsg_RequestPause, _impl_.pause_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .RequestPause_t pause_type = 1 [default = RP_PAUSE];
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_RequestPause, _impl_.pause_type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional int32 pause_group = 2;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_RequestPause, _impl_.pause_group_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {0, 3},
  }}, {{
  }},
};

::uint8_t* CCLCMsg_RequestPause::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_RequestPause)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .RequestPause_t pause_type = 1 [default = RP_PAUSE];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_pause_type(), target);
  }

  // optional int32 pause_group = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_pause_group(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_RequestPause)
  return target;
}

::size_t CCLCMsg_RequestPause::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_RequestPause)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .RequestPause_t pause_type = 1 [default = RP_PAUSE];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_pause_type());
    }

    // optional int32 pause_group = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_pause_group());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CCLCMsg_RequestPause::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CCLCMsg_RequestPause::MergeImpl
};
const ::google::protobuf::Message::ClassData*CCLCMsg_RequestPause::GetClassData() const { return &_class_data_; }


void CCLCMsg_RequestPause::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CCLCMsg_RequestPause*>(&to_msg);
  auto& from = static_cast<const CCLCMsg_RequestPause&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_RequestPause)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.pause_type_ = from._impl_.pause_type_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.pause_group_ = from._impl_.pause_group_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CCLCMsg_RequestPause::CopyFrom(const CCLCMsg_RequestPause& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_RequestPause)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CCLCMsg_RequestPause::IsInitialized() const {
  return true;
}

void CCLCMsg_RequestPause::InternalSwap(CCLCMsg_RequestPause* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CCLCMsg_RequestPause, _impl_.pause_group_)
      + sizeof(CCLCMsg_RequestPause::_impl_.pause_group_)
      - PROTOBUF_FIELD_OFFSET(CCLCMsg_RequestPause, _impl_.pause_type_)>(
          reinterpret_cast<char*>(&_impl_.pause_type_),
          reinterpret_cast<char*>(&other->_impl_.pause_type_));
}

::google::protobuf::Metadata CCLCMsg_RequestPause::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[14]);
}
// ===================================================================

class CCLCMsg_CmdKeyValues::_Internal {
 public:
  using HasBits = decltype(std::declval<CCLCMsg_CmdKeyValues>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CCLCMsg_CmdKeyValues, _impl_._has_bits_);
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CCLCMsg_CmdKeyValues::CCLCMsg_CmdKeyValues(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CCLCMsg_CmdKeyValues)
}
CCLCMsg_CmdKeyValues::CCLCMsg_CmdKeyValues(const CCLCMsg_CmdKeyValues& from) : ::google::protobuf::Message() {
  CCLCMsg_CmdKeyValues* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.data_.Set(from._internal_data(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:CCLCMsg_CmdKeyValues)
}
inline void CCLCMsg_CmdKeyValues::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){},
  };
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CCLCMsg_CmdKeyValues::~CCLCMsg_CmdKeyValues() {
  // @@protoc_insertion_point(destructor:CCLCMsg_CmdKeyValues)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CCLCMsg_CmdKeyValues::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.Destroy();
}
void CCLCMsg_CmdKeyValues::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CCLCMsg_CmdKeyValues::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_CmdKeyValues)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.data_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CCLCMsg_CmdKeyValues::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CCLCMsg_CmdKeyValues::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CCLCMsg_CmdKeyValues, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CCLCMsg_CmdKeyValues_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bytes data = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_CmdKeyValues, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes data = 1;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_CmdKeyValues, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CCLCMsg_CmdKeyValues::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_CmdKeyValues)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes data = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_CmdKeyValues)
  return target;
}

::size_t CCLCMsg_CmdKeyValues::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_CmdKeyValues)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes data = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CCLCMsg_CmdKeyValues::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CCLCMsg_CmdKeyValues::MergeImpl
};
const ::google::protobuf::Message::ClassData*CCLCMsg_CmdKeyValues::GetClassData() const { return &_class_data_; }


void CCLCMsg_CmdKeyValues::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CCLCMsg_CmdKeyValues*>(&to_msg);
  auto& from = static_cast<const CCLCMsg_CmdKeyValues&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_CmdKeyValues)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CCLCMsg_CmdKeyValues::CopyFrom(const CCLCMsg_CmdKeyValues& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_CmdKeyValues)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CCLCMsg_CmdKeyValues::IsInitialized() const {
  return true;
}

void CCLCMsg_CmdKeyValues::InternalSwap(CCLCMsg_CmdKeyValues* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, lhs_arena,
                                       &other->_impl_.data_, rhs_arena);
}

::google::protobuf::Metadata CCLCMsg_CmdKeyValues::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[15]);
}
// ===================================================================

class CCLCMsg_RconServerDetails::_Internal {
 public:
  using HasBits = decltype(std::declval<CCLCMsg_RconServerDetails>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CCLCMsg_RconServerDetails, _impl_._has_bits_);
  static void set_has_token(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CCLCMsg_RconServerDetails::CCLCMsg_RconServerDetails(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CCLCMsg_RconServerDetails)
}
CCLCMsg_RconServerDetails::CCLCMsg_RconServerDetails(const CCLCMsg_RconServerDetails& from) : ::google::protobuf::Message() {
  CCLCMsg_RconServerDetails* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.token_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.token_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.token_.Set(from._internal_token(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:CCLCMsg_RconServerDetails)
}
inline void CCLCMsg_RconServerDetails::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.token_){},
  };
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.token_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CCLCMsg_RconServerDetails::~CCLCMsg_RconServerDetails() {
  // @@protoc_insertion_point(destructor:CCLCMsg_RconServerDetails)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CCLCMsg_RconServerDetails::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.token_.Destroy();
}
void CCLCMsg_RconServerDetails::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CCLCMsg_RconServerDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_RconServerDetails)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.token_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CCLCMsg_RconServerDetails::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CCLCMsg_RconServerDetails::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CCLCMsg_RconServerDetails, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CCLCMsg_RconServerDetails_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bytes token = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_RconServerDetails, _impl_.token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes token = 1;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_RconServerDetails, _impl_.token_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CCLCMsg_RconServerDetails::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_RconServerDetails)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes token = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_token();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_RconServerDetails)
  return target;
}

::size_t CCLCMsg_RconServerDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_RconServerDetails)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes token = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CCLCMsg_RconServerDetails::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CCLCMsg_RconServerDetails::MergeImpl
};
const ::google::protobuf::Message::ClassData*CCLCMsg_RconServerDetails::GetClassData() const { return &_class_data_; }


void CCLCMsg_RconServerDetails::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CCLCMsg_RconServerDetails*>(&to_msg);
  auto& from = static_cast<const CCLCMsg_RconServerDetails&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_RconServerDetails)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_token(from._internal_token());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CCLCMsg_RconServerDetails::CopyFrom(const CCLCMsg_RconServerDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_RconServerDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CCLCMsg_RconServerDetails::IsInitialized() const {
  return true;
}

void CCLCMsg_RconServerDetails::InternalSwap(CCLCMsg_RconServerDetails* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_, lhs_arena,
                                       &other->_impl_.token_, rhs_arena);
}

::google::protobuf::Metadata CCLCMsg_RconServerDetails::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[16]);
}
// ===================================================================

class CSVCMsg_ServerInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_ServerInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_._has_bits_);
  static void set_has_protocol(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_server_count(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_is_dedicated(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_is_hltv(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_c_os(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_max_clients(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_max_classes(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_player_slot(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_tick_interval(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_game_dir(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_map_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_sky_name(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_host_name(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_addon_name(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::CSVCMsg_GameSessionConfiguration& game_session_config(const CSVCMsg_ServerInfo* msg);
  static void set_has_game_session_config(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_game_session_manifest(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

const ::CSVCMsg_GameSessionConfiguration& CSVCMsg_ServerInfo::_Internal::game_session_config(const CSVCMsg_ServerInfo* msg) {
  return *msg->_impl_.game_session_config_;
}
void CSVCMsg_ServerInfo::clear_game_session_config() {
  if (_impl_.game_session_config_ != nullptr) _impl_.game_session_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
CSVCMsg_ServerInfo::CSVCMsg_ServerInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_ServerInfo)
}
CSVCMsg_ServerInfo::CSVCMsg_ServerInfo(const CSVCMsg_ServerInfo& from) : ::google::protobuf::Message() {
  CSVCMsg_ServerInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.game_dir_){},
      decltype(_impl_.map_name_){},
      decltype(_impl_.sky_name_){},
      decltype(_impl_.host_name_){},
      decltype(_impl_.addon_name_){},
      decltype(_impl_.game_session_manifest_){},
      decltype(_impl_.game_session_config_){nullptr},
      decltype(_impl_.protocol_){},
      decltype(_impl_.server_count_){},
      decltype(_impl_.is_dedicated_){},
      decltype(_impl_.is_hltv_){},
      decltype(_impl_.c_os_){},
      decltype(_impl_.max_clients_){},
      decltype(_impl_.max_classes_){},
      decltype(_impl_.tick_interval_){},
      decltype(_impl_.player_slot_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.game_dir_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.game_dir_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.game_dir_.Set(from._internal_game_dir(), _this->GetArenaForAllocation());
  }
  _impl_.map_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.map_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.map_name_.Set(from._internal_map_name(), _this->GetArenaForAllocation());
  }
  _impl_.sky_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sky_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.sky_name_.Set(from._internal_sky_name(), _this->GetArenaForAllocation());
  }
  _impl_.host_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.host_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000008u) != 0) {
    _this->_impl_.host_name_.Set(from._internal_host_name(), _this->GetArenaForAllocation());
  }
  _impl_.addon_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.addon_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000010u) != 0) {
    _this->_impl_.addon_name_.Set(from._internal_addon_name(), _this->GetArenaForAllocation());
  }
  _impl_.game_session_manifest_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.game_session_manifest_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000020u) != 0) {
    _this->_impl_.game_session_manifest_.Set(from._internal_game_session_manifest(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000040u) != 0) {
    _this->_impl_.game_session_config_ = new ::CSVCMsg_GameSessionConfiguration(*from._impl_.game_session_config_);
  }
  ::memcpy(&_impl_.protocol_, &from._impl_.protocol_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.player_slot_) -
    reinterpret_cast<char*>(&_impl_.protocol_)) + sizeof(_impl_.player_slot_));

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_ServerInfo)
}
inline void CSVCMsg_ServerInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.game_dir_){},
      decltype(_impl_.map_name_){},
      decltype(_impl_.sky_name_){},
      decltype(_impl_.host_name_){},
      decltype(_impl_.addon_name_){},
      decltype(_impl_.game_session_manifest_){},
      decltype(_impl_.game_session_config_){nullptr},
      decltype(_impl_.protocol_){0},
      decltype(_impl_.server_count_){0},
      decltype(_impl_.is_dedicated_){false},
      decltype(_impl_.is_hltv_){false},
      decltype(_impl_.c_os_){0},
      decltype(_impl_.max_clients_){0},
      decltype(_impl_.max_classes_){0},
      decltype(_impl_.tick_interval_){0},
      decltype(_impl_.player_slot_){-1},
  };
  _impl_.game_dir_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.game_dir_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.map_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.map_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.sky_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sky_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.host_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.host_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.addon_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.addon_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.game_session_manifest_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.game_session_manifest_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CSVCMsg_ServerInfo::~CSVCMsg_ServerInfo() {
  // @@protoc_insertion_point(destructor:CSVCMsg_ServerInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_ServerInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.game_dir_.Destroy();
  _impl_.map_name_.Destroy();
  _impl_.sky_name_.Destroy();
  _impl_.host_name_.Destroy();
  _impl_.addon_name_.Destroy();
  _impl_.game_session_manifest_.Destroy();
  if (this != internal_default_instance()) delete _impl_.game_session_config_;
}
void CSVCMsg_ServerInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_ServerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_ServerInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.game_dir_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.map_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.sky_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.host_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.addon_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.game_session_manifest_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.game_session_config_ != nullptr);
      _impl_.game_session_config_->Clear();
    }
  }
  _impl_.protocol_ = 0;
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.server_count_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.tick_interval_) -
        reinterpret_cast<char*>(&_impl_.server_count_)) + sizeof(_impl_.tick_interval_));
    _impl_.player_slot_ = -1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_ServerInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 16, 1, 86, 2> CSVCMsg_ServerInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_._has_bits_),
    0, // no _extensions_
    20, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4293919184,  // skipmap
    offsetof(decltype(_table_), field_entries),
    16,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CSVCMsg_ServerInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 protocol = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_ServerInfo, _impl_.protocol_), 7>(),
     {8, 7, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.protocol_)}},
    // optional int32 server_count = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_ServerInfo, _impl_.server_count_), 8>(),
     {16, 8, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.server_count_)}},
    // optional bool is_dedicated = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CSVCMsg_ServerInfo, _impl_.is_dedicated_), 9>(),
     {24, 9, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.is_dedicated_)}},
    // optional bool is_hltv = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CSVCMsg_ServerInfo, _impl_.is_hltv_), 10>(),
     {32, 10, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.is_hltv_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 c_os = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_ServerInfo, _impl_.c_os_), 11>(),
     {48, 11, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.c_os_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 max_clients = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_ServerInfo, _impl_.max_clients_), 12>(),
     {80, 12, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.max_clients_)}},
    // optional int32 max_classes = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_ServerInfo, _impl_.max_classes_), 13>(),
     {88, 13, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.max_classes_)}},
    // optional int32 player_slot = 12 [default = -1];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_ServerInfo, _impl_.player_slot_), 15>(),
     {96, 15, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.player_slot_)}},
    // optional float tick_interval = 13;
    {::_pbi::TcParser::FastF32S1,
     {109, 14, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.tick_interval_)}},
    // optional string game_dir = 14;
    {::_pbi::TcParser::FastSS1,
     {114, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.game_dir_)}},
    // optional string map_name = 15;
    {::_pbi::TcParser::FastSS1,
     {122, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.map_name_)}},
    // optional string sky_name = 16;
    {::_pbi::TcParser::FastSS2,
     {386, 2, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.sky_name_)}},
    // optional string host_name = 17;
    {::_pbi::TcParser::FastSS2,
     {394, 3, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.host_name_)}},
    // optional string addon_name = 18;
    {::_pbi::TcParser::FastSS2,
     {402, 4, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.addon_name_)}},
    // optional .CSVCMsg_GameSessionConfiguration game_session_config = 19;
    {::_pbi::TcParser::FastMtS2,
     {410, 6, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.game_session_config_)}},
    // optional bytes game_session_manifest = 20;
    {::_pbi::TcParser::FastBS2,
     {418, 5, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.game_session_manifest_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 protocol = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.protocol_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 server_count = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.server_count_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool is_dedicated = 3;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.is_dedicated_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool is_hltv = 4;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.is_hltv_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional int32 c_os = 6;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.c_os_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 max_clients = 10;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.max_clients_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 max_classes = 11;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.max_classes_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 player_slot = 12 [default = -1];
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.player_slot_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional float tick_interval = 13;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.tick_interval_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional string game_dir = 14;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.game_dir_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string map_name = 15;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.map_name_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string sky_name = 16;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.sky_name_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string host_name = 17;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.host_name_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string addon_name = 18;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.addon_name_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .CSVCMsg_GameSessionConfiguration game_session_config = 19;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.game_session_config_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bytes game_session_manifest = 20;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.game_session_manifest_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CSVCMsg_GameSessionConfiguration>()},
  }}, {{
    "\22\0\0\0\0\0\0\0\0\0\10\10\10\11\12\0\0\0\0\0\0\0\0\0"
    "CSVCMsg_ServerInfo"
    "game_dir"
    "map_name"
    "sky_name"
    "host_name"
    "addon_name"
  }},
};

::uint8_t* CSVCMsg_ServerInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_ServerInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 protocol = 1;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_protocol(), target);
  }

  // optional int32 server_count = 2;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_server_count(), target);
  }

  // optional bool is_dedicated = 3;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_is_dedicated(), target);
  }

  // optional bool is_hltv = 4;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_is_hltv(), target);
  }

  // optional int32 c_os = 6;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_c_os(), target);
  }

  // optional int32 max_clients = 10;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<10>(
            stream, this->_internal_max_clients(), target);
  }

  // optional int32 max_classes = 11;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<11>(
            stream, this->_internal_max_classes(), target);
  }

  // optional int32 player_slot = 12 [default = -1];
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<12>(
            stream, this->_internal_player_slot(), target);
  }

  // optional float tick_interval = 13;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        13, this->_internal_tick_interval(), target);
  }

  // optional string game_dir = 14;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_game_dir();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSVCMsg_ServerInfo.game_dir");
    target = stream->WriteStringMaybeAliased(14, _s, target);
  }

  // optional string map_name = 15;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_map_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSVCMsg_ServerInfo.map_name");
    target = stream->WriteStringMaybeAliased(15, _s, target);
  }

  // optional string sky_name = 16;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_sky_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSVCMsg_ServerInfo.sky_name");
    target = stream->WriteStringMaybeAliased(16, _s, target);
  }

  // optional string host_name = 17;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_host_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSVCMsg_ServerInfo.host_name");
    target = stream->WriteStringMaybeAliased(17, _s, target);
  }

  // optional string addon_name = 18;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_addon_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSVCMsg_ServerInfo.addon_name");
    target = stream->WriteStringMaybeAliased(18, _s, target);
  }

  // optional .CSVCMsg_GameSessionConfiguration game_session_config = 19;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(19, _Internal::game_session_config(this),
        _Internal::game_session_config(this).GetCachedSize(), target, stream);
  }

  // optional bytes game_session_manifest = 20;
  if (cached_has_bits & 0x00000020u) {
    const std::string& _s = this->_internal_game_session_manifest();
    target = stream->WriteBytesMaybeAliased(20, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_ServerInfo)
  return target;
}

::size_t CSVCMsg_ServerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_ServerInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string game_dir = 14;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_game_dir());
    }

    // optional string map_name = 15;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_map_name());
    }

    // optional string sky_name = 16;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_sky_name());
    }

    // optional string host_name = 17;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_host_name());
    }

    // optional string addon_name = 18;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_addon_name());
    }

    // optional bytes game_session_manifest = 20;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_game_session_manifest());
    }

    // optional .CSVCMsg_GameSessionConfiguration game_session_config = 19;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.game_session_config_);
    }

    // optional int32 protocol = 1;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_protocol());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional int32 server_count = 2;
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_server_count());
    }

    // optional bool is_dedicated = 3;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2;
    }

    // optional bool is_hltv = 4;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2;
    }

    // optional int32 c_os = 6;
    if (cached_has_bits & 0x00000800u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_c_os());
    }

    // optional int32 max_clients = 10;
    if (cached_has_bits & 0x00001000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_max_clients());
    }

    // optional int32 max_classes = 11;
    if (cached_has_bits & 0x00002000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_max_classes());
    }

    // optional float tick_interval = 13;
    if (cached_has_bits & 0x00004000u) {
      total_size += 5;
    }

    // optional int32 player_slot = 12 [default = -1];
    if (cached_has_bits & 0x00008000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_player_slot());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_ServerInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_ServerInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_ServerInfo::GetClassData() const { return &_class_data_; }


void CSVCMsg_ServerInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_ServerInfo*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_ServerInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_ServerInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_game_dir(from._internal_game_dir());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_map_name(from._internal_map_name());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_sky_name(from._internal_sky_name());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_host_name(from._internal_host_name());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_addon_name(from._internal_addon_name());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_game_session_manifest(from._internal_game_session_manifest());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_game_session_config()->::CSVCMsg_GameSessionConfiguration::MergeFrom(
          from._internal_game_session_config());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.protocol_ = from._impl_.protocol_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.server_count_ = from._impl_.server_count_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.is_dedicated_ = from._impl_.is_dedicated_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.is_hltv_ = from._impl_.is_hltv_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.c_os_ = from._impl_.c_os_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.max_clients_ = from._impl_.max_clients_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.max_classes_ = from._impl_.max_classes_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.tick_interval_ = from._impl_.tick_interval_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.player_slot_ = from._impl_.player_slot_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_ServerInfo::CopyFrom(const CSVCMsg_ServerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_ServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_ServerInfo::IsInitialized() const {
  return true;
}

void CSVCMsg_ServerInfo::InternalSwap(CSVCMsg_ServerInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.game_dir_, lhs_arena,
                                       &other->_impl_.game_dir_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.map_name_, lhs_arena,
                                       &other->_impl_.map_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sky_name_, lhs_arena,
                                       &other->_impl_.sky_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.host_name_, lhs_arena,
                                       &other->_impl_.host_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.addon_name_, lhs_arena,
                                       &other->_impl_.addon_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.game_session_manifest_, lhs_arena,
                                       &other->_impl_.game_session_manifest_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.player_slot_)
      + sizeof(CSVCMsg_ServerInfo::_impl_.player_slot_)
      - PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerInfo, _impl_.game_session_config_)>(
          reinterpret_cast<char*>(&_impl_.game_session_config_),
          reinterpret_cast<char*>(&other->_impl_.game_session_config_));
}

::google::protobuf::Metadata CSVCMsg_ServerInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[17]);
}
// ===================================================================

class CSVCMsg_ClassInfo_class_t::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_ClassInfo_class_t>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_ClassInfo_class_t, _impl_._has_bits_);
  static void set_has_class_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_class_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CSVCMsg_ClassInfo_class_t::CSVCMsg_ClassInfo_class_t(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_ClassInfo.class_t)
}
CSVCMsg_ClassInfo_class_t::CSVCMsg_ClassInfo_class_t(const CSVCMsg_ClassInfo_class_t& from) : ::google::protobuf::Message() {
  CSVCMsg_ClassInfo_class_t* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.class_name_){},
      decltype(_impl_.class_id_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.class_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.class_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.class_name_.Set(from._internal_class_name(), _this->GetArenaForAllocation());
  }
  _this->_impl_.class_id_ = from._impl_.class_id_;

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_ClassInfo.class_t)
}
inline void CSVCMsg_ClassInfo_class_t::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.class_name_){},
      decltype(_impl_.class_id_){0},
  };
  _impl_.class_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.class_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CSVCMsg_ClassInfo_class_t::~CSVCMsg_ClassInfo_class_t() {
  // @@protoc_insertion_point(destructor:CSVCMsg_ClassInfo.class_t)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_ClassInfo_class_t::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.class_name_.Destroy();
}
void CSVCMsg_ClassInfo_class_t::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_ClassInfo_class_t::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_ClassInfo.class_t)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.class_name_.ClearNonDefaultToEmpty();
  }
  _impl_.class_id_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_ClassInfo_class_t::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 0, 44, 2> CSVCMsg_ClassInfo_class_t::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_ClassInfo_class_t, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967290,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CSVCMsg_ClassInfo_class_t_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 class_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_ClassInfo_class_t, _impl_.class_id_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_ClassInfo_class_t, _impl_.class_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string class_name = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_ClassInfo_class_t, _impl_.class_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 class_id = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_ClassInfo_class_t, _impl_.class_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string class_name = 3;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_ClassInfo_class_t, _impl_.class_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\0\12\0\0\0\0\0"
    "CSVCMsg_ClassInfo.class_t"
    "class_name"
  }},
};

::uint8_t* CSVCMsg_ClassInfo_class_t::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_ClassInfo.class_t)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 class_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_class_id(), target);
  }

  // optional string class_name = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_class_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSVCMsg_ClassInfo.class_t.class_name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_ClassInfo.class_t)
  return target;
}

::size_t CSVCMsg_ClassInfo_class_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_ClassInfo.class_t)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string class_name = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_class_name());
    }

    // optional int32 class_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_class_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_ClassInfo_class_t::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_ClassInfo_class_t::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_ClassInfo_class_t::GetClassData() const { return &_class_data_; }


void CSVCMsg_ClassInfo_class_t::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_ClassInfo_class_t*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_ClassInfo_class_t&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_ClassInfo.class_t)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_class_name(from._internal_class_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.class_id_ = from._impl_.class_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_ClassInfo_class_t::CopyFrom(const CSVCMsg_ClassInfo_class_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_ClassInfo.class_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_ClassInfo_class_t::IsInitialized() const {
  return true;
}

void CSVCMsg_ClassInfo_class_t::InternalSwap(CSVCMsg_ClassInfo_class_t* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.class_name_, lhs_arena,
                                       &other->_impl_.class_name_, rhs_arena);
        swap(_impl_.class_id_, other->_impl_.class_id_);
}

::google::protobuf::Metadata CSVCMsg_ClassInfo_class_t::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[18]);
}
// ===================================================================

class CSVCMsg_ClassInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_ClassInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_ClassInfo, _impl_._has_bits_);
  static void set_has_create_on_client(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CSVCMsg_ClassInfo::CSVCMsg_ClassInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_ClassInfo)
}
CSVCMsg_ClassInfo::CSVCMsg_ClassInfo(const CSVCMsg_ClassInfo& from) : ::google::protobuf::Message() {
  CSVCMsg_ClassInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.classes_){from._impl_.classes_},
      decltype(_impl_.create_on_client_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.create_on_client_ = from._impl_.create_on_client_;

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_ClassInfo)
}
inline void CSVCMsg_ClassInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.classes_){arena},
      decltype(_impl_.create_on_client_){false},
  };
}
CSVCMsg_ClassInfo::~CSVCMsg_ClassInfo() {
  // @@protoc_insertion_point(destructor:CSVCMsg_ClassInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_ClassInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.classes_.~RepeatedPtrField();
}
void CSVCMsg_ClassInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_ClassInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_ClassInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_classes()->Clear();
  _impl_.create_on_client_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_ClassInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> CSVCMsg_ClassInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_ClassInfo, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CSVCMsg_ClassInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .CSVCMsg_ClassInfo.class_t classes = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_ClassInfo, _impl_.classes_)}},
    // optional bool create_on_client = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CSVCMsg_ClassInfo, _impl_.create_on_client_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_ClassInfo, _impl_.create_on_client_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool create_on_client = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_ClassInfo, _impl_.create_on_client_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .CSVCMsg_ClassInfo.class_t classes = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_ClassInfo, _impl_.classes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CSVCMsg_ClassInfo_class_t>()},
  }}, {{
  }},
};

::uint8_t* CSVCMsg_ClassInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_ClassInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool create_on_client = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_create_on_client(), target);
  }

  // repeated .CSVCMsg_ClassInfo.class_t classes = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_classes_size()); i < n; i++) {
    const auto& repfield = this->_internal_classes().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_ClassInfo)
  return target;
}

::size_t CSVCMsg_ClassInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_ClassInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CSVCMsg_ClassInfo.class_t classes = 2;
  total_size += 1UL * this->_internal_classes_size();
  for (const auto& msg : this->_internal_classes()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // optional bool create_on_client = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_ClassInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_ClassInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_ClassInfo::GetClassData() const { return &_class_data_; }


void CSVCMsg_ClassInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_ClassInfo*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_ClassInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_ClassInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_classes()->MergeFrom(from._internal_classes());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_create_on_client(from._internal_create_on_client());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_ClassInfo::CopyFrom(const CSVCMsg_ClassInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_ClassInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_ClassInfo::IsInitialized() const {
  return true;
}

void CSVCMsg_ClassInfo::InternalSwap(CSVCMsg_ClassInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.classes_.InternalSwap(&other->_impl_.classes_);
        swap(_impl_.create_on_client_, other->_impl_.create_on_client_);
}

::google::protobuf::Metadata CSVCMsg_ClassInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[19]);
}
// ===================================================================

class CSVCMsg_SetPause::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_SetPause>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_SetPause, _impl_._has_bits_);
  static void set_has_paused(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CSVCMsg_SetPause::CSVCMsg_SetPause(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_SetPause)
}
CSVCMsg_SetPause::CSVCMsg_SetPause(const CSVCMsg_SetPause& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_SetPause)
}
inline void CSVCMsg_SetPause::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.paused_){false},
  };
}
CSVCMsg_SetPause::~CSVCMsg_SetPause() {
  // @@protoc_insertion_point(destructor:CSVCMsg_SetPause)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_SetPause::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CSVCMsg_SetPause::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_SetPause::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_SetPause)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.paused_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_SetPause::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CSVCMsg_SetPause::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_SetPause, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CSVCMsg_SetPause_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bool paused = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CSVCMsg_SetPause, _impl_.paused_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_SetPause, _impl_.paused_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool paused = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_SetPause, _impl_.paused_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CSVCMsg_SetPause::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_SetPause)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool paused = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_paused(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_SetPause)
  return target;
}

::size_t CSVCMsg_SetPause::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_SetPause)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool paused = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_SetPause::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_SetPause::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_SetPause::GetClassData() const { return &_class_data_; }


void CSVCMsg_SetPause::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_SetPause*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_SetPause&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_SetPause)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_paused(from._internal_paused());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_SetPause::CopyFrom(const CSVCMsg_SetPause& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_SetPause)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_SetPause::IsInitialized() const {
  return true;
}

void CSVCMsg_SetPause::InternalSwap(CSVCMsg_SetPause* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.paused_, other->_impl_.paused_);
}

::google::protobuf::Metadata CSVCMsg_SetPause::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[20]);
}
// ===================================================================

class CSVCMsg_VoiceInit::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_VoiceInit>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_VoiceInit, _impl_._has_bits_);
  static void set_has_quality(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_codec(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CSVCMsg_VoiceInit::CSVCMsg_VoiceInit(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_VoiceInit)
}
CSVCMsg_VoiceInit::CSVCMsg_VoiceInit(const CSVCMsg_VoiceInit& from) : ::google::protobuf::Message() {
  CSVCMsg_VoiceInit* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.codec_){},
      decltype(_impl_.quality_){},
      decltype(_impl_.version_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.codec_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.codec_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.codec_.Set(from._internal_codec(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.quality_, &from._impl_.quality_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.version_) -
    reinterpret_cast<char*>(&_impl_.quality_)) + sizeof(_impl_.version_));

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_VoiceInit)
}
inline void CSVCMsg_VoiceInit::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.codec_){},
      decltype(_impl_.quality_){0},
      decltype(_impl_.version_){0},
  };
  _impl_.codec_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.codec_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CSVCMsg_VoiceInit::~CSVCMsg_VoiceInit() {
  // @@protoc_insertion_point(destructor:CSVCMsg_VoiceInit)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_VoiceInit::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.codec_.Destroy();
}
void CSVCMsg_VoiceInit::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_VoiceInit::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_VoiceInit)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.codec_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.quality_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.version_) -
        reinterpret_cast<char*>(&_impl_.quality_)) + sizeof(_impl_.version_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_VoiceInit::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 31, 2> CSVCMsg_VoiceInit::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_VoiceInit, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CSVCMsg_VoiceInit_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 quality = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_VoiceInit, _impl_.quality_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_VoiceInit, _impl_.quality_)}},
    // optional string codec = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_VoiceInit, _impl_.codec_)}},
    // optional int32 version = 3 [default = 0];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_VoiceInit, _impl_.version_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_VoiceInit, _impl_.version_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 quality = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_VoiceInit, _impl_.quality_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string codec = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_VoiceInit, _impl_.codec_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 version = 3 [default = 0];
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_VoiceInit, _impl_.version_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\21\0\5\0\0\0\0\0"
    "CSVCMsg_VoiceInit"
    "codec"
  }},
};

::uint8_t* CSVCMsg_VoiceInit::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_VoiceInit)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 quality = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_quality(), target);
  }

  // optional string codec = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_codec();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSVCMsg_VoiceInit.codec");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional int32 version = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_VoiceInit)
  return target;
}

::size_t CSVCMsg_VoiceInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_VoiceInit)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string codec = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_codec());
    }

    // optional int32 quality = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_quality());
    }

    // optional int32 version = 3 [default = 0];
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_version());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_VoiceInit::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_VoiceInit::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_VoiceInit::GetClassData() const { return &_class_data_; }


void CSVCMsg_VoiceInit::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_VoiceInit*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_VoiceInit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_VoiceInit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_codec(from._internal_codec());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.quality_ = from._impl_.quality_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.version_ = from._impl_.version_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_VoiceInit::CopyFrom(const CSVCMsg_VoiceInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_VoiceInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_VoiceInit::IsInitialized() const {
  return true;
}

void CSVCMsg_VoiceInit::InternalSwap(CSVCMsg_VoiceInit* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.codec_, lhs_arena,
                                       &other->_impl_.codec_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSVCMsg_VoiceInit, _impl_.version_)
      + sizeof(CSVCMsg_VoiceInit::_impl_.version_)
      - PROTOBUF_FIELD_OFFSET(CSVCMsg_VoiceInit, _impl_.quality_)>(
          reinterpret_cast<char*>(&_impl_.quality_),
          reinterpret_cast<char*>(&other->_impl_.quality_));
}

::google::protobuf::Metadata CSVCMsg_VoiceInit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[21]);
}
// ===================================================================

class CSVCMsg_Print::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_Print>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_Print, _impl_._has_bits_);
  static void set_has_text(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CSVCMsg_Print::CSVCMsg_Print(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_Print)
}
CSVCMsg_Print::CSVCMsg_Print(const CSVCMsg_Print& from) : ::google::protobuf::Message() {
  CSVCMsg_Print* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.text_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.text_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.text_.Set(from._internal_text(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_Print)
}
inline void CSVCMsg_Print::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.text_){},
  };
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.text_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CSVCMsg_Print::~CSVCMsg_Print() {
  // @@protoc_insertion_point(destructor:CSVCMsg_Print)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_Print::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.text_.Destroy();
}
void CSVCMsg_Print::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_Print::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_Print)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.text_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_Print::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 26, 2> CSVCMsg_Print::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_Print, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CSVCMsg_Print_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string text = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_Print, _impl_.text_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string text = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_Print, _impl_.text_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\15\4\0\0\0\0\0\0"
    "CSVCMsg_Print"
    "text"
  }},
};

::uint8_t* CSVCMsg_Print::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_Print)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string text = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_text();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSVCMsg_Print.text");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_Print)
  return target;
}

::size_t CSVCMsg_Print::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_Print)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string text = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_text());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_Print::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_Print::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_Print::GetClassData() const { return &_class_data_; }


void CSVCMsg_Print::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_Print*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_Print&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_Print)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_text(from._internal_text());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_Print::CopyFrom(const CSVCMsg_Print& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_Print)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_Print::IsInitialized() const {
  return true;
}

void CSVCMsg_Print::InternalSwap(CSVCMsg_Print* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, lhs_arena,
                                       &other->_impl_.text_, rhs_arena);
}

::google::protobuf::Metadata CSVCMsg_Print::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[22]);
}
// ===================================================================

class CSVCMsg_Sounds_sounddata_t::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_Sounds_sounddata_t>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_._has_bits_);
  static void set_has_origin_x(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_origin_y(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_origin_z(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_volume(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_delay_value(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_sequence_number(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_entity_index(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_channel(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_pitch(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_sound_num(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_sound_num_handle(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_speaker_entity(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_random_seed(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_sound_level(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_is_sentence(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_is_ambient(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_guid(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_sound_resource_id(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
};

CSVCMsg_Sounds_sounddata_t::CSVCMsg_Sounds_sounddata_t(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_Sounds.sounddata_t)
}
CSVCMsg_Sounds_sounddata_t::CSVCMsg_Sounds_sounddata_t(const CSVCMsg_Sounds_sounddata_t& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_Sounds.sounddata_t)
}
inline void CSVCMsg_Sounds_sounddata_t::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.origin_x_){0},
      decltype(_impl_.origin_y_){0},
      decltype(_impl_.origin_z_){0},
      decltype(_impl_.volume_){0u},
      decltype(_impl_.delay_value_){0},
      decltype(_impl_.sequence_number_){0},
      decltype(_impl_.channel_){0},
      decltype(_impl_.pitch_){0},
      decltype(_impl_.flags_){0},
      decltype(_impl_.sound_num_){0u},
      decltype(_impl_.sound_num_handle_){0u},
      decltype(_impl_.speaker_entity_){0},
      decltype(_impl_.random_seed_){0},
      decltype(_impl_.sound_level_){0},
      decltype(_impl_.is_sentence_){false},
      decltype(_impl_.is_ambient_){false},
      decltype(_impl_.guid_){0u},
      decltype(_impl_.sound_resource_id_){::uint64_t{0u}},
      decltype(_impl_.entity_index_){-1},
  };
}
CSVCMsg_Sounds_sounddata_t::~CSVCMsg_Sounds_sounddata_t() {
  // @@protoc_insertion_point(destructor:CSVCMsg_Sounds.sounddata_t)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_Sounds_sounddata_t::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CSVCMsg_Sounds_sounddata_t::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_Sounds_sounddata_t::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_Sounds.sounddata_t)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.origin_x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.pitch_) -
        reinterpret_cast<char*>(&_impl_.origin_x_)) + sizeof(_impl_.pitch_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.flags_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_ambient_) -
        reinterpret_cast<char*>(&_impl_.flags_)) + sizeof(_impl_.is_ambient_));
  }
  if (cached_has_bits & 0x00070000u) {
    ::memset(&_impl_.guid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.sound_resource_id_) -
        reinterpret_cast<char*>(&_impl_.guid_)) + sizeof(_impl_.sound_resource_id_));
    _impl_.entity_index_ = -1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_Sounds_sounddata_t::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 19, 0, 0, 2> CSVCMsg_Sounds_sounddata_t::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_._has_bits_),
    0, // no _extensions_
    19, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294443008,  // skipmap
    offsetof(decltype(_table_), field_entries),
    19,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CSVCMsg_Sounds_sounddata_t_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional sint32 origin_x = 1;
    {::_pbi::TcParser::FastZ32S1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.origin_x_)}},
    // optional sint32 origin_y = 2;
    {::_pbi::TcParser::FastZ32S1,
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.origin_y_)}},
    // optional sint32 origin_z = 3;
    {::_pbi::TcParser::FastZ32S1,
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.origin_z_)}},
    // optional uint32 volume = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_Sounds_sounddata_t, _impl_.volume_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.volume_)}},
    // optional float delay_value = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.delay_value_)}},
    // optional int32 sequence_number = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_Sounds_sounddata_t, _impl_.sequence_number_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.sequence_number_)}},
    // optional int32 entity_index = 7 [default = -1];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_Sounds_sounddata_t, _impl_.entity_index_), 18>(),
     {56, 18, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.entity_index_)}},
    // optional int32 channel = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_Sounds_sounddata_t, _impl_.channel_), 6>(),
     {64, 6, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.channel_)}},
    // optional int32 pitch = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_Sounds_sounddata_t, _impl_.pitch_), 7>(),
     {72, 7, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.pitch_)}},
    // optional int32 flags = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_Sounds_sounddata_t, _impl_.flags_), 8>(),
     {80, 8, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.flags_)}},
    // optional uint32 sound_num = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_Sounds_sounddata_t, _impl_.sound_num_), 9>(),
     {88, 9, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.sound_num_)}},
    // optional fixed32 sound_num_handle = 12;
    {::_pbi::TcParser::FastF32S1,
     {101, 10, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.sound_num_handle_)}},
    // optional int32 speaker_entity = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_Sounds_sounddata_t, _impl_.speaker_entity_), 11>(),
     {104, 11, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.speaker_entity_)}},
    // optional int32 random_seed = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_Sounds_sounddata_t, _impl_.random_seed_), 12>(),
     {112, 12, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.random_seed_)}},
    // optional int32 sound_level = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_Sounds_sounddata_t, _impl_.sound_level_), 13>(),
     {120, 13, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.sound_level_)}},
    // optional bool is_sentence = 16;
    {::_pbi::TcParser::FastV8S2,
     {384, 14, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.is_sentence_)}},
    // optional bool is_ambient = 17;
    {::_pbi::TcParser::FastV8S2,
     {392, 15, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.is_ambient_)}},
    // optional uint32 guid = 18;
    {::_pbi::TcParser::FastV32S2,
     {400, 16, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.guid_)}},
    // optional fixed64 sound_resource_id = 19;
    {::_pbi::TcParser::FastF64S2,
     {409, 17, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.sound_resource_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional sint32 origin_x = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.origin_x_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSInt32)},
    // optional sint32 origin_y = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.origin_y_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSInt32)},
    // optional sint32 origin_z = 3;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.origin_z_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSInt32)},
    // optional uint32 volume = 4;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.volume_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional float delay_value = 5;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.delay_value_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional int32 sequence_number = 6;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.sequence_number_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 entity_index = 7 [default = -1];
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.entity_index_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 channel = 8;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.channel_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 pitch = 9;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.pitch_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 flags = 10;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.flags_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 sound_num = 11;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.sound_num_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional fixed32 sound_num_handle = 12;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.sound_num_handle_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional int32 speaker_entity = 13;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.speaker_entity_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 random_seed = 14;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.random_seed_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 sound_level = 15;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.sound_level_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool is_sentence = 16;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.is_sentence_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool is_ambient = 17;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.is_ambient_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint32 guid = 18;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.guid_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional fixed64 sound_resource_id = 19;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.sound_resource_id_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CSVCMsg_Sounds_sounddata_t::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_Sounds.sounddata_t)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional sint32 origin_x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        1, this->_internal_origin_x(), target);
  }

  // optional sint32 origin_y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        2, this->_internal_origin_y(), target);
  }

  // optional sint32 origin_z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        3, this->_internal_origin_z(), target);
  }

  // optional uint32 volume = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_volume(), target);
  }

  // optional float delay_value = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_delay_value(), target);
  }

  // optional int32 sequence_number = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_sequence_number(), target);
  }

  // optional int32 entity_index = 7 [default = -1];
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_entity_index(), target);
  }

  // optional int32 channel = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<8>(
            stream, this->_internal_channel(), target);
  }

  // optional int32 pitch = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<9>(
            stream, this->_internal_pitch(), target);
  }

  // optional int32 flags = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<10>(
            stream, this->_internal_flags(), target);
  }

  // optional uint32 sound_num = 11;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        11, this->_internal_sound_num(), target);
  }

  // optional fixed32 sound_num_handle = 12;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        12, this->_internal_sound_num_handle(), target);
  }

  // optional int32 speaker_entity = 13;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<13>(
            stream, this->_internal_speaker_entity(), target);
  }

  // optional int32 random_seed = 14;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<14>(
            stream, this->_internal_random_seed(), target);
  }

  // optional int32 sound_level = 15;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<15>(
            stream, this->_internal_sound_level(), target);
  }

  // optional bool is_sentence = 16;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        16, this->_internal_is_sentence(), target);
  }

  // optional bool is_ambient = 17;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        17, this->_internal_is_ambient(), target);
  }

  // optional uint32 guid = 18;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        18, this->_internal_guid(), target);
  }

  // optional fixed64 sound_resource_id = 19;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        19, this->_internal_sound_resource_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_Sounds.sounddata_t)
  return target;
}

::size_t CSVCMsg_Sounds_sounddata_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_Sounds.sounddata_t)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional sint32 origin_x = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
          this->_internal_origin_x());
    }

    // optional sint32 origin_y = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
          this->_internal_origin_y());
    }

    // optional sint32 origin_z = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
          this->_internal_origin_z());
    }

    // optional uint32 volume = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_volume());
    }

    // optional float delay_value = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 5;
    }

    // optional int32 sequence_number = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_sequence_number());
    }

    // optional int32 channel = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_channel());
    }

    // optional int32 pitch = 9;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_pitch());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional int32 flags = 10;
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_flags());
    }

    // optional uint32 sound_num = 11;
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_sound_num());
    }

    // optional fixed32 sound_num_handle = 12;
    if (cached_has_bits & 0x00000400u) {
      total_size += 5;
    }

    // optional int32 speaker_entity = 13;
    if (cached_has_bits & 0x00000800u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_speaker_entity());
    }

    // optional int32 random_seed = 14;
    if (cached_has_bits & 0x00001000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_random_seed());
    }

    // optional int32 sound_level = 15;
    if (cached_has_bits & 0x00002000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_sound_level());
    }

    // optional bool is_sentence = 16;
    if (cached_has_bits & 0x00004000u) {
      total_size += 3;
    }

    // optional bool is_ambient = 17;
    if (cached_has_bits & 0x00008000u) {
      total_size += 3;
    }

  }
  if (cached_has_bits & 0x00070000u) {
    // optional uint32 guid = 18;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_guid());
    }

    // optional fixed64 sound_resource_id = 19;
    if (cached_has_bits & 0x00020000u) {
      total_size += 10;
    }

    // optional int32 entity_index = 7 [default = -1];
    if (cached_has_bits & 0x00040000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_entity_index());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_Sounds_sounddata_t::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_Sounds_sounddata_t::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_Sounds_sounddata_t::GetClassData() const { return &_class_data_; }


void CSVCMsg_Sounds_sounddata_t::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_Sounds_sounddata_t*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_Sounds_sounddata_t&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_Sounds.sounddata_t)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.origin_x_ = from._impl_.origin_x_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.origin_y_ = from._impl_.origin_y_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.origin_z_ = from._impl_.origin_z_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.volume_ = from._impl_.volume_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.delay_value_ = from._impl_.delay_value_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.sequence_number_ = from._impl_.sequence_number_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.channel_ = from._impl_.channel_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.pitch_ = from._impl_.pitch_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.flags_ = from._impl_.flags_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.sound_num_ = from._impl_.sound_num_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.sound_num_handle_ = from._impl_.sound_num_handle_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.speaker_entity_ = from._impl_.speaker_entity_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.random_seed_ = from._impl_.random_seed_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.sound_level_ = from._impl_.sound_level_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.is_sentence_ = from._impl_.is_sentence_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.is_ambient_ = from._impl_.is_ambient_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00070000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.guid_ = from._impl_.guid_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.sound_resource_id_ = from._impl_.sound_resource_id_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.entity_index_ = from._impl_.entity_index_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_Sounds_sounddata_t::CopyFrom(const CSVCMsg_Sounds_sounddata_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_Sounds.sounddata_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_Sounds_sounddata_t::IsInitialized() const {
  return true;
}

void CSVCMsg_Sounds_sounddata_t::InternalSwap(CSVCMsg_Sounds_sounddata_t* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.entity_index_)
      + sizeof(CSVCMsg_Sounds_sounddata_t::_impl_.entity_index_)
      - PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds_sounddata_t, _impl_.origin_x_)>(
          reinterpret_cast<char*>(&_impl_.origin_x_),
          reinterpret_cast<char*>(&other->_impl_.origin_x_));
}

::google::protobuf::Metadata CSVCMsg_Sounds_sounddata_t::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[23]);
}
// ===================================================================

class CSVCMsg_Sounds::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_Sounds>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds, _impl_._has_bits_);
  static void set_has_reliable_sound(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CSVCMsg_Sounds::CSVCMsg_Sounds(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_Sounds)
}
CSVCMsg_Sounds::CSVCMsg_Sounds(const CSVCMsg_Sounds& from) : ::google::protobuf::Message() {
  CSVCMsg_Sounds* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.sounds_){from._impl_.sounds_},
      decltype(_impl_.reliable_sound_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.reliable_sound_ = from._impl_.reliable_sound_;

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_Sounds)
}
inline void CSVCMsg_Sounds::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.sounds_){arena},
      decltype(_impl_.reliable_sound_){false},
  };
}
CSVCMsg_Sounds::~CSVCMsg_Sounds() {
  // @@protoc_insertion_point(destructor:CSVCMsg_Sounds)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_Sounds::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sounds_.~RepeatedPtrField();
}
void CSVCMsg_Sounds::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_Sounds::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_Sounds)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_sounds()->Clear();
  _impl_.reliable_sound_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_Sounds::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> CSVCMsg_Sounds::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CSVCMsg_Sounds_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .CSVCMsg_Sounds.sounddata_t sounds = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds, _impl_.sounds_)}},
    // optional bool reliable_sound = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CSVCMsg_Sounds, _impl_.reliable_sound_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds, _impl_.reliable_sound_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool reliable_sound = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds, _impl_.reliable_sound_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .CSVCMsg_Sounds.sounddata_t sounds = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_Sounds, _impl_.sounds_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CSVCMsg_Sounds_sounddata_t>()},
  }}, {{
  }},
};

::uint8_t* CSVCMsg_Sounds::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_Sounds)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool reliable_sound = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_reliable_sound(), target);
  }

  // repeated .CSVCMsg_Sounds.sounddata_t sounds = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_sounds_size()); i < n; i++) {
    const auto& repfield = this->_internal_sounds().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_Sounds)
  return target;
}

::size_t CSVCMsg_Sounds::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_Sounds)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CSVCMsg_Sounds.sounddata_t sounds = 2;
  total_size += 1UL * this->_internal_sounds_size();
  for (const auto& msg : this->_internal_sounds()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // optional bool reliable_sound = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_Sounds::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_Sounds::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_Sounds::GetClassData() const { return &_class_data_; }


void CSVCMsg_Sounds::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_Sounds*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_Sounds&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_Sounds)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_sounds()->MergeFrom(from._internal_sounds());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_reliable_sound(from._internal_reliable_sound());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_Sounds::CopyFrom(const CSVCMsg_Sounds& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_Sounds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_Sounds::IsInitialized() const {
  return true;
}

void CSVCMsg_Sounds::InternalSwap(CSVCMsg_Sounds* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.sounds_.InternalSwap(&other->_impl_.sounds_);
        swap(_impl_.reliable_sound_, other->_impl_.reliable_sound_);
}

::google::protobuf::Metadata CSVCMsg_Sounds::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[24]);
}
// ===================================================================

class CSVCMsg_Prefetch::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_Prefetch>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_Prefetch, _impl_._has_bits_);
  static void set_has_sound_index(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_resource_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CSVCMsg_Prefetch::CSVCMsg_Prefetch(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_Prefetch)
}
CSVCMsg_Prefetch::CSVCMsg_Prefetch(const CSVCMsg_Prefetch& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_Prefetch)
}
inline void CSVCMsg_Prefetch::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.sound_index_){0},
      decltype(_impl_.resource_type_){0},
  };
}
CSVCMsg_Prefetch::~CSVCMsg_Prefetch() {
  // @@protoc_insertion_point(destructor:CSVCMsg_Prefetch)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_Prefetch::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CSVCMsg_Prefetch::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_Prefetch::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_Prefetch)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.sound_index_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.resource_type_) -
        reinterpret_cast<char*>(&_impl_.sound_index_)) + sizeof(_impl_.resource_type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_Prefetch::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> CSVCMsg_Prefetch::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_Prefetch, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CSVCMsg_Prefetch_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .PrefetchType resource_type = 2 [default = PFT_SOUND];
    {::_pbi::TcParser::FastEr0S1,
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_Prefetch, _impl_.resource_type_)}},
    // optional int32 sound_index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_Prefetch, _impl_.sound_index_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_Prefetch, _impl_.sound_index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 sound_index = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_Prefetch, _impl_.sound_index_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .PrefetchType resource_type = 2 [default = PFT_SOUND];
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_Prefetch, _impl_.resource_type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {0, 1},
  }}, {{
  }},
};

::uint8_t* CSVCMsg_Prefetch::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_Prefetch)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 sound_index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_sound_index(), target);
  }

  // optional .PrefetchType resource_type = 2 [default = PFT_SOUND];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_resource_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_Prefetch)
  return target;
}

::size_t CSVCMsg_Prefetch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_Prefetch)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 sound_index = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_sound_index());
    }

    // optional .PrefetchType resource_type = 2 [default = PFT_SOUND];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_resource_type());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_Prefetch::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_Prefetch::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_Prefetch::GetClassData() const { return &_class_data_; }


void CSVCMsg_Prefetch::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_Prefetch*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_Prefetch&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_Prefetch)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.sound_index_ = from._impl_.sound_index_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.resource_type_ = from._impl_.resource_type_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_Prefetch::CopyFrom(const CSVCMsg_Prefetch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_Prefetch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_Prefetch::IsInitialized() const {
  return true;
}

void CSVCMsg_Prefetch::InternalSwap(CSVCMsg_Prefetch* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSVCMsg_Prefetch, _impl_.resource_type_)
      + sizeof(CSVCMsg_Prefetch::_impl_.resource_type_)
      - PROTOBUF_FIELD_OFFSET(CSVCMsg_Prefetch, _impl_.sound_index_)>(
          reinterpret_cast<char*>(&_impl_.sound_index_),
          reinterpret_cast<char*>(&other->_impl_.sound_index_));
}

::google::protobuf::Metadata CSVCMsg_Prefetch::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[25]);
}
// ===================================================================

class CSVCMsg_SetView::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_SetView>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_SetView, _impl_._has_bits_);
  static void set_has_entity_index(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_slot(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CSVCMsg_SetView::CSVCMsg_SetView(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_SetView)
}
CSVCMsg_SetView::CSVCMsg_SetView(const CSVCMsg_SetView& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_SetView)
}
inline void CSVCMsg_SetView::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.entity_index_){-1},
      decltype(_impl_.slot_){-1},
  };
}
CSVCMsg_SetView::~CSVCMsg_SetView() {
  // @@protoc_insertion_point(destructor:CSVCMsg_SetView)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_SetView::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CSVCMsg_SetView::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_SetView::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_SetView)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    _impl_.entity_index_ = -1;
    _impl_.slot_ = -1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_SetView::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> CSVCMsg_SetView::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_SetView, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CSVCMsg_SetView_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 slot = 2 [default = -1];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_SetView, _impl_.slot_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_SetView, _impl_.slot_)}},
    // optional int32 entity_index = 1 [default = -1];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_SetView, _impl_.entity_index_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_SetView, _impl_.entity_index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 entity_index = 1 [default = -1];
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_SetView, _impl_.entity_index_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 slot = 2 [default = -1];
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_SetView, _impl_.slot_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CSVCMsg_SetView::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_SetView)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 entity_index = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_entity_index(), target);
  }

  // optional int32 slot = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_slot(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_SetView)
  return target;
}

::size_t CSVCMsg_SetView::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_SetView)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 entity_index = 1 [default = -1];
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_entity_index());
    }

    // optional int32 slot = 2 [default = -1];
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_slot());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_SetView::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_SetView::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_SetView::GetClassData() const { return &_class_data_; }


void CSVCMsg_SetView::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_SetView*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_SetView&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_SetView)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.entity_index_ = from._impl_.entity_index_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.slot_ = from._impl_.slot_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_SetView::CopyFrom(const CSVCMsg_SetView& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_SetView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_SetView::IsInitialized() const {
  return true;
}

void CSVCMsg_SetView::InternalSwap(CSVCMsg_SetView* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSVCMsg_SetView, _impl_.slot_)
      + sizeof(CSVCMsg_SetView::_impl_.slot_)
      - PROTOBUF_FIELD_OFFSET(CSVCMsg_SetView, _impl_.entity_index_)>(
          reinterpret_cast<char*>(&_impl_.entity_index_),
          reinterpret_cast<char*>(&other->_impl_.entity_index_));
}

::google::protobuf::Metadata CSVCMsg_SetView::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[26]);
}
// ===================================================================

class CSVCMsg_FixAngle::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_FixAngle>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_FixAngle, _impl_._has_bits_);
  static void set_has_relative(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgQAngle& angle(const CSVCMsg_FixAngle* msg);
  static void set_has_angle(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgQAngle& CSVCMsg_FixAngle::_Internal::angle(const CSVCMsg_FixAngle* msg) {
  return *msg->_impl_.angle_;
}
void CSVCMsg_FixAngle::clear_angle() {
  if (_impl_.angle_ != nullptr) _impl_.angle_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CSVCMsg_FixAngle::CSVCMsg_FixAngle(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_FixAngle)
}
CSVCMsg_FixAngle::CSVCMsg_FixAngle(const CSVCMsg_FixAngle& from) : ::google::protobuf::Message() {
  CSVCMsg_FixAngle* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.angle_){nullptr},
      decltype(_impl_.relative_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.angle_ = new ::CMsgQAngle(*from._impl_.angle_);
  }
  _this->_impl_.relative_ = from._impl_.relative_;

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_FixAngle)
}
inline void CSVCMsg_FixAngle::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.angle_){nullptr},
      decltype(_impl_.relative_){false},
  };
}
CSVCMsg_FixAngle::~CSVCMsg_FixAngle() {
  // @@protoc_insertion_point(destructor:CSVCMsg_FixAngle)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_FixAngle::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.angle_;
}
void CSVCMsg_FixAngle::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_FixAngle::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_FixAngle)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.angle_ != nullptr);
    _impl_.angle_->Clear();
  }
  _impl_.relative_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_FixAngle::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> CSVCMsg_FixAngle::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_FixAngle, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CSVCMsg_FixAngle_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .CMsgQAngle angle = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_FixAngle, _impl_.angle_)}},
    // optional bool relative = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CSVCMsg_FixAngle, _impl_.relative_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_FixAngle, _impl_.relative_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool relative = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_FixAngle, _impl_.relative_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .CMsgQAngle angle = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_FixAngle, _impl_.angle_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgQAngle>()},
  }}, {{
  }},
};

::uint8_t* CSVCMsg_FixAngle::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_FixAngle)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool relative = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_relative(), target);
  }

  // optional .CMsgQAngle angle = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::angle(this),
        _Internal::angle(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_FixAngle)
  return target;
}

::size_t CSVCMsg_FixAngle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_FixAngle)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgQAngle angle = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.angle_);
    }

    // optional bool relative = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_FixAngle::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_FixAngle::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_FixAngle::GetClassData() const { return &_class_data_; }


void CSVCMsg_FixAngle::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_FixAngle*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_FixAngle&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_FixAngle)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_angle()->::CMsgQAngle::MergeFrom(
          from._internal_angle());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.relative_ = from._impl_.relative_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_FixAngle::CopyFrom(const CSVCMsg_FixAngle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_FixAngle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_FixAngle::IsInitialized() const {
  return true;
}

void CSVCMsg_FixAngle::InternalSwap(CSVCMsg_FixAngle* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSVCMsg_FixAngle, _impl_.relative_)
      + sizeof(CSVCMsg_FixAngle::_impl_.relative_)
      - PROTOBUF_FIELD_OFFSET(CSVCMsg_FixAngle, _impl_.angle_)>(
          reinterpret_cast<char*>(&_impl_.angle_),
          reinterpret_cast<char*>(&other->_impl_.angle_));
}

::google::protobuf::Metadata CSVCMsg_FixAngle::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[27]);
}
// ===================================================================

class CSVCMsg_CrosshairAngle::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_CrosshairAngle>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_CrosshairAngle, _impl_._has_bits_);
  static const ::CMsgQAngle& angle(const CSVCMsg_CrosshairAngle* msg);
  static void set_has_angle(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgQAngle& CSVCMsg_CrosshairAngle::_Internal::angle(const CSVCMsg_CrosshairAngle* msg) {
  return *msg->_impl_.angle_;
}
void CSVCMsg_CrosshairAngle::clear_angle() {
  if (_impl_.angle_ != nullptr) _impl_.angle_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CSVCMsg_CrosshairAngle::CSVCMsg_CrosshairAngle(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_CrosshairAngle)
}
CSVCMsg_CrosshairAngle::CSVCMsg_CrosshairAngle(const CSVCMsg_CrosshairAngle& from) : ::google::protobuf::Message() {
  CSVCMsg_CrosshairAngle* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.angle_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.angle_ = new ::CMsgQAngle(*from._impl_.angle_);
  }

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_CrosshairAngle)
}
inline void CSVCMsg_CrosshairAngle::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.angle_){nullptr},
  };
}
CSVCMsg_CrosshairAngle::~CSVCMsg_CrosshairAngle() {
  // @@protoc_insertion_point(destructor:CSVCMsg_CrosshairAngle)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_CrosshairAngle::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.angle_;
}
void CSVCMsg_CrosshairAngle::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_CrosshairAngle::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_CrosshairAngle)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.angle_ != nullptr);
    _impl_.angle_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_CrosshairAngle::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CSVCMsg_CrosshairAngle::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_CrosshairAngle, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CSVCMsg_CrosshairAngle_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .CMsgQAngle angle = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_CrosshairAngle, _impl_.angle_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgQAngle angle = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_CrosshairAngle, _impl_.angle_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgQAngle>()},
  }}, {{
  }},
};

::uint8_t* CSVCMsg_CrosshairAngle::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_CrosshairAngle)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgQAngle angle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::angle(this),
        _Internal::angle(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_CrosshairAngle)
  return target;
}

::size_t CSVCMsg_CrosshairAngle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_CrosshairAngle)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgQAngle angle = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.angle_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_CrosshairAngle::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_CrosshairAngle::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_CrosshairAngle::GetClassData() const { return &_class_data_; }


void CSVCMsg_CrosshairAngle::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_CrosshairAngle*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_CrosshairAngle&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_CrosshairAngle)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_angle()->::CMsgQAngle::MergeFrom(
        from._internal_angle());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_CrosshairAngle::CopyFrom(const CSVCMsg_CrosshairAngle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_CrosshairAngle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_CrosshairAngle::IsInitialized() const {
  return true;
}

void CSVCMsg_CrosshairAngle::InternalSwap(CSVCMsg_CrosshairAngle* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.angle_, other->_impl_.angle_);
}

::google::protobuf::Metadata CSVCMsg_CrosshairAngle::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[28]);
}
// ===================================================================

class CSVCMsg_BSPDecal::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_BSPDecal>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_BSPDecal, _impl_._has_bits_);
  static const ::CMsgVector& pos(const CSVCMsg_BSPDecal* msg);
  static void set_has_pos(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_decal_texture_index(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_entity_index(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_model_index(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_low_priority(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::CMsgVector& CSVCMsg_BSPDecal::_Internal::pos(const CSVCMsg_BSPDecal* msg) {
  return *msg->_impl_.pos_;
}
void CSVCMsg_BSPDecal::clear_pos() {
  if (_impl_.pos_ != nullptr) _impl_.pos_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CSVCMsg_BSPDecal::CSVCMsg_BSPDecal(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_BSPDecal)
}
CSVCMsg_BSPDecal::CSVCMsg_BSPDecal(const CSVCMsg_BSPDecal& from) : ::google::protobuf::Message() {
  CSVCMsg_BSPDecal* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.pos_){nullptr},
      decltype(_impl_.decal_texture_index_){},
      decltype(_impl_.model_index_){},
      decltype(_impl_.low_priority_){},
      decltype(_impl_.entity_index_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pos_ = new ::CMsgVector(*from._impl_.pos_);
  }
  ::memcpy(&_impl_.decal_texture_index_, &from._impl_.decal_texture_index_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.entity_index_) -
    reinterpret_cast<char*>(&_impl_.decal_texture_index_)) + sizeof(_impl_.entity_index_));

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_BSPDecal)
}
inline void CSVCMsg_BSPDecal::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.pos_){nullptr},
      decltype(_impl_.decal_texture_index_){0},
      decltype(_impl_.model_index_){0},
      decltype(_impl_.low_priority_){false},
      decltype(_impl_.entity_index_){-1},
  };
}
CSVCMsg_BSPDecal::~CSVCMsg_BSPDecal() {
  // @@protoc_insertion_point(destructor:CSVCMsg_BSPDecal)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_BSPDecal::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.pos_;
}
void CSVCMsg_BSPDecal::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_BSPDecal::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_BSPDecal)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pos_ != nullptr);
    _impl_.pos_->Clear();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&_impl_.decal_texture_index_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.low_priority_) -
        reinterpret_cast<char*>(&_impl_.decal_texture_index_)) + sizeof(_impl_.low_priority_));
    _impl_.entity_index_ = -1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_BSPDecal::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 0, 2> CSVCMsg_BSPDecal::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_BSPDecal, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CSVCMsg_BSPDecal_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CMsgVector pos = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_BSPDecal, _impl_.pos_)}},
    // optional int32 decal_texture_index = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_BSPDecal, _impl_.decal_texture_index_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_BSPDecal, _impl_.decal_texture_index_)}},
    // optional int32 entity_index = 3 [default = -1];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_BSPDecal, _impl_.entity_index_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_BSPDecal, _impl_.entity_index_)}},
    // optional int32 model_index = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_BSPDecal, _impl_.model_index_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_BSPDecal, _impl_.model_index_)}},
    // optional bool low_priority = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CSVCMsg_BSPDecal, _impl_.low_priority_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_BSPDecal, _impl_.low_priority_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVector pos = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_BSPDecal, _impl_.pos_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 decal_texture_index = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_BSPDecal, _impl_.decal_texture_index_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 entity_index = 3 [default = -1];
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_BSPDecal, _impl_.entity_index_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 model_index = 4;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_BSPDecal, _impl_.model_index_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool low_priority = 5;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_BSPDecal, _impl_.low_priority_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }}, {{
  }},
};

::uint8_t* CSVCMsg_BSPDecal::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_BSPDecal)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgVector pos = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::pos(this),
        _Internal::pos(this).GetCachedSize(), target, stream);
  }

  // optional int32 decal_texture_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_decal_texture_index(), target);
  }

  // optional int32 entity_index = 3 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_entity_index(), target);
  }

  // optional int32 model_index = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_model_index(), target);
  }

  // optional bool low_priority = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_low_priority(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_BSPDecal)
  return target;
}

::size_t CSVCMsg_BSPDecal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_BSPDecal)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional .CMsgVector pos = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.pos_);
    }

    // optional int32 decal_texture_index = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_decal_texture_index());
    }

    // optional int32 model_index = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_model_index());
    }

    // optional bool low_priority = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2;
    }

    // optional int32 entity_index = 3 [default = -1];
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_entity_index());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_BSPDecal::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_BSPDecal::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_BSPDecal::GetClassData() const { return &_class_data_; }


void CSVCMsg_BSPDecal::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_BSPDecal*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_BSPDecal&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_BSPDecal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_pos()->::CMsgVector::MergeFrom(
          from._internal_pos());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.decal_texture_index_ = from._impl_.decal_texture_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.model_index_ = from._impl_.model_index_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.low_priority_ = from._impl_.low_priority_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.entity_index_ = from._impl_.entity_index_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_BSPDecal::CopyFrom(const CSVCMsg_BSPDecal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_BSPDecal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_BSPDecal::IsInitialized() const {
  return true;
}

void CSVCMsg_BSPDecal::InternalSwap(CSVCMsg_BSPDecal* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSVCMsg_BSPDecal, _impl_.entity_index_)
      + sizeof(CSVCMsg_BSPDecal::_impl_.entity_index_)
      - PROTOBUF_FIELD_OFFSET(CSVCMsg_BSPDecal, _impl_.pos_)>(
          reinterpret_cast<char*>(&_impl_.pos_),
          reinterpret_cast<char*>(&other->_impl_.pos_));
}

::google::protobuf::Metadata CSVCMsg_BSPDecal::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[29]);
}
// ===================================================================

class CSVCMsg_SplitScreen::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_SplitScreen>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_SplitScreen, _impl_._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_slot(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_player_index(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CSVCMsg_SplitScreen::CSVCMsg_SplitScreen(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_SplitScreen)
}
CSVCMsg_SplitScreen::CSVCMsg_SplitScreen(const CSVCMsg_SplitScreen& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_SplitScreen)
}
inline void CSVCMsg_SplitScreen::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.type_){0},
      decltype(_impl_.slot_){0},
      decltype(_impl_.player_index_){-1},
  };
}
CSVCMsg_SplitScreen::~CSVCMsg_SplitScreen() {
  // @@protoc_insertion_point(destructor:CSVCMsg_SplitScreen)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_SplitScreen::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CSVCMsg_SplitScreen::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_SplitScreen::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_SplitScreen)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.slot_) -
        reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.slot_));
    _impl_.player_index_ = -1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_SplitScreen::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> CSVCMsg_SplitScreen::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_SplitScreen, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CSVCMsg_SplitScreen_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .ESplitScreenMessageType type = 1 [default = MSG_SPLITSCREEN_ADDUSER];
    {::_pbi::TcParser::FastEr0S1,
     {8, 0, 1, PROTOBUF_FIELD_OFFSET(CSVCMsg_SplitScreen, _impl_.type_)}},
    // optional int32 slot = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_SplitScreen, _impl_.slot_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_SplitScreen, _impl_.slot_)}},
    // optional int32 player_index = 3 [default = -1];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_SplitScreen, _impl_.player_index_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_SplitScreen, _impl_.player_index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .ESplitScreenMessageType type = 1 [default = MSG_SPLITSCREEN_ADDUSER];
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_SplitScreen, _impl_.type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional int32 slot = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_SplitScreen, _impl_.slot_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 player_index = 3 [default = -1];
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_SplitScreen, _impl_.player_index_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {0, 2},
  }}, {{
  }},
};

::uint8_t* CSVCMsg_SplitScreen::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_SplitScreen)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ESplitScreenMessageType type = 1 [default = MSG_SPLITSCREEN_ADDUSER];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  // optional int32 slot = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_slot(), target);
  }

  // optional int32 player_index = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_player_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_SplitScreen)
  return target;
}

::size_t CSVCMsg_SplitScreen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_SplitScreen)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .ESplitScreenMessageType type = 1 [default = MSG_SPLITSCREEN_ADDUSER];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
    }

    // optional int32 slot = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_slot());
    }

    // optional int32 player_index = 3 [default = -1];
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_player_index());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_SplitScreen::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_SplitScreen::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_SplitScreen::GetClassData() const { return &_class_data_; }


void CSVCMsg_SplitScreen::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_SplitScreen*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_SplitScreen&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_SplitScreen)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.slot_ = from._impl_.slot_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.player_index_ = from._impl_.player_index_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_SplitScreen::CopyFrom(const CSVCMsg_SplitScreen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_SplitScreen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_SplitScreen::IsInitialized() const {
  return true;
}

void CSVCMsg_SplitScreen::InternalSwap(CSVCMsg_SplitScreen* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSVCMsg_SplitScreen, _impl_.player_index_)
      + sizeof(CSVCMsg_SplitScreen::_impl_.player_index_)
      - PROTOBUF_FIELD_OFFSET(CSVCMsg_SplitScreen, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata CSVCMsg_SplitScreen::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[30]);
}
// ===================================================================

class CSVCMsg_GetCvarValue::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_GetCvarValue>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_GetCvarValue, _impl_._has_bits_);
  static void set_has_cookie(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_cvar_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CSVCMsg_GetCvarValue::CSVCMsg_GetCvarValue(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_GetCvarValue)
}
CSVCMsg_GetCvarValue::CSVCMsg_GetCvarValue(const CSVCMsg_GetCvarValue& from) : ::google::protobuf::Message() {
  CSVCMsg_GetCvarValue* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.cvar_name_){},
      decltype(_impl_.cookie_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.cvar_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.cvar_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.cvar_name_.Set(from._internal_cvar_name(), _this->GetArenaForAllocation());
  }
  _this->_impl_.cookie_ = from._impl_.cookie_;

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_GetCvarValue)
}
inline void CSVCMsg_GetCvarValue::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.cvar_name_){},
      decltype(_impl_.cookie_){0},
  };
  _impl_.cvar_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.cvar_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CSVCMsg_GetCvarValue::~CSVCMsg_GetCvarValue() {
  // @@protoc_insertion_point(destructor:CSVCMsg_GetCvarValue)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_GetCvarValue::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.cvar_name_.Destroy();
}
void CSVCMsg_GetCvarValue::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_GetCvarValue::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_GetCvarValue)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.cvar_name_.ClearNonDefaultToEmpty();
  }
  _impl_.cookie_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_GetCvarValue::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 38, 2> CSVCMsg_GetCvarValue::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_GetCvarValue, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CSVCMsg_GetCvarValue_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string cvar_name = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GetCvarValue, _impl_.cvar_name_)}},
    // optional int32 cookie = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_GetCvarValue, _impl_.cookie_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GetCvarValue, _impl_.cookie_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 cookie = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GetCvarValue, _impl_.cookie_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string cvar_name = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GetCvarValue, _impl_.cvar_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\24\0\11\0\0\0\0\0"
    "CSVCMsg_GetCvarValue"
    "cvar_name"
  }},
};

::uint8_t* CSVCMsg_GetCvarValue::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_GetCvarValue)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 cookie = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_cookie(), target);
  }

  // optional string cvar_name = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_cvar_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSVCMsg_GetCvarValue.cvar_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_GetCvarValue)
  return target;
}

::size_t CSVCMsg_GetCvarValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_GetCvarValue)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string cvar_name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_cvar_name());
    }

    // optional int32 cookie = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_cookie());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_GetCvarValue::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_GetCvarValue::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_GetCvarValue::GetClassData() const { return &_class_data_; }


void CSVCMsg_GetCvarValue::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_GetCvarValue*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_GetCvarValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_GetCvarValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_cvar_name(from._internal_cvar_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.cookie_ = from._impl_.cookie_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_GetCvarValue::CopyFrom(const CSVCMsg_GetCvarValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_GetCvarValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_GetCvarValue::IsInitialized() const {
  return true;
}

void CSVCMsg_GetCvarValue::InternalSwap(CSVCMsg_GetCvarValue* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cvar_name_, lhs_arena,
                                       &other->_impl_.cvar_name_, rhs_arena);
        swap(_impl_.cookie_, other->_impl_.cookie_);
}

::google::protobuf::Metadata CSVCMsg_GetCvarValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[31]);
}
// ===================================================================

class CSVCMsg_Menu::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_Menu>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_Menu, _impl_._has_bits_);
  static void set_has_dialog_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_menu_key_values(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CSVCMsg_Menu::CSVCMsg_Menu(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_Menu)
}
CSVCMsg_Menu::CSVCMsg_Menu(const CSVCMsg_Menu& from) : ::google::protobuf::Message() {
  CSVCMsg_Menu* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.menu_key_values_){},
      decltype(_impl_.dialog_type_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.menu_key_values_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.menu_key_values_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.menu_key_values_.Set(from._internal_menu_key_values(), _this->GetArenaForAllocation());
  }
  _this->_impl_.dialog_type_ = from._impl_.dialog_type_;

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_Menu)
}
inline void CSVCMsg_Menu::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.menu_key_values_){},
      decltype(_impl_.dialog_type_){0},
  };
  _impl_.menu_key_values_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.menu_key_values_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CSVCMsg_Menu::~CSVCMsg_Menu() {
  // @@protoc_insertion_point(destructor:CSVCMsg_Menu)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_Menu::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.menu_key_values_.Destroy();
}
void CSVCMsg_Menu::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_Menu::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_Menu)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.menu_key_values_.ClearNonDefaultToEmpty();
  }
  _impl_.dialog_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_Menu::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> CSVCMsg_Menu::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_Menu, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CSVCMsg_Menu_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bytes menu_key_values = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_Menu, _impl_.menu_key_values_)}},
    // optional int32 dialog_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_Menu, _impl_.dialog_type_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_Menu, _impl_.dialog_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 dialog_type = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_Menu, _impl_.dialog_type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bytes menu_key_values = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_Menu, _impl_.menu_key_values_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CSVCMsg_Menu::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_Menu)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 dialog_type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_dialog_type(), target);
  }

  // optional bytes menu_key_values = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_menu_key_values();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_Menu)
  return target;
}

::size_t CSVCMsg_Menu::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_Menu)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes menu_key_values = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_menu_key_values());
    }

    // optional int32 dialog_type = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_dialog_type());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_Menu::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_Menu::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_Menu::GetClassData() const { return &_class_data_; }


void CSVCMsg_Menu::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_Menu*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_Menu&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_Menu)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_menu_key_values(from._internal_menu_key_values());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.dialog_type_ = from._impl_.dialog_type_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_Menu::CopyFrom(const CSVCMsg_Menu& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_Menu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_Menu::IsInitialized() const {
  return true;
}

void CSVCMsg_Menu::InternalSwap(CSVCMsg_Menu* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.menu_key_values_, lhs_arena,
                                       &other->_impl_.menu_key_values_, rhs_arena);
        swap(_impl_.dialog_type_, other->_impl_.dialog_type_);
}

::google::protobuf::Metadata CSVCMsg_Menu::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[32]);
}
// ===================================================================

class CSVCMsg_UserMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_UserMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_UserMessage, _impl_._has_bits_);
  static void set_has_msg_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_msg_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_passthrough(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CSVCMsg_UserMessage::CSVCMsg_UserMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_UserMessage)
}
CSVCMsg_UserMessage::CSVCMsg_UserMessage(const CSVCMsg_UserMessage& from) : ::google::protobuf::Message() {
  CSVCMsg_UserMessage* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.msg_data_){},
      decltype(_impl_.msg_type_){},
      decltype(_impl_.passthrough_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.msg_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.msg_data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.msg_data_.Set(from._internal_msg_data(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.msg_type_, &from._impl_.msg_type_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.passthrough_) -
    reinterpret_cast<char*>(&_impl_.msg_type_)) + sizeof(_impl_.passthrough_));

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_UserMessage)
}
inline void CSVCMsg_UserMessage::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.msg_data_){},
      decltype(_impl_.msg_type_){0},
      decltype(_impl_.passthrough_){0},
  };
  _impl_.msg_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.msg_data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CSVCMsg_UserMessage::~CSVCMsg_UserMessage() {
  // @@protoc_insertion_point(destructor:CSVCMsg_UserMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_UserMessage::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.msg_data_.Destroy();
}
void CSVCMsg_UserMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_UserMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_UserMessage)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.msg_data_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.msg_type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.passthrough_) -
        reinterpret_cast<char*>(&_impl_.msg_type_)) + sizeof(_impl_.passthrough_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_UserMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> CSVCMsg_UserMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_UserMessage, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CSVCMsg_UserMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 msg_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_UserMessage, _impl_.msg_type_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_UserMessage, _impl_.msg_type_)}},
    // optional bytes msg_data = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_UserMessage, _impl_.msg_data_)}},
    // optional int32 passthrough = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_UserMessage, _impl_.passthrough_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_UserMessage, _impl_.passthrough_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 msg_type = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_UserMessage, _impl_.msg_type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bytes msg_data = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_UserMessage, _impl_.msg_data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional int32 passthrough = 3;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_UserMessage, _impl_.passthrough_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CSVCMsg_UserMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_UserMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 msg_type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_msg_type(), target);
  }

  // optional bytes msg_data = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_msg_data();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // optional int32 passthrough = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_passthrough(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_UserMessage)
  return target;
}

::size_t CSVCMsg_UserMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_UserMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bytes msg_data = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_msg_data());
    }

    // optional int32 msg_type = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_msg_type());
    }

    // optional int32 passthrough = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_passthrough());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_UserMessage::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_UserMessage::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_UserMessage::GetClassData() const { return &_class_data_; }


void CSVCMsg_UserMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_UserMessage*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_UserMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_UserMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_msg_data(from._internal_msg_data());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.msg_type_ = from._impl_.msg_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.passthrough_ = from._impl_.passthrough_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_UserMessage::CopyFrom(const CSVCMsg_UserMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_UserMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_UserMessage::IsInitialized() const {
  return true;
}

void CSVCMsg_UserMessage::InternalSwap(CSVCMsg_UserMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msg_data_, lhs_arena,
                                       &other->_impl_.msg_data_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSVCMsg_UserMessage, _impl_.passthrough_)
      + sizeof(CSVCMsg_UserMessage::_impl_.passthrough_)
      - PROTOBUF_FIELD_OFFSET(CSVCMsg_UserMessage, _impl_.msg_type_)>(
          reinterpret_cast<char*>(&_impl_.msg_type_),
          reinterpret_cast<char*>(&other->_impl_.msg_type_));
}

::google::protobuf::Metadata CSVCMsg_UserMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[33]);
}
// ===================================================================

class CSVCMsg_SendTable_sendprop_t::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_SendTable_sendprop_t>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable_sendprop_t, _impl_._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_var_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_priority(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_dt_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_num_elements(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_low_value(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_high_value(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_num_bits(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
};

CSVCMsg_SendTable_sendprop_t::CSVCMsg_SendTable_sendprop_t(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_SendTable.sendprop_t)
}
CSVCMsg_SendTable_sendprop_t::CSVCMsg_SendTable_sendprop_t(const CSVCMsg_SendTable_sendprop_t& from) : ::google::protobuf::Message() {
  CSVCMsg_SendTable_sendprop_t* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.var_name_){},
      decltype(_impl_.dt_name_){},
      decltype(_impl_.type_){},
      decltype(_impl_.flags_){},
      decltype(_impl_.priority_){},
      decltype(_impl_.num_elements_){},
      decltype(_impl_.low_value_){},
      decltype(_impl_.high_value_){},
      decltype(_impl_.num_bits_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.var_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.var_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.var_name_.Set(from._internal_var_name(), _this->GetArenaForAllocation());
  }
  _impl_.dt_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dt_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.dt_name_.Set(from._internal_dt_name(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.type_, &from._impl_.type_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.num_bits_) -
    reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.num_bits_));

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_SendTable.sendprop_t)
}
inline void CSVCMsg_SendTable_sendprop_t::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.var_name_){},
      decltype(_impl_.dt_name_){},
      decltype(_impl_.type_){0},
      decltype(_impl_.flags_){0},
      decltype(_impl_.priority_){0},
      decltype(_impl_.num_elements_){0},
      decltype(_impl_.low_value_){0},
      decltype(_impl_.high_value_){0},
      decltype(_impl_.num_bits_){0},
  };
  _impl_.var_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.var_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.dt_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dt_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CSVCMsg_SendTable_sendprop_t::~CSVCMsg_SendTable_sendprop_t() {
  // @@protoc_insertion_point(destructor:CSVCMsg_SendTable.sendprop_t)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_SendTable_sendprop_t::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.var_name_.Destroy();
  _impl_.dt_name_.Destroy();
}
void CSVCMsg_SendTable_sendprop_t::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_SendTable_sendprop_t::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_SendTable.sendprop_t)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.var_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.dt_name_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000fcu) {
    ::memset(&_impl_.type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.high_value_) -
        reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.high_value_));
  }
  _impl_.num_bits_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_SendTable_sendprop_t::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 60, 2> CSVCMsg_SendTable_sendprop_t::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable_sendprop_t, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CSVCMsg_SendTable_sendprop_t_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_SendTable_sendprop_t, _impl_.type_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable_sendprop_t, _impl_.type_)}},
    // optional string var_name = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable_sendprop_t, _impl_.var_name_)}},
    // optional int32 flags = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_SendTable_sendprop_t, _impl_.flags_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable_sendprop_t, _impl_.flags_)}},
    // optional int32 priority = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_SendTable_sendprop_t, _impl_.priority_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable_sendprop_t, _impl_.priority_)}},
    // optional string dt_name = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable_sendprop_t, _impl_.dt_name_)}},
    // optional int32 num_elements = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_SendTable_sendprop_t, _impl_.num_elements_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable_sendprop_t, _impl_.num_elements_)}},
    // optional float low_value = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 6, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable_sendprop_t, _impl_.low_value_)}},
    // optional float high_value = 8;
    {::_pbi::TcParser::FastF32S1,
     {69, 7, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable_sendprop_t, _impl_.high_value_)}},
    // optional int32 num_bits = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_SendTable_sendprop_t, _impl_.num_bits_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable_sendprop_t, _impl_.num_bits_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 type = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable_sendprop_t, _impl_.type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string var_name = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable_sendprop_t, _impl_.var_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 flags = 3;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable_sendprop_t, _impl_.flags_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 priority = 4;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable_sendprop_t, _impl_.priority_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string dt_name = 5;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable_sendprop_t, _impl_.dt_name_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 num_elements = 6;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable_sendprop_t, _impl_.num_elements_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional float low_value = 7;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable_sendprop_t, _impl_.low_value_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float high_value = 8;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable_sendprop_t, _impl_.high_value_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional int32 num_bits = 9;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable_sendprop_t, _impl_.num_bits_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\34\0\10\0\0\7\0\0\0\0\0\0\0\0\0\0"
    "CSVCMsg_SendTable.sendprop_t"
    "var_name"
    "dt_name"
  }},
};

::uint8_t* CSVCMsg_SendTable_sendprop_t::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_SendTable.sendprop_t)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 type = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_type(), target);
  }

  // optional string var_name = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_var_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSVCMsg_SendTable.sendprop_t.var_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional int32 flags = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_flags(), target);
  }

  // optional int32 priority = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_priority(), target);
  }

  // optional string dt_name = 5;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_dt_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSVCMsg_SendTable.sendprop_t.dt_name");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // optional int32 num_elements = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_num_elements(), target);
  }

  // optional float low_value = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        7, this->_internal_low_value(), target);
  }

  // optional float high_value = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        8, this->_internal_high_value(), target);
  }

  // optional int32 num_bits = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<9>(
            stream, this->_internal_num_bits(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_SendTable.sendprop_t)
  return target;
}

::size_t CSVCMsg_SendTable_sendprop_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_SendTable.sendprop_t)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string var_name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_var_name());
    }

    // optional string dt_name = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_dt_name());
    }

    // optional int32 type = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_type());
    }

    // optional int32 flags = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_flags());
    }

    // optional int32 priority = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_priority());
    }

    // optional int32 num_elements = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_num_elements());
    }

    // optional float low_value = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 5;
    }

    // optional float high_value = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 5;
    }

  }
  // optional int32 num_bits = 9;
  if (cached_has_bits & 0x00000100u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_num_bits());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_SendTable_sendprop_t::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_SendTable_sendprop_t::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_SendTable_sendprop_t::GetClassData() const { return &_class_data_; }


void CSVCMsg_SendTable_sendprop_t::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_SendTable_sendprop_t*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_SendTable_sendprop_t&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_SendTable.sendprop_t)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_var_name(from._internal_var_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_dt_name(from._internal_dt_name());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.flags_ = from._impl_.flags_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.priority_ = from._impl_.priority_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.num_elements_ = from._impl_.num_elements_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.low_value_ = from._impl_.low_value_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.high_value_ = from._impl_.high_value_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_internal_set_num_bits(from._internal_num_bits());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_SendTable_sendprop_t::CopyFrom(const CSVCMsg_SendTable_sendprop_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_SendTable.sendprop_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_SendTable_sendprop_t::IsInitialized() const {
  return true;
}

void CSVCMsg_SendTable_sendprop_t::InternalSwap(CSVCMsg_SendTable_sendprop_t* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.var_name_, lhs_arena,
                                       &other->_impl_.var_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dt_name_, lhs_arena,
                                       &other->_impl_.dt_name_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable_sendprop_t, _impl_.num_bits_)
      + sizeof(CSVCMsg_SendTable_sendprop_t::_impl_.num_bits_)
      - PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable_sendprop_t, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata CSVCMsg_SendTable_sendprop_t::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[34]);
}
// ===================================================================

class CSVCMsg_SendTable::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_SendTable>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable, _impl_._has_bits_);
  static void set_has_is_end(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_net_table_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_needs_decoder(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CSVCMsg_SendTable::CSVCMsg_SendTable(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_SendTable)
}
CSVCMsg_SendTable::CSVCMsg_SendTable(const CSVCMsg_SendTable& from) : ::google::protobuf::Message() {
  CSVCMsg_SendTable* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.props_){from._impl_.props_},
      decltype(_impl_.net_table_name_){},
      decltype(_impl_.is_end_){},
      decltype(_impl_.needs_decoder_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.net_table_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.net_table_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.net_table_name_.Set(from._internal_net_table_name(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.is_end_, &from._impl_.is_end_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.needs_decoder_) -
    reinterpret_cast<char*>(&_impl_.is_end_)) + sizeof(_impl_.needs_decoder_));

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_SendTable)
}
inline void CSVCMsg_SendTable::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.props_){arena},
      decltype(_impl_.net_table_name_){},
      decltype(_impl_.is_end_){false},
      decltype(_impl_.needs_decoder_){false},
  };
  _impl_.net_table_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.net_table_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CSVCMsg_SendTable::~CSVCMsg_SendTable() {
  // @@protoc_insertion_point(destructor:CSVCMsg_SendTable)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_SendTable::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.props_.~RepeatedPtrField();
  _impl_.net_table_name_.Destroy();
}
void CSVCMsg_SendTable::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_SendTable::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_SendTable)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_props()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.net_table_name_.ClearNonDefaultToEmpty();
  }
  ::memset(&_impl_.is_end_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.needs_decoder_) -
      reinterpret_cast<char*>(&_impl_.is_end_)) + sizeof(_impl_.needs_decoder_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_SendTable::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 40, 2> CSVCMsg_SendTable::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CSVCMsg_SendTable_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .CSVCMsg_SendTable.sendprop_t props = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable, _impl_.props_)}},
    // optional bool is_end = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CSVCMsg_SendTable, _impl_.is_end_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable, _impl_.is_end_)}},
    // optional string net_table_name = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable, _impl_.net_table_name_)}},
    // optional bool needs_decoder = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CSVCMsg_SendTable, _impl_.needs_decoder_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable, _impl_.needs_decoder_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool is_end = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable, _impl_.is_end_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string net_table_name = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable, _impl_.net_table_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool needs_decoder = 3;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable, _impl_.needs_decoder_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .CSVCMsg_SendTable.sendprop_t props = 4;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable, _impl_.props_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CSVCMsg_SendTable_sendprop_t>()},
  }}, {{
    "\21\0\16\0\0\0\0\0"
    "CSVCMsg_SendTable"
    "net_table_name"
  }},
};

::uint8_t* CSVCMsg_SendTable::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_SendTable)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool is_end = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_is_end(), target);
  }

  // optional string net_table_name = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_net_table_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSVCMsg_SendTable.net_table_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional bool needs_decoder = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_needs_decoder(), target);
  }

  // repeated .CSVCMsg_SendTable.sendprop_t props = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_props_size()); i < n; i++) {
    const auto& repfield = this->_internal_props().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_SendTable)
  return target;
}

::size_t CSVCMsg_SendTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_SendTable)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CSVCMsg_SendTable.sendprop_t props = 4;
  total_size += 1UL * this->_internal_props_size();
  for (const auto& msg : this->_internal_props()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string net_table_name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_net_table_name());
    }

    // optional bool is_end = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }

    // optional bool needs_decoder = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_SendTable::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_SendTable::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_SendTable::GetClassData() const { return &_class_data_; }


void CSVCMsg_SendTable::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_SendTable*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_SendTable&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_SendTable)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_props()->MergeFrom(from._internal_props());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_net_table_name(from._internal_net_table_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.is_end_ = from._impl_.is_end_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.needs_decoder_ = from._impl_.needs_decoder_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_SendTable::CopyFrom(const CSVCMsg_SendTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_SendTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_SendTable::IsInitialized() const {
  return true;
}

void CSVCMsg_SendTable::InternalSwap(CSVCMsg_SendTable* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.props_.InternalSwap(&other->_impl_.props_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.net_table_name_, lhs_arena,
                                       &other->_impl_.net_table_name_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable, _impl_.needs_decoder_)
      + sizeof(CSVCMsg_SendTable::_impl_.needs_decoder_)
      - PROTOBUF_FIELD_OFFSET(CSVCMsg_SendTable, _impl_.is_end_)>(
          reinterpret_cast<char*>(&_impl_.is_end_),
          reinterpret_cast<char*>(&other->_impl_.is_end_));
}

::google::protobuf::Metadata CSVCMsg_SendTable::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[35]);
}
// ===================================================================

class CSVCMsg_GameEventList_key_t::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_GameEventList_key_t>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEventList_key_t, _impl_._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CSVCMsg_GameEventList_key_t::CSVCMsg_GameEventList_key_t(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_GameEventList.key_t)
}
CSVCMsg_GameEventList_key_t::CSVCMsg_GameEventList_key_t(const CSVCMsg_GameEventList_key_t& from) : ::google::protobuf::Message() {
  CSVCMsg_GameEventList_key_t* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.type_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _this->_impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_GameEventList.key_t)
}
inline void CSVCMsg_GameEventList_key_t::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.type_){0},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CSVCMsg_GameEventList_key_t::~CSVCMsg_GameEventList_key_t() {
  // @@protoc_insertion_point(destructor:CSVCMsg_GameEventList.key_t)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_GameEventList_key_t::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}
void CSVCMsg_GameEventList_key_t::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_GameEventList_key_t::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_GameEventList.key_t)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_GameEventList_key_t::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 40, 2> CSVCMsg_GameEventList_key_t::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEventList_key_t, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CSVCMsg_GameEventList_key_t_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string name = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEventList_key_t, _impl_.name_)}},
    // optional int32 type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_GameEventList_key_t, _impl_.type_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEventList_key_t, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 type = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEventList_key_t, _impl_.type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string name = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEventList_key_t, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\0\4\0\0\0\0\0"
    "CSVCMsg_GameEventList.key_t"
    "name"
  }},
};

::uint8_t* CSVCMsg_GameEventList_key_t::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_GameEventList.key_t)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_type(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSVCMsg_GameEventList.key_t.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_GameEventList.key_t)
  return target;
}

::size_t CSVCMsg_GameEventList_key_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_GameEventList.key_t)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }

    // optional int32 type = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_type());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_GameEventList_key_t::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_GameEventList_key_t::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_GameEventList_key_t::GetClassData() const { return &_class_data_; }


void CSVCMsg_GameEventList_key_t::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_GameEventList_key_t*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_GameEventList_key_t&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_GameEventList.key_t)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_GameEventList_key_t::CopyFrom(const CSVCMsg_GameEventList_key_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_GameEventList.key_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_GameEventList_key_t::IsInitialized() const {
  return true;
}

void CSVCMsg_GameEventList_key_t::InternalSwap(CSVCMsg_GameEventList_key_t* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
        swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata CSVCMsg_GameEventList_key_t::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[36]);
}
// ===================================================================

class CSVCMsg_GameEventList_descriptor_t::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_GameEventList_descriptor_t>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEventList_descriptor_t, _impl_._has_bits_);
  static void set_has_eventid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CSVCMsg_GameEventList_descriptor_t::CSVCMsg_GameEventList_descriptor_t(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_GameEventList.descriptor_t)
}
CSVCMsg_GameEventList_descriptor_t::CSVCMsg_GameEventList_descriptor_t(const CSVCMsg_GameEventList_descriptor_t& from) : ::google::protobuf::Message() {
  CSVCMsg_GameEventList_descriptor_t* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.keys_){from._impl_.keys_},
      decltype(_impl_.name_){},
      decltype(_impl_.eventid_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _this->_impl_.eventid_ = from._impl_.eventid_;

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_GameEventList.descriptor_t)
}
inline void CSVCMsg_GameEventList_descriptor_t::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.keys_){arena},
      decltype(_impl_.name_){},
      decltype(_impl_.eventid_){0},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CSVCMsg_GameEventList_descriptor_t::~CSVCMsg_GameEventList_descriptor_t() {
  // @@protoc_insertion_point(destructor:CSVCMsg_GameEventList.descriptor_t)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_GameEventList_descriptor_t::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.keys_.~RepeatedPtrField();
  _impl_.name_.Destroy();
}
void CSVCMsg_GameEventList_descriptor_t::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_GameEventList_descriptor_t::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_GameEventList.descriptor_t)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_keys()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_.eventid_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_GameEventList_descriptor_t::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 47, 2> CSVCMsg_GameEventList_descriptor_t::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEventList_descriptor_t, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CSVCMsg_GameEventList_descriptor_t_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 eventid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_GameEventList_descriptor_t, _impl_.eventid_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEventList_descriptor_t, _impl_.eventid_)}},
    // optional string name = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEventList_descriptor_t, _impl_.name_)}},
    // repeated .CSVCMsg_GameEventList.key_t keys = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEventList_descriptor_t, _impl_.keys_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 eventid = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEventList_descriptor_t, _impl_.eventid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string name = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEventList_descriptor_t, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .CSVCMsg_GameEventList.key_t keys = 3;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEventList_descriptor_t, _impl_.keys_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CSVCMsg_GameEventList_key_t>()},
  }}, {{
    "\42\0\4\0\0\0\0\0"
    "CSVCMsg_GameEventList.descriptor_t"
    "name"
  }},
};

::uint8_t* CSVCMsg_GameEventList_descriptor_t::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_GameEventList.descriptor_t)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 eventid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_eventid(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSVCMsg_GameEventList.descriptor_t.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // repeated .CSVCMsg_GameEventList.key_t keys = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_keys_size()); i < n; i++) {
    const auto& repfield = this->_internal_keys().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_GameEventList.descriptor_t)
  return target;
}

::size_t CSVCMsg_GameEventList_descriptor_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_GameEventList.descriptor_t)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CSVCMsg_GameEventList.key_t keys = 3;
  total_size += 1UL * this->_internal_keys_size();
  for (const auto& msg : this->_internal_keys()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }

    // optional int32 eventid = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_eventid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_GameEventList_descriptor_t::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_GameEventList_descriptor_t::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_GameEventList_descriptor_t::GetClassData() const { return &_class_data_; }


void CSVCMsg_GameEventList_descriptor_t::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_GameEventList_descriptor_t*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_GameEventList_descriptor_t&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_GameEventList.descriptor_t)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_keys()->MergeFrom(from._internal_keys());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.eventid_ = from._impl_.eventid_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_GameEventList_descriptor_t::CopyFrom(const CSVCMsg_GameEventList_descriptor_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_GameEventList.descriptor_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_GameEventList_descriptor_t::IsInitialized() const {
  return true;
}

void CSVCMsg_GameEventList_descriptor_t::InternalSwap(CSVCMsg_GameEventList_descriptor_t* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.keys_.InternalSwap(&other->_impl_.keys_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
        swap(_impl_.eventid_, other->_impl_.eventid_);
}

::google::protobuf::Metadata CSVCMsg_GameEventList_descriptor_t::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[37]);
}
// ===================================================================

class CSVCMsg_GameEventList::_Internal {
 public:
};

CSVCMsg_GameEventList::CSVCMsg_GameEventList(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_GameEventList)
}
CSVCMsg_GameEventList::CSVCMsg_GameEventList(const CSVCMsg_GameEventList& from) : ::google::protobuf::Message() {
  CSVCMsg_GameEventList* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.descriptors_){from._impl_.descriptors_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_GameEventList)
}
inline void CSVCMsg_GameEventList::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.descriptors_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
CSVCMsg_GameEventList::~CSVCMsg_GameEventList() {
  // @@protoc_insertion_point(destructor:CSVCMsg_GameEventList)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_GameEventList::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.descriptors_.~RepeatedPtrField();
}
void CSVCMsg_GameEventList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_GameEventList::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_GameEventList)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_descriptors()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_GameEventList::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CSVCMsg_GameEventList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CSVCMsg_GameEventList_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .CSVCMsg_GameEventList.descriptor_t descriptors = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEventList, _impl_.descriptors_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .CSVCMsg_GameEventList.descriptor_t descriptors = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_GameEventList, _impl_.descriptors_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CSVCMsg_GameEventList_descriptor_t>()},
  }}, {{
  }},
};

::uint8_t* CSVCMsg_GameEventList::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_GameEventList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .CSVCMsg_GameEventList.descriptor_t descriptors = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_descriptors_size()); i < n; i++) {
    const auto& repfield = this->_internal_descriptors().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_GameEventList)
  return target;
}

::size_t CSVCMsg_GameEventList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_GameEventList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CSVCMsg_GameEventList.descriptor_t descriptors = 1;
  total_size += 1UL * this->_internal_descriptors_size();
  for (const auto& msg : this->_internal_descriptors()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_GameEventList::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_GameEventList::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_GameEventList::GetClassData() const { return &_class_data_; }


void CSVCMsg_GameEventList::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_GameEventList*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_GameEventList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_GameEventList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_descriptors()->MergeFrom(from._internal_descriptors());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_GameEventList::CopyFrom(const CSVCMsg_GameEventList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_GameEventList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_GameEventList::IsInitialized() const {
  return true;
}

void CSVCMsg_GameEventList::InternalSwap(CSVCMsg_GameEventList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.descriptors_.InternalSwap(&other->_impl_.descriptors_);
}

::google::protobuf::Metadata CSVCMsg_GameEventList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[38]);
}
// ===================================================================

class CSVCMsg_PacketEntities_command_queue_info_t::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_PacketEntities_command_queue_info_t>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities_command_queue_info_t, _impl_._has_bits_);
  static void set_has_commands_queued(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_command_queue_desired_size(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_starved_command_ticks(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_time_dilation_percent(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_discarded_command_ticks(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

CSVCMsg_PacketEntities_command_queue_info_t::CSVCMsg_PacketEntities_command_queue_info_t(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_PacketEntities.command_queue_info_t)
}
CSVCMsg_PacketEntities_command_queue_info_t::CSVCMsg_PacketEntities_command_queue_info_t(const CSVCMsg_PacketEntities_command_queue_info_t& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_PacketEntities.command_queue_info_t)
}
inline void CSVCMsg_PacketEntities_command_queue_info_t::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.commands_queued_){0u},
      decltype(_impl_.command_queue_desired_size_){0u},
      decltype(_impl_.starved_command_ticks_){0u},
      decltype(_impl_.time_dilation_percent_){0},
      decltype(_impl_.discarded_command_ticks_){0u},
  };
}
CSVCMsg_PacketEntities_command_queue_info_t::~CSVCMsg_PacketEntities_command_queue_info_t() {
  // @@protoc_insertion_point(destructor:CSVCMsg_PacketEntities.command_queue_info_t)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_PacketEntities_command_queue_info_t::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CSVCMsg_PacketEntities_command_queue_info_t::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_PacketEntities_command_queue_info_t::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_PacketEntities.command_queue_info_t)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.commands_queued_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.discarded_command_ticks_) -
        reinterpret_cast<char*>(&_impl_.commands_queued_)) + sizeof(_impl_.discarded_command_ticks_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_PacketEntities_command_queue_info_t::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> CSVCMsg_PacketEntities_command_queue_info_t::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities_command_queue_info_t, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CSVCMsg_PacketEntities_command_queue_info_t_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 commands_queued = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_PacketEntities_command_queue_info_t, _impl_.commands_queued_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities_command_queue_info_t, _impl_.commands_queued_)}},
    // optional uint32 command_queue_desired_size = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_PacketEntities_command_queue_info_t, _impl_.command_queue_desired_size_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities_command_queue_info_t, _impl_.command_queue_desired_size_)}},
    // optional uint32 starved_command_ticks = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_PacketEntities_command_queue_info_t, _impl_.starved_command_ticks_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities_command_queue_info_t, _impl_.starved_command_ticks_)}},
    // optional float time_dilation_percent = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities_command_queue_info_t, _impl_.time_dilation_percent_)}},
    // optional uint32 discarded_command_ticks = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_PacketEntities_command_queue_info_t, _impl_.discarded_command_ticks_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities_command_queue_info_t, _impl_.discarded_command_ticks_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 commands_queued = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities_command_queue_info_t, _impl_.commands_queued_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 command_queue_desired_size = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities_command_queue_info_t, _impl_.command_queue_desired_size_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 starved_command_ticks = 3;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities_command_queue_info_t, _impl_.starved_command_ticks_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional float time_dilation_percent = 4;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities_command_queue_info_t, _impl_.time_dilation_percent_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional uint32 discarded_command_ticks = 5;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities_command_queue_info_t, _impl_.discarded_command_ticks_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CSVCMsg_PacketEntities_command_queue_info_t::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_PacketEntities.command_queue_info_t)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 commands_queued = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_commands_queued(), target);
  }

  // optional uint32 command_queue_desired_size = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_command_queue_desired_size(), target);
  }

  // optional uint32 starved_command_ticks = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_starved_command_ticks(), target);
  }

  // optional float time_dilation_percent = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_time_dilation_percent(), target);
  }

  // optional uint32 discarded_command_ticks = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_discarded_command_ticks(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_PacketEntities.command_queue_info_t)
  return target;
}

::size_t CSVCMsg_PacketEntities_command_queue_info_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_PacketEntities.command_queue_info_t)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional uint32 commands_queued = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_commands_queued());
    }

    // optional uint32 command_queue_desired_size = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_command_queue_desired_size());
    }

    // optional uint32 starved_command_ticks = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_starved_command_ticks());
    }

    // optional float time_dilation_percent = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 5;
    }

    // optional uint32 discarded_command_ticks = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_discarded_command_ticks());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_PacketEntities_command_queue_info_t::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_PacketEntities_command_queue_info_t::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_PacketEntities_command_queue_info_t::GetClassData() const { return &_class_data_; }


void CSVCMsg_PacketEntities_command_queue_info_t::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_PacketEntities_command_queue_info_t*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_PacketEntities_command_queue_info_t&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_PacketEntities.command_queue_info_t)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.commands_queued_ = from._impl_.commands_queued_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.command_queue_desired_size_ = from._impl_.command_queue_desired_size_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.starved_command_ticks_ = from._impl_.starved_command_ticks_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.time_dilation_percent_ = from._impl_.time_dilation_percent_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.discarded_command_ticks_ = from._impl_.discarded_command_ticks_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_PacketEntities_command_queue_info_t::CopyFrom(const CSVCMsg_PacketEntities_command_queue_info_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_PacketEntities.command_queue_info_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_PacketEntities_command_queue_info_t::IsInitialized() const {
  return true;
}

void CSVCMsg_PacketEntities_command_queue_info_t::InternalSwap(CSVCMsg_PacketEntities_command_queue_info_t* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities_command_queue_info_t, _impl_.discarded_command_ticks_)
      + sizeof(CSVCMsg_PacketEntities_command_queue_info_t::_impl_.discarded_command_ticks_)
      - PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities_command_queue_info_t, _impl_.commands_queued_)>(
          reinterpret_cast<char*>(&_impl_.commands_queued_),
          reinterpret_cast<char*>(&other->_impl_.commands_queued_));
}

::google::protobuf::Metadata CSVCMsg_PacketEntities_command_queue_info_t::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[39]);
}
// ===================================================================

class CSVCMsg_PacketEntities_alternate_baseline_t::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_PacketEntities_alternate_baseline_t>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities_alternate_baseline_t, _impl_._has_bits_);
  static void set_has_entity_index(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_baseline_index(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CSVCMsg_PacketEntities_alternate_baseline_t::CSVCMsg_PacketEntities_alternate_baseline_t(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_PacketEntities.alternate_baseline_t)
}
CSVCMsg_PacketEntities_alternate_baseline_t::CSVCMsg_PacketEntities_alternate_baseline_t(const CSVCMsg_PacketEntities_alternate_baseline_t& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_PacketEntities.alternate_baseline_t)
}
inline void CSVCMsg_PacketEntities_alternate_baseline_t::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.entity_index_){0},
      decltype(_impl_.baseline_index_){0},
  };
}
CSVCMsg_PacketEntities_alternate_baseline_t::~CSVCMsg_PacketEntities_alternate_baseline_t() {
  // @@protoc_insertion_point(destructor:CSVCMsg_PacketEntities.alternate_baseline_t)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_PacketEntities_alternate_baseline_t::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CSVCMsg_PacketEntities_alternate_baseline_t::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_PacketEntities_alternate_baseline_t::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_PacketEntities.alternate_baseline_t)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.entity_index_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.baseline_index_) -
        reinterpret_cast<char*>(&_impl_.entity_index_)) + sizeof(_impl_.baseline_index_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_PacketEntities_alternate_baseline_t::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> CSVCMsg_PacketEntities_alternate_baseline_t::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities_alternate_baseline_t, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CSVCMsg_PacketEntities_alternate_baseline_t_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 baseline_index = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_PacketEntities_alternate_baseline_t, _impl_.baseline_index_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities_alternate_baseline_t, _impl_.baseline_index_)}},
    // optional int32 entity_index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_PacketEntities_alternate_baseline_t, _impl_.entity_index_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities_alternate_baseline_t, _impl_.entity_index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 entity_index = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities_alternate_baseline_t, _impl_.entity_index_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 baseline_index = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities_alternate_baseline_t, _impl_.baseline_index_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CSVCMsg_PacketEntities_alternate_baseline_t::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_PacketEntities.alternate_baseline_t)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 entity_index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_entity_index(), target);
  }

  // optional int32 baseline_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_baseline_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_PacketEntities.alternate_baseline_t)
  return target;
}

::size_t CSVCMsg_PacketEntities_alternate_baseline_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_PacketEntities.alternate_baseline_t)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 entity_index = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_entity_index());
    }

    // optional int32 baseline_index = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_baseline_index());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_PacketEntities_alternate_baseline_t::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_PacketEntities_alternate_baseline_t::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_PacketEntities_alternate_baseline_t::GetClassData() const { return &_class_data_; }


void CSVCMsg_PacketEntities_alternate_baseline_t::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_PacketEntities_alternate_baseline_t*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_PacketEntities_alternate_baseline_t&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_PacketEntities.alternate_baseline_t)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.entity_index_ = from._impl_.entity_index_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.baseline_index_ = from._impl_.baseline_index_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_PacketEntities_alternate_baseline_t::CopyFrom(const CSVCMsg_PacketEntities_alternate_baseline_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_PacketEntities.alternate_baseline_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_PacketEntities_alternate_baseline_t::IsInitialized() const {
  return true;
}

void CSVCMsg_PacketEntities_alternate_baseline_t::InternalSwap(CSVCMsg_PacketEntities_alternate_baseline_t* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities_alternate_baseline_t, _impl_.baseline_index_)
      + sizeof(CSVCMsg_PacketEntities_alternate_baseline_t::_impl_.baseline_index_)
      - PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities_alternate_baseline_t, _impl_.entity_index_)>(
          reinterpret_cast<char*>(&_impl_.entity_index_),
          reinterpret_cast<char*>(&other->_impl_.entity_index_));
}

::google::protobuf::Metadata CSVCMsg_PacketEntities_alternate_baseline_t::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[40]);
}
// ===================================================================

class CSVCMsg_PacketEntities::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_PacketEntities>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_._has_bits_);
  static void set_has_max_entries(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_updated_entries(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_is_delta(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_update_baseline(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_baseline(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_delta_from(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_entity_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_pending_full_frame(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_active_spawngroup_handle(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_max_spawngroup_creationsequence(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_last_cmd_number(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_server_tick(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_serialized_entities(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CSVCMsg_PacketEntities_command_queue_info_t& command_queue_info(const CSVCMsg_PacketEntities* msg);
  static void set_has_command_queue_info(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::CSVCMsg_PacketEntities_command_queue_info_t& CSVCMsg_PacketEntities::_Internal::command_queue_info(const CSVCMsg_PacketEntities* msg) {
  return *msg->_impl_.command_queue_info_;
}
CSVCMsg_PacketEntities::CSVCMsg_PacketEntities(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_PacketEntities)
}
CSVCMsg_PacketEntities::CSVCMsg_PacketEntities(const CSVCMsg_PacketEntities& from) : ::google::protobuf::Message() {
  CSVCMsg_PacketEntities* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.alternate_baselines_){from._impl_.alternate_baselines_},
      decltype(_impl_.entity_data_){},
      decltype(_impl_.serialized_entities_){},
      decltype(_impl_.command_queue_info_){nullptr},
      decltype(_impl_.max_entries_){},
      decltype(_impl_.updated_entries_){},
      decltype(_impl_.baseline_){},
      decltype(_impl_.is_delta_){},
      decltype(_impl_.update_baseline_){},
      decltype(_impl_.pending_full_frame_){},
      decltype(_impl_.delta_from_){},
      decltype(_impl_.active_spawngroup_handle_){},
      decltype(_impl_.max_spawngroup_creationsequence_){},
      decltype(_impl_.last_cmd_number_){},
      decltype(_impl_.server_tick_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.entity_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.entity_data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.entity_data_.Set(from._internal_entity_data(), _this->GetArenaForAllocation());
  }
  _impl_.serialized_entities_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.serialized_entities_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.serialized_entities_.Set(from._internal_serialized_entities(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.command_queue_info_ = new ::CSVCMsg_PacketEntities_command_queue_info_t(*from._impl_.command_queue_info_);
  }
  ::memcpy(&_impl_.max_entries_, &from._impl_.max_entries_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.server_tick_) -
    reinterpret_cast<char*>(&_impl_.max_entries_)) + sizeof(_impl_.server_tick_));

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_PacketEntities)
}
inline void CSVCMsg_PacketEntities::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.alternate_baselines_){arena},
      decltype(_impl_.entity_data_){},
      decltype(_impl_.serialized_entities_){},
      decltype(_impl_.command_queue_info_){nullptr},
      decltype(_impl_.max_entries_){0},
      decltype(_impl_.updated_entries_){0},
      decltype(_impl_.baseline_){0},
      decltype(_impl_.is_delta_){false},
      decltype(_impl_.update_baseline_){false},
      decltype(_impl_.pending_full_frame_){false},
      decltype(_impl_.delta_from_){0},
      decltype(_impl_.active_spawngroup_handle_){0u},
      decltype(_impl_.max_spawngroup_creationsequence_){0u},
      decltype(_impl_.last_cmd_number_){0u},
      decltype(_impl_.server_tick_){0u},
  };
  _impl_.entity_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.entity_data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.serialized_entities_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.serialized_entities_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CSVCMsg_PacketEntities::~CSVCMsg_PacketEntities() {
  // @@protoc_insertion_point(destructor:CSVCMsg_PacketEntities)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_PacketEntities::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.alternate_baselines_.~RepeatedPtrField();
  _impl_.entity_data_.Destroy();
  _impl_.serialized_entities_.Destroy();
  if (this != internal_default_instance()) delete _impl_.command_queue_info_;
}
void CSVCMsg_PacketEntities::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_PacketEntities::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_PacketEntities)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_alternate_baselines()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.entity_data_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.serialized_entities_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.command_queue_info_ != nullptr);
      _impl_.command_queue_info_->Clear();
    }
  }
  if (cached_has_bits & 0x000000f8u) {
    ::memset(&_impl_.max_entries_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.update_baseline_) -
        reinterpret_cast<char*>(&_impl_.max_entries_)) + sizeof(_impl_.update_baseline_));
  }
  if (cached_has_bits & 0x00003f00u) {
    ::memset(&_impl_.pending_full_frame_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.server_tick_) -
        reinterpret_cast<char*>(&_impl_.pending_full_frame_)) + sizeof(_impl_.server_tick_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_PacketEntities::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 15, 2, 0, 2> CSVCMsg_PacketEntities::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_._has_bits_),
    0, // no _extensions_
    15, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294934528,  // skipmap
    offsetof(decltype(_table_), field_entries),
    15,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CSVCMsg_PacketEntities_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 max_entries = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_PacketEntities, _impl_.max_entries_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.max_entries_)}},
    // optional int32 updated_entries = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_PacketEntities, _impl_.updated_entries_), 4>(),
     {16, 4, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.updated_entries_)}},
    // optional bool is_delta = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CSVCMsg_PacketEntities, _impl_.is_delta_), 6>(),
     {24, 6, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.is_delta_)}},
    // optional bool update_baseline = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CSVCMsg_PacketEntities, _impl_.update_baseline_), 7>(),
     {32, 7, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.update_baseline_)}},
    // optional int32 baseline = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_PacketEntities, _impl_.baseline_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.baseline_)}},
    // optional int32 delta_from = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_PacketEntities, _impl_.delta_from_), 9>(),
     {48, 9, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.delta_from_)}},
    // optional bytes entity_data = 7;
    {::_pbi::TcParser::FastBS1,
     {58, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.entity_data_)}},
    // optional bool pending_full_frame = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CSVCMsg_PacketEntities, _impl_.pending_full_frame_), 8>(),
     {64, 8, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.pending_full_frame_)}},
    // optional uint32 active_spawngroup_handle = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_PacketEntities, _impl_.active_spawngroup_handle_), 10>(),
     {72, 10, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.active_spawngroup_handle_)}},
    // optional uint32 max_spawngroup_creationsequence = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_PacketEntities, _impl_.max_spawngroup_creationsequence_), 11>(),
     {80, 11, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.max_spawngroup_creationsequence_)}},
    // optional uint32 last_cmd_number = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_PacketEntities, _impl_.last_cmd_number_), 12>(),
     {88, 12, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.last_cmd_number_)}},
    // optional uint32 server_tick = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_PacketEntities, _impl_.server_tick_), 13>(),
     {96, 13, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.server_tick_)}},
    // optional bytes serialized_entities = 13;
    {::_pbi::TcParser::FastBS1,
     {106, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.serialized_entities_)}},
    // optional .CSVCMsg_PacketEntities.command_queue_info_t command_queue_info = 14;
    {::_pbi::TcParser::FastMtS1,
     {114, 2, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.command_queue_info_)}},
    // repeated .CSVCMsg_PacketEntities.alternate_baseline_t alternate_baselines = 15;
    {::_pbi::TcParser::FastMtR1,
     {122, 63, 1, PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.alternate_baselines_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 max_entries = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.max_entries_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 updated_entries = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.updated_entries_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool is_delta = 3;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.is_delta_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool update_baseline = 4;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.update_baseline_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional int32 baseline = 5;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.baseline_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 delta_from = 6;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.delta_from_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bytes entity_data = 7;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.entity_data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional bool pending_full_frame = 8;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.pending_full_frame_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint32 active_spawngroup_handle = 9;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.active_spawngroup_handle_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 max_spawngroup_creationsequence = 10;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.max_spawngroup_creationsequence_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 last_cmd_number = 11;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.last_cmd_number_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 server_tick = 12;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.server_tick_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bytes serialized_entities = 13;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.serialized_entities_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional .CSVCMsg_PacketEntities.command_queue_info_t command_queue_info = 14;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.command_queue_info_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .CSVCMsg_PacketEntities.alternate_baseline_t alternate_baselines = 15;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.alternate_baselines_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CSVCMsg_PacketEntities_command_queue_info_t>()},
    {::_pbi::TcParser::GetTable<::CSVCMsg_PacketEntities_alternate_baseline_t>()},
  }}, {{
  }},
};

::uint8_t* CSVCMsg_PacketEntities::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_PacketEntities)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 max_entries = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_max_entries(), target);
  }

  // optional int32 updated_entries = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_updated_entries(), target);
  }

  // optional bool is_delta = 3;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_is_delta(), target);
  }

  // optional bool update_baseline = 4;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_update_baseline(), target);
  }

  // optional int32 baseline = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_baseline(), target);
  }

  // optional int32 delta_from = 6;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_delta_from(), target);
  }

  // optional bytes entity_data = 7;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_entity_data();
    target = stream->WriteBytesMaybeAliased(7, _s, target);
  }

  // optional bool pending_full_frame = 8;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        8, this->_internal_pending_full_frame(), target);
  }

  // optional uint32 active_spawngroup_handle = 9;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this->_internal_active_spawngroup_handle(), target);
  }

  // optional uint32 max_spawngroup_creationsequence = 10;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        10, this->_internal_max_spawngroup_creationsequence(), target);
  }

  // optional uint32 last_cmd_number = 11;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        11, this->_internal_last_cmd_number(), target);
  }

  // optional uint32 server_tick = 12;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        12, this->_internal_server_tick(), target);
  }

  // optional bytes serialized_entities = 13;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_serialized_entities();
    target = stream->WriteBytesMaybeAliased(13, _s, target);
  }

  // optional .CSVCMsg_PacketEntities.command_queue_info_t command_queue_info = 14;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(14, _Internal::command_queue_info(this),
        _Internal::command_queue_info(this).GetCachedSize(), target, stream);
  }

  // repeated .CSVCMsg_PacketEntities.alternate_baseline_t alternate_baselines = 15;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_alternate_baselines_size()); i < n; i++) {
    const auto& repfield = this->_internal_alternate_baselines().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(15, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_PacketEntities)
  return target;
}

::size_t CSVCMsg_PacketEntities::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_PacketEntities)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CSVCMsg_PacketEntities.alternate_baseline_t alternate_baselines = 15;
  total_size += 1UL * this->_internal_alternate_baselines_size();
  for (const auto& msg : this->_internal_alternate_baselines()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional bytes entity_data = 7;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_entity_data());
    }

    // optional bytes serialized_entities = 13;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_serialized_entities());
    }

    // optional .CSVCMsg_PacketEntities.command_queue_info_t command_queue_info = 14;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.command_queue_info_);
    }

    // optional int32 max_entries = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_max_entries());
    }

    // optional int32 updated_entries = 2;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_updated_entries());
    }

    // optional int32 baseline = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_baseline());
    }

    // optional bool is_delta = 3;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2;
    }

    // optional bool update_baseline = 4;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2;
    }

  }
  if (cached_has_bits & 0x00003f00u) {
    // optional bool pending_full_frame = 8;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2;
    }

    // optional int32 delta_from = 6;
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_delta_from());
    }

    // optional uint32 active_spawngroup_handle = 9;
    if (cached_has_bits & 0x00000400u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_active_spawngroup_handle());
    }

    // optional uint32 max_spawngroup_creationsequence = 10;
    if (cached_has_bits & 0x00000800u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_max_spawngroup_creationsequence());
    }

    // optional uint32 last_cmd_number = 11;
    if (cached_has_bits & 0x00001000u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_last_cmd_number());
    }

    // optional uint32 server_tick = 12;
    if (cached_has_bits & 0x00002000u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_server_tick());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_PacketEntities::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_PacketEntities::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_PacketEntities::GetClassData() const { return &_class_data_; }


void CSVCMsg_PacketEntities::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_PacketEntities*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_PacketEntities&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_PacketEntities)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_alternate_baselines()->MergeFrom(from._internal_alternate_baselines());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_entity_data(from._internal_entity_data());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_serialized_entities(from._internal_serialized_entities());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_command_queue_info()->::CSVCMsg_PacketEntities_command_queue_info_t::MergeFrom(
          from._internal_command_queue_info());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.max_entries_ = from._impl_.max_entries_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.updated_entries_ = from._impl_.updated_entries_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.baseline_ = from._impl_.baseline_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.is_delta_ = from._impl_.is_delta_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.update_baseline_ = from._impl_.update_baseline_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00003f00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.pending_full_frame_ = from._impl_.pending_full_frame_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.delta_from_ = from._impl_.delta_from_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.active_spawngroup_handle_ = from._impl_.active_spawngroup_handle_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.max_spawngroup_creationsequence_ = from._impl_.max_spawngroup_creationsequence_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.last_cmd_number_ = from._impl_.last_cmd_number_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.server_tick_ = from._impl_.server_tick_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_PacketEntities::CopyFrom(const CSVCMsg_PacketEntities& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_PacketEntities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_PacketEntities::IsInitialized() const {
  return true;
}

void CSVCMsg_PacketEntities::InternalSwap(CSVCMsg_PacketEntities* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.alternate_baselines_.InternalSwap(&other->_impl_.alternate_baselines_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_data_, lhs_arena,
                                       &other->_impl_.entity_data_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.serialized_entities_, lhs_arena,
                                       &other->_impl_.serialized_entities_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.server_tick_)
      + sizeof(CSVCMsg_PacketEntities::_impl_.server_tick_)
      - PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketEntities, _impl_.command_queue_info_)>(
          reinterpret_cast<char*>(&_impl_.command_queue_info_),
          reinterpret_cast<char*>(&other->_impl_.command_queue_info_));
}

::google::protobuf::Metadata CSVCMsg_PacketEntities::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[41]);
}
// ===================================================================

class CSVCMsg_TempEntities::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_TempEntities>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_TempEntities, _impl_._has_bits_);
  static void set_has_reliable(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_num_entries(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_entity_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CSVCMsg_TempEntities::CSVCMsg_TempEntities(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_TempEntities)
}
CSVCMsg_TempEntities::CSVCMsg_TempEntities(const CSVCMsg_TempEntities& from) : ::google::protobuf::Message() {
  CSVCMsg_TempEntities* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.entity_data_){},
      decltype(_impl_.reliable_){},
      decltype(_impl_.num_entries_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.entity_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.entity_data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.entity_data_.Set(from._internal_entity_data(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.reliable_, &from._impl_.reliable_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.num_entries_) -
    reinterpret_cast<char*>(&_impl_.reliable_)) + sizeof(_impl_.num_entries_));

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_TempEntities)
}
inline void CSVCMsg_TempEntities::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.entity_data_){},
      decltype(_impl_.reliable_){false},
      decltype(_impl_.num_entries_){0},
  };
  _impl_.entity_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.entity_data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CSVCMsg_TempEntities::~CSVCMsg_TempEntities() {
  // @@protoc_insertion_point(destructor:CSVCMsg_TempEntities)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_TempEntities::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.entity_data_.Destroy();
}
void CSVCMsg_TempEntities::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_TempEntities::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_TempEntities)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.entity_data_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.reliable_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.num_entries_) -
        reinterpret_cast<char*>(&_impl_.reliable_)) + sizeof(_impl_.num_entries_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_TempEntities::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> CSVCMsg_TempEntities::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_TempEntities, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CSVCMsg_TempEntities_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool reliable = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CSVCMsg_TempEntities, _impl_.reliable_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_TempEntities, _impl_.reliable_)}},
    // optional int32 num_entries = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_TempEntities, _impl_.num_entries_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_TempEntities, _impl_.num_entries_)}},
    // optional bytes entity_data = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_TempEntities, _impl_.entity_data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool reliable = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_TempEntities, _impl_.reliable_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional int32 num_entries = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_TempEntities, _impl_.num_entries_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bytes entity_data = 3;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_TempEntities, _impl_.entity_data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CSVCMsg_TempEntities::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_TempEntities)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool reliable = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_reliable(), target);
  }

  // optional int32 num_entries = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_num_entries(), target);
  }

  // optional bytes entity_data = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_entity_data();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_TempEntities)
  return target;
}

::size_t CSVCMsg_TempEntities::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_TempEntities)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bytes entity_data = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_entity_data());
    }

    // optional bool reliable = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }

    // optional int32 num_entries = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_num_entries());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_TempEntities::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_TempEntities::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_TempEntities::GetClassData() const { return &_class_data_; }


void CSVCMsg_TempEntities::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_TempEntities*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_TempEntities&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_TempEntities)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_entity_data(from._internal_entity_data());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.reliable_ = from._impl_.reliable_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.num_entries_ = from._impl_.num_entries_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_TempEntities::CopyFrom(const CSVCMsg_TempEntities& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_TempEntities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_TempEntities::IsInitialized() const {
  return true;
}

void CSVCMsg_TempEntities::InternalSwap(CSVCMsg_TempEntities* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_data_, lhs_arena,
                                       &other->_impl_.entity_data_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSVCMsg_TempEntities, _impl_.num_entries_)
      + sizeof(CSVCMsg_TempEntities::_impl_.num_entries_)
      - PROTOBUF_FIELD_OFFSET(CSVCMsg_TempEntities, _impl_.reliable_)>(
          reinterpret_cast<char*>(&_impl_.reliable_),
          reinterpret_cast<char*>(&other->_impl_.reliable_));
}

::google::protobuf::Metadata CSVCMsg_TempEntities::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[42]);
}
// ===================================================================

class CSVCMsg_CreateStringTable::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_CreateStringTable>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_CreateStringTable, _impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_num_entries(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_user_data_fixed_size(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_user_data_size(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_user_data_size_bits(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_string_data(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_uncompressed_size(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_data_compressed(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_using_varint_bitcounts(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
};

CSVCMsg_CreateStringTable::CSVCMsg_CreateStringTable(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_CreateStringTable)
}
CSVCMsg_CreateStringTable::CSVCMsg_CreateStringTable(const CSVCMsg_CreateStringTable& from) : ::google::protobuf::Message() {
  CSVCMsg_CreateStringTable* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.string_data_){},
      decltype(_impl_.num_entries_){},
      decltype(_impl_.user_data_size_){},
      decltype(_impl_.user_data_size_bits_){},
      decltype(_impl_.flags_){},
      decltype(_impl_.user_data_fixed_size_){},
      decltype(_impl_.data_compressed_){},
      decltype(_impl_.using_varint_bitcounts_){},
      decltype(_impl_.uncompressed_size_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.string_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.string_data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.string_data_.Set(from._internal_string_data(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.num_entries_, &from._impl_.num_entries_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.uncompressed_size_) -
    reinterpret_cast<char*>(&_impl_.num_entries_)) + sizeof(_impl_.uncompressed_size_));

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_CreateStringTable)
}
inline void CSVCMsg_CreateStringTable::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.string_data_){},
      decltype(_impl_.num_entries_){0},
      decltype(_impl_.user_data_size_){0},
      decltype(_impl_.user_data_size_bits_){0},
      decltype(_impl_.flags_){0},
      decltype(_impl_.user_data_fixed_size_){false},
      decltype(_impl_.data_compressed_){false},
      decltype(_impl_.using_varint_bitcounts_){false},
      decltype(_impl_.uncompressed_size_){0},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.string_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.string_data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CSVCMsg_CreateStringTable::~CSVCMsg_CreateStringTable() {
  // @@protoc_insertion_point(destructor:CSVCMsg_CreateStringTable)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_CreateStringTable::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.string_data_.Destroy();
}
void CSVCMsg_CreateStringTable::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_CreateStringTable::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_CreateStringTable)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.string_data_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000fcu) {
    ::memset(&_impl_.num_entries_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.data_compressed_) -
        reinterpret_cast<char*>(&_impl_.num_entries_)) + sizeof(_impl_.data_compressed_));
  }
  if (cached_has_bits & 0x00000300u) {
    ::memset(&_impl_.using_varint_bitcounts_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.uncompressed_size_) -
        reinterpret_cast<char*>(&_impl_.using_varint_bitcounts_)) + sizeof(_impl_.uncompressed_size_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_CreateStringTable::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 0, 46, 2> CSVCMsg_CreateStringTable::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_CreateStringTable, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CSVCMsg_CreateStringTable_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_CreateStringTable, _impl_.name_)}},
    // optional int32 num_entries = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_CreateStringTable, _impl_.num_entries_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_CreateStringTable, _impl_.num_entries_)}},
    // optional bool user_data_fixed_size = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CSVCMsg_CreateStringTable, _impl_.user_data_fixed_size_), 6>(),
     {24, 6, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_CreateStringTable, _impl_.user_data_fixed_size_)}},
    // optional int32 user_data_size = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_CreateStringTable, _impl_.user_data_size_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_CreateStringTable, _impl_.user_data_size_)}},
    // optional int32 user_data_size_bits = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_CreateStringTable, _impl_.user_data_size_bits_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_CreateStringTable, _impl_.user_data_size_bits_)}},
    // optional int32 flags = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_CreateStringTable, _impl_.flags_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_CreateStringTable, _impl_.flags_)}},
    // optional bytes string_data = 7;
    {::_pbi::TcParser::FastBS1,
     {58, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_CreateStringTable, _impl_.string_data_)}},
    // optional int32 uncompressed_size = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_CreateStringTable, _impl_.uncompressed_size_), 9>(),
     {64, 9, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_CreateStringTable, _impl_.uncompressed_size_)}},
    // optional bool data_compressed = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CSVCMsg_CreateStringTable, _impl_.data_compressed_), 7>(),
     {72, 7, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_CreateStringTable, _impl_.data_compressed_)}},
    // optional bool using_varint_bitcounts = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CSVCMsg_CreateStringTable, _impl_.using_varint_bitcounts_), 8>(),
     {80, 8, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_CreateStringTable, _impl_.using_varint_bitcounts_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_CreateStringTable, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 num_entries = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_CreateStringTable, _impl_.num_entries_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool user_data_fixed_size = 3;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_CreateStringTable, _impl_.user_data_fixed_size_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional int32 user_data_size = 4;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_CreateStringTable, _impl_.user_data_size_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 user_data_size_bits = 5;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_CreateStringTable, _impl_.user_data_size_bits_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 flags = 6;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_CreateStringTable, _impl_.flags_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bytes string_data = 7;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_CreateStringTable, _impl_.string_data_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional int32 uncompressed_size = 8;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_CreateStringTable, _impl_.uncompressed_size_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool data_compressed = 9;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_CreateStringTable, _impl_.data_compressed_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool using_varint_bitcounts = 10;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_CreateStringTable, _impl_.using_varint_bitcounts_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\31\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "CSVCMsg_CreateStringTable"
    "name"
  }},
};

::uint8_t* CSVCMsg_CreateStringTable::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_CreateStringTable)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSVCMsg_CreateStringTable.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional int32 num_entries = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_num_entries(), target);
  }

  // optional bool user_data_fixed_size = 3;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_user_data_fixed_size(), target);
  }

  // optional int32 user_data_size = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_user_data_size(), target);
  }

  // optional int32 user_data_size_bits = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_user_data_size_bits(), target);
  }

  // optional int32 flags = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_flags(), target);
  }

  // optional bytes string_data = 7;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_string_data();
    target = stream->WriteBytesMaybeAliased(7, _s, target);
  }

  // optional int32 uncompressed_size = 8;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<8>(
            stream, this->_internal_uncompressed_size(), target);
  }

  // optional bool data_compressed = 9;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        9, this->_internal_data_compressed(), target);
  }

  // optional bool using_varint_bitcounts = 10;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        10, this->_internal_using_varint_bitcounts(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_CreateStringTable)
  return target;
}

::size_t CSVCMsg_CreateStringTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_CreateStringTable)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }

    // optional bytes string_data = 7;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_string_data());
    }

    // optional int32 num_entries = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_num_entries());
    }

    // optional int32 user_data_size = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_user_data_size());
    }

    // optional int32 user_data_size_bits = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_user_data_size_bits());
    }

    // optional int32 flags = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_flags());
    }

    // optional bool user_data_fixed_size = 3;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2;
    }

    // optional bool data_compressed = 9;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2;
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional bool using_varint_bitcounts = 10;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2;
    }

    // optional int32 uncompressed_size = 8;
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_uncompressed_size());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_CreateStringTable::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_CreateStringTable::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_CreateStringTable::GetClassData() const { return &_class_data_; }


void CSVCMsg_CreateStringTable::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_CreateStringTable*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_CreateStringTable&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_CreateStringTable)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_string_data(from._internal_string_data());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.num_entries_ = from._impl_.num_entries_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.user_data_size_ = from._impl_.user_data_size_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.user_data_size_bits_ = from._impl_.user_data_size_bits_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.flags_ = from._impl_.flags_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.user_data_fixed_size_ = from._impl_.user_data_fixed_size_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.data_compressed_ = from._impl_.data_compressed_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.using_varint_bitcounts_ = from._impl_.using_varint_bitcounts_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.uncompressed_size_ = from._impl_.uncompressed_size_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_CreateStringTable::CopyFrom(const CSVCMsg_CreateStringTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_CreateStringTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_CreateStringTable::IsInitialized() const {
  return true;
}

void CSVCMsg_CreateStringTable::InternalSwap(CSVCMsg_CreateStringTable* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.string_data_, lhs_arena,
                                       &other->_impl_.string_data_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSVCMsg_CreateStringTable, _impl_.uncompressed_size_)
      + sizeof(CSVCMsg_CreateStringTable::_impl_.uncompressed_size_)
      - PROTOBUF_FIELD_OFFSET(CSVCMsg_CreateStringTable, _impl_.num_entries_)>(
          reinterpret_cast<char*>(&_impl_.num_entries_),
          reinterpret_cast<char*>(&other->_impl_.num_entries_));
}

::google::protobuf::Metadata CSVCMsg_CreateStringTable::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[43]);
}
// ===================================================================

class CSVCMsg_UpdateStringTable::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_UpdateStringTable>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_UpdateStringTable, _impl_._has_bits_);
  static void set_has_table_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_num_changed_entries(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_string_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CSVCMsg_UpdateStringTable::CSVCMsg_UpdateStringTable(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_UpdateStringTable)
}
CSVCMsg_UpdateStringTable::CSVCMsg_UpdateStringTable(const CSVCMsg_UpdateStringTable& from) : ::google::protobuf::Message() {
  CSVCMsg_UpdateStringTable* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.string_data_){},
      decltype(_impl_.table_id_){},
      decltype(_impl_.num_changed_entries_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.string_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.string_data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.string_data_.Set(from._internal_string_data(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.table_id_, &from._impl_.table_id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.num_changed_entries_) -
    reinterpret_cast<char*>(&_impl_.table_id_)) + sizeof(_impl_.num_changed_entries_));

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_UpdateStringTable)
}
inline void CSVCMsg_UpdateStringTable::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.string_data_){},
      decltype(_impl_.table_id_){0},
      decltype(_impl_.num_changed_entries_){0},
  };
  _impl_.string_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.string_data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CSVCMsg_UpdateStringTable::~CSVCMsg_UpdateStringTable() {
  // @@protoc_insertion_point(destructor:CSVCMsg_UpdateStringTable)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_UpdateStringTable::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.string_data_.Destroy();
}
void CSVCMsg_UpdateStringTable::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_UpdateStringTable::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_UpdateStringTable)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.string_data_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.table_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.num_changed_entries_) -
        reinterpret_cast<char*>(&_impl_.table_id_)) + sizeof(_impl_.num_changed_entries_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_UpdateStringTable::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> CSVCMsg_UpdateStringTable::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_UpdateStringTable, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CSVCMsg_UpdateStringTable_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 table_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_UpdateStringTable, _impl_.table_id_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_UpdateStringTable, _impl_.table_id_)}},
    // optional int32 num_changed_entries = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_UpdateStringTable, _impl_.num_changed_entries_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_UpdateStringTable, _impl_.num_changed_entries_)}},
    // optional bytes string_data = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_UpdateStringTable, _impl_.string_data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 table_id = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_UpdateStringTable, _impl_.table_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 num_changed_entries = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_UpdateStringTable, _impl_.num_changed_entries_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bytes string_data = 3;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_UpdateStringTable, _impl_.string_data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CSVCMsg_UpdateStringTable::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_UpdateStringTable)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 table_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_table_id(), target);
  }

  // optional int32 num_changed_entries = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_num_changed_entries(), target);
  }

  // optional bytes string_data = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_string_data();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_UpdateStringTable)
  return target;
}

::size_t CSVCMsg_UpdateStringTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_UpdateStringTable)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bytes string_data = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_string_data());
    }

    // optional int32 table_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_table_id());
    }

    // optional int32 num_changed_entries = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_num_changed_entries());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_UpdateStringTable::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_UpdateStringTable::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_UpdateStringTable::GetClassData() const { return &_class_data_; }


void CSVCMsg_UpdateStringTable::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_UpdateStringTable*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_UpdateStringTable&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_UpdateStringTable)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_string_data(from._internal_string_data());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.table_id_ = from._impl_.table_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.num_changed_entries_ = from._impl_.num_changed_entries_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_UpdateStringTable::CopyFrom(const CSVCMsg_UpdateStringTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_UpdateStringTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_UpdateStringTable::IsInitialized() const {
  return true;
}

void CSVCMsg_UpdateStringTable::InternalSwap(CSVCMsg_UpdateStringTable* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.string_data_, lhs_arena,
                                       &other->_impl_.string_data_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSVCMsg_UpdateStringTable, _impl_.num_changed_entries_)
      + sizeof(CSVCMsg_UpdateStringTable::_impl_.num_changed_entries_)
      - PROTOBUF_FIELD_OFFSET(CSVCMsg_UpdateStringTable, _impl_.table_id_)>(
          reinterpret_cast<char*>(&_impl_.table_id_),
          reinterpret_cast<char*>(&other->_impl_.table_id_));
}

::google::protobuf::Metadata CSVCMsg_UpdateStringTable::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[44]);
}
// ===================================================================

class CSVCMsg_VoiceData::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_VoiceData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_VoiceData, _impl_._has_bits_);
  static const ::CMsgVoiceAudio& audio(const CSVCMsg_VoiceData* msg);
  static void set_has_audio(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_client(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_proximity(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_xuid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_audible_mask(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_tick(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_passthrough(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

const ::CMsgVoiceAudio& CSVCMsg_VoiceData::_Internal::audio(const CSVCMsg_VoiceData* msg) {
  return *msg->_impl_.audio_;
}
CSVCMsg_VoiceData::CSVCMsg_VoiceData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_VoiceData)
}
CSVCMsg_VoiceData::CSVCMsg_VoiceData(const CSVCMsg_VoiceData& from) : ::google::protobuf::Message() {
  CSVCMsg_VoiceData* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.audio_){nullptr},
      decltype(_impl_.xuid_){},
      decltype(_impl_.proximity_){},
      decltype(_impl_.audible_mask_){},
      decltype(_impl_.tick_){},
      decltype(_impl_.passthrough_){},
      decltype(_impl_.client_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.audio_ = new ::CMsgVoiceAudio(*from._impl_.audio_);
  }
  ::memcpy(&_impl_.xuid_, &from._impl_.xuid_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.client_) -
    reinterpret_cast<char*>(&_impl_.xuid_)) + sizeof(_impl_.client_));

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_VoiceData)
}
inline void CSVCMsg_VoiceData::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.audio_){nullptr},
      decltype(_impl_.xuid_){::uint64_t{0u}},
      decltype(_impl_.proximity_){false},
      decltype(_impl_.audible_mask_){0},
      decltype(_impl_.tick_){0u},
      decltype(_impl_.passthrough_){0},
      decltype(_impl_.client_){-1},
  };
}
CSVCMsg_VoiceData::~CSVCMsg_VoiceData() {
  // @@protoc_insertion_point(destructor:CSVCMsg_VoiceData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_VoiceData::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.audio_;
}
void CSVCMsg_VoiceData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_VoiceData::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_VoiceData)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.audio_ != nullptr);
    _impl_.audio_->Clear();
  }
  if (cached_has_bits & 0x0000007eu) {
    ::memset(&_impl_.xuid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.passthrough_) -
        reinterpret_cast<char*>(&_impl_.xuid_)) + sizeof(_impl_.passthrough_));
    _impl_.client_ = -1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_VoiceData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 0, 2> CSVCMsg_VoiceData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_VoiceData, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CSVCMsg_VoiceData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CMsgVoiceAudio audio = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_VoiceData, _impl_.audio_)}},
    // optional int32 client = 2 [default = -1];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_VoiceData, _impl_.client_), 6>(),
     {16, 6, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_VoiceData, _impl_.client_)}},
    // optional bool proximity = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CSVCMsg_VoiceData, _impl_.proximity_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_VoiceData, _impl_.proximity_)}},
    // optional fixed64 xuid = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_VoiceData, _impl_.xuid_)}},
    // optional int32 audible_mask = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_VoiceData, _impl_.audible_mask_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_VoiceData, _impl_.audible_mask_)}},
    // optional uint32 tick = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_VoiceData, _impl_.tick_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_VoiceData, _impl_.tick_)}},
    // optional int32 passthrough = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_VoiceData, _impl_.passthrough_), 5>(),
     {56, 5, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_VoiceData, _impl_.passthrough_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVoiceAudio audio = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_VoiceData, _impl_.audio_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 client = 2 [default = -1];
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_VoiceData, _impl_.client_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool proximity = 3;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_VoiceData, _impl_.proximity_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional fixed64 xuid = 4;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_VoiceData, _impl_.xuid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional int32 audible_mask = 5;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_VoiceData, _impl_.audible_mask_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 tick = 6;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_VoiceData, _impl_.tick_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 passthrough = 7;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_VoiceData, _impl_.passthrough_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgVoiceAudio>()},
  }}, {{
  }},
};

::uint8_t* CSVCMsg_VoiceData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_VoiceData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgVoiceAudio audio = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::audio(this),
        _Internal::audio(this).GetCachedSize(), target, stream);
  }

  // optional int32 client = 2 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_client(), target);
  }

  // optional bool proximity = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_proximity(), target);
  }

  // optional fixed64 xuid = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        4, this->_internal_xuid(), target);
  }

  // optional int32 audible_mask = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_audible_mask(), target);
  }

  // optional uint32 tick = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_tick(), target);
  }

  // optional int32 passthrough = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_passthrough(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_VoiceData)
  return target;
}

::size_t CSVCMsg_VoiceData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_VoiceData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional .CMsgVoiceAudio audio = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.audio_);
    }

    // optional fixed64 xuid = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }

    // optional bool proximity = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }

    // optional int32 audible_mask = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_audible_mask());
    }

    // optional uint32 tick = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_tick());
    }

    // optional int32 passthrough = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_passthrough());
    }

    // optional int32 client = 2 [default = -1];
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_client());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_VoiceData::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_VoiceData::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_VoiceData::GetClassData() const { return &_class_data_; }


void CSVCMsg_VoiceData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_VoiceData*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_VoiceData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_VoiceData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_audio()->::CMsgVoiceAudio::MergeFrom(
          from._internal_audio());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.xuid_ = from._impl_.xuid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.proximity_ = from._impl_.proximity_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.audible_mask_ = from._impl_.audible_mask_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.tick_ = from._impl_.tick_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.passthrough_ = from._impl_.passthrough_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.client_ = from._impl_.client_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_VoiceData::CopyFrom(const CSVCMsg_VoiceData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_VoiceData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_VoiceData::IsInitialized() const {
  return true;
}

void CSVCMsg_VoiceData::InternalSwap(CSVCMsg_VoiceData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSVCMsg_VoiceData, _impl_.client_)
      + sizeof(CSVCMsg_VoiceData::_impl_.client_)
      - PROTOBUF_FIELD_OFFSET(CSVCMsg_VoiceData, _impl_.audio_)>(
          reinterpret_cast<char*>(&_impl_.audio_),
          reinterpret_cast<char*>(&other->_impl_.audio_));
}

::google::protobuf::Metadata CSVCMsg_VoiceData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[45]);
}
// ===================================================================

class CSVCMsg_PacketReliable::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_PacketReliable>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketReliable, _impl_._has_bits_);
  static void set_has_tick(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_messagessize(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_state(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CSVCMsg_PacketReliable::CSVCMsg_PacketReliable(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_PacketReliable)
}
CSVCMsg_PacketReliable::CSVCMsg_PacketReliable(const CSVCMsg_PacketReliable& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_PacketReliable)
}
inline void CSVCMsg_PacketReliable::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.tick_){0},
      decltype(_impl_.messagessize_){0},
      decltype(_impl_.state_){false},
  };
}
CSVCMsg_PacketReliable::~CSVCMsg_PacketReliable() {
  // @@protoc_insertion_point(destructor:CSVCMsg_PacketReliable)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_PacketReliable::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CSVCMsg_PacketReliable::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_PacketReliable::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_PacketReliable)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.tick_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.state_) -
        reinterpret_cast<char*>(&_impl_.tick_)) + sizeof(_impl_.state_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_PacketReliable::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> CSVCMsg_PacketReliable::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketReliable, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CSVCMsg_PacketReliable_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 tick = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_PacketReliable, _impl_.tick_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketReliable, _impl_.tick_)}},
    // optional int32 messagessize = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_PacketReliable, _impl_.messagessize_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketReliable, _impl_.messagessize_)}},
    // optional bool state = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CSVCMsg_PacketReliable, _impl_.state_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketReliable, _impl_.state_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 tick = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketReliable, _impl_.tick_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 messagessize = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketReliable, _impl_.messagessize_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool state = 3;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketReliable, _impl_.state_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CSVCMsg_PacketReliable::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_PacketReliable)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 tick = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_tick(), target);
  }

  // optional int32 messagessize = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_messagessize(), target);
  }

  // optional bool state = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_PacketReliable)
  return target;
}

::size_t CSVCMsg_PacketReliable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_PacketReliable)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional int32 tick = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_tick());
    }

    // optional int32 messagessize = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_messagessize());
    }

    // optional bool state = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_PacketReliable::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_PacketReliable::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_PacketReliable::GetClassData() const { return &_class_data_; }


void CSVCMsg_PacketReliable::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_PacketReliable*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_PacketReliable&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_PacketReliable)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.tick_ = from._impl_.tick_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.messagessize_ = from._impl_.messagessize_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.state_ = from._impl_.state_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_PacketReliable::CopyFrom(const CSVCMsg_PacketReliable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_PacketReliable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_PacketReliable::IsInitialized() const {
  return true;
}

void CSVCMsg_PacketReliable::InternalSwap(CSVCMsg_PacketReliable* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketReliable, _impl_.state_)
      + sizeof(CSVCMsg_PacketReliable::_impl_.state_)
      - PROTOBUF_FIELD_OFFSET(CSVCMsg_PacketReliable, _impl_.tick_)>(
          reinterpret_cast<char*>(&_impl_.tick_),
          reinterpret_cast<char*>(&other->_impl_.tick_));
}

::google::protobuf::Metadata CSVCMsg_PacketReliable::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[46]);
}
// ===================================================================

class CSVCMsg_FullFrameSplit::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_FullFrameSplit>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_FullFrameSplit, _impl_._has_bits_);
  static void set_has_tick(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_section(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_total(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CSVCMsg_FullFrameSplit::CSVCMsg_FullFrameSplit(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_FullFrameSplit)
}
CSVCMsg_FullFrameSplit::CSVCMsg_FullFrameSplit(const CSVCMsg_FullFrameSplit& from) : ::google::protobuf::Message() {
  CSVCMsg_FullFrameSplit* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){},
      decltype(_impl_.tick_){},
      decltype(_impl_.section_){},
      decltype(_impl_.total_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.data_.Set(from._internal_data(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.tick_, &from._impl_.tick_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.total_) -
    reinterpret_cast<char*>(&_impl_.tick_)) + sizeof(_impl_.total_));

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_FullFrameSplit)
}
inline void CSVCMsg_FullFrameSplit::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){},
      decltype(_impl_.tick_){0},
      decltype(_impl_.section_){0},
      decltype(_impl_.total_){0},
  };
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CSVCMsg_FullFrameSplit::~CSVCMsg_FullFrameSplit() {
  // @@protoc_insertion_point(destructor:CSVCMsg_FullFrameSplit)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_FullFrameSplit::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.Destroy();
}
void CSVCMsg_FullFrameSplit::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_FullFrameSplit::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_FullFrameSplit)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.data_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.tick_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.total_) -
        reinterpret_cast<char*>(&_impl_.tick_)) + sizeof(_impl_.total_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_FullFrameSplit::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> CSVCMsg_FullFrameSplit::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_FullFrameSplit, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CSVCMsg_FullFrameSplit_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bytes data = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_FullFrameSplit, _impl_.data_)}},
    // optional int32 tick = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_FullFrameSplit, _impl_.tick_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_FullFrameSplit, _impl_.tick_)}},
    // optional int32 section = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_FullFrameSplit, _impl_.section_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_FullFrameSplit, _impl_.section_)}},
    // optional int32 total = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_FullFrameSplit, _impl_.total_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_FullFrameSplit, _impl_.total_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 tick = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_FullFrameSplit, _impl_.tick_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 section = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_FullFrameSplit, _impl_.section_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 total = 3;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_FullFrameSplit, _impl_.total_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bytes data = 4;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_FullFrameSplit, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CSVCMsg_FullFrameSplit::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_FullFrameSplit)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 tick = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_tick(), target);
  }

  // optional int32 section = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_section(), target);
  }

  // optional int32 total = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_total(), target);
  }

  // optional bytes data = 4;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_FullFrameSplit)
  return target;
}

::size_t CSVCMsg_FullFrameSplit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_FullFrameSplit)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional bytes data = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_data());
    }

    // optional int32 tick = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_tick());
    }

    // optional int32 section = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_section());
    }

    // optional int32 total = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_total());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_FullFrameSplit::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_FullFrameSplit::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_FullFrameSplit::GetClassData() const { return &_class_data_; }


void CSVCMsg_FullFrameSplit::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_FullFrameSplit*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_FullFrameSplit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_FullFrameSplit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_data(from._internal_data());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.tick_ = from._impl_.tick_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.section_ = from._impl_.section_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.total_ = from._impl_.total_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_FullFrameSplit::CopyFrom(const CSVCMsg_FullFrameSplit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_FullFrameSplit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_FullFrameSplit::IsInitialized() const {
  return true;
}

void CSVCMsg_FullFrameSplit::InternalSwap(CSVCMsg_FullFrameSplit* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, lhs_arena,
                                       &other->_impl_.data_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSVCMsg_FullFrameSplit, _impl_.total_)
      + sizeof(CSVCMsg_FullFrameSplit::_impl_.total_)
      - PROTOBUF_FIELD_OFFSET(CSVCMsg_FullFrameSplit, _impl_.tick_)>(
          reinterpret_cast<char*>(&_impl_.tick_),
          reinterpret_cast<char*>(&other->_impl_.tick_));
}

::google::protobuf::Metadata CSVCMsg_FullFrameSplit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[47]);
}
// ===================================================================

class CSVCMsg_HLTVStatus::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_HLTVStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_HLTVStatus, _impl_._has_bits_);
  static void set_has_master(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_clients(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_slots(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_proxies(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CSVCMsg_HLTVStatus::CSVCMsg_HLTVStatus(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_HLTVStatus)
}
CSVCMsg_HLTVStatus::CSVCMsg_HLTVStatus(const CSVCMsg_HLTVStatus& from) : ::google::protobuf::Message() {
  CSVCMsg_HLTVStatus* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.master_){},
      decltype(_impl_.clients_){},
      decltype(_impl_.slots_){},
      decltype(_impl_.proxies_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.master_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.master_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.master_.Set(from._internal_master(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.clients_, &from._impl_.clients_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.proxies_) -
    reinterpret_cast<char*>(&_impl_.clients_)) + sizeof(_impl_.proxies_));

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_HLTVStatus)
}
inline void CSVCMsg_HLTVStatus::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.master_){},
      decltype(_impl_.clients_){0},
      decltype(_impl_.slots_){0},
      decltype(_impl_.proxies_){0},
  };
  _impl_.master_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.master_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CSVCMsg_HLTVStatus::~CSVCMsg_HLTVStatus() {
  // @@protoc_insertion_point(destructor:CSVCMsg_HLTVStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_HLTVStatus::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.master_.Destroy();
}
void CSVCMsg_HLTVStatus::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_HLTVStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_HLTVStatus)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.master_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.clients_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.proxies_) -
        reinterpret_cast<char*>(&_impl_.clients_)) + sizeof(_impl_.proxies_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_HLTVStatus::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 33, 2> CSVCMsg_HLTVStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_HLTVStatus, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CSVCMsg_HLTVStatus_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 proxies = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_HLTVStatus, _impl_.proxies_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_HLTVStatus, _impl_.proxies_)}},
    // optional string master = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_HLTVStatus, _impl_.master_)}},
    // optional int32 clients = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_HLTVStatus, _impl_.clients_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_HLTVStatus, _impl_.clients_)}},
    // optional int32 slots = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_HLTVStatus, _impl_.slots_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_HLTVStatus, _impl_.slots_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string master = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_HLTVStatus, _impl_.master_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 clients = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_HLTVStatus, _impl_.clients_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 slots = 3;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_HLTVStatus, _impl_.slots_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 proxies = 4;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_HLTVStatus, _impl_.proxies_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\22\6\0\0\0\0\0\0"
    "CSVCMsg_HLTVStatus"
    "master"
  }},
};

::uint8_t* CSVCMsg_HLTVStatus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_HLTVStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string master = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_master();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSVCMsg_HLTVStatus.master");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional int32 clients = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_clients(), target);
  }

  // optional int32 slots = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_slots(), target);
  }

  // optional int32 proxies = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_proxies(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_HLTVStatus)
  return target;
}

::size_t CSVCMsg_HLTVStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_HLTVStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string master = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_master());
    }

    // optional int32 clients = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_clients());
    }

    // optional int32 slots = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_slots());
    }

    // optional int32 proxies = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_proxies());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_HLTVStatus::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_HLTVStatus::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_HLTVStatus::GetClassData() const { return &_class_data_; }


void CSVCMsg_HLTVStatus::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_HLTVStatus*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_HLTVStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_HLTVStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_master(from._internal_master());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.clients_ = from._impl_.clients_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.slots_ = from._impl_.slots_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.proxies_ = from._impl_.proxies_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_HLTVStatus::CopyFrom(const CSVCMsg_HLTVStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_HLTVStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_HLTVStatus::IsInitialized() const {
  return true;
}

void CSVCMsg_HLTVStatus::InternalSwap(CSVCMsg_HLTVStatus* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.master_, lhs_arena,
                                       &other->_impl_.master_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSVCMsg_HLTVStatus, _impl_.proxies_)
      + sizeof(CSVCMsg_HLTVStatus::_impl_.proxies_)
      - PROTOBUF_FIELD_OFFSET(CSVCMsg_HLTVStatus, _impl_.clients_)>(
          reinterpret_cast<char*>(&_impl_.clients_),
          reinterpret_cast<char*>(&other->_impl_.clients_));
}

::google::protobuf::Metadata CSVCMsg_HLTVStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[48]);
}
// ===================================================================

class CSVCMsg_ServerSteamID::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_ServerSteamID>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerSteamID, _impl_._has_bits_);
  static void set_has_steam_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CSVCMsg_ServerSteamID::CSVCMsg_ServerSteamID(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_ServerSteamID)
}
CSVCMsg_ServerSteamID::CSVCMsg_ServerSteamID(const CSVCMsg_ServerSteamID& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_ServerSteamID)
}
inline void CSVCMsg_ServerSteamID::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.steam_id_){::uint64_t{0u}},
  };
}
CSVCMsg_ServerSteamID::~CSVCMsg_ServerSteamID() {
  // @@protoc_insertion_point(destructor:CSVCMsg_ServerSteamID)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_ServerSteamID::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CSVCMsg_ServerSteamID::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_ServerSteamID::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_ServerSteamID)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.steam_id_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_ServerSteamID::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CSVCMsg_ServerSteamID::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerSteamID, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CSVCMsg_ServerSteamID_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint64 steam_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CSVCMsg_ServerSteamID, _impl_.steam_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerSteamID, _impl_.steam_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 steam_id = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_ServerSteamID, _impl_.steam_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CSVCMsg_ServerSteamID::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_ServerSteamID)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_steam_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_ServerSteamID)
  return target;
}

::size_t CSVCMsg_ServerSteamID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_ServerSteamID)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 steam_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_steam_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_ServerSteamID::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_ServerSteamID::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_ServerSteamID::GetClassData() const { return &_class_data_; }


void CSVCMsg_ServerSteamID::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_ServerSteamID*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_ServerSteamID&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_ServerSteamID)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_steam_id(from._internal_steam_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_ServerSteamID::CopyFrom(const CSVCMsg_ServerSteamID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_ServerSteamID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_ServerSteamID::IsInitialized() const {
  return true;
}

void CSVCMsg_ServerSteamID::InternalSwap(CSVCMsg_ServerSteamID* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.steam_id_, other->_impl_.steam_id_);
}

::google::protobuf::Metadata CSVCMsg_ServerSteamID::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[49]);
}
// ===================================================================

class CSVCMsg_CmdKeyValues::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_CmdKeyValues>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_CmdKeyValues, _impl_._has_bits_);
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CSVCMsg_CmdKeyValues::CSVCMsg_CmdKeyValues(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_CmdKeyValues)
}
CSVCMsg_CmdKeyValues::CSVCMsg_CmdKeyValues(const CSVCMsg_CmdKeyValues& from) : ::google::protobuf::Message() {
  CSVCMsg_CmdKeyValues* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.data_.Set(from._internal_data(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_CmdKeyValues)
}
inline void CSVCMsg_CmdKeyValues::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){},
  };
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CSVCMsg_CmdKeyValues::~CSVCMsg_CmdKeyValues() {
  // @@protoc_insertion_point(destructor:CSVCMsg_CmdKeyValues)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_CmdKeyValues::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.Destroy();
}
void CSVCMsg_CmdKeyValues::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_CmdKeyValues::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_CmdKeyValues)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.data_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_CmdKeyValues::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CSVCMsg_CmdKeyValues::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_CmdKeyValues, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CSVCMsg_CmdKeyValues_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bytes data = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_CmdKeyValues, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes data = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_CmdKeyValues, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CSVCMsg_CmdKeyValues::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_CmdKeyValues)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes data = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_CmdKeyValues)
  return target;
}

::size_t CSVCMsg_CmdKeyValues::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_CmdKeyValues)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes data = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_CmdKeyValues::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_CmdKeyValues::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_CmdKeyValues::GetClassData() const { return &_class_data_; }


void CSVCMsg_CmdKeyValues::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_CmdKeyValues*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_CmdKeyValues&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_CmdKeyValues)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_CmdKeyValues::CopyFrom(const CSVCMsg_CmdKeyValues& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_CmdKeyValues)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_CmdKeyValues::IsInitialized() const {
  return true;
}

void CSVCMsg_CmdKeyValues::InternalSwap(CSVCMsg_CmdKeyValues* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, lhs_arena,
                                       &other->_impl_.data_, rhs_arena);
}

::google::protobuf::Metadata CSVCMsg_CmdKeyValues::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[50]);
}
// ===================================================================

class CSVCMsg_RconServerDetails::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_RconServerDetails>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_RconServerDetails, _impl_._has_bits_);
  static void set_has_token(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_details(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CSVCMsg_RconServerDetails::CSVCMsg_RconServerDetails(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_RconServerDetails)
}
CSVCMsg_RconServerDetails::CSVCMsg_RconServerDetails(const CSVCMsg_RconServerDetails& from) : ::google::protobuf::Message() {
  CSVCMsg_RconServerDetails* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.token_){},
      decltype(_impl_.details_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.token_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.token_.Set(from._internal_token(), _this->GetArenaForAllocation());
  }
  _impl_.details_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.details_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.details_.Set(from._internal_details(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_RconServerDetails)
}
inline void CSVCMsg_RconServerDetails::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.token_){},
      decltype(_impl_.details_){},
  };
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.token_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.details_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.details_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CSVCMsg_RconServerDetails::~CSVCMsg_RconServerDetails() {
  // @@protoc_insertion_point(destructor:CSVCMsg_RconServerDetails)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_RconServerDetails::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.token_.Destroy();
  _impl_.details_.Destroy();
}
void CSVCMsg_RconServerDetails::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_RconServerDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_RconServerDetails)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.token_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.details_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_RconServerDetails::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 41, 2> CSVCMsg_RconServerDetails::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_RconServerDetails, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CSVCMsg_RconServerDetails_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string details = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_RconServerDetails, _impl_.details_)}},
    // optional bytes token = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_RconServerDetails, _impl_.token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes token = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_RconServerDetails, _impl_.token_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional string details = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_RconServerDetails, _impl_.details_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\0\7\0\0\0\0\0"
    "CSVCMsg_RconServerDetails"
    "details"
  }},
};

::uint8_t* CSVCMsg_RconServerDetails::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_RconServerDetails)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes token = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_token();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // optional string details = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_details();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSVCMsg_RconServerDetails.details");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_RconServerDetails)
  return target;
}

::size_t CSVCMsg_RconServerDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_RconServerDetails)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes token = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_token());
    }

    // optional string details = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_details());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_RconServerDetails::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_RconServerDetails::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_RconServerDetails::GetClassData() const { return &_class_data_; }


void CSVCMsg_RconServerDetails::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_RconServerDetails*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_RconServerDetails&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_RconServerDetails)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_token(from._internal_token());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_details(from._internal_details());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_RconServerDetails::CopyFrom(const CSVCMsg_RconServerDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_RconServerDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_RconServerDetails::IsInitialized() const {
  return true;
}

void CSVCMsg_RconServerDetails::InternalSwap(CSVCMsg_RconServerDetails* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_, lhs_arena,
                                       &other->_impl_.token_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.details_, lhs_arena,
                                       &other->_impl_.details_, rhs_arena);
}

::google::protobuf::Metadata CSVCMsg_RconServerDetails::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[51]);
}
// ===================================================================

class CMsgIPCAddress::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgIPCAddress>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgIPCAddress, _impl_._has_bits_);
  static void set_has_computer_guid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_process_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgIPCAddress::CMsgIPCAddress(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgIPCAddress)
}
CMsgIPCAddress::CMsgIPCAddress(const CMsgIPCAddress& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgIPCAddress)
}
inline void CMsgIPCAddress::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.computer_guid_){::uint64_t{0u}},
      decltype(_impl_.process_id_){0u},
  };
}
CMsgIPCAddress::~CMsgIPCAddress() {
  // @@protoc_insertion_point(destructor:CMsgIPCAddress)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgIPCAddress::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CMsgIPCAddress::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgIPCAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgIPCAddress)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.computer_guid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.process_id_) -
        reinterpret_cast<char*>(&_impl_.computer_guid_)) + sizeof(_impl_.process_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgIPCAddress::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> CMsgIPCAddress::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgIPCAddress, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgIPCAddress_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 process_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgIPCAddress, _impl_.process_id_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgIPCAddress, _impl_.process_id_)}},
    // optional fixed64 computer_guid = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgIPCAddress, _impl_.computer_guid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed64 computer_guid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgIPCAddress, _impl_.computer_guid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional uint32 process_id = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgIPCAddress, _impl_.process_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgIPCAddress::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgIPCAddress)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 computer_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        1, this->_internal_computer_guid(), target);
  }

  // optional uint32 process_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_process_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgIPCAddress)
  return target;
}

::size_t CMsgIPCAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgIPCAddress)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional fixed64 computer_guid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 9;
    }

    // optional uint32 process_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_process_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgIPCAddress::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgIPCAddress::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgIPCAddress::GetClassData() const { return &_class_data_; }


void CMsgIPCAddress::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgIPCAddress*>(&to_msg);
  auto& from = static_cast<const CMsgIPCAddress&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgIPCAddress)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.computer_guid_ = from._impl_.computer_guid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.process_id_ = from._impl_.process_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgIPCAddress::CopyFrom(const CMsgIPCAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgIPCAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgIPCAddress::IsInitialized() const {
  return true;
}

void CMsgIPCAddress::InternalSwap(CMsgIPCAddress* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgIPCAddress, _impl_.process_id_)
      + sizeof(CMsgIPCAddress::_impl_.process_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgIPCAddress, _impl_.computer_guid_)>(
          reinterpret_cast<char*>(&_impl_.computer_guid_),
          reinterpret_cast<char*>(&other->_impl_.computer_guid_));
}

::google::protobuf::Metadata CMsgIPCAddress::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[52]);
}
// ===================================================================

class CMsgServerPeer::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgServerPeer>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgServerPeer, _impl_._has_bits_);
  static void set_has_player_slot(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgIPCAddress& ipc(const CMsgServerPeer* msg);
  static void set_has_ipc(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_they_hear_you(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_you_hear_them(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_is_listenserver_host(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

const ::CMsgIPCAddress& CMsgServerPeer::_Internal::ipc(const CMsgServerPeer* msg) {
  return *msg->_impl_.ipc_;
}
CMsgServerPeer::CMsgServerPeer(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgServerPeer)
}
CMsgServerPeer::CMsgServerPeer(const CMsgServerPeer& from) : ::google::protobuf::Message() {
  CMsgServerPeer* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.ipc_){nullptr},
      decltype(_impl_.steamid_){},
      decltype(_impl_.they_hear_you_){},
      decltype(_impl_.you_hear_them_){},
      decltype(_impl_.is_listenserver_host_){},
      decltype(_impl_.player_slot_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.ipc_ = new ::CMsgIPCAddress(*from._impl_.ipc_);
  }
  ::memcpy(&_impl_.steamid_, &from._impl_.steamid_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.player_slot_) -
    reinterpret_cast<char*>(&_impl_.steamid_)) + sizeof(_impl_.player_slot_));

  // @@protoc_insertion_point(copy_constructor:CMsgServerPeer)
}
inline void CMsgServerPeer::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.ipc_){nullptr},
      decltype(_impl_.steamid_){::uint64_t{0u}},
      decltype(_impl_.they_hear_you_){false},
      decltype(_impl_.you_hear_them_){false},
      decltype(_impl_.is_listenserver_host_){false},
      decltype(_impl_.player_slot_){-1},
  };
}
CMsgServerPeer::~CMsgServerPeer() {
  // @@protoc_insertion_point(destructor:CMsgServerPeer)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgServerPeer::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.ipc_;
}
void CMsgServerPeer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgServerPeer::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgServerPeer)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.ipc_ != nullptr);
    _impl_.ipc_->Clear();
  }
  if (cached_has_bits & 0x0000003eu) {
    ::memset(&_impl_.steamid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_listenserver_host_) -
        reinterpret_cast<char*>(&_impl_.steamid_)) + sizeof(_impl_.is_listenserver_host_));
    _impl_.player_slot_ = -1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgServerPeer::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 0, 2> CMsgServerPeer::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgServerPeer, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgServerPeer_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 player_slot = 1 [default = -1];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgServerPeer, _impl_.player_slot_), 5>(),
     {8, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgServerPeer, _impl_.player_slot_)}},
    // optional fixed64 steamid = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgServerPeer, _impl_.steamid_)}},
    // optional .CMsgIPCAddress ipc = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgServerPeer, _impl_.ipc_)}},
    // optional bool they_hear_you = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgServerPeer, _impl_.they_hear_you_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgServerPeer, _impl_.they_hear_you_)}},
    // optional bool you_hear_them = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgServerPeer, _impl_.you_hear_them_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgServerPeer, _impl_.you_hear_them_)}},
    // optional bool is_listenserver_host = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgServerPeer, _impl_.is_listenserver_host_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgServerPeer, _impl_.is_listenserver_host_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 player_slot = 1 [default = -1];
    {PROTOBUF_FIELD_OFFSET(CMsgServerPeer, _impl_.player_slot_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional fixed64 steamid = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgServerPeer, _impl_.steamid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional .CMsgIPCAddress ipc = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgServerPeer, _impl_.ipc_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool they_hear_you = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgServerPeer, _impl_.they_hear_you_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool you_hear_them = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgServerPeer, _impl_.you_hear_them_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool is_listenserver_host = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgServerPeer, _impl_.is_listenserver_host_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgIPCAddress>()},
  }}, {{
  }},
};

::uint8_t* CMsgServerPeer::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgServerPeer)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 player_slot = 1 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_player_slot(), target);
  }

  // optional fixed64 steamid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        2, this->_internal_steamid(), target);
  }

  // optional .CMsgIPCAddress ipc = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::ipc(this),
        _Internal::ipc(this).GetCachedSize(), target, stream);
  }

  // optional bool they_hear_you = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_they_hear_you(), target);
  }

  // optional bool you_hear_them = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_you_hear_them(), target);
  }

  // optional bool is_listenserver_host = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_is_listenserver_host(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgServerPeer)
  return target;
}

::size_t CMsgServerPeer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgServerPeer)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .CMsgIPCAddress ipc = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.ipc_);
    }

    // optional fixed64 steamid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }

    // optional bool they_hear_you = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }

    // optional bool you_hear_them = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2;
    }

    // optional bool is_listenserver_host = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2;
    }

    // optional int32 player_slot = 1 [default = -1];
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_player_slot());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgServerPeer::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgServerPeer::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgServerPeer::GetClassData() const { return &_class_data_; }


void CMsgServerPeer::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgServerPeer*>(&to_msg);
  auto& from = static_cast<const CMsgServerPeer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgServerPeer)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_ipc()->::CMsgIPCAddress::MergeFrom(
          from._internal_ipc());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.steamid_ = from._impl_.steamid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.they_hear_you_ = from._impl_.they_hear_you_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.you_hear_them_ = from._impl_.you_hear_them_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.is_listenserver_host_ = from._impl_.is_listenserver_host_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.player_slot_ = from._impl_.player_slot_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgServerPeer::CopyFrom(const CMsgServerPeer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgServerPeer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgServerPeer::IsInitialized() const {
  return true;
}

void CMsgServerPeer::InternalSwap(CMsgServerPeer* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgServerPeer, _impl_.player_slot_)
      + sizeof(CMsgServerPeer::_impl_.player_slot_)
      - PROTOBUF_FIELD_OFFSET(CMsgServerPeer, _impl_.ipc_)>(
          reinterpret_cast<char*>(&_impl_.ipc_),
          reinterpret_cast<char*>(&other->_impl_.ipc_));
}

::google::protobuf::Metadata CMsgServerPeer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[53]);
}
// ===================================================================

class CSVCMsg_PeerList::_Internal {
 public:
};

CSVCMsg_PeerList::CSVCMsg_PeerList(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_PeerList)
}
CSVCMsg_PeerList::CSVCMsg_PeerList(const CSVCMsg_PeerList& from) : ::google::protobuf::Message() {
  CSVCMsg_PeerList* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.peer_){from._impl_.peer_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_PeerList)
}
inline void CSVCMsg_PeerList::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.peer_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
CSVCMsg_PeerList::~CSVCMsg_PeerList() {
  // @@protoc_insertion_point(destructor:CSVCMsg_PeerList)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_PeerList::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.peer_.~RepeatedPtrField();
}
void CSVCMsg_PeerList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_PeerList::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_PeerList)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_peer()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_PeerList::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CSVCMsg_PeerList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CSVCMsg_PeerList_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .CMsgServerPeer peer = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_PeerList, _impl_.peer_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .CMsgServerPeer peer = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_PeerList, _impl_.peer_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgServerPeer>()},
  }}, {{
  }},
};

::uint8_t* CSVCMsg_PeerList::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_PeerList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .CMsgServerPeer peer = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_peer_size()); i < n; i++) {
    const auto& repfield = this->_internal_peer().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_PeerList)
  return target;
}

::size_t CSVCMsg_PeerList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_PeerList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgServerPeer peer = 1;
  total_size += 1UL * this->_internal_peer_size();
  for (const auto& msg : this->_internal_peer()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_PeerList::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_PeerList::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_PeerList::GetClassData() const { return &_class_data_; }


void CSVCMsg_PeerList::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_PeerList*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_PeerList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_PeerList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_peer()->MergeFrom(from._internal_peer());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_PeerList::CopyFrom(const CSVCMsg_PeerList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_PeerList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_PeerList::IsInitialized() const {
  return true;
}

void CSVCMsg_PeerList::InternalSwap(CSVCMsg_PeerList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.peer_.InternalSwap(&other->_impl_.peer_);
}

::google::protobuf::Metadata CSVCMsg_PeerList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[54]);
}
// ===================================================================

class CSVCMsg_ClearAllStringTables::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_ClearAllStringTables>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_ClearAllStringTables, _impl_._has_bits_);
  static void set_has_mapname(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_create_tables_skipped(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CSVCMsg_ClearAllStringTables::CSVCMsg_ClearAllStringTables(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_ClearAllStringTables)
}
CSVCMsg_ClearAllStringTables::CSVCMsg_ClearAllStringTables(const CSVCMsg_ClearAllStringTables& from) : ::google::protobuf::Message() {
  CSVCMsg_ClearAllStringTables* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.mapname_){},
      decltype(_impl_.create_tables_skipped_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.mapname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.mapname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.mapname_.Set(from._internal_mapname(), _this->GetArenaForAllocation());
  }
  _this->_impl_.create_tables_skipped_ = from._impl_.create_tables_skipped_;

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_ClearAllStringTables)
}
inline void CSVCMsg_ClearAllStringTables::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.mapname_){},
      decltype(_impl_.create_tables_skipped_){false},
  };
  _impl_.mapname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.mapname_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CSVCMsg_ClearAllStringTables::~CSVCMsg_ClearAllStringTables() {
  // @@protoc_insertion_point(destructor:CSVCMsg_ClearAllStringTables)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_ClearAllStringTables::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.mapname_.Destroy();
}
void CSVCMsg_ClearAllStringTables::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_ClearAllStringTables::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_ClearAllStringTables)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.mapname_.ClearNonDefaultToEmpty();
  }
  _impl_.create_tables_skipped_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_ClearAllStringTables::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 0, 44, 2> CSVCMsg_ClearAllStringTables::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_ClearAllStringTables, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967290,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CSVCMsg_ClearAllStringTables_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string mapname = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_ClearAllStringTables, _impl_.mapname_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool create_tables_skipped = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CSVCMsg_ClearAllStringTables, _impl_.create_tables_skipped_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_ClearAllStringTables, _impl_.create_tables_skipped_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string mapname = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_ClearAllStringTables, _impl_.mapname_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool create_tables_skipped = 3;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_ClearAllStringTables, _impl_.create_tables_skipped_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\34\7\0\0\0\0\0\0"
    "CSVCMsg_ClearAllStringTables"
    "mapname"
  }},
};

::uint8_t* CSVCMsg_ClearAllStringTables::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_ClearAllStringTables)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string mapname = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_mapname();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSVCMsg_ClearAllStringTables.mapname");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional bool create_tables_skipped = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_create_tables_skipped(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_ClearAllStringTables)
  return target;
}

::size_t CSVCMsg_ClearAllStringTables::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_ClearAllStringTables)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string mapname = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_mapname());
    }

    // optional bool create_tables_skipped = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_ClearAllStringTables::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_ClearAllStringTables::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_ClearAllStringTables::GetClassData() const { return &_class_data_; }


void CSVCMsg_ClearAllStringTables::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_ClearAllStringTables*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_ClearAllStringTables&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_ClearAllStringTables)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_mapname(from._internal_mapname());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.create_tables_skipped_ = from._impl_.create_tables_skipped_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_ClearAllStringTables::CopyFrom(const CSVCMsg_ClearAllStringTables& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_ClearAllStringTables)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_ClearAllStringTables::IsInitialized() const {
  return true;
}

void CSVCMsg_ClearAllStringTables::InternalSwap(CSVCMsg_ClearAllStringTables* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mapname_, lhs_arena,
                                       &other->_impl_.mapname_, rhs_arena);
        swap(_impl_.create_tables_skipped_, other->_impl_.create_tables_skipped_);
}

::google::protobuf::Metadata CSVCMsg_ClearAllStringTables::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[55]);
}
// ===================================================================

class ProtoFlattenedSerializerField_t_polymorphic_field_t::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoFlattenedSerializerField_t_polymorphic_field_t>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t_polymorphic_field_t, _impl_._has_bits_);
  static void set_has_polymorphic_field_serializer_name_sym(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_polymorphic_field_serializer_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

ProtoFlattenedSerializerField_t_polymorphic_field_t::ProtoFlattenedSerializerField_t_polymorphic_field_t(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoFlattenedSerializerField_t.polymorphic_field_t)
}
ProtoFlattenedSerializerField_t_polymorphic_field_t::ProtoFlattenedSerializerField_t_polymorphic_field_t(const ProtoFlattenedSerializerField_t_polymorphic_field_t& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ProtoFlattenedSerializerField_t.polymorphic_field_t)
}
inline void ProtoFlattenedSerializerField_t_polymorphic_field_t::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.polymorphic_field_serializer_name_sym_){0},
      decltype(_impl_.polymorphic_field_serializer_version_){0},
  };
}
ProtoFlattenedSerializerField_t_polymorphic_field_t::~ProtoFlattenedSerializerField_t_polymorphic_field_t() {
  // @@protoc_insertion_point(destructor:ProtoFlattenedSerializerField_t.polymorphic_field_t)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ProtoFlattenedSerializerField_t_polymorphic_field_t::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void ProtoFlattenedSerializerField_t_polymorphic_field_t::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ProtoFlattenedSerializerField_t_polymorphic_field_t::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoFlattenedSerializerField_t.polymorphic_field_t)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.polymorphic_field_serializer_name_sym_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.polymorphic_field_serializer_version_) -
        reinterpret_cast<char*>(&_impl_.polymorphic_field_serializer_name_sym_)) + sizeof(_impl_.polymorphic_field_serializer_version_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ProtoFlattenedSerializerField_t_polymorphic_field_t::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> ProtoFlattenedSerializerField_t_polymorphic_field_t::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t_polymorphic_field_t, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ProtoFlattenedSerializerField_t_polymorphic_field_t_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 polymorphic_field_serializer_version = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ProtoFlattenedSerializerField_t_polymorphic_field_t, _impl_.polymorphic_field_serializer_version_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t_polymorphic_field_t, _impl_.polymorphic_field_serializer_version_)}},
    // optional int32 polymorphic_field_serializer_name_sym = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ProtoFlattenedSerializerField_t_polymorphic_field_t, _impl_.polymorphic_field_serializer_name_sym_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t_polymorphic_field_t, _impl_.polymorphic_field_serializer_name_sym_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 polymorphic_field_serializer_name_sym = 1;
    {PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t_polymorphic_field_t, _impl_.polymorphic_field_serializer_name_sym_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 polymorphic_field_serializer_version = 2;
    {PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t_polymorphic_field_t, _impl_.polymorphic_field_serializer_version_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ProtoFlattenedSerializerField_t_polymorphic_field_t::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoFlattenedSerializerField_t.polymorphic_field_t)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 polymorphic_field_serializer_name_sym = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_polymorphic_field_serializer_name_sym(), target);
  }

  // optional int32 polymorphic_field_serializer_version = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_polymorphic_field_serializer_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoFlattenedSerializerField_t.polymorphic_field_t)
  return target;
}

::size_t ProtoFlattenedSerializerField_t_polymorphic_field_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoFlattenedSerializerField_t.polymorphic_field_t)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 polymorphic_field_serializer_name_sym = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_polymorphic_field_serializer_name_sym());
    }

    // optional int32 polymorphic_field_serializer_version = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_polymorphic_field_serializer_version());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ProtoFlattenedSerializerField_t_polymorphic_field_t::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ProtoFlattenedSerializerField_t_polymorphic_field_t::MergeImpl
};
const ::google::protobuf::Message::ClassData*ProtoFlattenedSerializerField_t_polymorphic_field_t::GetClassData() const { return &_class_data_; }


void ProtoFlattenedSerializerField_t_polymorphic_field_t::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ProtoFlattenedSerializerField_t_polymorphic_field_t*>(&to_msg);
  auto& from = static_cast<const ProtoFlattenedSerializerField_t_polymorphic_field_t&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProtoFlattenedSerializerField_t.polymorphic_field_t)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.polymorphic_field_serializer_name_sym_ = from._impl_.polymorphic_field_serializer_name_sym_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.polymorphic_field_serializer_version_ = from._impl_.polymorphic_field_serializer_version_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProtoFlattenedSerializerField_t_polymorphic_field_t::CopyFrom(const ProtoFlattenedSerializerField_t_polymorphic_field_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoFlattenedSerializerField_t.polymorphic_field_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ProtoFlattenedSerializerField_t_polymorphic_field_t::IsInitialized() const {
  return true;
}

void ProtoFlattenedSerializerField_t_polymorphic_field_t::InternalSwap(ProtoFlattenedSerializerField_t_polymorphic_field_t* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t_polymorphic_field_t, _impl_.polymorphic_field_serializer_version_)
      + sizeof(ProtoFlattenedSerializerField_t_polymorphic_field_t::_impl_.polymorphic_field_serializer_version_)
      - PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t_polymorphic_field_t, _impl_.polymorphic_field_serializer_name_sym_)>(
          reinterpret_cast<char*>(&_impl_.polymorphic_field_serializer_name_sym_),
          reinterpret_cast<char*>(&other->_impl_.polymorphic_field_serializer_name_sym_));
}

::google::protobuf::Metadata ProtoFlattenedSerializerField_t_polymorphic_field_t::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[56]);
}
// ===================================================================

class ProtoFlattenedSerializerField_t::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoFlattenedSerializerField_t>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t, _impl_._has_bits_);
  static void set_has_var_type_sym(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_var_name_sym(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_bit_count(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_low_value(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_high_value(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_encode_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_field_serializer_name_sym(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_field_serializer_version(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_send_node_sym(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_var_encoder_sym(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
};

ProtoFlattenedSerializerField_t::ProtoFlattenedSerializerField_t(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoFlattenedSerializerField_t)
}
ProtoFlattenedSerializerField_t::ProtoFlattenedSerializerField_t(const ProtoFlattenedSerializerField_t& from) : ::google::protobuf::Message() {
  ProtoFlattenedSerializerField_t* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.polymorphic_types_){from._impl_.polymorphic_types_},
      decltype(_impl_.var_type_sym_){},
      decltype(_impl_.var_name_sym_){},
      decltype(_impl_.bit_count_){},
      decltype(_impl_.low_value_){},
      decltype(_impl_.high_value_){},
      decltype(_impl_.encode_flags_){},
      decltype(_impl_.field_serializer_name_sym_){},
      decltype(_impl_.field_serializer_version_){},
      decltype(_impl_.send_node_sym_){},
      decltype(_impl_.var_encoder_sym_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  ::memcpy(&_impl_.var_type_sym_, &from._impl_.var_type_sym_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.var_encoder_sym_) -
    reinterpret_cast<char*>(&_impl_.var_type_sym_)) + sizeof(_impl_.var_encoder_sym_));

  // @@protoc_insertion_point(copy_constructor:ProtoFlattenedSerializerField_t)
}
inline void ProtoFlattenedSerializerField_t::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.polymorphic_types_){arena},
      decltype(_impl_.var_type_sym_){0},
      decltype(_impl_.var_name_sym_){0},
      decltype(_impl_.bit_count_){0},
      decltype(_impl_.low_value_){0},
      decltype(_impl_.high_value_){0},
      decltype(_impl_.encode_flags_){0},
      decltype(_impl_.field_serializer_name_sym_){0},
      decltype(_impl_.field_serializer_version_){0},
      decltype(_impl_.send_node_sym_){0},
      decltype(_impl_.var_encoder_sym_){0},
  };
}
ProtoFlattenedSerializerField_t::~ProtoFlattenedSerializerField_t() {
  // @@protoc_insertion_point(destructor:ProtoFlattenedSerializerField_t)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ProtoFlattenedSerializerField_t::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.polymorphic_types_.~RepeatedPtrField();
}
void ProtoFlattenedSerializerField_t::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ProtoFlattenedSerializerField_t::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoFlattenedSerializerField_t)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_polymorphic_types()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.var_type_sym_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.field_serializer_version_) -
        reinterpret_cast<char*>(&_impl_.var_type_sym_)) + sizeof(_impl_.field_serializer_version_));
  }
  if (cached_has_bits & 0x00000300u) {
    ::memset(&_impl_.send_node_sym_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.var_encoder_sym_) -
        reinterpret_cast<char*>(&_impl_.send_node_sym_)) + sizeof(_impl_.var_encoder_sym_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ProtoFlattenedSerializerField_t::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 1, 0, 2> ProtoFlattenedSerializerField_t::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ProtoFlattenedSerializerField_t_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 var_type_sym = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ProtoFlattenedSerializerField_t, _impl_.var_type_sym_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t, _impl_.var_type_sym_)}},
    // optional int32 var_name_sym = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ProtoFlattenedSerializerField_t, _impl_.var_name_sym_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t, _impl_.var_name_sym_)}},
    // optional int32 bit_count = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ProtoFlattenedSerializerField_t, _impl_.bit_count_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t, _impl_.bit_count_)}},
    // optional float low_value = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t, _impl_.low_value_)}},
    // optional float high_value = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t, _impl_.high_value_)}},
    // optional int32 encode_flags = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ProtoFlattenedSerializerField_t, _impl_.encode_flags_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t, _impl_.encode_flags_)}},
    // optional int32 field_serializer_name_sym = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ProtoFlattenedSerializerField_t, _impl_.field_serializer_name_sym_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t, _impl_.field_serializer_name_sym_)}},
    // optional int32 field_serializer_version = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ProtoFlattenedSerializerField_t, _impl_.field_serializer_version_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t, _impl_.field_serializer_version_)}},
    // optional int32 send_node_sym = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ProtoFlattenedSerializerField_t, _impl_.send_node_sym_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t, _impl_.send_node_sym_)}},
    // optional int32 var_encoder_sym = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ProtoFlattenedSerializerField_t, _impl_.var_encoder_sym_), 9>(),
     {80, 9, 0, PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t, _impl_.var_encoder_sym_)}},
    // repeated .ProtoFlattenedSerializerField_t.polymorphic_field_t polymorphic_types = 11;
    {::_pbi::TcParser::FastMtR1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t, _impl_.polymorphic_types_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 var_type_sym = 1;
    {PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t, _impl_.var_type_sym_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 var_name_sym = 2;
    {PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t, _impl_.var_name_sym_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 bit_count = 3;
    {PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t, _impl_.bit_count_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional float low_value = 4;
    {PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t, _impl_.low_value_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float high_value = 5;
    {PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t, _impl_.high_value_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional int32 encode_flags = 6;
    {PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t, _impl_.encode_flags_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 field_serializer_name_sym = 7;
    {PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t, _impl_.field_serializer_name_sym_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 field_serializer_version = 8;
    {PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t, _impl_.field_serializer_version_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 send_node_sym = 9;
    {PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t, _impl_.send_node_sym_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 var_encoder_sym = 10;
    {PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t, _impl_.var_encoder_sym_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated .ProtoFlattenedSerializerField_t.polymorphic_field_t polymorphic_types = 11;
    {PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t, _impl_.polymorphic_types_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ProtoFlattenedSerializerField_t_polymorphic_field_t>()},
  }}, {{
  }},
};

::uint8_t* ProtoFlattenedSerializerField_t::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoFlattenedSerializerField_t)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 var_type_sym = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_var_type_sym(), target);
  }

  // optional int32 var_name_sym = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_var_name_sym(), target);
  }

  // optional int32 bit_count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_bit_count(), target);
  }

  // optional float low_value = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_low_value(), target);
  }

  // optional float high_value = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_high_value(), target);
  }

  // optional int32 encode_flags = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_encode_flags(), target);
  }

  // optional int32 field_serializer_name_sym = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_field_serializer_name_sym(), target);
  }

  // optional int32 field_serializer_version = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<8>(
            stream, this->_internal_field_serializer_version(), target);
  }

  // optional int32 send_node_sym = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<9>(
            stream, this->_internal_send_node_sym(), target);
  }

  // optional int32 var_encoder_sym = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<10>(
            stream, this->_internal_var_encoder_sym(), target);
  }

  // repeated .ProtoFlattenedSerializerField_t.polymorphic_field_t polymorphic_types = 11;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_polymorphic_types_size()); i < n; i++) {
    const auto& repfield = this->_internal_polymorphic_types().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(11, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoFlattenedSerializerField_t)
  return target;
}

::size_t ProtoFlattenedSerializerField_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoFlattenedSerializerField_t)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ProtoFlattenedSerializerField_t.polymorphic_field_t polymorphic_types = 11;
  total_size += 1UL * this->_internal_polymorphic_types_size();
  for (const auto& msg : this->_internal_polymorphic_types()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional int32 var_type_sym = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_var_type_sym());
    }

    // optional int32 var_name_sym = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_var_name_sym());
    }

    // optional int32 bit_count = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_bit_count());
    }

    // optional float low_value = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 5;
    }

    // optional float high_value = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 5;
    }

    // optional int32 encode_flags = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_encode_flags());
    }

    // optional int32 field_serializer_name_sym = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_field_serializer_name_sym());
    }

    // optional int32 field_serializer_version = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_field_serializer_version());
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional int32 send_node_sym = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_send_node_sym());
    }

    // optional int32 var_encoder_sym = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_var_encoder_sym());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ProtoFlattenedSerializerField_t::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ProtoFlattenedSerializerField_t::MergeImpl
};
const ::google::protobuf::Message::ClassData*ProtoFlattenedSerializerField_t::GetClassData() const { return &_class_data_; }


void ProtoFlattenedSerializerField_t::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ProtoFlattenedSerializerField_t*>(&to_msg);
  auto& from = static_cast<const ProtoFlattenedSerializerField_t&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProtoFlattenedSerializerField_t)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_polymorphic_types()->MergeFrom(from._internal_polymorphic_types());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.var_type_sym_ = from._impl_.var_type_sym_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.var_name_sym_ = from._impl_.var_name_sym_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.bit_count_ = from._impl_.bit_count_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.low_value_ = from._impl_.low_value_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.high_value_ = from._impl_.high_value_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.encode_flags_ = from._impl_.encode_flags_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.field_serializer_name_sym_ = from._impl_.field_serializer_name_sym_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.field_serializer_version_ = from._impl_.field_serializer_version_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.send_node_sym_ = from._impl_.send_node_sym_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.var_encoder_sym_ = from._impl_.var_encoder_sym_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProtoFlattenedSerializerField_t::CopyFrom(const ProtoFlattenedSerializerField_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoFlattenedSerializerField_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ProtoFlattenedSerializerField_t::IsInitialized() const {
  return true;
}

void ProtoFlattenedSerializerField_t::InternalSwap(ProtoFlattenedSerializerField_t* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.polymorphic_types_.InternalSwap(&other->_impl_.polymorphic_types_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t, _impl_.var_encoder_sym_)
      + sizeof(ProtoFlattenedSerializerField_t::_impl_.var_encoder_sym_)
      - PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializerField_t, _impl_.var_type_sym_)>(
          reinterpret_cast<char*>(&_impl_.var_type_sym_),
          reinterpret_cast<char*>(&other->_impl_.var_type_sym_));
}

::google::protobuf::Metadata ProtoFlattenedSerializerField_t::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[57]);
}
// ===================================================================

class ProtoFlattenedSerializer_t::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoFlattenedSerializer_t>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializer_t, _impl_._has_bits_);
  static void set_has_serializer_name_sym(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_serializer_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

ProtoFlattenedSerializer_t::ProtoFlattenedSerializer_t(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoFlattenedSerializer_t)
}
ProtoFlattenedSerializer_t::ProtoFlattenedSerializer_t(const ProtoFlattenedSerializer_t& from) : ::google::protobuf::Message() {
  ProtoFlattenedSerializer_t* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.fields_index_){from._impl_.fields_index_},
      decltype(_impl_.serializer_name_sym_){},
      decltype(_impl_.serializer_version_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  ::memcpy(&_impl_.serializer_name_sym_, &from._impl_.serializer_name_sym_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.serializer_version_) -
    reinterpret_cast<char*>(&_impl_.serializer_name_sym_)) + sizeof(_impl_.serializer_version_));

  // @@protoc_insertion_point(copy_constructor:ProtoFlattenedSerializer_t)
}
inline void ProtoFlattenedSerializer_t::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.fields_index_){arena},
      decltype(_impl_.serializer_name_sym_){0},
      decltype(_impl_.serializer_version_){0},
  };
}
ProtoFlattenedSerializer_t::~ProtoFlattenedSerializer_t() {
  // @@protoc_insertion_point(destructor:ProtoFlattenedSerializer_t)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ProtoFlattenedSerializer_t::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.fields_index_.~RepeatedField();
}
void ProtoFlattenedSerializer_t::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ProtoFlattenedSerializer_t::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoFlattenedSerializer_t)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_fields_index()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.serializer_name_sym_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.serializer_version_) -
        reinterpret_cast<char*>(&_impl_.serializer_name_sym_)) + sizeof(_impl_.serializer_version_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ProtoFlattenedSerializer_t::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> ProtoFlattenedSerializer_t::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializer_t, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ProtoFlattenedSerializer_t_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 serializer_name_sym = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ProtoFlattenedSerializer_t, _impl_.serializer_name_sym_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializer_t, _impl_.serializer_name_sym_)}},
    // optional int32 serializer_version = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ProtoFlattenedSerializer_t, _impl_.serializer_version_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializer_t, _impl_.serializer_version_)}},
    // repeated int32 fields_index = 3;
    {::_pbi::TcParser::FastV32R1,
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializer_t, _impl_.fields_index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 serializer_name_sym = 1;
    {PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializer_t, _impl_.serializer_name_sym_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 serializer_version = 2;
    {PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializer_t, _impl_.serializer_version_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated int32 fields_index = 3;
    {PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializer_t, _impl_.fields_index_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ProtoFlattenedSerializer_t::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoFlattenedSerializer_t)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 serializer_name_sym = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_serializer_name_sym(), target);
  }

  // optional int32 serializer_version = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_serializer_version(), target);
  }

  // repeated int32 fields_index = 3;
  for (int i = 0, n = this->_internal_fields_index_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        3, this->_internal_fields_index().Get(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoFlattenedSerializer_t)
  return target;
}

::size_t ProtoFlattenedSerializer_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoFlattenedSerializer_t)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 fields_index = 3;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_fields_index())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_fields_index_size());
    ;
    total_size += tag_size + data_size;
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 serializer_name_sym = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_serializer_name_sym());
    }

    // optional int32 serializer_version = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_serializer_version());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ProtoFlattenedSerializer_t::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ProtoFlattenedSerializer_t::MergeImpl
};
const ::google::protobuf::Message::ClassData*ProtoFlattenedSerializer_t::GetClassData() const { return &_class_data_; }


void ProtoFlattenedSerializer_t::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ProtoFlattenedSerializer_t*>(&to_msg);
  auto& from = static_cast<const ProtoFlattenedSerializer_t&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProtoFlattenedSerializer_t)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_fields_index()->MergeFrom(from._internal_fields_index());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.serializer_name_sym_ = from._impl_.serializer_name_sym_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.serializer_version_ = from._impl_.serializer_version_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProtoFlattenedSerializer_t::CopyFrom(const ProtoFlattenedSerializer_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoFlattenedSerializer_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ProtoFlattenedSerializer_t::IsInitialized() const {
  return true;
}

void ProtoFlattenedSerializer_t::InternalSwap(ProtoFlattenedSerializer_t* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.fields_index_.InternalSwap(&other->_impl_.fields_index_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializer_t, _impl_.serializer_version_)
      + sizeof(ProtoFlattenedSerializer_t::_impl_.serializer_version_)
      - PROTOBUF_FIELD_OFFSET(ProtoFlattenedSerializer_t, _impl_.serializer_name_sym_)>(
          reinterpret_cast<char*>(&_impl_.serializer_name_sym_),
          reinterpret_cast<char*>(&other->_impl_.serializer_name_sym_));
}

::google::protobuf::Metadata ProtoFlattenedSerializer_t::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[58]);
}
// ===================================================================

class CSVCMsg_FlattenedSerializer::_Internal {
 public:
};

CSVCMsg_FlattenedSerializer::CSVCMsg_FlattenedSerializer(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_FlattenedSerializer)
}
CSVCMsg_FlattenedSerializer::CSVCMsg_FlattenedSerializer(const CSVCMsg_FlattenedSerializer& from) : ::google::protobuf::Message() {
  CSVCMsg_FlattenedSerializer* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.serializers_){from._impl_.serializers_},
      decltype(_impl_.symbols_){from._impl_.symbols_},
      decltype(_impl_.fields_){from._impl_.fields_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_FlattenedSerializer)
}
inline void CSVCMsg_FlattenedSerializer::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.serializers_){arena},
      decltype(_impl_.symbols_){arena},
      decltype(_impl_.fields_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
CSVCMsg_FlattenedSerializer::~CSVCMsg_FlattenedSerializer() {
  // @@protoc_insertion_point(destructor:CSVCMsg_FlattenedSerializer)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_FlattenedSerializer::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.serializers_.~RepeatedPtrField();
  _internal_mutable_symbols()->~RepeatedPtrField();
  _impl_.fields_.~RepeatedPtrField();
}
void CSVCMsg_FlattenedSerializer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_FlattenedSerializer::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_FlattenedSerializer)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_serializers()->Clear();
  _internal_mutable_symbols()->Clear();
  _internal_mutable_fields()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_FlattenedSerializer::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 43, 2> CSVCMsg_FlattenedSerializer::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CSVCMsg_FlattenedSerializer_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .ProtoFlattenedSerializer_t serializers = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_FlattenedSerializer, _impl_.serializers_)}},
    // repeated string symbols = 2;
    {::_pbi::TcParser::FastSR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_FlattenedSerializer, _impl_.symbols_)}},
    // repeated .ProtoFlattenedSerializerField_t fields = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(CSVCMsg_FlattenedSerializer, _impl_.fields_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .ProtoFlattenedSerializer_t serializers = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_FlattenedSerializer, _impl_.serializers_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string symbols = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_FlattenedSerializer, _impl_.symbols_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // repeated .ProtoFlattenedSerializerField_t fields = 3;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_FlattenedSerializer, _impl_.fields_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ProtoFlattenedSerializer_t>()},
    {::_pbi::TcParser::GetTable<::ProtoFlattenedSerializerField_t>()},
  }}, {{
    "\33\0\7\0\0\0\0\0"
    "CSVCMsg_FlattenedSerializer"
    "symbols"
  }},
};

::uint8_t* CSVCMsg_FlattenedSerializer::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_FlattenedSerializer)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .ProtoFlattenedSerializer_t serializers = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_serializers_size()); i < n; i++) {
    const auto& repfield = this->_internal_serializers().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated string symbols = 2;
  for (int i = 0, n = this->_internal_symbols_size(); i < n; ++i) {
    const auto& s = this->_internal_symbols().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSVCMsg_FlattenedSerializer.symbols");
    target = stream->WriteString(2, s, target);
  }

  // repeated .ProtoFlattenedSerializerField_t fields = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_fields_size()); i < n; i++) {
    const auto& repfield = this->_internal_fields().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_FlattenedSerializer)
  return target;
}

::size_t CSVCMsg_FlattenedSerializer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_FlattenedSerializer)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ProtoFlattenedSerializer_t serializers = 1;
  total_size += 1UL * this->_internal_serializers_size();
  for (const auto& msg : this->_internal_serializers()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated string symbols = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_symbols().size());
  for (int i = 0, n = _internal_symbols().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_symbols().Get(i));
  }
  // repeated .ProtoFlattenedSerializerField_t fields = 3;
  total_size += 1UL * this->_internal_fields_size();
  for (const auto& msg : this->_internal_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_FlattenedSerializer::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_FlattenedSerializer::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_FlattenedSerializer::GetClassData() const { return &_class_data_; }


void CSVCMsg_FlattenedSerializer::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_FlattenedSerializer*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_FlattenedSerializer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_FlattenedSerializer)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_serializers()->MergeFrom(from._internal_serializers());
  _this->_internal_mutable_symbols()->MergeFrom(from._internal_symbols());
  _this->_internal_mutable_fields()->MergeFrom(from._internal_fields());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_FlattenedSerializer::CopyFrom(const CSVCMsg_FlattenedSerializer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_FlattenedSerializer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_FlattenedSerializer::IsInitialized() const {
  return true;
}

void CSVCMsg_FlattenedSerializer::InternalSwap(CSVCMsg_FlattenedSerializer* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.serializers_.InternalSwap(&other->_impl_.serializers_);
  _impl_.symbols_.InternalSwap(&other->_impl_.symbols_);
  _impl_.fields_.InternalSwap(&other->_impl_.fields_);
}

::google::protobuf::Metadata CSVCMsg_FlattenedSerializer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[59]);
}
// ===================================================================

class CSVCMsg_StopSound::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_StopSound>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_StopSound, _impl_._has_bits_);
  static void set_has_guid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CSVCMsg_StopSound::CSVCMsg_StopSound(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_StopSound)
}
CSVCMsg_StopSound::CSVCMsg_StopSound(const CSVCMsg_StopSound& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_StopSound)
}
inline void CSVCMsg_StopSound::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.guid_){0u},
  };
}
CSVCMsg_StopSound::~CSVCMsg_StopSound() {
  // @@protoc_insertion_point(destructor:CSVCMsg_StopSound)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_StopSound::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CSVCMsg_StopSound::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_StopSound::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_StopSound)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.guid_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_StopSound::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CSVCMsg_StopSound::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_StopSound, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CSVCMsg_StopSound_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional fixed32 guid = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_StopSound, _impl_.guid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed32 guid = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_StopSound, _impl_.guid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CSVCMsg_StopSound::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_StopSound)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed32 guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        1, this->_internal_guid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_StopSound)
  return target;
}

::size_t CSVCMsg_StopSound::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_StopSound)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional fixed32 guid = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_StopSound::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_StopSound::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_StopSound::GetClassData() const { return &_class_data_; }


void CSVCMsg_StopSound::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_StopSound*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_StopSound&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_StopSound)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_guid(from._internal_guid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_StopSound::CopyFrom(const CSVCMsg_StopSound& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_StopSound)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_StopSound::IsInitialized() const {
  return true;
}

void CSVCMsg_StopSound::InternalSwap(CSVCMsg_StopSound* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.guid_, other->_impl_.guid_);
}

::google::protobuf::Metadata CSVCMsg_StopSound::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[60]);
}
// ===================================================================

class CBidirMsg_RebroadcastGameEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<CBidirMsg_RebroadcastGameEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CBidirMsg_RebroadcastGameEvent, _impl_._has_bits_);
  static void set_has_posttoserver(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_buftype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_clientbitcount(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_receivingclients(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CBidirMsg_RebroadcastGameEvent::CBidirMsg_RebroadcastGameEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CBidirMsg_RebroadcastGameEvent)
}
CBidirMsg_RebroadcastGameEvent::CBidirMsg_RebroadcastGameEvent(const CBidirMsg_RebroadcastGameEvent& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CBidirMsg_RebroadcastGameEvent)
}
inline void CBidirMsg_RebroadcastGameEvent::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.posttoserver_){false},
      decltype(_impl_.buftype_){0},
      decltype(_impl_.receivingclients_){::uint64_t{0u}},
      decltype(_impl_.clientbitcount_){0u},
  };
}
CBidirMsg_RebroadcastGameEvent::~CBidirMsg_RebroadcastGameEvent() {
  // @@protoc_insertion_point(destructor:CBidirMsg_RebroadcastGameEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CBidirMsg_RebroadcastGameEvent::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CBidirMsg_RebroadcastGameEvent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CBidirMsg_RebroadcastGameEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:CBidirMsg_RebroadcastGameEvent)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.posttoserver_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.clientbitcount_) -
        reinterpret_cast<char*>(&_impl_.posttoserver_)) + sizeof(_impl_.clientbitcount_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CBidirMsg_RebroadcastGameEvent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> CBidirMsg_RebroadcastGameEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CBidirMsg_RebroadcastGameEvent, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CBidirMsg_RebroadcastGameEvent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint64 receivingclients = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CBidirMsg_RebroadcastGameEvent, _impl_.receivingclients_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(CBidirMsg_RebroadcastGameEvent, _impl_.receivingclients_)}},
    // optional bool posttoserver = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CBidirMsg_RebroadcastGameEvent, _impl_.posttoserver_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CBidirMsg_RebroadcastGameEvent, _impl_.posttoserver_)}},
    // optional int32 buftype = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CBidirMsg_RebroadcastGameEvent, _impl_.buftype_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CBidirMsg_RebroadcastGameEvent, _impl_.buftype_)}},
    // optional uint32 clientbitcount = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CBidirMsg_RebroadcastGameEvent, _impl_.clientbitcount_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(CBidirMsg_RebroadcastGameEvent, _impl_.clientbitcount_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool posttoserver = 1;
    {PROTOBUF_FIELD_OFFSET(CBidirMsg_RebroadcastGameEvent, _impl_.posttoserver_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional int32 buftype = 2;
    {PROTOBUF_FIELD_OFFSET(CBidirMsg_RebroadcastGameEvent, _impl_.buftype_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 clientbitcount = 3;
    {PROTOBUF_FIELD_OFFSET(CBidirMsg_RebroadcastGameEvent, _impl_.clientbitcount_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 receivingclients = 4;
    {PROTOBUF_FIELD_OFFSET(CBidirMsg_RebroadcastGameEvent, _impl_.receivingclients_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CBidirMsg_RebroadcastGameEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CBidirMsg_RebroadcastGameEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool posttoserver = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_posttoserver(), target);
  }

  // optional int32 buftype = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_buftype(), target);
  }

  // optional uint32 clientbitcount = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_clientbitcount(), target);
  }

  // optional uint64 receivingclients = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_receivingclients(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CBidirMsg_RebroadcastGameEvent)
  return target;
}

::size_t CBidirMsg_RebroadcastGameEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CBidirMsg_RebroadcastGameEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional bool posttoserver = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2;
    }

    // optional int32 buftype = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_buftype());
    }

    // optional uint64 receivingclients = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_receivingclients());
    }

    // optional uint32 clientbitcount = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_clientbitcount());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CBidirMsg_RebroadcastGameEvent::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CBidirMsg_RebroadcastGameEvent::MergeImpl
};
const ::google::protobuf::Message::ClassData*CBidirMsg_RebroadcastGameEvent::GetClassData() const { return &_class_data_; }


void CBidirMsg_RebroadcastGameEvent::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CBidirMsg_RebroadcastGameEvent*>(&to_msg);
  auto& from = static_cast<const CBidirMsg_RebroadcastGameEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CBidirMsg_RebroadcastGameEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.posttoserver_ = from._impl_.posttoserver_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.buftype_ = from._impl_.buftype_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.receivingclients_ = from._impl_.receivingclients_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.clientbitcount_ = from._impl_.clientbitcount_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CBidirMsg_RebroadcastGameEvent::CopyFrom(const CBidirMsg_RebroadcastGameEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CBidirMsg_RebroadcastGameEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CBidirMsg_RebroadcastGameEvent::IsInitialized() const {
  return true;
}

void CBidirMsg_RebroadcastGameEvent::InternalSwap(CBidirMsg_RebroadcastGameEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CBidirMsg_RebroadcastGameEvent, _impl_.clientbitcount_)
      + sizeof(CBidirMsg_RebroadcastGameEvent::_impl_.clientbitcount_)
      - PROTOBUF_FIELD_OFFSET(CBidirMsg_RebroadcastGameEvent, _impl_.posttoserver_)>(
          reinterpret_cast<char*>(&_impl_.posttoserver_),
          reinterpret_cast<char*>(&other->_impl_.posttoserver_));
}

::google::protobuf::Metadata CBidirMsg_RebroadcastGameEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[61]);
}
// ===================================================================

class CBidirMsg_RebroadcastSource::_Internal {
 public:
  using HasBits = decltype(std::declval<CBidirMsg_RebroadcastSource>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CBidirMsg_RebroadcastSource, _impl_._has_bits_);
  static void set_has_eventsource(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CBidirMsg_RebroadcastSource::CBidirMsg_RebroadcastSource(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CBidirMsg_RebroadcastSource)
}
CBidirMsg_RebroadcastSource::CBidirMsg_RebroadcastSource(const CBidirMsg_RebroadcastSource& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CBidirMsg_RebroadcastSource)
}
inline void CBidirMsg_RebroadcastSource::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.eventsource_){0},
  };
}
CBidirMsg_RebroadcastSource::~CBidirMsg_RebroadcastSource() {
  // @@protoc_insertion_point(destructor:CBidirMsg_RebroadcastSource)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CBidirMsg_RebroadcastSource::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CBidirMsg_RebroadcastSource::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CBidirMsg_RebroadcastSource::Clear() {
// @@protoc_insertion_point(message_clear_start:CBidirMsg_RebroadcastSource)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.eventsource_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CBidirMsg_RebroadcastSource::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CBidirMsg_RebroadcastSource::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CBidirMsg_RebroadcastSource, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CBidirMsg_RebroadcastSource_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 eventsource = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CBidirMsg_RebroadcastSource, _impl_.eventsource_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CBidirMsg_RebroadcastSource, _impl_.eventsource_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 eventsource = 1;
    {PROTOBUF_FIELD_OFFSET(CBidirMsg_RebroadcastSource, _impl_.eventsource_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CBidirMsg_RebroadcastSource::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CBidirMsg_RebroadcastSource)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 eventsource = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_eventsource(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CBidirMsg_RebroadcastSource)
  return target;
}

::size_t CBidirMsg_RebroadcastSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CBidirMsg_RebroadcastSource)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 eventsource = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_eventsource());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CBidirMsg_RebroadcastSource::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CBidirMsg_RebroadcastSource::MergeImpl
};
const ::google::protobuf::Message::ClassData*CBidirMsg_RebroadcastSource::GetClassData() const { return &_class_data_; }


void CBidirMsg_RebroadcastSource::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CBidirMsg_RebroadcastSource*>(&to_msg);
  auto& from = static_cast<const CBidirMsg_RebroadcastSource&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CBidirMsg_RebroadcastSource)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_eventsource(from._internal_eventsource());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CBidirMsg_RebroadcastSource::CopyFrom(const CBidirMsg_RebroadcastSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CBidirMsg_RebroadcastSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CBidirMsg_RebroadcastSource::IsInitialized() const {
  return true;
}

void CBidirMsg_RebroadcastSource::InternalSwap(CBidirMsg_RebroadcastSource* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.eventsource_, other->_impl_.eventsource_);
}

::google::protobuf::Metadata CBidirMsg_RebroadcastSource::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[62]);
}
// ===================================================================

class CMsgServerNetworkStats_Port::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgServerNetworkStats_Port>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats_Port, _impl_._has_bits_);
  static void set_has_port(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgServerNetworkStats_Port::CMsgServerNetworkStats_Port(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgServerNetworkStats.Port)
}
CMsgServerNetworkStats_Port::CMsgServerNetworkStats_Port(const CMsgServerNetworkStats_Port& from) : ::google::protobuf::Message() {
  CMsgServerNetworkStats_Port* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.port_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _this->_impl_.port_ = from._impl_.port_;

  // @@protoc_insertion_point(copy_constructor:CMsgServerNetworkStats.Port)
}
inline void CMsgServerNetworkStats_Port::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.port_){0},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CMsgServerNetworkStats_Port::~CMsgServerNetworkStats_Port() {
  // @@protoc_insertion_point(destructor:CMsgServerNetworkStats.Port)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgServerNetworkStats_Port::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}
void CMsgServerNetworkStats_Port::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgServerNetworkStats_Port::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgServerNetworkStats.Port)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_.port_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgServerNetworkStats_Port::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 40, 2> CMsgServerNetworkStats_Port::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats_Port, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgServerNetworkStats_Port_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string name = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats_Port, _impl_.name_)}},
    // optional int32 port = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgServerNetworkStats_Port, _impl_.port_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats_Port, _impl_.port_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 port = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats_Port, _impl_.port_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string name = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats_Port, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\0\4\0\0\0\0\0"
    "CMsgServerNetworkStats.Port"
    "name"
  }},
};

::uint8_t* CMsgServerNetworkStats_Port::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgServerNetworkStats.Port)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 port = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_port(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgServerNetworkStats.Port.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgServerNetworkStats.Port)
  return target;
}

::size_t CMsgServerNetworkStats_Port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgServerNetworkStats.Port)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }

    // optional int32 port = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_port());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgServerNetworkStats_Port::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgServerNetworkStats_Port::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgServerNetworkStats_Port::GetClassData() const { return &_class_data_; }


void CMsgServerNetworkStats_Port::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgServerNetworkStats_Port*>(&to_msg);
  auto& from = static_cast<const CMsgServerNetworkStats_Port&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgServerNetworkStats.Port)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.port_ = from._impl_.port_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgServerNetworkStats_Port::CopyFrom(const CMsgServerNetworkStats_Port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgServerNetworkStats.Port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgServerNetworkStats_Port::IsInitialized() const {
  return true;
}

void CMsgServerNetworkStats_Port::InternalSwap(CMsgServerNetworkStats_Port* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
        swap(_impl_.port_, other->_impl_.port_);
}

::google::protobuf::Metadata CMsgServerNetworkStats_Port::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[63]);
}
// ===================================================================

class CMsgServerNetworkStats_Player::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgServerNetworkStats_Player>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats_Player, _impl_._has_bits_);
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_remote_addr(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_ping_stddev_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_ping_avg_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_packet_loss_pct(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_is_bot(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

CMsgServerNetworkStats_Player::CMsgServerNetworkStats_Player(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgServerNetworkStats.Player)
}
CMsgServerNetworkStats_Player::CMsgServerNetworkStats_Player(const CMsgServerNetworkStats_Player& from) : ::google::protobuf::Message() {
  CMsgServerNetworkStats_Player* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.remote_addr_){},
      decltype(_impl_.steamid_){},
      decltype(_impl_.ping_stddev_ms_){},
      decltype(_impl_.ping_avg_ms_){},
      decltype(_impl_.packet_loss_pct_){},
      decltype(_impl_.is_bot_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.remote_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.remote_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.remote_addr_.Set(from._internal_remote_addr(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.steamid_, &from._impl_.steamid_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.is_bot_) -
    reinterpret_cast<char*>(&_impl_.steamid_)) + sizeof(_impl_.is_bot_));

  // @@protoc_insertion_point(copy_constructor:CMsgServerNetworkStats.Player)
}
inline void CMsgServerNetworkStats_Player::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.remote_addr_){},
      decltype(_impl_.steamid_){::uint64_t{0u}},
      decltype(_impl_.ping_stddev_ms_){0},
      decltype(_impl_.ping_avg_ms_){0},
      decltype(_impl_.packet_loss_pct_){0},
      decltype(_impl_.is_bot_){false},
  };
  _impl_.remote_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.remote_addr_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CMsgServerNetworkStats_Player::~CMsgServerNetworkStats_Player() {
  // @@protoc_insertion_point(destructor:CMsgServerNetworkStats.Player)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgServerNetworkStats_Player::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.remote_addr_.Destroy();
}
void CMsgServerNetworkStats_Player::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgServerNetworkStats_Player::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgServerNetworkStats.Player)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.remote_addr_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000003eu) {
    ::memset(&_impl_.steamid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_bot_) -
        reinterpret_cast<char*>(&_impl_.steamid_)) + sizeof(_impl_.is_bot_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgServerNetworkStats_Player::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 49, 2> CMsgServerNetworkStats_Player::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats_Player, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgServerNetworkStats_Player_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint64 steamid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgServerNetworkStats_Player, _impl_.steamid_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats_Player, _impl_.steamid_)}},
    // optional string remote_addr = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats_Player, _impl_.remote_addr_)}},
    // optional int32 ping_stddev_ms = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgServerNetworkStats_Player, _impl_.ping_stddev_ms_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats_Player, _impl_.ping_stddev_ms_)}},
    // optional int32 ping_avg_ms = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgServerNetworkStats_Player, _impl_.ping_avg_ms_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats_Player, _impl_.ping_avg_ms_)}},
    // optional float packet_loss_pct = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats_Player, _impl_.packet_loss_pct_)}},
    // optional bool is_bot = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgServerNetworkStats_Player, _impl_.is_bot_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats_Player, _impl_.is_bot_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 steamid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats_Player, _impl_.steamid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional string remote_addr = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats_Player, _impl_.remote_addr_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 ping_stddev_ms = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats_Player, _impl_.ping_stddev_ms_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 ping_avg_ms = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats_Player, _impl_.ping_avg_ms_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional float packet_loss_pct = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats_Player, _impl_.packet_loss_pct_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional bool is_bot = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats_Player, _impl_.is_bot_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\35\0\13\0\0\0\0\0"
    "CMsgServerNetworkStats.Player"
    "remote_addr"
  }},
};

::uint8_t* CMsgServerNetworkStats_Player::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgServerNetworkStats.Player)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_steamid(), target);
  }

  // optional string remote_addr = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_remote_addr();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgServerNetworkStats.Player.remote_addr");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional int32 ping_stddev_ms = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_ping_stddev_ms(), target);
  }

  // optional int32 ping_avg_ms = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_ping_avg_ms(), target);
  }

  // optional float packet_loss_pct = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_packet_loss_pct(), target);
  }

  // optional bool is_bot = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_is_bot(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgServerNetworkStats.Player)
  return target;
}

::size_t CMsgServerNetworkStats_Player::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgServerNetworkStats.Player)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string remote_addr = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_remote_addr());
    }

    // optional uint64 steamid = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_steamid());
    }

    // optional int32 ping_stddev_ms = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_ping_stddev_ms());
    }

    // optional int32 ping_avg_ms = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_ping_avg_ms());
    }

    // optional float packet_loss_pct = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 5;
    }

    // optional bool is_bot = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgServerNetworkStats_Player::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgServerNetworkStats_Player::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgServerNetworkStats_Player::GetClassData() const { return &_class_data_; }


void CMsgServerNetworkStats_Player::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgServerNetworkStats_Player*>(&to_msg);
  auto& from = static_cast<const CMsgServerNetworkStats_Player&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgServerNetworkStats.Player)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_remote_addr(from._internal_remote_addr());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.steamid_ = from._impl_.steamid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.ping_stddev_ms_ = from._impl_.ping_stddev_ms_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.ping_avg_ms_ = from._impl_.ping_avg_ms_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.packet_loss_pct_ = from._impl_.packet_loss_pct_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.is_bot_ = from._impl_.is_bot_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgServerNetworkStats_Player::CopyFrom(const CMsgServerNetworkStats_Player& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgServerNetworkStats.Player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgServerNetworkStats_Player::IsInitialized() const {
  return true;
}

void CMsgServerNetworkStats_Player::InternalSwap(CMsgServerNetworkStats_Player* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.remote_addr_, lhs_arena,
                                       &other->_impl_.remote_addr_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats_Player, _impl_.is_bot_)
      + sizeof(CMsgServerNetworkStats_Player::_impl_.is_bot_)
      - PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats_Player, _impl_.steamid_)>(
          reinterpret_cast<char*>(&_impl_.steamid_),
          reinterpret_cast<char*>(&other->_impl_.steamid_));
}

::google::protobuf::Metadata CMsgServerNetworkStats_Player::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[64]);
}
// ===================================================================

class CMsgServerNetworkStats::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgServerNetworkStats>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_._has_bits_);
  static void set_has_dedicated(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_cpu_usage(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_memory_used_mb(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_memory_free_mb(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_uptime(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_spawn_count(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_num_clients(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_num_bots(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_num_spectators(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_num_tv_relays(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_fps(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_avg_latency_out(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_avg_latency_in(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_avg_packets_out(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_avg_packets_in(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_avg_loss_out(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_avg_loss_in(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_avg_data_out(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_avg_data_in(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_total_data_in(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_total_packets_in(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_total_data_out(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_total_packets_out(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
};

CMsgServerNetworkStats::CMsgServerNetworkStats(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgServerNetworkStats)
}
CMsgServerNetworkStats::CMsgServerNetworkStats(const CMsgServerNetworkStats& from) : ::google::protobuf::Message() {
  CMsgServerNetworkStats* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.ports_){from._impl_.ports_},
      decltype(_impl_.players_){from._impl_.players_},
      decltype(_impl_.dedicated_){},
      decltype(_impl_.cpu_usage_){},
      decltype(_impl_.memory_used_mb_){},
      decltype(_impl_.memory_free_mb_){},
      decltype(_impl_.uptime_){},
      decltype(_impl_.spawn_count_){},
      decltype(_impl_.num_clients_){},
      decltype(_impl_.num_bots_){},
      decltype(_impl_.num_spectators_){},
      decltype(_impl_.num_tv_relays_){},
      decltype(_impl_.fps_){},
      decltype(_impl_.avg_latency_out_){},
      decltype(_impl_.avg_latency_in_){},
      decltype(_impl_.avg_packets_out_){},
      decltype(_impl_.avg_packets_in_){},
      decltype(_impl_.avg_loss_out_){},
      decltype(_impl_.avg_loss_in_){},
      decltype(_impl_.avg_data_out_){},
      decltype(_impl_.total_data_in_){},
      decltype(_impl_.total_packets_in_){},
      decltype(_impl_.total_data_out_){},
      decltype(_impl_.total_packets_out_){},
      decltype(_impl_.avg_data_in_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  ::memcpy(&_impl_.dedicated_, &from._impl_.dedicated_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.avg_data_in_) -
    reinterpret_cast<char*>(&_impl_.dedicated_)) + sizeof(_impl_.avg_data_in_));

  // @@protoc_insertion_point(copy_constructor:CMsgServerNetworkStats)
}
inline void CMsgServerNetworkStats::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.ports_){arena},
      decltype(_impl_.players_){arena},
      decltype(_impl_.dedicated_){false},
      decltype(_impl_.cpu_usage_){0},
      decltype(_impl_.memory_used_mb_){0},
      decltype(_impl_.memory_free_mb_){0},
      decltype(_impl_.uptime_){0},
      decltype(_impl_.spawn_count_){0},
      decltype(_impl_.num_clients_){0},
      decltype(_impl_.num_bots_){0},
      decltype(_impl_.num_spectators_){0},
      decltype(_impl_.num_tv_relays_){0},
      decltype(_impl_.fps_){0},
      decltype(_impl_.avg_latency_out_){0},
      decltype(_impl_.avg_latency_in_){0},
      decltype(_impl_.avg_packets_out_){0},
      decltype(_impl_.avg_packets_in_){0},
      decltype(_impl_.avg_loss_out_){0},
      decltype(_impl_.avg_loss_in_){0},
      decltype(_impl_.avg_data_out_){0},
      decltype(_impl_.total_data_in_){::uint64_t{0u}},
      decltype(_impl_.total_packets_in_){::uint64_t{0u}},
      decltype(_impl_.total_data_out_){::uint64_t{0u}},
      decltype(_impl_.total_packets_out_){::uint64_t{0u}},
      decltype(_impl_.avg_data_in_){0},
  };
}
CMsgServerNetworkStats::~CMsgServerNetworkStats() {
  // @@protoc_insertion_point(destructor:CMsgServerNetworkStats)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgServerNetworkStats::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.ports_.~RepeatedPtrField();
  _impl_.players_.~RepeatedPtrField();
}
void CMsgServerNetworkStats::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgServerNetworkStats::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgServerNetworkStats)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_ports()->Clear();
  _internal_mutable_players()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.dedicated_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.num_bots_) -
        reinterpret_cast<char*>(&_impl_.dedicated_)) + sizeof(_impl_.num_bots_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.num_spectators_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.avg_loss_out_) -
        reinterpret_cast<char*>(&_impl_.num_spectators_)) + sizeof(_impl_.avg_loss_out_));
  }
  if (cached_has_bits & 0x007f0000u) {
    ::memset(&_impl_.avg_loss_in_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.avg_data_in_) -
        reinterpret_cast<char*>(&_impl_.avg_loss_in_)) + sizeof(_impl_.avg_data_in_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgServerNetworkStats::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 25, 2, 0, 2> CMsgServerNetworkStats::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_._has_bits_),
    0, // no _extensions_
    30, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    3221286976,  // skipmap
    offsetof(decltype(_table_), field_entries),
    25,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgServerNetworkStats_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool dedicated = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgServerNetworkStats, _impl_.dedicated_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.dedicated_)}},
    // optional int32 cpu_usage = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgServerNetworkStats, _impl_.cpu_usage_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.cpu_usage_)}},
    // optional int32 memory_used_mb = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgServerNetworkStats, _impl_.memory_used_mb_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.memory_used_mb_)}},
    // optional int32 memory_free_mb = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgServerNetworkStats, _impl_.memory_free_mb_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.memory_free_mb_)}},
    // optional int32 uptime = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgServerNetworkStats, _impl_.uptime_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.uptime_)}},
    // optional int32 spawn_count = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgServerNetworkStats, _impl_.spawn_count_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.spawn_count_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 num_clients = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgServerNetworkStats, _impl_.num_clients_), 6>(),
     {64, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.num_clients_)}},
    // optional int32 num_bots = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgServerNetworkStats, _impl_.num_bots_), 7>(),
     {72, 7, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.num_bots_)}},
    // optional int32 num_spectators = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgServerNetworkStats, _impl_.num_spectators_), 8>(),
     {80, 8, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.num_spectators_)}},
    // optional int32 num_tv_relays = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgServerNetworkStats, _impl_.num_tv_relays_), 9>(),
     {88, 9, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.num_tv_relays_)}},
    // optional float fps = 12;
    {::_pbi::TcParser::FastF32S1,
     {101, 10, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.fps_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .CMsgServerNetworkStats.Port ports = 17;
    {::_pbi::TcParser::FastMtR2,
     {394, 63, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.ports_)}},
    // optional float avg_latency_out = 18;
    {::_pbi::TcParser::FastF32S2,
     {405, 11, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.avg_latency_out_)}},
    // optional float avg_latency_in = 19;
    {::_pbi::TcParser::FastF32S2,
     {413, 12, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.avg_latency_in_)}},
    // optional float avg_packets_out = 20;
    {::_pbi::TcParser::FastF32S2,
     {421, 13, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.avg_packets_out_)}},
    // optional float avg_packets_in = 21;
    {::_pbi::TcParser::FastF32S2,
     {429, 14, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.avg_packets_in_)}},
    // optional float avg_loss_out = 22;
    {::_pbi::TcParser::FastF32S2,
     {437, 15, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.avg_loss_out_)}},
    // optional float avg_loss_in = 23;
    {::_pbi::TcParser::FastF32S2,
     {445, 16, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.avg_loss_in_)}},
    // optional float avg_data_out = 24;
    {::_pbi::TcParser::FastF32S2,
     {453, 17, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.avg_data_out_)}},
    // optional float avg_data_in = 25;
    {::_pbi::TcParser::FastF32S2,
     {461, 22, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.avg_data_in_)}},
    // optional uint64 total_data_in = 26;
    {::_pbi::TcParser::FastV64S2,
     {464, 18, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.total_data_in_)}},
    // optional uint64 total_packets_in = 27;
    {::_pbi::TcParser::FastV64S2,
     {472, 19, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.total_packets_in_)}},
    // optional uint64 total_data_out = 28;
    {::_pbi::TcParser::FastV64S2,
     {480, 20, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.total_data_out_)}},
    // optional uint64 total_packets_out = 29;
    {::_pbi::TcParser::FastV64S2,
     {488, 21, 0, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.total_packets_out_)}},
    // repeated .CMsgServerNetworkStats.Player players = 30;
    {::_pbi::TcParser::FastMtR2,
     {498, 63, 1, PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.players_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool dedicated = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.dedicated_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional int32 cpu_usage = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.cpu_usage_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 memory_used_mb = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.memory_used_mb_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 memory_free_mb = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.memory_free_mb_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 uptime = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.uptime_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 spawn_count = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.spawn_count_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 num_clients = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.num_clients_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 num_bots = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.num_bots_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 num_spectators = 10;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.num_spectators_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 num_tv_relays = 11;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.num_tv_relays_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional float fps = 12;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.fps_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // repeated .CMsgServerNetworkStats.Port ports = 17;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.ports_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional float avg_latency_out = 18;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.avg_latency_out_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float avg_latency_in = 19;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.avg_latency_in_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float avg_packets_out = 20;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.avg_packets_out_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float avg_packets_in = 21;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.avg_packets_in_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float avg_loss_out = 22;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.avg_loss_out_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float avg_loss_in = 23;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.avg_loss_in_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float avg_data_out = 24;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.avg_data_out_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float avg_data_in = 25;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.avg_data_in_), _Internal::kHasBitsOffset + 22, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional uint64 total_data_in = 26;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.total_data_in_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 total_packets_in = 27;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.total_packets_in_), _Internal::kHasBitsOffset + 19, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 total_data_out = 28;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.total_data_out_), _Internal::kHasBitsOffset + 20, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 total_packets_out = 29;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.total_packets_out_), _Internal::kHasBitsOffset + 21, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // repeated .CMsgServerNetworkStats.Player players = 30;
    {PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.players_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgServerNetworkStats_Port>()},
    {::_pbi::TcParser::GetTable<::CMsgServerNetworkStats_Player>()},
  }}, {{
  }},
};

::uint8_t* CMsgServerNetworkStats::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgServerNetworkStats)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool dedicated = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_dedicated(), target);
  }

  // optional int32 cpu_usage = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_cpu_usage(), target);
  }

  // optional int32 memory_used_mb = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_memory_used_mb(), target);
  }

  // optional int32 memory_free_mb = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_memory_free_mb(), target);
  }

  // optional int32 uptime = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_uptime(), target);
  }

  // optional int32 spawn_count = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_spawn_count(), target);
  }

  // optional int32 num_clients = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<8>(
            stream, this->_internal_num_clients(), target);
  }

  // optional int32 num_bots = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<9>(
            stream, this->_internal_num_bots(), target);
  }

  // optional int32 num_spectators = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<10>(
            stream, this->_internal_num_spectators(), target);
  }

  // optional int32 num_tv_relays = 11;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<11>(
            stream, this->_internal_num_tv_relays(), target);
  }

  // optional float fps = 12;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        12, this->_internal_fps(), target);
  }

  // repeated .CMsgServerNetworkStats.Port ports = 17;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_ports_size()); i < n; i++) {
    const auto& repfield = this->_internal_ports().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(17, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional float avg_latency_out = 18;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        18, this->_internal_avg_latency_out(), target);
  }

  // optional float avg_latency_in = 19;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        19, this->_internal_avg_latency_in(), target);
  }

  // optional float avg_packets_out = 20;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        20, this->_internal_avg_packets_out(), target);
  }

  // optional float avg_packets_in = 21;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        21, this->_internal_avg_packets_in(), target);
  }

  // optional float avg_loss_out = 22;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        22, this->_internal_avg_loss_out(), target);
  }

  // optional float avg_loss_in = 23;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        23, this->_internal_avg_loss_in(), target);
  }

  // optional float avg_data_out = 24;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        24, this->_internal_avg_data_out(), target);
  }

  // optional float avg_data_in = 25;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        25, this->_internal_avg_data_in(), target);
  }

  // optional uint64 total_data_in = 26;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        26, this->_internal_total_data_in(), target);
  }

  // optional uint64 total_packets_in = 27;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        27, this->_internal_total_packets_in(), target);
  }

  // optional uint64 total_data_out = 28;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        28, this->_internal_total_data_out(), target);
  }

  // optional uint64 total_packets_out = 29;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        29, this->_internal_total_packets_out(), target);
  }

  // repeated .CMsgServerNetworkStats.Player players = 30;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_players_size()); i < n; i++) {
    const auto& repfield = this->_internal_players().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(30, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgServerNetworkStats)
  return target;
}

::size_t CMsgServerNetworkStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgServerNetworkStats)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgServerNetworkStats.Port ports = 17;
  total_size += 2UL * this->_internal_ports_size();
  for (const auto& msg : this->_internal_ports()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .CMsgServerNetworkStats.Player players = 30;
  total_size += 2UL * this->_internal_players_size();
  for (const auto& msg : this->_internal_players()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional bool dedicated = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2;
    }

    // optional int32 cpu_usage = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_cpu_usage());
    }

    // optional int32 memory_used_mb = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_memory_used_mb());
    }

    // optional int32 memory_free_mb = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_memory_free_mb());
    }

    // optional int32 uptime = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_uptime());
    }

    // optional int32 spawn_count = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_spawn_count());
    }

    // optional int32 num_clients = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_num_clients());
    }

    // optional int32 num_bots = 9;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_num_bots());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional int32 num_spectators = 10;
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_num_spectators());
    }

    // optional int32 num_tv_relays = 11;
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_num_tv_relays());
    }

    // optional float fps = 12;
    if (cached_has_bits & 0x00000400u) {
      total_size += 5;
    }

    // optional float avg_latency_out = 18;
    if (cached_has_bits & 0x00000800u) {
      total_size += 6;
    }

    // optional float avg_latency_in = 19;
    if (cached_has_bits & 0x00001000u) {
      total_size += 6;
    }

    // optional float avg_packets_out = 20;
    if (cached_has_bits & 0x00002000u) {
      total_size += 6;
    }

    // optional float avg_packets_in = 21;
    if (cached_has_bits & 0x00004000u) {
      total_size += 6;
    }

    // optional float avg_loss_out = 22;
    if (cached_has_bits & 0x00008000u) {
      total_size += 6;
    }

  }
  if (cached_has_bits & 0x007f0000u) {
    // optional float avg_loss_in = 23;
    if (cached_has_bits & 0x00010000u) {
      total_size += 6;
    }

    // optional float avg_data_out = 24;
    if (cached_has_bits & 0x00020000u) {
      total_size += 6;
    }

    // optional uint64 total_data_in = 26;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                      this->_internal_total_data_in());
    }

    // optional uint64 total_packets_in = 27;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                      this->_internal_total_packets_in());
    }

    // optional uint64 total_data_out = 28;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                      this->_internal_total_data_out());
    }

    // optional uint64 total_packets_out = 29;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                      this->_internal_total_packets_out());
    }

    // optional float avg_data_in = 25;
    if (cached_has_bits & 0x00400000u) {
      total_size += 6;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgServerNetworkStats::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgServerNetworkStats::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgServerNetworkStats::GetClassData() const { return &_class_data_; }


void CMsgServerNetworkStats::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgServerNetworkStats*>(&to_msg);
  auto& from = static_cast<const CMsgServerNetworkStats&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgServerNetworkStats)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_ports()->MergeFrom(from._internal_ports());
  _this->_internal_mutable_players()->MergeFrom(from._internal_players());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.dedicated_ = from._impl_.dedicated_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.cpu_usage_ = from._impl_.cpu_usage_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.memory_used_mb_ = from._impl_.memory_used_mb_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.memory_free_mb_ = from._impl_.memory_free_mb_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.uptime_ = from._impl_.uptime_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.spawn_count_ = from._impl_.spawn_count_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.num_clients_ = from._impl_.num_clients_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.num_bots_ = from._impl_.num_bots_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.num_spectators_ = from._impl_.num_spectators_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.num_tv_relays_ = from._impl_.num_tv_relays_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.fps_ = from._impl_.fps_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.avg_latency_out_ = from._impl_.avg_latency_out_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.avg_latency_in_ = from._impl_.avg_latency_in_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.avg_packets_out_ = from._impl_.avg_packets_out_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.avg_packets_in_ = from._impl_.avg_packets_in_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.avg_loss_out_ = from._impl_.avg_loss_out_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x007f0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.avg_loss_in_ = from._impl_.avg_loss_in_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.avg_data_out_ = from._impl_.avg_data_out_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.total_data_in_ = from._impl_.total_data_in_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.total_packets_in_ = from._impl_.total_packets_in_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.total_data_out_ = from._impl_.total_data_out_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.total_packets_out_ = from._impl_.total_packets_out_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.avg_data_in_ = from._impl_.avg_data_in_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgServerNetworkStats::CopyFrom(const CMsgServerNetworkStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgServerNetworkStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgServerNetworkStats::IsInitialized() const {
  return true;
}

void CMsgServerNetworkStats::InternalSwap(CMsgServerNetworkStats* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.ports_.InternalSwap(&other->_impl_.ports_);
  _impl_.players_.InternalSwap(&other->_impl_.players_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.avg_data_in_)
      + sizeof(CMsgServerNetworkStats::_impl_.avg_data_in_)
      - PROTOBUF_FIELD_OFFSET(CMsgServerNetworkStats, _impl_.dedicated_)>(
          reinterpret_cast<char*>(&_impl_.dedicated_),
          reinterpret_cast<char*>(&other->_impl_.dedicated_));
}

::google::protobuf::Metadata CMsgServerNetworkStats::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[65]);
}
// ===================================================================

class CSVCMsg_HltvReplay::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_HltvReplay>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_HltvReplay, _impl_._has_bits_);
  static void set_has_delay(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_primary_target(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_replay_stop_at(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_replay_start_at(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_replay_slowdown_begin(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_replay_slowdown_end(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_replay_slowdown_rate(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_reason(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

CSVCMsg_HltvReplay::CSVCMsg_HltvReplay(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_HltvReplay)
}
CSVCMsg_HltvReplay::CSVCMsg_HltvReplay(const CSVCMsg_HltvReplay& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_HltvReplay)
}
inline void CSVCMsg_HltvReplay::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.delay_){0},
      decltype(_impl_.replay_stop_at_){0},
      decltype(_impl_.replay_start_at_){0},
      decltype(_impl_.replay_slowdown_begin_){0},
      decltype(_impl_.replay_slowdown_end_){0},
      decltype(_impl_.replay_slowdown_rate_){0},
      decltype(_impl_.reason_){0},
      decltype(_impl_.primary_target_){-1},
  };
}
CSVCMsg_HltvReplay::~CSVCMsg_HltvReplay() {
  // @@protoc_insertion_point(destructor:CSVCMsg_HltvReplay)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_HltvReplay::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CSVCMsg_HltvReplay::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_HltvReplay::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_HltvReplay)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.delay_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.reason_) -
        reinterpret_cast<char*>(&_impl_.delay_)) + sizeof(_impl_.reason_));
    _impl_.primary_target_ = -1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_HltvReplay::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 0, 2> CSVCMsg_HltvReplay::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_HltvReplay, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CSVCMsg_HltvReplay_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 reason = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_HltvReplay, _impl_.reason_), 6>(),
     {64, 6, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_HltvReplay, _impl_.reason_)}},
    // optional int32 delay = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_HltvReplay, _impl_.delay_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_HltvReplay, _impl_.delay_)}},
    // optional int32 primary_target = 2 [default = -1];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_HltvReplay, _impl_.primary_target_), 7>(),
     {16, 7, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_HltvReplay, _impl_.primary_target_)}},
    // optional int32 replay_stop_at = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_HltvReplay, _impl_.replay_stop_at_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_HltvReplay, _impl_.replay_stop_at_)}},
    // optional int32 replay_start_at = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_HltvReplay, _impl_.replay_start_at_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_HltvReplay, _impl_.replay_start_at_)}},
    // optional int32 replay_slowdown_begin = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_HltvReplay, _impl_.replay_slowdown_begin_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_HltvReplay, _impl_.replay_slowdown_begin_)}},
    // optional int32 replay_slowdown_end = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_HltvReplay, _impl_.replay_slowdown_end_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_HltvReplay, _impl_.replay_slowdown_end_)}},
    // optional float replay_slowdown_rate = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 5, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_HltvReplay, _impl_.replay_slowdown_rate_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 delay = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_HltvReplay, _impl_.delay_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 primary_target = 2 [default = -1];
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_HltvReplay, _impl_.primary_target_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 replay_stop_at = 3;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_HltvReplay, _impl_.replay_stop_at_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 replay_start_at = 4;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_HltvReplay, _impl_.replay_start_at_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 replay_slowdown_begin = 5;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_HltvReplay, _impl_.replay_slowdown_begin_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 replay_slowdown_end = 6;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_HltvReplay, _impl_.replay_slowdown_end_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional float replay_slowdown_rate = 7;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_HltvReplay, _impl_.replay_slowdown_rate_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional int32 reason = 8;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_HltvReplay, _impl_.reason_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CSVCMsg_HltvReplay::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_HltvReplay)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 delay = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_delay(), target);
  }

  // optional int32 primary_target = 2 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_primary_target(), target);
  }

  // optional int32 replay_stop_at = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_replay_stop_at(), target);
  }

  // optional int32 replay_start_at = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_replay_start_at(), target);
  }

  // optional int32 replay_slowdown_begin = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_replay_slowdown_begin(), target);
  }

  // optional int32 replay_slowdown_end = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_replay_slowdown_end(), target);
  }

  // optional float replay_slowdown_rate = 7;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        7, this->_internal_replay_slowdown_rate(), target);
  }

  // optional int32 reason = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<8>(
            stream, this->_internal_reason(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_HltvReplay)
  return target;
}

::size_t CSVCMsg_HltvReplay::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_HltvReplay)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional int32 delay = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_delay());
    }

    // optional int32 replay_stop_at = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_replay_stop_at());
    }

    // optional int32 replay_start_at = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_replay_start_at());
    }

    // optional int32 replay_slowdown_begin = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_replay_slowdown_begin());
    }

    // optional int32 replay_slowdown_end = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_replay_slowdown_end());
    }

    // optional float replay_slowdown_rate = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += 5;
    }

    // optional int32 reason = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_reason());
    }

    // optional int32 primary_target = 2 [default = -1];
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_primary_target());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_HltvReplay::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_HltvReplay::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_HltvReplay::GetClassData() const { return &_class_data_; }


void CSVCMsg_HltvReplay::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_HltvReplay*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_HltvReplay&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_HltvReplay)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.delay_ = from._impl_.delay_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.replay_stop_at_ = from._impl_.replay_stop_at_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.replay_start_at_ = from._impl_.replay_start_at_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.replay_slowdown_begin_ = from._impl_.replay_slowdown_begin_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.replay_slowdown_end_ = from._impl_.replay_slowdown_end_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.replay_slowdown_rate_ = from._impl_.replay_slowdown_rate_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.reason_ = from._impl_.reason_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.primary_target_ = from._impl_.primary_target_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_HltvReplay::CopyFrom(const CSVCMsg_HltvReplay& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_HltvReplay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_HltvReplay::IsInitialized() const {
  return true;
}

void CSVCMsg_HltvReplay::InternalSwap(CSVCMsg_HltvReplay* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSVCMsg_HltvReplay, _impl_.primary_target_)
      + sizeof(CSVCMsg_HltvReplay::_impl_.primary_target_)
      - PROTOBUF_FIELD_OFFSET(CSVCMsg_HltvReplay, _impl_.delay_)>(
          reinterpret_cast<char*>(&_impl_.delay_),
          reinterpret_cast<char*>(&other->_impl_.delay_));
}

::google::protobuf::Metadata CSVCMsg_HltvReplay::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[66]);
}
// ===================================================================

class CCLCMsg_HltvReplay::_Internal {
 public:
  using HasBits = decltype(std::declval<CCLCMsg_HltvReplay>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvReplay, _impl_._has_bits_);
  static void set_has_request(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_slowdown_length(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_slowdown_rate(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_primary_target(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_event_time(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CCLCMsg_HltvReplay::CCLCMsg_HltvReplay(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CCLCMsg_HltvReplay)
}
CCLCMsg_HltvReplay::CCLCMsg_HltvReplay(const CCLCMsg_HltvReplay& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CCLCMsg_HltvReplay)
}
inline void CCLCMsg_HltvReplay::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.request_){0},
      decltype(_impl_.slowdown_length_){0},
      decltype(_impl_.slowdown_rate_){0},
      decltype(_impl_.event_time_){0},
      decltype(_impl_.primary_target_){-1},
  };
}
CCLCMsg_HltvReplay::~CCLCMsg_HltvReplay() {
  // @@protoc_insertion_point(destructor:CCLCMsg_HltvReplay)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CCLCMsg_HltvReplay::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CCLCMsg_HltvReplay::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CCLCMsg_HltvReplay::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_HltvReplay)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.request_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.event_time_) -
        reinterpret_cast<char*>(&_impl_.request_)) + sizeof(_impl_.event_time_));
    _impl_.primary_target_ = -1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CCLCMsg_HltvReplay::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> CCLCMsg_HltvReplay::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvReplay, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CCLCMsg_HltvReplay_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 request = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CCLCMsg_HltvReplay, _impl_.request_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvReplay, _impl_.request_)}},
    // optional float slowdown_length = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvReplay, _impl_.slowdown_length_)}},
    // optional float slowdown_rate = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvReplay, _impl_.slowdown_rate_)}},
    // optional int32 primary_target = 4 [default = -1];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CCLCMsg_HltvReplay, _impl_.primary_target_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvReplay, _impl_.primary_target_)}},
    // optional float event_time = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 3, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvReplay, _impl_.event_time_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 request = 1;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvReplay, _impl_.request_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional float slowdown_length = 2;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvReplay, _impl_.slowdown_length_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float slowdown_rate = 3;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvReplay, _impl_.slowdown_rate_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional int32 primary_target = 4 [default = -1];
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvReplay, _impl_.primary_target_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional float event_time = 5;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvReplay, _impl_.event_time_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CCLCMsg_HltvReplay::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_HltvReplay)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 request = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_request(), target);
  }

  // optional float slowdown_length = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_slowdown_length(), target);
  }

  // optional float slowdown_rate = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_slowdown_rate(), target);
  }

  // optional int32 primary_target = 4 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_primary_target(), target);
  }

  // optional float event_time = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_event_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_HltvReplay)
  return target;
}

::size_t CCLCMsg_HltvReplay::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_HltvReplay)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional int32 request = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_request());
    }

    // optional float slowdown_length = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }

    // optional float slowdown_rate = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

    // optional float event_time = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 5;
    }

    // optional int32 primary_target = 4 [default = -1];
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_primary_target());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CCLCMsg_HltvReplay::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CCLCMsg_HltvReplay::MergeImpl
};
const ::google::protobuf::Message::ClassData*CCLCMsg_HltvReplay::GetClassData() const { return &_class_data_; }


void CCLCMsg_HltvReplay::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CCLCMsg_HltvReplay*>(&to_msg);
  auto& from = static_cast<const CCLCMsg_HltvReplay&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_HltvReplay)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.request_ = from._impl_.request_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.slowdown_length_ = from._impl_.slowdown_length_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.slowdown_rate_ = from._impl_.slowdown_rate_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.event_time_ = from._impl_.event_time_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.primary_target_ = from._impl_.primary_target_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CCLCMsg_HltvReplay::CopyFrom(const CCLCMsg_HltvReplay& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_HltvReplay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CCLCMsg_HltvReplay::IsInitialized() const {
  return true;
}

void CCLCMsg_HltvReplay::InternalSwap(CCLCMsg_HltvReplay* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvReplay, _impl_.primary_target_)
      + sizeof(CCLCMsg_HltvReplay::_impl_.primary_target_)
      - PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvReplay, _impl_.request_)>(
          reinterpret_cast<char*>(&_impl_.request_),
          reinterpret_cast<char*>(&other->_impl_.request_));
}

::google::protobuf::Metadata CCLCMsg_HltvReplay::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[67]);
}
// ===================================================================

class CSVCMsg_Broadcast_Command::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_Broadcast_Command>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_Broadcast_Command, _impl_._has_bits_);
  static void set_has_cmd(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CSVCMsg_Broadcast_Command::CSVCMsg_Broadcast_Command(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_Broadcast_Command)
}
CSVCMsg_Broadcast_Command::CSVCMsg_Broadcast_Command(const CSVCMsg_Broadcast_Command& from) : ::google::protobuf::Message() {
  CSVCMsg_Broadcast_Command* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.cmd_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.cmd_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.cmd_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.cmd_.Set(from._internal_cmd(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_Broadcast_Command)
}
inline void CSVCMsg_Broadcast_Command::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.cmd_){},
  };
  _impl_.cmd_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.cmd_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CSVCMsg_Broadcast_Command::~CSVCMsg_Broadcast_Command() {
  // @@protoc_insertion_point(destructor:CSVCMsg_Broadcast_Command)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_Broadcast_Command::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.cmd_.Destroy();
}
void CSVCMsg_Broadcast_Command::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_Broadcast_Command::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_Broadcast_Command)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.cmd_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_Broadcast_Command::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 37, 2> CSVCMsg_Broadcast_Command::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_Broadcast_Command, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CSVCMsg_Broadcast_Command_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string cmd = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_Broadcast_Command, _impl_.cmd_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string cmd = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_Broadcast_Command, _impl_.cmd_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\3\0\0\0\0\0\0"
    "CSVCMsg_Broadcast_Command"
    "cmd"
  }},
};

::uint8_t* CSVCMsg_Broadcast_Command::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_Broadcast_Command)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string cmd = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_cmd();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSVCMsg_Broadcast_Command.cmd");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_Broadcast_Command)
  return target;
}

::size_t CSVCMsg_Broadcast_Command::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_Broadcast_Command)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string cmd = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_cmd());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_Broadcast_Command::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_Broadcast_Command::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_Broadcast_Command::GetClassData() const { return &_class_data_; }


void CSVCMsg_Broadcast_Command::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_Broadcast_Command*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_Broadcast_Command&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_Broadcast_Command)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_cmd(from._internal_cmd());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_Broadcast_Command::CopyFrom(const CSVCMsg_Broadcast_Command& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_Broadcast_Command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_Broadcast_Command::IsInitialized() const {
  return true;
}

void CSVCMsg_Broadcast_Command::InternalSwap(CSVCMsg_Broadcast_Command* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cmd_, lhs_arena,
                                       &other->_impl_.cmd_, rhs_arena);
}

::google::protobuf::Metadata CSVCMsg_Broadcast_Command::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[68]);
}
// ===================================================================

class CCLCMsg_HltvFixupOperatorTick::_Internal {
 public:
  using HasBits = decltype(std::declval<CCLCMsg_HltvFixupOperatorTick>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvFixupOperatorTick, _impl_._has_bits_);
  static void set_has_tick(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_props_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::CMsgVector& origin(const CCLCMsg_HltvFixupOperatorTick* msg);
  static void set_has_origin(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgQAngle& eye_angles(const CCLCMsg_HltvFixupOperatorTick* msg);
  static void set_has_eye_angles(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_observer_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_cameraman_scoreboard(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_observer_target(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::CMsgVector& view_offset(const CCLCMsg_HltvFixupOperatorTick* msg);
  static void set_has_view_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::CMsgVector& CCLCMsg_HltvFixupOperatorTick::_Internal::origin(const CCLCMsg_HltvFixupOperatorTick* msg) {
  return *msg->_impl_.origin_;
}
const ::CMsgQAngle& CCLCMsg_HltvFixupOperatorTick::_Internal::eye_angles(const CCLCMsg_HltvFixupOperatorTick* msg) {
  return *msg->_impl_.eye_angles_;
}
const ::CMsgVector& CCLCMsg_HltvFixupOperatorTick::_Internal::view_offset(const CCLCMsg_HltvFixupOperatorTick* msg) {
  return *msg->_impl_.view_offset_;
}
void CCLCMsg_HltvFixupOperatorTick::clear_origin() {
  if (_impl_.origin_ != nullptr) _impl_.origin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void CCLCMsg_HltvFixupOperatorTick::clear_eye_angles() {
  if (_impl_.eye_angles_ != nullptr) _impl_.eye_angles_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void CCLCMsg_HltvFixupOperatorTick::clear_view_offset() {
  if (_impl_.view_offset_ != nullptr) _impl_.view_offset_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
CCLCMsg_HltvFixupOperatorTick::CCLCMsg_HltvFixupOperatorTick(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CCLCMsg_HltvFixupOperatorTick)
}
CCLCMsg_HltvFixupOperatorTick::CCLCMsg_HltvFixupOperatorTick(const CCLCMsg_HltvFixupOperatorTick& from) : ::google::protobuf::Message() {
  CCLCMsg_HltvFixupOperatorTick* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.props_data_){},
      decltype(_impl_.origin_){nullptr},
      decltype(_impl_.eye_angles_){nullptr},
      decltype(_impl_.view_offset_){nullptr},
      decltype(_impl_.tick_){},
      decltype(_impl_.observer_mode_){},
      decltype(_impl_.cameraman_scoreboard_){},
      decltype(_impl_.observer_target_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.props_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.props_data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.props_data_.Set(from._internal_props_data(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.origin_ = new ::CMsgVector(*from._impl_.origin_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.eye_angles_ = new ::CMsgQAngle(*from._impl_.eye_angles_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000008u) != 0) {
    _this->_impl_.view_offset_ = new ::CMsgVector(*from._impl_.view_offset_);
  }
  ::memcpy(&_impl_.tick_, &from._impl_.tick_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.observer_target_) -
    reinterpret_cast<char*>(&_impl_.tick_)) + sizeof(_impl_.observer_target_));

  // @@protoc_insertion_point(copy_constructor:CCLCMsg_HltvFixupOperatorTick)
}
inline void CCLCMsg_HltvFixupOperatorTick::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.props_data_){},
      decltype(_impl_.origin_){nullptr},
      decltype(_impl_.eye_angles_){nullptr},
      decltype(_impl_.view_offset_){nullptr},
      decltype(_impl_.tick_){0},
      decltype(_impl_.observer_mode_){0},
      decltype(_impl_.cameraman_scoreboard_){false},
      decltype(_impl_.observer_target_){0},
  };
  _impl_.props_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.props_data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CCLCMsg_HltvFixupOperatorTick::~CCLCMsg_HltvFixupOperatorTick() {
  // @@protoc_insertion_point(destructor:CCLCMsg_HltvFixupOperatorTick)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CCLCMsg_HltvFixupOperatorTick::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.props_data_.Destroy();
  if (this != internal_default_instance()) delete _impl_.origin_;
  if (this != internal_default_instance()) delete _impl_.eye_angles_;
  if (this != internal_default_instance()) delete _impl_.view_offset_;
}
void CCLCMsg_HltvFixupOperatorTick::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CCLCMsg_HltvFixupOperatorTick::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_HltvFixupOperatorTick)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.props_data_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.origin_ != nullptr);
      _impl_.origin_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.eye_angles_ != nullptr);
      _impl_.eye_angles_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.view_offset_ != nullptr);
      _impl_.view_offset_->Clear();
    }
  }
  if (cached_has_bits & 0x000000f0u) {
    ::memset(&_impl_.tick_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.observer_target_) -
        reinterpret_cast<char*>(&_impl_.tick_)) + sizeof(_impl_.observer_target_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CCLCMsg_HltvFixupOperatorTick::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 3, 0, 2> CCLCMsg_HltvFixupOperatorTick::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvFixupOperatorTick, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CCLCMsg_HltvFixupOperatorTick_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .CMsgVector view_offset = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 3, 2, PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvFixupOperatorTick, _impl_.view_offset_)}},
    // optional int32 tick = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CCLCMsg_HltvFixupOperatorTick, _impl_.tick_), 4>(),
     {8, 4, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvFixupOperatorTick, _impl_.tick_)}},
    // optional bytes props_data = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvFixupOperatorTick, _impl_.props_data_)}},
    // optional .CMsgVector origin = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvFixupOperatorTick, _impl_.origin_)}},
    // optional .CMsgQAngle eye_angles = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 1, PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvFixupOperatorTick, _impl_.eye_angles_)}},
    // optional int32 observer_mode = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CCLCMsg_HltvFixupOperatorTick, _impl_.observer_mode_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvFixupOperatorTick, _impl_.observer_mode_)}},
    // optional bool cameraman_scoreboard = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CCLCMsg_HltvFixupOperatorTick, _impl_.cameraman_scoreboard_), 6>(),
     {48, 6, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvFixupOperatorTick, _impl_.cameraman_scoreboard_)}},
    // optional int32 observer_target = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CCLCMsg_HltvFixupOperatorTick, _impl_.observer_target_), 7>(),
     {56, 7, 0, PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvFixupOperatorTick, _impl_.observer_target_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 tick = 1;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvFixupOperatorTick, _impl_.tick_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bytes props_data = 2;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvFixupOperatorTick, _impl_.props_data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional .CMsgVector origin = 3;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvFixupOperatorTick, _impl_.origin_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgQAngle eye_angles = 4;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvFixupOperatorTick, _impl_.eye_angles_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 observer_mode = 5;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvFixupOperatorTick, _impl_.observer_mode_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool cameraman_scoreboard = 6;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvFixupOperatorTick, _impl_.cameraman_scoreboard_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional int32 observer_target = 7;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvFixupOperatorTick, _impl_.observer_target_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .CMsgVector view_offset = 8;
    {PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvFixupOperatorTick, _impl_.view_offset_), _Internal::kHasBitsOffset + 3, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgVector>()},
    {::_pbi::TcParser::GetTable<::CMsgQAngle>()},
    {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }}, {{
  }},
};

::uint8_t* CCLCMsg_HltvFixupOperatorTick::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_HltvFixupOperatorTick)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 tick = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_tick(), target);
  }

  // optional bytes props_data = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_props_data();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // optional .CMsgVector origin = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::origin(this),
        _Internal::origin(this).GetCachedSize(), target, stream);
  }

  // optional .CMsgQAngle eye_angles = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::eye_angles(this),
        _Internal::eye_angles(this).GetCachedSize(), target, stream);
  }

  // optional int32 observer_mode = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_observer_mode(), target);
  }

  // optional bool cameraman_scoreboard = 6;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_cameraman_scoreboard(), target);
  }

  // optional int32 observer_target = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_observer_target(), target);
  }

  // optional .CMsgVector view_offset = 8;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::view_offset(this),
        _Internal::view_offset(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_HltvFixupOperatorTick)
  return target;
}

::size_t CCLCMsg_HltvFixupOperatorTick::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_HltvFixupOperatorTick)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional bytes props_data = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_props_data());
    }

    // optional .CMsgVector origin = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.origin_);
    }

    // optional .CMsgQAngle eye_angles = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.eye_angles_);
    }

    // optional .CMsgVector view_offset = 8;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.view_offset_);
    }

    // optional int32 tick = 1;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_tick());
    }

    // optional int32 observer_mode = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_observer_mode());
    }

    // optional bool cameraman_scoreboard = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2;
    }

    // optional int32 observer_target = 7;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_observer_target());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CCLCMsg_HltvFixupOperatorTick::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CCLCMsg_HltvFixupOperatorTick::MergeImpl
};
const ::google::protobuf::Message::ClassData*CCLCMsg_HltvFixupOperatorTick::GetClassData() const { return &_class_data_; }


void CCLCMsg_HltvFixupOperatorTick::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CCLCMsg_HltvFixupOperatorTick*>(&to_msg);
  auto& from = static_cast<const CCLCMsg_HltvFixupOperatorTick&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_HltvFixupOperatorTick)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_props_data(from._internal_props_data());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_origin()->::CMsgVector::MergeFrom(
          from._internal_origin());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_eye_angles()->::CMsgQAngle::MergeFrom(
          from._internal_eye_angles());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_view_offset()->::CMsgVector::MergeFrom(
          from._internal_view_offset());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.tick_ = from._impl_.tick_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.observer_mode_ = from._impl_.observer_mode_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.cameraman_scoreboard_ = from._impl_.cameraman_scoreboard_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.observer_target_ = from._impl_.observer_target_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CCLCMsg_HltvFixupOperatorTick::CopyFrom(const CCLCMsg_HltvFixupOperatorTick& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_HltvFixupOperatorTick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CCLCMsg_HltvFixupOperatorTick::IsInitialized() const {
  return true;
}

void CCLCMsg_HltvFixupOperatorTick::InternalSwap(CCLCMsg_HltvFixupOperatorTick* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.props_data_, lhs_arena,
                                       &other->_impl_.props_data_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvFixupOperatorTick, _impl_.observer_target_)
      + sizeof(CCLCMsg_HltvFixupOperatorTick::_impl_.observer_target_)
      - PROTOBUF_FIELD_OFFSET(CCLCMsg_HltvFixupOperatorTick, _impl_.origin_)>(
          reinterpret_cast<char*>(&_impl_.origin_),
          reinterpret_cast<char*>(&other->_impl_.origin_));
}

::google::protobuf::Metadata CCLCMsg_HltvFixupOperatorTick::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[69]);
}
// ===================================================================

class CSVCMsg_HltvFixupOperatorStatus::_Internal {
 public:
  using HasBits = decltype(std::declval<CSVCMsg_HltvFixupOperatorStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CSVCMsg_HltvFixupOperatorStatus, _impl_._has_bits_);
  static void set_has_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_override_operator_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CSVCMsg_HltvFixupOperatorStatus::CSVCMsg_HltvFixupOperatorStatus(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSVCMsg_HltvFixupOperatorStatus)
}
CSVCMsg_HltvFixupOperatorStatus::CSVCMsg_HltvFixupOperatorStatus(const CSVCMsg_HltvFixupOperatorStatus& from) : ::google::protobuf::Message() {
  CSVCMsg_HltvFixupOperatorStatus* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.override_operator_name_){},
      decltype(_impl_.mode_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.override_operator_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.override_operator_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.override_operator_name_.Set(from._internal_override_operator_name(), _this->GetArenaForAllocation());
  }
  _this->_impl_.mode_ = from._impl_.mode_;

  // @@protoc_insertion_point(copy_constructor:CSVCMsg_HltvFixupOperatorStatus)
}
inline void CSVCMsg_HltvFixupOperatorStatus::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.override_operator_name_){},
      decltype(_impl_.mode_){0u},
  };
  _impl_.override_operator_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.override_operator_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CSVCMsg_HltvFixupOperatorStatus::~CSVCMsg_HltvFixupOperatorStatus() {
  // @@protoc_insertion_point(destructor:CSVCMsg_HltvFixupOperatorStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CSVCMsg_HltvFixupOperatorStatus::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.override_operator_name_.Destroy();
}
void CSVCMsg_HltvFixupOperatorStatus::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CSVCMsg_HltvFixupOperatorStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_HltvFixupOperatorStatus)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.override_operator_name_.ClearNonDefaultToEmpty();
  }
  _impl_.mode_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CSVCMsg_HltvFixupOperatorStatus::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 62, 2> CSVCMsg_HltvFixupOperatorStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CSVCMsg_HltvFixupOperatorStatus, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CSVCMsg_HltvFixupOperatorStatus_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string override_operator_name = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_HltvFixupOperatorStatus, _impl_.override_operator_name_)}},
    // optional uint32 mode = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CSVCMsg_HltvFixupOperatorStatus, _impl_.mode_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CSVCMsg_HltvFixupOperatorStatus, _impl_.mode_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 mode = 1;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_HltvFixupOperatorStatus, _impl_.mode_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string override_operator_name = 2;
    {PROTOBUF_FIELD_OFFSET(CSVCMsg_HltvFixupOperatorStatus, _impl_.override_operator_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\0\26\0\0\0\0\0"
    "CSVCMsg_HltvFixupOperatorStatus"
    "override_operator_name"
  }},
};

::uint8_t* CSVCMsg_HltvFixupOperatorStatus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_HltvFixupOperatorStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 mode = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_mode(), target);
  }

  // optional string override_operator_name = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_override_operator_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSVCMsg_HltvFixupOperatorStatus.override_operator_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_HltvFixupOperatorStatus)
  return target;
}

::size_t CSVCMsg_HltvFixupOperatorStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_HltvFixupOperatorStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string override_operator_name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_override_operator_name());
    }

    // optional uint32 mode = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_mode());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CSVCMsg_HltvFixupOperatorStatus::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CSVCMsg_HltvFixupOperatorStatus::MergeImpl
};
const ::google::protobuf::Message::ClassData*CSVCMsg_HltvFixupOperatorStatus::GetClassData() const { return &_class_data_; }


void CSVCMsg_HltvFixupOperatorStatus::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CSVCMsg_HltvFixupOperatorStatus*>(&to_msg);
  auto& from = static_cast<const CSVCMsg_HltvFixupOperatorStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_HltvFixupOperatorStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_override_operator_name(from._internal_override_operator_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.mode_ = from._impl_.mode_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSVCMsg_HltvFixupOperatorStatus::CopyFrom(const CSVCMsg_HltvFixupOperatorStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_HltvFixupOperatorStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CSVCMsg_HltvFixupOperatorStatus::IsInitialized() const {
  return true;
}

void CSVCMsg_HltvFixupOperatorStatus::InternalSwap(CSVCMsg_HltvFixupOperatorStatus* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.override_operator_name_, lhs_arena,
                                       &other->_impl_.override_operator_name_, rhs_arena);
        swap(_impl_.mode_, other->_impl_.mode_);
}

::google::protobuf::Metadata CSVCMsg_HltvFixupOperatorStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netmessages_2eproto_getter, &descriptor_table_netmessages_2eproto_once,
      file_level_metadata_netmessages_2eproto[70]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
