// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gcsystemmsgs.proto

#include "gcsystemmsgs.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCHVacVerificationChange::CMsgGCHVacVerificationChange(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.steamid_)*/ ::uint64_t{0u},
      /*decltype(_impl_.appid_)*/ 0u,
      /*decltype(_impl_.is_verified_)*/ false,
    } {}
struct CMsgGCHVacVerificationChangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCHVacVerificationChangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCHVacVerificationChangeDefaultTypeInternal() {}
  union {
    CMsgGCHVacVerificationChange _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCHVacVerificationChangeDefaultTypeInternal _CMsgGCHVacVerificationChange_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCHAccountPhoneNumberChange::CMsgGCHAccountPhoneNumberChange(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.steamid_)*/ ::uint64_t{0u},
      /*decltype(_impl_.phone_id_)*/ ::uint64_t{0u},
      /*decltype(_impl_.appid_)*/ 0u,
      /*decltype(_impl_.is_verified_)*/ false,
      /*decltype(_impl_.is_identifying_)*/ false,
    } {}
struct CMsgGCHAccountPhoneNumberChangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCHAccountPhoneNumberChangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCHAccountPhoneNumberChangeDefaultTypeInternal() {}
  union {
    CMsgGCHAccountPhoneNumberChange _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCHAccountPhoneNumberChangeDefaultTypeInternal _CMsgGCHAccountPhoneNumberChange_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCHInviteUserToLobby::CMsgGCHInviteUserToLobby(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.steamid_)*/ ::uint64_t{0u},
      /*decltype(_impl_.steamid_invited_)*/ ::uint64_t{0u},
      /*decltype(_impl_.steamid_lobby_)*/ ::uint64_t{0u},
      /*decltype(_impl_.appid_)*/ 0u,
    } {}
struct CMsgGCHInviteUserToLobbyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCHInviteUserToLobbyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCHInviteUserToLobbyDefaultTypeInternal() {}
  union {
    CMsgGCHInviteUserToLobby _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCHInviteUserToLobbyDefaultTypeInternal _CMsgGCHInviteUserToLobby_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CMsgGCHRecurringSubscriptionStatusChange::CMsgGCHRecurringSubscriptionStatusChange(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.steamid_)*/ ::uint64_t{0u},
      /*decltype(_impl_.agreementid_)*/ ::uint64_t{0u},
      /*decltype(_impl_.appid_)*/ 0u,
      /*decltype(_impl_.active_)*/ false,
    } {}
struct CMsgGCHRecurringSubscriptionStatusChangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgGCHRecurringSubscriptionStatusChangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgGCHRecurringSubscriptionStatusChangeDefaultTypeInternal() {}
  union {
    CMsgGCHRecurringSubscriptionStatusChange _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgGCHRecurringSubscriptionStatusChangeDefaultTypeInternal _CMsgGCHRecurringSubscriptionStatusChange_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.value_)*/ ::uint64_t{0u},
      /*decltype(_impl_.attribute_)*/ 0u,
    } {}
struct CQuest_PublisherAddCommunityItemsToPlayer_Request_AttributeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CQuest_PublisherAddCommunityItemsToPlayer_Request_AttributeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CQuest_PublisherAddCommunityItemsToPlayer_Request_AttributeDefaultTypeInternal() {}
  union {
    CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CQuest_PublisherAddCommunityItemsToPlayer_Request_AttributeDefaultTypeInternal _CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CQuest_PublisherAddCommunityItemsToPlayer_Request::CQuest_PublisherAddCommunityItemsToPlayer_Request(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.attributes_)*/ {},
      /*decltype(_impl_.prefix_item_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.note_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.steamid_)*/ ::uint64_t{0u},
      /*decltype(_impl_.appid_)*/ 0u,
      /*decltype(_impl_.match_item_type_)*/ 0u,
      /*decltype(_impl_.match_item_class_)*/ 0u,
    } {}
struct CQuest_PublisherAddCommunityItemsToPlayer_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CQuest_PublisherAddCommunityItemsToPlayer_RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CQuest_PublisherAddCommunityItemsToPlayer_RequestDefaultTypeInternal() {}
  union {
    CQuest_PublisherAddCommunityItemsToPlayer_Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CQuest_PublisherAddCommunityItemsToPlayer_RequestDefaultTypeInternal _CQuest_PublisherAddCommunityItemsToPlayer_Request_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CQuest_PublisherAddCommunityItemsToPlayer_Response::CQuest_PublisherAddCommunityItemsToPlayer_Response(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.items_matched_)*/ 0u,
      /*decltype(_impl_.items_granted_)*/ 0u,
    } {}
struct CQuest_PublisherAddCommunityItemsToPlayer_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CQuest_PublisherAddCommunityItemsToPlayer_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CQuest_PublisherAddCommunityItemsToPlayer_ResponseDefaultTypeInternal() {}
  union {
    CQuest_PublisherAddCommunityItemsToPlayer_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CQuest_PublisherAddCommunityItemsToPlayer_ResponseDefaultTypeInternal _CQuest_PublisherAddCommunityItemsToPlayer_Response_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CCommunity_GamePersonalDataCategoryInfo::CCommunity_GamePersonalDataCategoryInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.type_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.localization_token_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.template_file_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct CCommunity_GamePersonalDataCategoryInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CCommunity_GamePersonalDataCategoryInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CCommunity_GamePersonalDataCategoryInfoDefaultTypeInternal() {}
  union {
    CCommunity_GamePersonalDataCategoryInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CCommunity_GamePersonalDataCategoryInfoDefaultTypeInternal _CCommunity_GamePersonalDataCategoryInfo_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CCommunity_GetGamePersonalDataCategories_Request::CCommunity_GetGamePersonalDataCategories_Request(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.appid_)*/ 0u,
    } {}
struct CCommunity_GetGamePersonalDataCategories_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CCommunity_GetGamePersonalDataCategories_RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CCommunity_GetGamePersonalDataCategories_RequestDefaultTypeInternal() {}
  union {
    CCommunity_GetGamePersonalDataCategories_Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CCommunity_GetGamePersonalDataCategories_RequestDefaultTypeInternal _CCommunity_GetGamePersonalDataCategories_Request_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CCommunity_GetGamePersonalDataCategories_Response::CCommunity_GetGamePersonalDataCategories_Response(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.categories_)*/ {},
      /*decltype(_impl_.app_assets_basename_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct CCommunity_GetGamePersonalDataCategories_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CCommunity_GetGamePersonalDataCategories_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CCommunity_GetGamePersonalDataCategories_ResponseDefaultTypeInternal() {}
  union {
    CCommunity_GetGamePersonalDataCategories_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CCommunity_GetGamePersonalDataCategories_ResponseDefaultTypeInternal _CCommunity_GetGamePersonalDataCategories_Response_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CCommunity_GetGamePersonalDataEntries_Request::CCommunity_GetGamePersonalDataEntries_Request(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.type_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.continue_token_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.steamid_)*/ ::uint64_t{0u},
      /*decltype(_impl_.appid_)*/ 0u,
    } {}
struct CCommunity_GetGamePersonalDataEntries_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CCommunity_GetGamePersonalDataEntries_RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CCommunity_GetGamePersonalDataEntries_RequestDefaultTypeInternal() {}
  union {
    CCommunity_GetGamePersonalDataEntries_Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CCommunity_GetGamePersonalDataEntries_RequestDefaultTypeInternal _CCommunity_GetGamePersonalDataEntries_Request_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CCommunity_GetGamePersonalDataEntries_Response::CCommunity_GetGamePersonalDataEntries_Response(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.entries_)*/ {},
      /*decltype(_impl_.continue_token_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.gceresult_)*/ 0u,
    } {}
struct CCommunity_GetGamePersonalDataEntries_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CCommunity_GetGamePersonalDataEntries_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CCommunity_GetGamePersonalDataEntries_ResponseDefaultTypeInternal() {}
  union {
    CCommunity_GetGamePersonalDataEntries_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CCommunity_GetGamePersonalDataEntries_ResponseDefaultTypeInternal _CCommunity_GetGamePersonalDataEntries_Response_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CCommunity_TerminateGamePersonalDataEntries_Request::CCommunity_TerminateGamePersonalDataEntries_Request(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.steamid_)*/ ::uint64_t{0u},
      /*decltype(_impl_.appid_)*/ 0u,
    } {}
struct CCommunity_TerminateGamePersonalDataEntries_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CCommunity_TerminateGamePersonalDataEntries_RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CCommunity_TerminateGamePersonalDataEntries_RequestDefaultTypeInternal() {}
  union {
    CCommunity_TerminateGamePersonalDataEntries_Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CCommunity_TerminateGamePersonalDataEntries_RequestDefaultTypeInternal _CCommunity_TerminateGamePersonalDataEntries_Request_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CCommunity_TerminateGamePersonalDataEntries_Response::CCommunity_TerminateGamePersonalDataEntries_Response(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.gceresult_)*/ 0u,
    } {}
struct CCommunity_TerminateGamePersonalDataEntries_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CCommunity_TerminateGamePersonalDataEntries_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CCommunity_TerminateGamePersonalDataEntries_ResponseDefaultTypeInternal() {}
  union {
    CCommunity_TerminateGamePersonalDataEntries_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CCommunity_TerminateGamePersonalDataEntries_ResponseDefaultTypeInternal _CCommunity_TerminateGamePersonalDataEntries_Response_default_instance_;
static ::_pb::Metadata file_level_metadata_gcsystemmsgs_2eproto[14];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_gcsystemmsgs_2eproto[6];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_gcsystemmsgs_2eproto = nullptr;
const ::uint32_t TableStruct_gcsystemmsgs_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::CMsgGCHVacVerificationChange, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHVacVerificationChange, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCHVacVerificationChange, _impl_.steamid_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHVacVerificationChange, _impl_.appid_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHVacVerificationChange, _impl_.is_verified_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::CMsgGCHAccountPhoneNumberChange, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHAccountPhoneNumberChange, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCHAccountPhoneNumberChange, _impl_.steamid_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHAccountPhoneNumberChange, _impl_.appid_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHAccountPhoneNumberChange, _impl_.phone_id_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHAccountPhoneNumberChange, _impl_.is_verified_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHAccountPhoneNumberChange, _impl_.is_identifying_),
    0,
    2,
    1,
    3,
    4,
    PROTOBUF_FIELD_OFFSET(::CMsgGCHInviteUserToLobby, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHInviteUserToLobby, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCHInviteUserToLobby, _impl_.steamid_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHInviteUserToLobby, _impl_.appid_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHInviteUserToLobby, _impl_.steamid_invited_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHInviteUserToLobby, _impl_.steamid_lobby_),
    0,
    3,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::CMsgGCHRecurringSubscriptionStatusChange, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHRecurringSubscriptionStatusChange, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CMsgGCHRecurringSubscriptionStatusChange, _impl_.steamid_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHRecurringSubscriptionStatusChange, _impl_.appid_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHRecurringSubscriptionStatusChange, _impl_.agreementid_),
    PROTOBUF_FIELD_OFFSET(::CMsgGCHRecurringSubscriptionStatusChange, _impl_.active_),
    0,
    2,
    1,
    3,
    PROTOBUF_FIELD_OFFSET(::CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute, _impl_.attribute_),
    PROTOBUF_FIELD_OFFSET(::CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute, _impl_.value_),
    1,
    0,
    PROTOBUF_FIELD_OFFSET(::CQuest_PublisherAddCommunityItemsToPlayer_Request, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CQuest_PublisherAddCommunityItemsToPlayer_Request, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CQuest_PublisherAddCommunityItemsToPlayer_Request, _impl_.steamid_),
    PROTOBUF_FIELD_OFFSET(::CQuest_PublisherAddCommunityItemsToPlayer_Request, _impl_.appid_),
    PROTOBUF_FIELD_OFFSET(::CQuest_PublisherAddCommunityItemsToPlayer_Request, _impl_.match_item_type_),
    PROTOBUF_FIELD_OFFSET(::CQuest_PublisherAddCommunityItemsToPlayer_Request, _impl_.match_item_class_),
    PROTOBUF_FIELD_OFFSET(::CQuest_PublisherAddCommunityItemsToPlayer_Request, _impl_.prefix_item_name_),
    PROTOBUF_FIELD_OFFSET(::CQuest_PublisherAddCommunityItemsToPlayer_Request, _impl_.attributes_),
    PROTOBUF_FIELD_OFFSET(::CQuest_PublisherAddCommunityItemsToPlayer_Request, _impl_.note_),
    2,
    3,
    4,
    5,
    0,
    ~0u,
    1,
    PROTOBUF_FIELD_OFFSET(::CQuest_PublisherAddCommunityItemsToPlayer_Response, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CQuest_PublisherAddCommunityItemsToPlayer_Response, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CQuest_PublisherAddCommunityItemsToPlayer_Response, _impl_.items_matched_),
    PROTOBUF_FIELD_OFFSET(::CQuest_PublisherAddCommunityItemsToPlayer_Response, _impl_.items_granted_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::CCommunity_GamePersonalDataCategoryInfo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CCommunity_GamePersonalDataCategoryInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CCommunity_GamePersonalDataCategoryInfo, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::CCommunity_GamePersonalDataCategoryInfo, _impl_.localization_token_),
    PROTOBUF_FIELD_OFFSET(::CCommunity_GamePersonalDataCategoryInfo, _impl_.template_file_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::CCommunity_GetGamePersonalDataCategories_Request, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CCommunity_GetGamePersonalDataCategories_Request, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CCommunity_GetGamePersonalDataCategories_Request, _impl_.appid_),
    0,
    PROTOBUF_FIELD_OFFSET(::CCommunity_GetGamePersonalDataCategories_Response, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CCommunity_GetGamePersonalDataCategories_Response, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CCommunity_GetGamePersonalDataCategories_Response, _impl_.categories_),
    PROTOBUF_FIELD_OFFSET(::CCommunity_GetGamePersonalDataCategories_Response, _impl_.app_assets_basename_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::CCommunity_GetGamePersonalDataEntries_Request, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CCommunity_GetGamePersonalDataEntries_Request, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CCommunity_GetGamePersonalDataEntries_Request, _impl_.appid_),
    PROTOBUF_FIELD_OFFSET(::CCommunity_GetGamePersonalDataEntries_Request, _impl_.steamid_),
    PROTOBUF_FIELD_OFFSET(::CCommunity_GetGamePersonalDataEntries_Request, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::CCommunity_GetGamePersonalDataEntries_Request, _impl_.continue_token_),
    3,
    2,
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::CCommunity_GetGamePersonalDataEntries_Response, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CCommunity_GetGamePersonalDataEntries_Response, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CCommunity_GetGamePersonalDataEntries_Response, _impl_.gceresult_),
    PROTOBUF_FIELD_OFFSET(::CCommunity_GetGamePersonalDataEntries_Response, _impl_.entries_),
    PROTOBUF_FIELD_OFFSET(::CCommunity_GetGamePersonalDataEntries_Response, _impl_.continue_token_),
    1,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::CCommunity_TerminateGamePersonalDataEntries_Request, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CCommunity_TerminateGamePersonalDataEntries_Request, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CCommunity_TerminateGamePersonalDataEntries_Request, _impl_.appid_),
    PROTOBUF_FIELD_OFFSET(::CCommunity_TerminateGamePersonalDataEntries_Request, _impl_.steamid_),
    1,
    0,
    PROTOBUF_FIELD_OFFSET(::CCommunity_TerminateGamePersonalDataEntries_Response, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CCommunity_TerminateGamePersonalDataEntries_Response, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CCommunity_TerminateGamePersonalDataEntries_Response, _impl_.gceresult_),
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::CMsgGCHVacVerificationChange)},
        {14, 27, -1, sizeof(::CMsgGCHAccountPhoneNumberChange)},
        {32, 44, -1, sizeof(::CMsgGCHInviteUserToLobby)},
        {48, 60, -1, sizeof(::CMsgGCHRecurringSubscriptionStatusChange)},
        {64, 74, -1, sizeof(::CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute)},
        {76, 91, -1, sizeof(::CQuest_PublisherAddCommunityItemsToPlayer_Request)},
        {98, 108, -1, sizeof(::CQuest_PublisherAddCommunityItemsToPlayer_Response)},
        {110, 121, -1, sizeof(::CCommunity_GamePersonalDataCategoryInfo)},
        {124, 133, -1, sizeof(::CCommunity_GetGamePersonalDataCategories_Request)},
        {134, 144, -1, sizeof(::CCommunity_GetGamePersonalDataCategories_Response)},
        {146, 158, -1, sizeof(::CCommunity_GetGamePersonalDataEntries_Request)},
        {162, 173, -1, sizeof(::CCommunity_GetGamePersonalDataEntries_Response)},
        {176, 186, -1, sizeof(::CCommunity_TerminateGamePersonalDataEntries_Request)},
        {188, 197, -1, sizeof(::CCommunity_TerminateGamePersonalDataEntries_Response)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_CMsgGCHVacVerificationChange_default_instance_._instance,
    &::_CMsgGCHAccountPhoneNumberChange_default_instance_._instance,
    &::_CMsgGCHInviteUserToLobby_default_instance_._instance,
    &::_CMsgGCHRecurringSubscriptionStatusChange_default_instance_._instance,
    &::_CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute_default_instance_._instance,
    &::_CQuest_PublisherAddCommunityItemsToPlayer_Request_default_instance_._instance,
    &::_CQuest_PublisherAddCommunityItemsToPlayer_Response_default_instance_._instance,
    &::_CCommunity_GamePersonalDataCategoryInfo_default_instance_._instance,
    &::_CCommunity_GetGamePersonalDataCategories_Request_default_instance_._instance,
    &::_CCommunity_GetGamePersonalDataCategories_Response_default_instance_._instance,
    &::_CCommunity_GetGamePersonalDataEntries_Request_default_instance_._instance,
    &::_CCommunity_GetGamePersonalDataEntries_Response_default_instance_._instance,
    &::_CCommunity_TerminateGamePersonalDataEntries_Request_default_instance_._instance,
    &::_CCommunity_TerminateGamePersonalDataEntries_Response_default_instance_._instance,
};
const char descriptor_table_protodef_gcsystemmsgs_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\022gcsystemmsgs.proto\"S\n\034CMsgGCHVacVerifi"
    "cationChange\022\017\n\007steamid\030\001 \001(\006\022\r\n\005appid\030\002"
    " \001(\r\022\023\n\013is_verified\030\003 \001(\010\"\200\001\n\037CMsgGCHAcc"
    "ountPhoneNumberChange\022\017\n\007steamid\030\001 \001(\006\022\r"
    "\n\005appid\030\002 \001(\r\022\020\n\010phone_id\030\003 \001(\004\022\023\n\013is_ve"
    "rified\030\004 \001(\010\022\026\n\016is_identifying\030\005 \001(\010\"j\n\030"
    "CMsgGCHInviteUserToLobby\022\017\n\007steamid\030\001 \001("
    "\006\022\r\n\005appid\030\002 \001(\r\022\027\n\017steamid_invited\030\003 \001("
    "\006\022\025\n\rsteamid_lobby\030\004 \001(\006\"o\n(CMsgGCHRecur"
    "ringSubscriptionStatusChange\022\017\n\007steamid\030"
    "\001 \001(\006\022\r\n\005appid\030\002 \001(\r\022\023\n\013agreementid\030\003 \001("
    "\006\022\016\n\006active\030\004 \001(\010\"\257\002\n1CQuest_PublisherAd"
    "dCommunityItemsToPlayer_Request\022\017\n\007steam"
    "id\030\001 \001(\004\022\r\n\005appid\030\002 \001(\r\022\027\n\017match_item_ty"
    "pe\030\003 \001(\r\022\030\n\020match_item_class\030\004 \001(\r\022\030\n\020pr"
    "efix_item_name\030\005 \001(\t\022P\n\nattributes\030\006 \003(\013"
    "2<.CQuest_PublisherAddCommunityItemsToPl"
    "ayer_Request.Attribute\022\014\n\004note\030\007 \001(\t\032-\n\t"
    "Attribute\022\021\n\tattribute\030\001 \001(\r\022\r\n\005value\030\002 "
    "\001(\004\"b\n2CQuest_PublisherAddCommunityItems"
    "ToPlayer_Response\022\025\n\ritems_matched\030\001 \001(\r"
    "\022\025\n\ritems_granted\030\002 \001(\r\"j\n\'CCommunity_Ga"
    "mePersonalDataCategoryInfo\022\014\n\004type\030\001 \001(\t"
    "\022\032\n\022localization_token\030\002 \001(\t\022\025\n\rtemplate"
    "_file\030\003 \001(\t\"A\n0CCommunity_GetGamePersona"
    "lDataCategories_Request\022\r\n\005appid\030\001 \001(\r\"\216"
    "\001\n1CCommunity_GetGamePersonalDataCategor"
    "ies_Response\022<\n\ncategories\030\001 \003(\0132(.CComm"
    "unity_GamePersonalDataCategoryInfo\022\033\n\023ap"
    "p_assets_basename\030\002 \001(\t\"u\n-CCommunity_Ge"
    "tGamePersonalDataEntries_Request\022\r\n\005appi"
    "d\030\001 \001(\r\022\017\n\007steamid\030\002 \001(\004\022\014\n\004type\030\003 \001(\t\022\026"
    "\n\016continue_token\030\004 \001(\t\"l\n.CCommunity_Get"
    "GamePersonalDataEntries_Response\022\021\n\tgcer"
    "esult\030\001 \001(\r\022\017\n\007entries\030\002 \003(\t\022\026\n\016continue"
    "_token\030\003 \001(\t\"U\n3CCommunity_TerminateGame"
    "PersonalDataEntries_Request\022\r\n\005appid\030\001 \001"
    "(\r\022\017\n\007steamid\030\002 \001(\004\"I\n4CCommunity_Termin"
    "ateGamePersonalDataEntries_Response\022\021\n\tg"
    "ceresult\030\001 \001(\r*\302\030\n\014EGCSystemMsg\022\023\n\017k_EGC"
    "MsgInvalid\020\000\022\021\n\rk_EGCMsgMulti\020\001\022\030\n\024k_EGC"
    "MsgGenericReply\020\n\022\026\n\022k_EGCMsgSystemBase\020"
    "2\022\036\n\032k_EGCMsgAchievementAwarded\0203\022\026\n\022k_E"
    "GCMsgConCommand\0204\022\030\n\024k_EGCMsgStartPlayin"
    "g\0205\022\027\n\023k_EGCMsgStopPlaying\0206\022\033\n\027k_EGCMsg"
    "StartGameserver\0207\022\032\n\026k_EGCMsgStopGameser"
    "ver\0208\022\025\n\021k_EGCMsgWGRequest\0209\022\026\n\022k_EGCMsg"
    "WGResponse\020:\022\"\n\036k_EGCMsgGetUserGameStats"
    "Schema\020;\022*\n&k_EGCMsgGetUserGameStatsSche"
    "maResponse\020<\022\"\n\036k_EGCMsgGetUserStatsDEPR"
    "ECATED\020=\022 \n\034k_EGCMsgGetUserStatsResponse"
    "\020>\022\032\n\026k_EGCMsgAppInfoUpdated\020\?\022\033\n\027k_EGCM"
    "sgValidateSession\020@\022#\n\037k_EGCMsgValidateS"
    "essionResponse\020A\022\"\n\036k_EGCMsgLookupAccoun"
    "tFromInput\020B\022\033\n\027k_EGCMsgSendHTTPRequest\020"
    "C\022#\n\037k_EGCMsgSendHTTPRequestResponse\020D\022\030"
    "\n\024k_EGCMsgPreTestSetup\020E\022\037\n\033k_EGCMsgReco"
    "rdSupportAction\020F\022(\n$k_EGCMsgGetAccountD"
    "etails_DEPRECATED\020G\022\"\n\036k_EGCMsgReceiveIn"
    "terAppMessage\020I\022\030\n\024k_EGCMsgFindAccounts\020"
    "J\022\025\n\021k_EGCMsgPostAlert\020K\022\027\n\023k_EGCMsgGetL"
    "icenses\020L\022\030\n\024k_EGCMsgGetUserStats\020M\022\027\n\023k"
    "_EGCMsgGetCommands\020N\022\037\n\033k_EGCMsgGetComma"
    "ndsResponse\020O\022\032\n\026k_EGCMsgAddFreeLicense\020"
    "P\022\"\n\036k_EGCMsgAddFreeLicenseResponse\020Q\022\031\n"
    "\025k_EGCMsgGetIPLocation\020R\022!\n\035k_EGCMsgGetI"
    "PLocationResponse\020S\022\035\n\031k_EGCMsgSystemSta"
    "tsSchema\020T\022\032\n\026k_EGCMsgGetSystemStats\020U\022\""
    "\n\036k_EGCMsgGetSystemStatsResponse\020V\022\025\n\021k_"
    "EGCMsgSendEmail\020W\022\035\n\031k_EGCMsgSendEmailRe"
    "sponse\020X\022\034\n\030k_EGCMsgGetEmailTemplate\020Y\022$"
    "\n k_EGCMsgGetEmailTemplateResponse\020Z\022\032\n\026"
    "k_EGCMsgGrantGuestPass\020[\022\"\n\036k_EGCMsgGran"
    "tGuestPassResponse\020\\\022\035\n\031k_EGCMsgGetAccou"
    "ntDetails\020]\022%\n!k_EGCMsgGetAccountDetails"
    "Response\020^\022\033\n\027k_EGCMsgGetPersonaNames\020_\022"
    "#\n\037k_EGCMsgGetPersonaNamesResponse\020`\022\030\n\024"
    "k_EGCMsgMultiplexMsg\020a\022 \n\034k_EGCMsgMultip"
    "lexMsgResponse\020b\022$\n k_EGCMsgWebAPIRegist"
    "erInterfaces\020e\022\034\n\030k_EGCMsgWebAPIJobReque"
    "st\020f\022(\n$k_EGCMsgWebAPIJobRequestHttpResp"
    "onse\020h\022+\n\'k_EGCMsgWebAPIJobRequestForwar"
    "dResponse\020i\022\031\n\024k_EGCMsgMemCachedGet\020\310\001\022!"
    "\n\034k_EGCMsgMemCachedGetResponse\020\311\001\022\031\n\024k_E"
    "GCMsgMemCachedSet\020\312\001\022\034\n\027k_EGCMsgMemCache"
    "dDelete\020\313\001\022\033\n\026k_EGCMsgMemCachedStats\020\314\001\022"
    "#\n\036k_EGCMsgMemCachedStatsResponse\020\315\001\022\037\n\032"
    "k_EGCMsgMasterSetDirectory\020\334\001\022\'\n\"k_EGCMs"
    "gMasterSetDirectoryResponse\020\335\001\022#\n\036k_EGCM"
    "sgMasterSetWebAPIRouting\020\336\001\022+\n&k_EGCMsgM"
    "asterSetWebAPIRoutingResponse\020\337\001\022&\n!k_EG"
    "CMsgMasterSetClientMsgRouting\020\340\001\022.\n)k_EG"
    "CMsgMasterSetClientMsgRoutingResponse\020\341\001"
    "\022\027\n\022k_EGCMsgSetOptions\020\342\001\022\037\n\032k_EGCMsgSet"
    "OptionsResponse\020\343\001\022\030\n\023k_EGCMsgSystemBase"
    "2\020\364\003\022#\n\036k_EGCMsgGetPurchaseTrustStatus\020\365"
    "\003\022+\n&k_EGCMsgGetPurchaseTrustStatusRespo"
    "nse\020\366\003\022\032\n\025k_EGCMsgUpdateSession\020\367\003\022%\n k_"
    "EGCMsgGCAccountVacStatusChange\020\370\003\022\034\n\027k_E"
    "GCMsgCheckFriendship\020\371\003\022$\n\037k_EGCMsgCheck"
    "FriendshipResponse\020\372\003\022\"\n\035k_EGCMsgGetPart"
    "nerAccountLink\020\373\003\022*\n%k_EGCMsgGetPartnerA"
    "ccountLinkResponse\020\374\003\022\037\n\032k_EGCMsgDPPartn"
    "erMicroTxns\020\200\004\022\'\n\"k_EGCMsgDPPartnerMicro"
    "TxnsResponse\020\201\004\022\"\n\035k_EGCMsgVacVerificati"
    "onChange\020\206\004\022%\n k_EGCMsgAccountPhoneNumbe"
    "rChange\020\207\004\022\036\n\031k_EGCMsgInviteUserToLobby\020"
    "\213\004\0221\n,k_EGCMsgGetGamePersonalDataCategor"
    "iesRequest\020\214\004\0222\n-k_EGCMsgGetGamePersonal"
    "DataCategoriesResponse\020\215\004\022.\n)k_EGCMsgGet"
    "GamePersonalDataEntriesRequest\020\216\004\022/\n*k_E"
    "GCMsgGetGamePersonalDataEntriesResponse\020"
    "\217\004\0224\n/k_EGCMsgTerminateGamePersonalDataE"
    "ntriesRequest\020\220\004\0225\n0k_EGCMsgTerminateGam"
    "ePersonalDataEntriesResponse\020\221\004\022.\n)k_EGC"
    "MsgRecurringSubscriptionStatusChange\020\222\004\022"
    " \n\033k_EGCMsgDirectServiceMethod\020\223\004\022(\n#k_E"
    "GCMsgDirectServiceMethodResponse\020\224\004*\357\001\n\006"
    "ESOMsg\022\023\n\017k_ESOMsg_Create\020\025\022\023\n\017k_ESOMsg_"
    "Update\020\026\022\024\n\020k_ESOMsg_Destroy\020\027\022\034\n\030k_ESOM"
    "sg_CacheSubscribed\020\030\022\036\n\032k_ESOMsg_CacheUn"
    "subscribed\020\031\022\033\n\027k_ESOMsg_UpdateMultiple\020"
    "\032\022#\n\037k_ESOMsg_CacheSubscriptionCheck\020\033\022%"
    "\n!k_ESOMsg_CacheSubscriptionRefresh\020\034*\331\002"
    "\n\020EGCBaseClientMsg\022\032\n\025k_EMsgGCClientWelc"
    "ome\020\244\037\022\032\n\025k_EMsgGCServerWelcome\020\245\037\022\030\n\023k_"
    "EMsgGCClientHello\020\246\037\022\030\n\023k_EMsgGCServerHe"
    "llo\020\247\037\022#\n\036k_EMsgGCClientConnectionStatus"
    "\020\251\037\022#\n\036k_EMsgGCServerConnectionStatus\020\252\037"
    "\022\037\n\032k_EMsgGCClientHelloPartner\020\253\037\022\032\n\025k_E"
    "MsgGCClientHelloPW\020\254\037\022\032\n\025k_EMsgGCClientH"
    "elloR2\020\255\037\022\032\n\025k_EMsgGCClientHelloR3\020\256\037\022\032\n"
    "\025k_EMsgGCClientHelloR4\020\257\037*\211\002\n\nEGCToGCMsg"
    "\022\032\n\025k_EGCToGCMsgMasterAck\020\226\001\022\"\n\035k_EGCToG"
    "CMsgMasterAckResponse\020\227\001\022\027\n\022k_EGCToGCMsg"
    "Routed\020\230\001\022\034\n\027k_EGCToGCMsgRoutedReply\020\231\001\022"
    "\032\n\025k_EMsgUpdateSessionIP\020\232\001\022\033\n\026k_EMsgReq"
    "uestSessionIP\020\233\001\022#\n\036k_EMsgRequestSession"
    "IPResponse\020\234\001\022&\n!k_EGCToGCMsgMasterStart"
    "upComplete\020\235\001*\260\003\n\023ECommunityItemClass\022!\n"
    "\035k_ECommunityItemClass_Invalid\020\000\022\037\n\033k_EC"
    "ommunityItemClass_Badge\020\001\022\"\n\036k_ECommunit"
    "yItemClass_GameCard\020\002\022+\n\'k_ECommunityIte"
    "mClass_ProfileBackground\020\003\022\"\n\036k_ECommuni"
    "tyItemClass_Emoticon\020\004\022%\n!k_ECommunityIt"
    "emClass_BoosterPack\020\005\022$\n k_ECommunityIte"
    "mClass_Consumable\020\006\022!\n\035k_ECommunityItemC"
    "lass_GameGoo\020\007\022)\n%k_ECommunityItemClass_"
    "ProfileModifier\020\010\022\037\n\033k_ECommunityItemCla"
    "ss_Scene\020\t\022$\n k_ECommunityItemClass_Sali"
    "enItem\020\n*\326\003\n\027ECommunityItemAttribute\022%\n!"
    "k_ECommunityItemAttribute_Invalid\020\000\022(\n$k"
    "_ECommunityItemAttribute_CardBorder\020\001\022#\n"
    "\037k_ECommunityItemAttribute_Level\020\002\022)\n%k_"
    "ECommunityItemAttribute_IssueNumber\020\003\022*\n"
    "&k_ECommunityItemAttribute_TradableTime\020"
    "\004\022,\n(k_ECommunityItemAttribute_StorePack"
    "ageID\020\005\0220\n,k_ECommunityItemAttribute_Com"
    "munityItemAppID\020\006\022/\n+k_ECommunityItemAtt"
    "ribute_CommunityItemType\020\007\0223\n/k_ECommuni"
    "tyItemAttribute_ProfileModiferEnabled\020\010\022"
    "(\n$k_ECommunityItemAttribute_ExpiryTime\020"
    "\t"
};
static ::absl::once_flag descriptor_table_gcsystemmsgs_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_gcsystemmsgs_2eproto = {
    false,
    false,
    6481,
    descriptor_table_protodef_gcsystemmsgs_2eproto,
    "gcsystemmsgs.proto",
    &descriptor_table_gcsystemmsgs_2eproto_once,
    nullptr,
    0,
    14,
    schemas,
    file_default_instances,
    TableStruct_gcsystemmsgs_2eproto::offsets,
    file_level_metadata_gcsystemmsgs_2eproto,
    file_level_enum_descriptors_gcsystemmsgs_2eproto,
    file_level_service_descriptors_gcsystemmsgs_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_gcsystemmsgs_2eproto_getter() {
  return &descriptor_table_gcsystemmsgs_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_gcsystemmsgs_2eproto(&descriptor_table_gcsystemmsgs_2eproto);
const ::google::protobuf::EnumDescriptor* EGCSystemMsg_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_gcsystemmsgs_2eproto);
  return file_level_enum_descriptors_gcsystemmsgs_2eproto[0];
}
bool EGCSystemMsg_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 10:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 101:
    case 102:
    case 104:
    case 105:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 220:
    case 221:
    case 222:
    case 223:
    case 224:
    case 225:
    case 226:
    case 227:
    case 500:
    case 501:
    case 502:
    case 503:
    case 504:
    case 505:
    case 506:
    case 507:
    case 508:
    case 512:
    case 513:
    case 518:
    case 519:
    case 523:
    case 524:
    case 525:
    case 526:
    case 527:
    case 528:
    case 529:
    case 530:
    case 531:
    case 532:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* ESOMsg_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_gcsystemmsgs_2eproto);
  return file_level_enum_descriptors_gcsystemmsgs_2eproto[1];
}
bool ESOMsg_IsValid(int value) {
  switch (value) {
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* EGCBaseClientMsg_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_gcsystemmsgs_2eproto);
  return file_level_enum_descriptors_gcsystemmsgs_2eproto[2];
}
bool EGCBaseClientMsg_IsValid(int value) {
  switch (value) {
    case 4004:
    case 4005:
    case 4006:
    case 4007:
    case 4009:
    case 4010:
    case 4011:
    case 4012:
    case 4013:
    case 4014:
    case 4015:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* EGCToGCMsg_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_gcsystemmsgs_2eproto);
  return file_level_enum_descriptors_gcsystemmsgs_2eproto[3];
}
bool EGCToGCMsg_IsValid(int value) {
  switch (value) {
    case 150:
    case 151:
    case 152:
    case 153:
    case 154:
    case 155:
    case 156:
    case 157:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* ECommunityItemClass_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_gcsystemmsgs_2eproto);
  return file_level_enum_descriptors_gcsystemmsgs_2eproto[4];
}
bool ECommunityItemClass_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* ECommunityItemAttribute_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_gcsystemmsgs_2eproto);
  return file_level_enum_descriptors_gcsystemmsgs_2eproto[5];
}
bool ECommunityItemAttribute_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}
// ===================================================================

class CMsgGCHVacVerificationChange::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCHVacVerificationChange>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgGCHVacVerificationChange, _impl_._has_bits_);
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_appid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_is_verified(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgGCHVacVerificationChange::CMsgGCHVacVerificationChange(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCHVacVerificationChange)
}
CMsgGCHVacVerificationChange::CMsgGCHVacVerificationChange(const CMsgGCHVacVerificationChange& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgGCHVacVerificationChange)
}
inline void CMsgGCHVacVerificationChange::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.steamid_){::uint64_t{0u}},
      decltype(_impl_.appid_){0u},
      decltype(_impl_.is_verified_){false},
  };
}
CMsgGCHVacVerificationChange::~CMsgGCHVacVerificationChange() {
  // @@protoc_insertion_point(destructor:CMsgGCHVacVerificationChange)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCHVacVerificationChange::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CMsgGCHVacVerificationChange::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCHVacVerificationChange::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCHVacVerificationChange)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.steamid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_verified_) -
        reinterpret_cast<char*>(&_impl_.steamid_)) + sizeof(_impl_.is_verified_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCHVacVerificationChange::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> CMsgGCHVacVerificationChange::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCHVacVerificationChange, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgGCHVacVerificationChange_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional fixed64 steamid = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHVacVerificationChange, _impl_.steamid_)}},
    // optional uint32 appid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCHVacVerificationChange, _impl_.appid_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHVacVerificationChange, _impl_.appid_)}},
    // optional bool is_verified = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCHVacVerificationChange, _impl_.is_verified_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHVacVerificationChange, _impl_.is_verified_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed64 steamid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHVacVerificationChange, _impl_.steamid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional uint32 appid = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHVacVerificationChange, _impl_.appid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bool is_verified = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHVacVerificationChange, _impl_.is_verified_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgGCHVacVerificationChange::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCHVacVerificationChange)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        1, this->_internal_steamid(), target);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_appid(), target);
  }

  // optional bool is_verified = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_is_verified(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCHVacVerificationChange)
  return target;
}

::size_t CMsgGCHVacVerificationChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCHVacVerificationChange)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional fixed64 steamid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 9;
    }

    // optional uint32 appid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_appid());
    }

    // optional bool is_verified = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCHVacVerificationChange::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCHVacVerificationChange::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCHVacVerificationChange::GetClassData() const { return &_class_data_; }


void CMsgGCHVacVerificationChange::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCHVacVerificationChange*>(&to_msg);
  auto& from = static_cast<const CMsgGCHVacVerificationChange&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCHVacVerificationChange)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.steamid_ = from._impl_.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.appid_ = from._impl_.appid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.is_verified_ = from._impl_.is_verified_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCHVacVerificationChange::CopyFrom(const CMsgGCHVacVerificationChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCHVacVerificationChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCHVacVerificationChange::IsInitialized() const {
  return true;
}

void CMsgGCHVacVerificationChange::InternalSwap(CMsgGCHVacVerificationChange* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCHVacVerificationChange, _impl_.is_verified_)
      + sizeof(CMsgGCHVacVerificationChange::_impl_.is_verified_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCHVacVerificationChange, _impl_.steamid_)>(
          reinterpret_cast<char*>(&_impl_.steamid_),
          reinterpret_cast<char*>(&other->_impl_.steamid_));
}

::google::protobuf::Metadata CMsgGCHVacVerificationChange::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gcsystemmsgs_2eproto_getter, &descriptor_table_gcsystemmsgs_2eproto_once,
      file_level_metadata_gcsystemmsgs_2eproto[0]);
}
// ===================================================================

class CMsgGCHAccountPhoneNumberChange::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCHAccountPhoneNumberChange>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgGCHAccountPhoneNumberChange, _impl_._has_bits_);
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_appid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_phone_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_is_verified(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_is_identifying(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

CMsgGCHAccountPhoneNumberChange::CMsgGCHAccountPhoneNumberChange(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCHAccountPhoneNumberChange)
}
CMsgGCHAccountPhoneNumberChange::CMsgGCHAccountPhoneNumberChange(const CMsgGCHAccountPhoneNumberChange& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgGCHAccountPhoneNumberChange)
}
inline void CMsgGCHAccountPhoneNumberChange::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.steamid_){::uint64_t{0u}},
      decltype(_impl_.phone_id_){::uint64_t{0u}},
      decltype(_impl_.appid_){0u},
      decltype(_impl_.is_verified_){false},
      decltype(_impl_.is_identifying_){false},
  };
}
CMsgGCHAccountPhoneNumberChange::~CMsgGCHAccountPhoneNumberChange() {
  // @@protoc_insertion_point(destructor:CMsgGCHAccountPhoneNumberChange)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCHAccountPhoneNumberChange::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CMsgGCHAccountPhoneNumberChange::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCHAccountPhoneNumberChange::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCHAccountPhoneNumberChange)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.steamid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_identifying_) -
        reinterpret_cast<char*>(&_impl_.steamid_)) + sizeof(_impl_.is_identifying_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCHAccountPhoneNumberChange::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> CMsgGCHAccountPhoneNumberChange::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCHAccountPhoneNumberChange, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgGCHAccountPhoneNumberChange_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional fixed64 steamid = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHAccountPhoneNumberChange, _impl_.steamid_)}},
    // optional uint32 appid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCHAccountPhoneNumberChange, _impl_.appid_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHAccountPhoneNumberChange, _impl_.appid_)}},
    // optional uint64 phone_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgGCHAccountPhoneNumberChange, _impl_.phone_id_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHAccountPhoneNumberChange, _impl_.phone_id_)}},
    // optional bool is_verified = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCHAccountPhoneNumberChange, _impl_.is_verified_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHAccountPhoneNumberChange, _impl_.is_verified_)}},
    // optional bool is_identifying = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCHAccountPhoneNumberChange, _impl_.is_identifying_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHAccountPhoneNumberChange, _impl_.is_identifying_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed64 steamid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHAccountPhoneNumberChange, _impl_.steamid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional uint32 appid = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHAccountPhoneNumberChange, _impl_.appid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 phone_id = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHAccountPhoneNumberChange, _impl_.phone_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional bool is_verified = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHAccountPhoneNumberChange, _impl_.is_verified_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool is_identifying = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHAccountPhoneNumberChange, _impl_.is_identifying_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgGCHAccountPhoneNumberChange::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCHAccountPhoneNumberChange)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        1, this->_internal_steamid(), target);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_appid(), target);
  }

  // optional uint64 phone_id = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_phone_id(), target);
  }

  // optional bool is_verified = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_is_verified(), target);
  }

  // optional bool is_identifying = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_is_identifying(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCHAccountPhoneNumberChange)
  return target;
}

::size_t CMsgGCHAccountPhoneNumberChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCHAccountPhoneNumberChange)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional fixed64 steamid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 9;
    }

    // optional uint64 phone_id = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_phone_id());
    }

    // optional uint32 appid = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_appid());
    }

    // optional bool is_verified = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2;
    }

    // optional bool is_identifying = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCHAccountPhoneNumberChange::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCHAccountPhoneNumberChange::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCHAccountPhoneNumberChange::GetClassData() const { return &_class_data_; }


void CMsgGCHAccountPhoneNumberChange::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCHAccountPhoneNumberChange*>(&to_msg);
  auto& from = static_cast<const CMsgGCHAccountPhoneNumberChange&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCHAccountPhoneNumberChange)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.steamid_ = from._impl_.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.phone_id_ = from._impl_.phone_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.appid_ = from._impl_.appid_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.is_verified_ = from._impl_.is_verified_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.is_identifying_ = from._impl_.is_identifying_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCHAccountPhoneNumberChange::CopyFrom(const CMsgGCHAccountPhoneNumberChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCHAccountPhoneNumberChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCHAccountPhoneNumberChange::IsInitialized() const {
  return true;
}

void CMsgGCHAccountPhoneNumberChange::InternalSwap(CMsgGCHAccountPhoneNumberChange* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCHAccountPhoneNumberChange, _impl_.is_identifying_)
      + sizeof(CMsgGCHAccountPhoneNumberChange::_impl_.is_identifying_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCHAccountPhoneNumberChange, _impl_.steamid_)>(
          reinterpret_cast<char*>(&_impl_.steamid_),
          reinterpret_cast<char*>(&other->_impl_.steamid_));
}

::google::protobuf::Metadata CMsgGCHAccountPhoneNumberChange::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gcsystemmsgs_2eproto_getter, &descriptor_table_gcsystemmsgs_2eproto_once,
      file_level_metadata_gcsystemmsgs_2eproto[1]);
}
// ===================================================================

class CMsgGCHInviteUserToLobby::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCHInviteUserToLobby>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgGCHInviteUserToLobby, _impl_._has_bits_);
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_appid(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_steamid_invited(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_steamid_lobby(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgGCHInviteUserToLobby::CMsgGCHInviteUserToLobby(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCHInviteUserToLobby)
}
CMsgGCHInviteUserToLobby::CMsgGCHInviteUserToLobby(const CMsgGCHInviteUserToLobby& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgGCHInviteUserToLobby)
}
inline void CMsgGCHInviteUserToLobby::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.steamid_){::uint64_t{0u}},
      decltype(_impl_.steamid_invited_){::uint64_t{0u}},
      decltype(_impl_.steamid_lobby_){::uint64_t{0u}},
      decltype(_impl_.appid_){0u},
  };
}
CMsgGCHInviteUserToLobby::~CMsgGCHInviteUserToLobby() {
  // @@protoc_insertion_point(destructor:CMsgGCHInviteUserToLobby)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCHInviteUserToLobby::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CMsgGCHInviteUserToLobby::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCHInviteUserToLobby::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCHInviteUserToLobby)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.steamid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.appid_) -
        reinterpret_cast<char*>(&_impl_.steamid_)) + sizeof(_impl_.appid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCHInviteUserToLobby::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> CMsgGCHInviteUserToLobby::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCHInviteUserToLobby, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgGCHInviteUserToLobby_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional fixed64 steamid_lobby = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHInviteUserToLobby, _impl_.steamid_lobby_)}},
    // optional fixed64 steamid = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHInviteUserToLobby, _impl_.steamid_)}},
    // optional uint32 appid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCHInviteUserToLobby, _impl_.appid_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHInviteUserToLobby, _impl_.appid_)}},
    // optional fixed64 steamid_invited = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHInviteUserToLobby, _impl_.steamid_invited_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed64 steamid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHInviteUserToLobby, _impl_.steamid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional uint32 appid = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHInviteUserToLobby, _impl_.appid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional fixed64 steamid_invited = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHInviteUserToLobby, _impl_.steamid_invited_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional fixed64 steamid_lobby = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHInviteUserToLobby, _impl_.steamid_lobby_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgGCHInviteUserToLobby::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCHInviteUserToLobby)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        1, this->_internal_steamid(), target);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_appid(), target);
  }

  // optional fixed64 steamid_invited = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        3, this->_internal_steamid_invited(), target);
  }

  // optional fixed64 steamid_lobby = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        4, this->_internal_steamid_lobby(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCHInviteUserToLobby)
  return target;
}

::size_t CMsgGCHInviteUserToLobby::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCHInviteUserToLobby)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional fixed64 steamid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 9;
    }

    // optional fixed64 steamid_invited = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }

    // optional fixed64 steamid_lobby = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 9;
    }

    // optional uint32 appid = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_appid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCHInviteUserToLobby::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCHInviteUserToLobby::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCHInviteUserToLobby::GetClassData() const { return &_class_data_; }


void CMsgGCHInviteUserToLobby::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCHInviteUserToLobby*>(&to_msg);
  auto& from = static_cast<const CMsgGCHInviteUserToLobby&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCHInviteUserToLobby)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.steamid_ = from._impl_.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.steamid_invited_ = from._impl_.steamid_invited_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.steamid_lobby_ = from._impl_.steamid_lobby_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.appid_ = from._impl_.appid_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCHInviteUserToLobby::CopyFrom(const CMsgGCHInviteUserToLobby& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCHInviteUserToLobby)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCHInviteUserToLobby::IsInitialized() const {
  return true;
}

void CMsgGCHInviteUserToLobby::InternalSwap(CMsgGCHInviteUserToLobby* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCHInviteUserToLobby, _impl_.appid_)
      + sizeof(CMsgGCHInviteUserToLobby::_impl_.appid_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCHInviteUserToLobby, _impl_.steamid_)>(
          reinterpret_cast<char*>(&_impl_.steamid_),
          reinterpret_cast<char*>(&other->_impl_.steamid_));
}

::google::protobuf::Metadata CMsgGCHInviteUserToLobby::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gcsystemmsgs_2eproto_getter, &descriptor_table_gcsystemmsgs_2eproto_once,
      file_level_metadata_gcsystemmsgs_2eproto[2]);
}
// ===================================================================

class CMsgGCHRecurringSubscriptionStatusChange::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCHRecurringSubscriptionStatusChange>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CMsgGCHRecurringSubscriptionStatusChange, _impl_._has_bits_);
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_appid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_agreementid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_active(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CMsgGCHRecurringSubscriptionStatusChange::CMsgGCHRecurringSubscriptionStatusChange(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCHRecurringSubscriptionStatusChange)
}
CMsgGCHRecurringSubscriptionStatusChange::CMsgGCHRecurringSubscriptionStatusChange(const CMsgGCHRecurringSubscriptionStatusChange& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgGCHRecurringSubscriptionStatusChange)
}
inline void CMsgGCHRecurringSubscriptionStatusChange::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.steamid_){::uint64_t{0u}},
      decltype(_impl_.agreementid_){::uint64_t{0u}},
      decltype(_impl_.appid_){0u},
      decltype(_impl_.active_){false},
  };
}
CMsgGCHRecurringSubscriptionStatusChange::~CMsgGCHRecurringSubscriptionStatusChange() {
  // @@protoc_insertion_point(destructor:CMsgGCHRecurringSubscriptionStatusChange)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgGCHRecurringSubscriptionStatusChange::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CMsgGCHRecurringSubscriptionStatusChange::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CMsgGCHRecurringSubscriptionStatusChange::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCHRecurringSubscriptionStatusChange)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.steamid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.active_) -
        reinterpret_cast<char*>(&_impl_.steamid_)) + sizeof(_impl_.active_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CMsgGCHRecurringSubscriptionStatusChange::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> CMsgGCHRecurringSubscriptionStatusChange::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgGCHRecurringSubscriptionStatusChange, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgGCHRecurringSubscriptionStatusChange_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bool active = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgGCHRecurringSubscriptionStatusChange, _impl_.active_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHRecurringSubscriptionStatusChange, _impl_.active_)}},
    // optional fixed64 steamid = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHRecurringSubscriptionStatusChange, _impl_.steamid_)}},
    // optional uint32 appid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgGCHRecurringSubscriptionStatusChange, _impl_.appid_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHRecurringSubscriptionStatusChange, _impl_.appid_)}},
    // optional fixed64 agreementid = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgGCHRecurringSubscriptionStatusChange, _impl_.agreementid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed64 steamid = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHRecurringSubscriptionStatusChange, _impl_.steamid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional uint32 appid = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHRecurringSubscriptionStatusChange, _impl_.appid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional fixed64 agreementid = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHRecurringSubscriptionStatusChange, _impl_.agreementid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional bool active = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgGCHRecurringSubscriptionStatusChange, _impl_.active_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CMsgGCHRecurringSubscriptionStatusChange::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCHRecurringSubscriptionStatusChange)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        1, this->_internal_steamid(), target);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_appid(), target);
  }

  // optional fixed64 agreementid = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        3, this->_internal_agreementid(), target);
  }

  // optional bool active = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_active(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCHRecurringSubscriptionStatusChange)
  return target;
}

::size_t CMsgGCHRecurringSubscriptionStatusChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCHRecurringSubscriptionStatusChange)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional fixed64 steamid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 9;
    }

    // optional fixed64 agreementid = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }

    // optional uint32 appid = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_appid());
    }

    // optional bool active = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CMsgGCHRecurringSubscriptionStatusChange::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CMsgGCHRecurringSubscriptionStatusChange::MergeImpl
};
const ::google::protobuf::Message::ClassData*CMsgGCHRecurringSubscriptionStatusChange::GetClassData() const { return &_class_data_; }


void CMsgGCHRecurringSubscriptionStatusChange::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CMsgGCHRecurringSubscriptionStatusChange*>(&to_msg);
  auto& from = static_cast<const CMsgGCHRecurringSubscriptionStatusChange&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCHRecurringSubscriptionStatusChange)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.steamid_ = from._impl_.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.agreementid_ = from._impl_.agreementid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.appid_ = from._impl_.appid_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.active_ = from._impl_.active_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgGCHRecurringSubscriptionStatusChange::CopyFrom(const CMsgGCHRecurringSubscriptionStatusChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCHRecurringSubscriptionStatusChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgGCHRecurringSubscriptionStatusChange::IsInitialized() const {
  return true;
}

void CMsgGCHRecurringSubscriptionStatusChange::InternalSwap(CMsgGCHRecurringSubscriptionStatusChange* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCHRecurringSubscriptionStatusChange, _impl_.active_)
      + sizeof(CMsgGCHRecurringSubscriptionStatusChange::_impl_.active_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCHRecurringSubscriptionStatusChange, _impl_.steamid_)>(
          reinterpret_cast<char*>(&_impl_.steamid_),
          reinterpret_cast<char*>(&other->_impl_.steamid_));
}

::google::protobuf::Metadata CMsgGCHRecurringSubscriptionStatusChange::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gcsystemmsgs_2eproto_getter, &descriptor_table_gcsystemmsgs_2eproto_once,
      file_level_metadata_gcsystemmsgs_2eproto[3]);
}
// ===================================================================

class CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::_Internal {
 public:
  using HasBits = decltype(std::declval<CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute, _impl_._has_bits_);
  static void set_has_attribute(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CQuest_PublisherAddCommunityItemsToPlayer_Request.Attribute)
}
CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute(const CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CQuest_PublisherAddCommunityItemsToPlayer_Request.Attribute)
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.value_){::uint64_t{0u}},
      decltype(_impl_.attribute_){0u},
  };
}
CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::~CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute() {
  // @@protoc_insertion_point(destructor:CQuest_PublisherAddCommunityItemsToPlayer_Request.Attribute)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::Clear() {
// @@protoc_insertion_point(message_clear_start:CQuest_PublisherAddCommunityItemsToPlayer_Request.Attribute)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.value_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.attribute_) -
        reinterpret_cast<char*>(&_impl_.value_)) + sizeof(_impl_.attribute_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint64 value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute, _impl_.value_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute, _impl_.value_)}},
    // optional uint32 attribute = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute, _impl_.attribute_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute, _impl_.attribute_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 attribute = 1;
    {PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute, _impl_.attribute_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 value = 2;
    {PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CQuest_PublisherAddCommunityItemsToPlayer_Request.Attribute)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 attribute = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_attribute(), target);
  }

  // optional uint64 value = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CQuest_PublisherAddCommunityItemsToPlayer_Request.Attribute)
  return target;
}

::size_t CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CQuest_PublisherAddCommunityItemsToPlayer_Request.Attribute)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 value = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_value());
    }

    // optional uint32 attribute = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_attribute());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::MergeImpl
};
const ::google::protobuf::Message::ClassData*CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::GetClassData() const { return &_class_data_; }


void CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute*>(&to_msg);
  auto& from = static_cast<const CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CQuest_PublisherAddCommunityItemsToPlayer_Request.Attribute)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.value_ = from._impl_.value_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.attribute_ = from._impl_.attribute_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::CopyFrom(const CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CQuest_PublisherAddCommunityItemsToPlayer_Request.Attribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::IsInitialized() const {
  return true;
}

void CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::InternalSwap(CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute, _impl_.attribute_)
      + sizeof(CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::_impl_.attribute_)
      - PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute, _impl_.value_)>(
          reinterpret_cast<char*>(&_impl_.value_),
          reinterpret_cast<char*>(&other->_impl_.value_));
}

::google::protobuf::Metadata CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gcsystemmsgs_2eproto_getter, &descriptor_table_gcsystemmsgs_2eproto_once,
      file_level_metadata_gcsystemmsgs_2eproto[4]);
}
// ===================================================================

class CQuest_PublisherAddCommunityItemsToPlayer_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CQuest_PublisherAddCommunityItemsToPlayer_Request>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Request, _impl_._has_bits_);
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_appid(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_match_item_type(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_match_item_class(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_prefix_item_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_note(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CQuest_PublisherAddCommunityItemsToPlayer_Request::CQuest_PublisherAddCommunityItemsToPlayer_Request(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CQuest_PublisherAddCommunityItemsToPlayer_Request)
}
CQuest_PublisherAddCommunityItemsToPlayer_Request::CQuest_PublisherAddCommunityItemsToPlayer_Request(const CQuest_PublisherAddCommunityItemsToPlayer_Request& from) : ::google::protobuf::Message() {
  CQuest_PublisherAddCommunityItemsToPlayer_Request* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.attributes_){from._impl_.attributes_},
      decltype(_impl_.prefix_item_name_){},
      decltype(_impl_.note_){},
      decltype(_impl_.steamid_){},
      decltype(_impl_.appid_){},
      decltype(_impl_.match_item_type_){},
      decltype(_impl_.match_item_class_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.prefix_item_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.prefix_item_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.prefix_item_name_.Set(from._internal_prefix_item_name(), _this->GetArenaForAllocation());
  }
  _impl_.note_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.note_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.note_.Set(from._internal_note(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.steamid_, &from._impl_.steamid_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.match_item_class_) -
    reinterpret_cast<char*>(&_impl_.steamid_)) + sizeof(_impl_.match_item_class_));

  // @@protoc_insertion_point(copy_constructor:CQuest_PublisherAddCommunityItemsToPlayer_Request)
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.attributes_){arena},
      decltype(_impl_.prefix_item_name_){},
      decltype(_impl_.note_){},
      decltype(_impl_.steamid_){::uint64_t{0u}},
      decltype(_impl_.appid_){0u},
      decltype(_impl_.match_item_type_){0u},
      decltype(_impl_.match_item_class_){0u},
  };
  _impl_.prefix_item_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.prefix_item_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.note_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.note_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CQuest_PublisherAddCommunityItemsToPlayer_Request::~CQuest_PublisherAddCommunityItemsToPlayer_Request() {
  // @@protoc_insertion_point(destructor:CQuest_PublisherAddCommunityItemsToPlayer_Request)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.attributes_.~RepeatedPtrField();
  _impl_.prefix_item_name_.Destroy();
  _impl_.note_.Destroy();
}
void CQuest_PublisherAddCommunityItemsToPlayer_Request::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CQuest_PublisherAddCommunityItemsToPlayer_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CQuest_PublisherAddCommunityItemsToPlayer_Request)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_attributes()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.prefix_item_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.note_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000003cu) {
    ::memset(&_impl_.steamid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.match_item_class_) -
        reinterpret_cast<char*>(&_impl_.steamid_)) + sizeof(_impl_.match_item_class_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CQuest_PublisherAddCommunityItemsToPlayer_Request::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 78, 2> CQuest_PublisherAddCommunityItemsToPlayer_Request::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Request, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CQuest_PublisherAddCommunityItemsToPlayer_Request_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint64 steamid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CQuest_PublisherAddCommunityItemsToPlayer_Request, _impl_.steamid_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Request, _impl_.steamid_)}},
    // optional uint32 appid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CQuest_PublisherAddCommunityItemsToPlayer_Request, _impl_.appid_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Request, _impl_.appid_)}},
    // optional uint32 match_item_type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CQuest_PublisherAddCommunityItemsToPlayer_Request, _impl_.match_item_type_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Request, _impl_.match_item_type_)}},
    // optional uint32 match_item_class = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CQuest_PublisherAddCommunityItemsToPlayer_Request, _impl_.match_item_class_), 5>(),
     {32, 5, 0, PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Request, _impl_.match_item_class_)}},
    // optional string prefix_item_name = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Request, _impl_.prefix_item_name_)}},
    // repeated .CQuest_PublisherAddCommunityItemsToPlayer_Request.Attribute attributes = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Request, _impl_.attributes_)}},
    // optional string note = 7;
    {::_pbi::TcParser::FastSS1,
     {58, 1, 0, PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Request, _impl_.note_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 steamid = 1;
    {PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Request, _impl_.steamid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 appid = 2;
    {PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Request, _impl_.appid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 match_item_type = 3;
    {PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Request, _impl_.match_item_type_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 match_item_class = 4;
    {PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Request, _impl_.match_item_class_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string prefix_item_name = 5;
    {PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Request, _impl_.prefix_item_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .CQuest_PublisherAddCommunityItemsToPlayer_Request.Attribute attributes = 6;
    {PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Request, _impl_.attributes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string note = 7;
    {PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Request, _impl_.note_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute>()},
  }}, {{
    "\61\0\0\0\0\20\0\4"
    "CQuest_PublisherAddCommunityItemsToPlayer_Request"
    "prefix_item_name"
    "note"
  }},
};

::uint8_t* CQuest_PublisherAddCommunityItemsToPlayer_Request::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CQuest_PublisherAddCommunityItemsToPlayer_Request)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 steamid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_steamid(), target);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_appid(), target);
  }

  // optional uint32 match_item_type = 3;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_match_item_type(), target);
  }

  // optional uint32 match_item_class = 4;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_match_item_class(), target);
  }

  // optional string prefix_item_name = 5;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_prefix_item_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CQuest_PublisherAddCommunityItemsToPlayer_Request.prefix_item_name");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // repeated .CQuest_PublisherAddCommunityItemsToPlayer_Request.Attribute attributes = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_attributes_size()); i < n; i++) {
    const auto& repfield = this->_internal_attributes().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional string note = 7;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_note();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CQuest_PublisherAddCommunityItemsToPlayer_Request.note");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CQuest_PublisherAddCommunityItemsToPlayer_Request)
  return target;
}

::size_t CQuest_PublisherAddCommunityItemsToPlayer_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CQuest_PublisherAddCommunityItemsToPlayer_Request)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CQuest_PublisherAddCommunityItemsToPlayer_Request.Attribute attributes = 6;
  total_size += 1UL * this->_internal_attributes_size();
  for (const auto& msg : this->_internal_attributes()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string prefix_item_name = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_prefix_item_name());
    }

    // optional string note = 7;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_note());
    }

    // optional uint64 steamid = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_steamid());
    }

    // optional uint32 appid = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_appid());
    }

    // optional uint32 match_item_type = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_match_item_type());
    }

    // optional uint32 match_item_class = 4;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_match_item_class());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CQuest_PublisherAddCommunityItemsToPlayer_Request::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CQuest_PublisherAddCommunityItemsToPlayer_Request::MergeImpl
};
const ::google::protobuf::Message::ClassData*CQuest_PublisherAddCommunityItemsToPlayer_Request::GetClassData() const { return &_class_data_; }


void CQuest_PublisherAddCommunityItemsToPlayer_Request::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CQuest_PublisherAddCommunityItemsToPlayer_Request*>(&to_msg);
  auto& from = static_cast<const CQuest_PublisherAddCommunityItemsToPlayer_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CQuest_PublisherAddCommunityItemsToPlayer_Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_attributes()->MergeFrom(from._internal_attributes());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_prefix_item_name(from._internal_prefix_item_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_note(from._internal_note());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.steamid_ = from._impl_.steamid_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.appid_ = from._impl_.appid_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.match_item_type_ = from._impl_.match_item_type_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.match_item_class_ = from._impl_.match_item_class_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CQuest_PublisherAddCommunityItemsToPlayer_Request::CopyFrom(const CQuest_PublisherAddCommunityItemsToPlayer_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CQuest_PublisherAddCommunityItemsToPlayer_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CQuest_PublisherAddCommunityItemsToPlayer_Request::IsInitialized() const {
  return true;
}

void CQuest_PublisherAddCommunityItemsToPlayer_Request::InternalSwap(CQuest_PublisherAddCommunityItemsToPlayer_Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.attributes_.InternalSwap(&other->_impl_.attributes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.prefix_item_name_, lhs_arena,
                                       &other->_impl_.prefix_item_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.note_, lhs_arena,
                                       &other->_impl_.note_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Request, _impl_.match_item_class_)
      + sizeof(CQuest_PublisherAddCommunityItemsToPlayer_Request::_impl_.match_item_class_)
      - PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Request, _impl_.steamid_)>(
          reinterpret_cast<char*>(&_impl_.steamid_),
          reinterpret_cast<char*>(&other->_impl_.steamid_));
}

::google::protobuf::Metadata CQuest_PublisherAddCommunityItemsToPlayer_Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gcsystemmsgs_2eproto_getter, &descriptor_table_gcsystemmsgs_2eproto_once,
      file_level_metadata_gcsystemmsgs_2eproto[5]);
}
// ===================================================================

class CQuest_PublisherAddCommunityItemsToPlayer_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CQuest_PublisherAddCommunityItemsToPlayer_Response>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Response, _impl_._has_bits_);
  static void set_has_items_matched(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_items_granted(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CQuest_PublisherAddCommunityItemsToPlayer_Response::CQuest_PublisherAddCommunityItemsToPlayer_Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CQuest_PublisherAddCommunityItemsToPlayer_Response)
}
CQuest_PublisherAddCommunityItemsToPlayer_Response::CQuest_PublisherAddCommunityItemsToPlayer_Response(const CQuest_PublisherAddCommunityItemsToPlayer_Response& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CQuest_PublisherAddCommunityItemsToPlayer_Response)
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Response::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.items_matched_){0u},
      decltype(_impl_.items_granted_){0u},
  };
}
CQuest_PublisherAddCommunityItemsToPlayer_Response::~CQuest_PublisherAddCommunityItemsToPlayer_Response() {
  // @@protoc_insertion_point(destructor:CQuest_PublisherAddCommunityItemsToPlayer_Response)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Response::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CQuest_PublisherAddCommunityItemsToPlayer_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CQuest_PublisherAddCommunityItemsToPlayer_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CQuest_PublisherAddCommunityItemsToPlayer_Response)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.items_matched_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.items_granted_) -
        reinterpret_cast<char*>(&_impl_.items_matched_)) + sizeof(_impl_.items_granted_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CQuest_PublisherAddCommunityItemsToPlayer_Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> CQuest_PublisherAddCommunityItemsToPlayer_Response::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Response, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CQuest_PublisherAddCommunityItemsToPlayer_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 items_granted = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CQuest_PublisherAddCommunityItemsToPlayer_Response, _impl_.items_granted_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Response, _impl_.items_granted_)}},
    // optional uint32 items_matched = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CQuest_PublisherAddCommunityItemsToPlayer_Response, _impl_.items_matched_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Response, _impl_.items_matched_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 items_matched = 1;
    {PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Response, _impl_.items_matched_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 items_granted = 2;
    {PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Response, _impl_.items_granted_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CQuest_PublisherAddCommunityItemsToPlayer_Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CQuest_PublisherAddCommunityItemsToPlayer_Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 items_matched = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_items_matched(), target);
  }

  // optional uint32 items_granted = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_items_granted(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CQuest_PublisherAddCommunityItemsToPlayer_Response)
  return target;
}

::size_t CQuest_PublisherAddCommunityItemsToPlayer_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CQuest_PublisherAddCommunityItemsToPlayer_Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 items_matched = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_items_matched());
    }

    // optional uint32 items_granted = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_items_granted());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CQuest_PublisherAddCommunityItemsToPlayer_Response::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CQuest_PublisherAddCommunityItemsToPlayer_Response::MergeImpl
};
const ::google::protobuf::Message::ClassData*CQuest_PublisherAddCommunityItemsToPlayer_Response::GetClassData() const { return &_class_data_; }


void CQuest_PublisherAddCommunityItemsToPlayer_Response::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CQuest_PublisherAddCommunityItemsToPlayer_Response*>(&to_msg);
  auto& from = static_cast<const CQuest_PublisherAddCommunityItemsToPlayer_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CQuest_PublisherAddCommunityItemsToPlayer_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.items_matched_ = from._impl_.items_matched_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.items_granted_ = from._impl_.items_granted_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CQuest_PublisherAddCommunityItemsToPlayer_Response::CopyFrom(const CQuest_PublisherAddCommunityItemsToPlayer_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CQuest_PublisherAddCommunityItemsToPlayer_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CQuest_PublisherAddCommunityItemsToPlayer_Response::IsInitialized() const {
  return true;
}

void CQuest_PublisherAddCommunityItemsToPlayer_Response::InternalSwap(CQuest_PublisherAddCommunityItemsToPlayer_Response* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Response, _impl_.items_granted_)
      + sizeof(CQuest_PublisherAddCommunityItemsToPlayer_Response::_impl_.items_granted_)
      - PROTOBUF_FIELD_OFFSET(CQuest_PublisherAddCommunityItemsToPlayer_Response, _impl_.items_matched_)>(
          reinterpret_cast<char*>(&_impl_.items_matched_),
          reinterpret_cast<char*>(&other->_impl_.items_matched_));
}

::google::protobuf::Metadata CQuest_PublisherAddCommunityItemsToPlayer_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gcsystemmsgs_2eproto_getter, &descriptor_table_gcsystemmsgs_2eproto_once,
      file_level_metadata_gcsystemmsgs_2eproto[6]);
}
// ===================================================================

class CCommunity_GamePersonalDataCategoryInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CCommunity_GamePersonalDataCategoryInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CCommunity_GamePersonalDataCategoryInfo, _impl_._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_localization_token(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_template_file(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CCommunity_GamePersonalDataCategoryInfo::CCommunity_GamePersonalDataCategoryInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CCommunity_GamePersonalDataCategoryInfo)
}
CCommunity_GamePersonalDataCategoryInfo::CCommunity_GamePersonalDataCategoryInfo(const CCommunity_GamePersonalDataCategoryInfo& from) : ::google::protobuf::Message() {
  CCommunity_GamePersonalDataCategoryInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.type_){},
      decltype(_impl_.localization_token_){},
      decltype(_impl_.template_file_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.type_.Set(from._internal_type(), _this->GetArenaForAllocation());
  }
  _impl_.localization_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.localization_token_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.localization_token_.Set(from._internal_localization_token(), _this->GetArenaForAllocation());
  }
  _impl_.template_file_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.template_file_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.template_file_.Set(from._internal_template_file(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:CCommunity_GamePersonalDataCategoryInfo)
}
inline void CCommunity_GamePersonalDataCategoryInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.type_){},
      decltype(_impl_.localization_token_){},
      decltype(_impl_.template_file_){},
  };
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.localization_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.localization_token_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.template_file_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.template_file_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CCommunity_GamePersonalDataCategoryInfo::~CCommunity_GamePersonalDataCategoryInfo() {
  // @@protoc_insertion_point(destructor:CCommunity_GamePersonalDataCategoryInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CCommunity_GamePersonalDataCategoryInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.type_.Destroy();
  _impl_.localization_token_.Destroy();
  _impl_.template_file_.Destroy();
}
void CCommunity_GamePersonalDataCategoryInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CCommunity_GamePersonalDataCategoryInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CCommunity_GamePersonalDataCategoryInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.type_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.localization_token_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.template_file_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CCommunity_GamePersonalDataCategoryInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 83, 2> CCommunity_GamePersonalDataCategoryInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CCommunity_GamePersonalDataCategoryInfo, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CCommunity_GamePersonalDataCategoryInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string type = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CCommunity_GamePersonalDataCategoryInfo, _impl_.type_)}},
    // optional string localization_token = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CCommunity_GamePersonalDataCategoryInfo, _impl_.localization_token_)}},
    // optional string template_file = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(CCommunity_GamePersonalDataCategoryInfo, _impl_.template_file_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string type = 1;
    {PROTOBUF_FIELD_OFFSET(CCommunity_GamePersonalDataCategoryInfo, _impl_.type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string localization_token = 2;
    {PROTOBUF_FIELD_OFFSET(CCommunity_GamePersonalDataCategoryInfo, _impl_.localization_token_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string template_file = 3;
    {PROTOBUF_FIELD_OFFSET(CCommunity_GamePersonalDataCategoryInfo, _impl_.template_file_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\47\4\22\15\0\0\0\0"
    "CCommunity_GamePersonalDataCategoryInfo"
    "type"
    "localization_token"
    "template_file"
  }},
};

::uint8_t* CCommunity_GamePersonalDataCategoryInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCommunity_GamePersonalDataCategoryInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string type = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_type();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CCommunity_GamePersonalDataCategoryInfo.type");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string localization_token = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_localization_token();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CCommunity_GamePersonalDataCategoryInfo.localization_token");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string template_file = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_template_file();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CCommunity_GamePersonalDataCategoryInfo.template_file");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCommunity_GamePersonalDataCategoryInfo)
  return target;
}

::size_t CCommunity_GamePersonalDataCategoryInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCommunity_GamePersonalDataCategoryInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string type = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_type());
    }

    // optional string localization_token = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_localization_token());
    }

    // optional string template_file = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_template_file());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CCommunity_GamePersonalDataCategoryInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CCommunity_GamePersonalDataCategoryInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*CCommunity_GamePersonalDataCategoryInfo::GetClassData() const { return &_class_data_; }


void CCommunity_GamePersonalDataCategoryInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CCommunity_GamePersonalDataCategoryInfo*>(&to_msg);
  auto& from = static_cast<const CCommunity_GamePersonalDataCategoryInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CCommunity_GamePersonalDataCategoryInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_type(from._internal_type());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_localization_token(from._internal_localization_token());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_template_file(from._internal_template_file());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CCommunity_GamePersonalDataCategoryInfo::CopyFrom(const CCommunity_GamePersonalDataCategoryInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCommunity_GamePersonalDataCategoryInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CCommunity_GamePersonalDataCategoryInfo::IsInitialized() const {
  return true;
}

void CCommunity_GamePersonalDataCategoryInfo::InternalSwap(CCommunity_GamePersonalDataCategoryInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, lhs_arena,
                                       &other->_impl_.type_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.localization_token_, lhs_arena,
                                       &other->_impl_.localization_token_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.template_file_, lhs_arena,
                                       &other->_impl_.template_file_, rhs_arena);
}

::google::protobuf::Metadata CCommunity_GamePersonalDataCategoryInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gcsystemmsgs_2eproto_getter, &descriptor_table_gcsystemmsgs_2eproto_once,
      file_level_metadata_gcsystemmsgs_2eproto[7]);
}
// ===================================================================

class CCommunity_GetGamePersonalDataCategories_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CCommunity_GetGamePersonalDataCategories_Request>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CCommunity_GetGamePersonalDataCategories_Request, _impl_._has_bits_);
  static void set_has_appid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CCommunity_GetGamePersonalDataCategories_Request::CCommunity_GetGamePersonalDataCategories_Request(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CCommunity_GetGamePersonalDataCategories_Request)
}
CCommunity_GetGamePersonalDataCategories_Request::CCommunity_GetGamePersonalDataCategories_Request(const CCommunity_GetGamePersonalDataCategories_Request& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CCommunity_GetGamePersonalDataCategories_Request)
}
inline void CCommunity_GetGamePersonalDataCategories_Request::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.appid_){0u},
  };
}
CCommunity_GetGamePersonalDataCategories_Request::~CCommunity_GetGamePersonalDataCategories_Request() {
  // @@protoc_insertion_point(destructor:CCommunity_GetGamePersonalDataCategories_Request)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CCommunity_GetGamePersonalDataCategories_Request::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CCommunity_GetGamePersonalDataCategories_Request::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CCommunity_GetGamePersonalDataCategories_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CCommunity_GetGamePersonalDataCategories_Request)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.appid_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CCommunity_GetGamePersonalDataCategories_Request::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CCommunity_GetGamePersonalDataCategories_Request::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CCommunity_GetGamePersonalDataCategories_Request, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CCommunity_GetGamePersonalDataCategories_Request_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 appid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CCommunity_GetGamePersonalDataCategories_Request, _impl_.appid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CCommunity_GetGamePersonalDataCategories_Request, _impl_.appid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 appid = 1;
    {PROTOBUF_FIELD_OFFSET(CCommunity_GetGamePersonalDataCategories_Request, _impl_.appid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CCommunity_GetGamePersonalDataCategories_Request::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCommunity_GetGamePersonalDataCategories_Request)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_appid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCommunity_GetGamePersonalDataCategories_Request)
  return target;
}

::size_t CCommunity_GetGamePersonalDataCategories_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCommunity_GetGamePersonalDataCategories_Request)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 appid = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_appid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CCommunity_GetGamePersonalDataCategories_Request::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CCommunity_GetGamePersonalDataCategories_Request::MergeImpl
};
const ::google::protobuf::Message::ClassData*CCommunity_GetGamePersonalDataCategories_Request::GetClassData() const { return &_class_data_; }


void CCommunity_GetGamePersonalDataCategories_Request::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CCommunity_GetGamePersonalDataCategories_Request*>(&to_msg);
  auto& from = static_cast<const CCommunity_GetGamePersonalDataCategories_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CCommunity_GetGamePersonalDataCategories_Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_appid(from._internal_appid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CCommunity_GetGamePersonalDataCategories_Request::CopyFrom(const CCommunity_GetGamePersonalDataCategories_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCommunity_GetGamePersonalDataCategories_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CCommunity_GetGamePersonalDataCategories_Request::IsInitialized() const {
  return true;
}

void CCommunity_GetGamePersonalDataCategories_Request::InternalSwap(CCommunity_GetGamePersonalDataCategories_Request* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.appid_, other->_impl_.appid_);
}

::google::protobuf::Metadata CCommunity_GetGamePersonalDataCategories_Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gcsystemmsgs_2eproto_getter, &descriptor_table_gcsystemmsgs_2eproto_once,
      file_level_metadata_gcsystemmsgs_2eproto[8]);
}
// ===================================================================

class CCommunity_GetGamePersonalDataCategories_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CCommunity_GetGamePersonalDataCategories_Response>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CCommunity_GetGamePersonalDataCategories_Response, _impl_._has_bits_);
  static void set_has_app_assets_basename(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CCommunity_GetGamePersonalDataCategories_Response::CCommunity_GetGamePersonalDataCategories_Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CCommunity_GetGamePersonalDataCategories_Response)
}
CCommunity_GetGamePersonalDataCategories_Response::CCommunity_GetGamePersonalDataCategories_Response(const CCommunity_GetGamePersonalDataCategories_Response& from) : ::google::protobuf::Message() {
  CCommunity_GetGamePersonalDataCategories_Response* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.categories_){from._impl_.categories_},
      decltype(_impl_.app_assets_basename_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.app_assets_basename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.app_assets_basename_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.app_assets_basename_.Set(from._internal_app_assets_basename(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:CCommunity_GetGamePersonalDataCategories_Response)
}
inline void CCommunity_GetGamePersonalDataCategories_Response::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.categories_){arena},
      decltype(_impl_.app_assets_basename_){},
  };
  _impl_.app_assets_basename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.app_assets_basename_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CCommunity_GetGamePersonalDataCategories_Response::~CCommunity_GetGamePersonalDataCategories_Response() {
  // @@protoc_insertion_point(destructor:CCommunity_GetGamePersonalDataCategories_Response)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CCommunity_GetGamePersonalDataCategories_Response::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.categories_.~RepeatedPtrField();
  _impl_.app_assets_basename_.Destroy();
}
void CCommunity_GetGamePersonalDataCategories_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CCommunity_GetGamePersonalDataCategories_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CCommunity_GetGamePersonalDataCategories_Response)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_categories()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.app_assets_basename_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CCommunity_GetGamePersonalDataCategories_Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 77, 2> CCommunity_GetGamePersonalDataCategories_Response::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CCommunity_GetGamePersonalDataCategories_Response, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CCommunity_GetGamePersonalDataCategories_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string app_assets_basename = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CCommunity_GetGamePersonalDataCategories_Response, _impl_.app_assets_basename_)}},
    // repeated .CCommunity_GamePersonalDataCategoryInfo categories = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CCommunity_GetGamePersonalDataCategories_Response, _impl_.categories_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .CCommunity_GamePersonalDataCategoryInfo categories = 1;
    {PROTOBUF_FIELD_OFFSET(CCommunity_GetGamePersonalDataCategories_Response, _impl_.categories_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string app_assets_basename = 2;
    {PROTOBUF_FIELD_OFFSET(CCommunity_GetGamePersonalDataCategories_Response, _impl_.app_assets_basename_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CCommunity_GamePersonalDataCategoryInfo>()},
  }}, {{
    "\61\0\23\0\0\0\0\0"
    "CCommunity_GetGamePersonalDataCategories_Response"
    "app_assets_basename"
  }},
};

::uint8_t* CCommunity_GetGamePersonalDataCategories_Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCommunity_GetGamePersonalDataCategories_Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .CCommunity_GamePersonalDataCategoryInfo categories = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_categories_size()); i < n; i++) {
    const auto& repfield = this->_internal_categories().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string app_assets_basename = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_app_assets_basename();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CCommunity_GetGamePersonalDataCategories_Response.app_assets_basename");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCommunity_GetGamePersonalDataCategories_Response)
  return target;
}

::size_t CCommunity_GetGamePersonalDataCategories_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCommunity_GetGamePersonalDataCategories_Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CCommunity_GamePersonalDataCategoryInfo categories = 1;
  total_size += 1UL * this->_internal_categories_size();
  for (const auto& msg : this->_internal_categories()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // optional string app_assets_basename = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_app_assets_basename());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CCommunity_GetGamePersonalDataCategories_Response::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CCommunity_GetGamePersonalDataCategories_Response::MergeImpl
};
const ::google::protobuf::Message::ClassData*CCommunity_GetGamePersonalDataCategories_Response::GetClassData() const { return &_class_data_; }


void CCommunity_GetGamePersonalDataCategories_Response::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CCommunity_GetGamePersonalDataCategories_Response*>(&to_msg);
  auto& from = static_cast<const CCommunity_GetGamePersonalDataCategories_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CCommunity_GetGamePersonalDataCategories_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_categories()->MergeFrom(from._internal_categories());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_app_assets_basename(from._internal_app_assets_basename());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CCommunity_GetGamePersonalDataCategories_Response::CopyFrom(const CCommunity_GetGamePersonalDataCategories_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCommunity_GetGamePersonalDataCategories_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CCommunity_GetGamePersonalDataCategories_Response::IsInitialized() const {
  return true;
}

void CCommunity_GetGamePersonalDataCategories_Response::InternalSwap(CCommunity_GetGamePersonalDataCategories_Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.categories_.InternalSwap(&other->_impl_.categories_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_assets_basename_, lhs_arena,
                                       &other->_impl_.app_assets_basename_, rhs_arena);
}

::google::protobuf::Metadata CCommunity_GetGamePersonalDataCategories_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gcsystemmsgs_2eproto_getter, &descriptor_table_gcsystemmsgs_2eproto_once,
      file_level_metadata_gcsystemmsgs_2eproto[9]);
}
// ===================================================================

class CCommunity_GetGamePersonalDataEntries_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CCommunity_GetGamePersonalDataEntries_Request>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CCommunity_GetGamePersonalDataEntries_Request, _impl_._has_bits_);
  static void set_has_appid(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_continue_token(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CCommunity_GetGamePersonalDataEntries_Request::CCommunity_GetGamePersonalDataEntries_Request(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CCommunity_GetGamePersonalDataEntries_Request)
}
CCommunity_GetGamePersonalDataEntries_Request::CCommunity_GetGamePersonalDataEntries_Request(const CCommunity_GetGamePersonalDataEntries_Request& from) : ::google::protobuf::Message() {
  CCommunity_GetGamePersonalDataEntries_Request* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.type_){},
      decltype(_impl_.continue_token_){},
      decltype(_impl_.steamid_){},
      decltype(_impl_.appid_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.type_.Set(from._internal_type(), _this->GetArenaForAllocation());
  }
  _impl_.continue_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.continue_token_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.continue_token_.Set(from._internal_continue_token(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.steamid_, &from._impl_.steamid_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.appid_) -
    reinterpret_cast<char*>(&_impl_.steamid_)) + sizeof(_impl_.appid_));

  // @@protoc_insertion_point(copy_constructor:CCommunity_GetGamePersonalDataEntries_Request)
}
inline void CCommunity_GetGamePersonalDataEntries_Request::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.type_){},
      decltype(_impl_.continue_token_){},
      decltype(_impl_.steamid_){::uint64_t{0u}},
      decltype(_impl_.appid_){0u},
  };
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.continue_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.continue_token_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CCommunity_GetGamePersonalDataEntries_Request::~CCommunity_GetGamePersonalDataEntries_Request() {
  // @@protoc_insertion_point(destructor:CCommunity_GetGamePersonalDataEntries_Request)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CCommunity_GetGamePersonalDataEntries_Request::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.type_.Destroy();
  _impl_.continue_token_.Destroy();
}
void CCommunity_GetGamePersonalDataEntries_Request::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CCommunity_GetGamePersonalDataEntries_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CCommunity_GetGamePersonalDataEntries_Request)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.type_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.continue_token_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&_impl_.steamid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.appid_) -
        reinterpret_cast<char*>(&_impl_.steamid_)) + sizeof(_impl_.appid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CCommunity_GetGamePersonalDataEntries_Request::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 72, 2> CCommunity_GetGamePersonalDataEntries_Request::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CCommunity_GetGamePersonalDataEntries_Request, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CCommunity_GetGamePersonalDataEntries_Request_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string continue_token = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(CCommunity_GetGamePersonalDataEntries_Request, _impl_.continue_token_)}},
    // optional uint32 appid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CCommunity_GetGamePersonalDataEntries_Request, _impl_.appid_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(CCommunity_GetGamePersonalDataEntries_Request, _impl_.appid_)}},
    // optional uint64 steamid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CCommunity_GetGamePersonalDataEntries_Request, _impl_.steamid_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(CCommunity_GetGamePersonalDataEntries_Request, _impl_.steamid_)}},
    // optional string type = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CCommunity_GetGamePersonalDataEntries_Request, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 appid = 1;
    {PROTOBUF_FIELD_OFFSET(CCommunity_GetGamePersonalDataEntries_Request, _impl_.appid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 steamid = 2;
    {PROTOBUF_FIELD_OFFSET(CCommunity_GetGamePersonalDataEntries_Request, _impl_.steamid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional string type = 3;
    {PROTOBUF_FIELD_OFFSET(CCommunity_GetGamePersonalDataEntries_Request, _impl_.type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string continue_token = 4;
    {PROTOBUF_FIELD_OFFSET(CCommunity_GetGamePersonalDataEntries_Request, _impl_.continue_token_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\55\0\0\4\16\0\0\0"
    "CCommunity_GetGamePersonalDataEntries_Request"
    "type"
    "continue_token"
  }},
};

::uint8_t* CCommunity_GetGamePersonalDataEntries_Request::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCommunity_GetGamePersonalDataEntries_Request)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_appid(), target);
  }

  // optional uint64 steamid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_steamid(), target);
  }

  // optional string type = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_type();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CCommunity_GetGamePersonalDataEntries_Request.type");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string continue_token = 4;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_continue_token();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CCommunity_GetGamePersonalDataEntries_Request.continue_token");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCommunity_GetGamePersonalDataEntries_Request)
  return target;
}

::size_t CCommunity_GetGamePersonalDataEntries_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCommunity_GetGamePersonalDataEntries_Request)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string type = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_type());
    }

    // optional string continue_token = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_continue_token());
    }

    // optional uint64 steamid = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_steamid());
    }

    // optional uint32 appid = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_appid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CCommunity_GetGamePersonalDataEntries_Request::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CCommunity_GetGamePersonalDataEntries_Request::MergeImpl
};
const ::google::protobuf::Message::ClassData*CCommunity_GetGamePersonalDataEntries_Request::GetClassData() const { return &_class_data_; }


void CCommunity_GetGamePersonalDataEntries_Request::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CCommunity_GetGamePersonalDataEntries_Request*>(&to_msg);
  auto& from = static_cast<const CCommunity_GetGamePersonalDataEntries_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CCommunity_GetGamePersonalDataEntries_Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_type(from._internal_type());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_continue_token(from._internal_continue_token());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.steamid_ = from._impl_.steamid_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.appid_ = from._impl_.appid_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CCommunity_GetGamePersonalDataEntries_Request::CopyFrom(const CCommunity_GetGamePersonalDataEntries_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCommunity_GetGamePersonalDataEntries_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CCommunity_GetGamePersonalDataEntries_Request::IsInitialized() const {
  return true;
}

void CCommunity_GetGamePersonalDataEntries_Request::InternalSwap(CCommunity_GetGamePersonalDataEntries_Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, lhs_arena,
                                       &other->_impl_.type_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.continue_token_, lhs_arena,
                                       &other->_impl_.continue_token_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CCommunity_GetGamePersonalDataEntries_Request, _impl_.appid_)
      + sizeof(CCommunity_GetGamePersonalDataEntries_Request::_impl_.appid_)
      - PROTOBUF_FIELD_OFFSET(CCommunity_GetGamePersonalDataEntries_Request, _impl_.steamid_)>(
          reinterpret_cast<char*>(&_impl_.steamid_),
          reinterpret_cast<char*>(&other->_impl_.steamid_));
}

::google::protobuf::Metadata CCommunity_GetGamePersonalDataEntries_Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gcsystemmsgs_2eproto_getter, &descriptor_table_gcsystemmsgs_2eproto_once,
      file_level_metadata_gcsystemmsgs_2eproto[10]);
}
// ===================================================================

class CCommunity_GetGamePersonalDataEntries_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CCommunity_GetGamePersonalDataEntries_Response>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CCommunity_GetGamePersonalDataEntries_Response, _impl_._has_bits_);
  static void set_has_gceresult(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_continue_token(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CCommunity_GetGamePersonalDataEntries_Response::CCommunity_GetGamePersonalDataEntries_Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CCommunity_GetGamePersonalDataEntries_Response)
}
CCommunity_GetGamePersonalDataEntries_Response::CCommunity_GetGamePersonalDataEntries_Response(const CCommunity_GetGamePersonalDataEntries_Response& from) : ::google::protobuf::Message() {
  CCommunity_GetGamePersonalDataEntries_Response* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.entries_){from._impl_.entries_},
      decltype(_impl_.continue_token_){},
      decltype(_impl_.gceresult_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.continue_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.continue_token_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.continue_token_.Set(from._internal_continue_token(), _this->GetArenaForAllocation());
  }
  _this->_impl_.gceresult_ = from._impl_.gceresult_;

  // @@protoc_insertion_point(copy_constructor:CCommunity_GetGamePersonalDataEntries_Response)
}
inline void CCommunity_GetGamePersonalDataEntries_Response::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.entries_){arena},
      decltype(_impl_.continue_token_){},
      decltype(_impl_.gceresult_){0u},
  };
  _impl_.continue_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.continue_token_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CCommunity_GetGamePersonalDataEntries_Response::~CCommunity_GetGamePersonalDataEntries_Response() {
  // @@protoc_insertion_point(destructor:CCommunity_GetGamePersonalDataEntries_Response)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CCommunity_GetGamePersonalDataEntries_Response::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_entries()->~RepeatedPtrField();
  _impl_.continue_token_.Destroy();
}
void CCommunity_GetGamePersonalDataEntries_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CCommunity_GetGamePersonalDataEntries_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CCommunity_GetGamePersonalDataEntries_Response)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_entries()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.continue_token_.ClearNonDefaultToEmpty();
  }
  _impl_.gceresult_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CCommunity_GetGamePersonalDataEntries_Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 76, 2> CCommunity_GetGamePersonalDataEntries_Response::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CCommunity_GetGamePersonalDataEntries_Response, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CCommunity_GetGamePersonalDataEntries_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 gceresult = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CCommunity_GetGamePersonalDataEntries_Response, _impl_.gceresult_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CCommunity_GetGamePersonalDataEntries_Response, _impl_.gceresult_)}},
    // repeated string entries = 2;
    {::_pbi::TcParser::FastSR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CCommunity_GetGamePersonalDataEntries_Response, _impl_.entries_)}},
    // optional string continue_token = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CCommunity_GetGamePersonalDataEntries_Response, _impl_.continue_token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 gceresult = 1;
    {PROTOBUF_FIELD_OFFSET(CCommunity_GetGamePersonalDataEntries_Response, _impl_.gceresult_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated string entries = 2;
    {PROTOBUF_FIELD_OFFSET(CCommunity_GetGamePersonalDataEntries_Response, _impl_.entries_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // optional string continue_token = 3;
    {PROTOBUF_FIELD_OFFSET(CCommunity_GetGamePersonalDataEntries_Response, _impl_.continue_token_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\56\0\7\16\0\0\0\0"
    "CCommunity_GetGamePersonalDataEntries_Response"
    "entries"
    "continue_token"
  }},
};

::uint8_t* CCommunity_GetGamePersonalDataEntries_Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCommunity_GetGamePersonalDataEntries_Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 gceresult = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_gceresult(), target);
  }

  // repeated string entries = 2;
  for (int i = 0, n = this->_internal_entries_size(); i < n; ++i) {
    const auto& s = this->_internal_entries().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CCommunity_GetGamePersonalDataEntries_Response.entries");
    target = stream->WriteString(2, s, target);
  }

  // optional string continue_token = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_continue_token();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CCommunity_GetGamePersonalDataEntries_Response.continue_token");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCommunity_GetGamePersonalDataEntries_Response)
  return target;
}

::size_t CCommunity_GetGamePersonalDataEntries_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCommunity_GetGamePersonalDataEntries_Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string entries = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_entries().size());
  for (int i = 0, n = _internal_entries().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_entries().Get(i));
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string continue_token = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_continue_token());
    }

    // optional uint32 gceresult = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_gceresult());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CCommunity_GetGamePersonalDataEntries_Response::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CCommunity_GetGamePersonalDataEntries_Response::MergeImpl
};
const ::google::protobuf::Message::ClassData*CCommunity_GetGamePersonalDataEntries_Response::GetClassData() const { return &_class_data_; }


void CCommunity_GetGamePersonalDataEntries_Response::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CCommunity_GetGamePersonalDataEntries_Response*>(&to_msg);
  auto& from = static_cast<const CCommunity_GetGamePersonalDataEntries_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CCommunity_GetGamePersonalDataEntries_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entries()->MergeFrom(from._internal_entries());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_continue_token(from._internal_continue_token());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.gceresult_ = from._impl_.gceresult_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CCommunity_GetGamePersonalDataEntries_Response::CopyFrom(const CCommunity_GetGamePersonalDataEntries_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCommunity_GetGamePersonalDataEntries_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CCommunity_GetGamePersonalDataEntries_Response::IsInitialized() const {
  return true;
}

void CCommunity_GetGamePersonalDataEntries_Response::InternalSwap(CCommunity_GetGamePersonalDataEntries_Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.entries_.InternalSwap(&other->_impl_.entries_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.continue_token_, lhs_arena,
                                       &other->_impl_.continue_token_, rhs_arena);
        swap(_impl_.gceresult_, other->_impl_.gceresult_);
}

::google::protobuf::Metadata CCommunity_GetGamePersonalDataEntries_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gcsystemmsgs_2eproto_getter, &descriptor_table_gcsystemmsgs_2eproto_once,
      file_level_metadata_gcsystemmsgs_2eproto[11]);
}
// ===================================================================

class CCommunity_TerminateGamePersonalDataEntries_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CCommunity_TerminateGamePersonalDataEntries_Request>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CCommunity_TerminateGamePersonalDataEntries_Request, _impl_._has_bits_);
  static void set_has_appid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CCommunity_TerminateGamePersonalDataEntries_Request::CCommunity_TerminateGamePersonalDataEntries_Request(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CCommunity_TerminateGamePersonalDataEntries_Request)
}
CCommunity_TerminateGamePersonalDataEntries_Request::CCommunity_TerminateGamePersonalDataEntries_Request(const CCommunity_TerminateGamePersonalDataEntries_Request& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CCommunity_TerminateGamePersonalDataEntries_Request)
}
inline void CCommunity_TerminateGamePersonalDataEntries_Request::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.steamid_){::uint64_t{0u}},
      decltype(_impl_.appid_){0u},
  };
}
CCommunity_TerminateGamePersonalDataEntries_Request::~CCommunity_TerminateGamePersonalDataEntries_Request() {
  // @@protoc_insertion_point(destructor:CCommunity_TerminateGamePersonalDataEntries_Request)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CCommunity_TerminateGamePersonalDataEntries_Request::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CCommunity_TerminateGamePersonalDataEntries_Request::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CCommunity_TerminateGamePersonalDataEntries_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CCommunity_TerminateGamePersonalDataEntries_Request)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.steamid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.appid_) -
        reinterpret_cast<char*>(&_impl_.steamid_)) + sizeof(_impl_.appid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CCommunity_TerminateGamePersonalDataEntries_Request::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> CCommunity_TerminateGamePersonalDataEntries_Request::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CCommunity_TerminateGamePersonalDataEntries_Request, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CCommunity_TerminateGamePersonalDataEntries_Request_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint64 steamid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CCommunity_TerminateGamePersonalDataEntries_Request, _impl_.steamid_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(CCommunity_TerminateGamePersonalDataEntries_Request, _impl_.steamid_)}},
    // optional uint32 appid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CCommunity_TerminateGamePersonalDataEntries_Request, _impl_.appid_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CCommunity_TerminateGamePersonalDataEntries_Request, _impl_.appid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 appid = 1;
    {PROTOBUF_FIELD_OFFSET(CCommunity_TerminateGamePersonalDataEntries_Request, _impl_.appid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 steamid = 2;
    {PROTOBUF_FIELD_OFFSET(CCommunity_TerminateGamePersonalDataEntries_Request, _impl_.steamid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CCommunity_TerminateGamePersonalDataEntries_Request::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCommunity_TerminateGamePersonalDataEntries_Request)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_appid(), target);
  }

  // optional uint64 steamid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_steamid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCommunity_TerminateGamePersonalDataEntries_Request)
  return target;
}

::size_t CCommunity_TerminateGamePersonalDataEntries_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCommunity_TerminateGamePersonalDataEntries_Request)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 steamid = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_steamid());
    }

    // optional uint32 appid = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_appid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CCommunity_TerminateGamePersonalDataEntries_Request::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CCommunity_TerminateGamePersonalDataEntries_Request::MergeImpl
};
const ::google::protobuf::Message::ClassData*CCommunity_TerminateGamePersonalDataEntries_Request::GetClassData() const { return &_class_data_; }


void CCommunity_TerminateGamePersonalDataEntries_Request::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CCommunity_TerminateGamePersonalDataEntries_Request*>(&to_msg);
  auto& from = static_cast<const CCommunity_TerminateGamePersonalDataEntries_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CCommunity_TerminateGamePersonalDataEntries_Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.steamid_ = from._impl_.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.appid_ = from._impl_.appid_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CCommunity_TerminateGamePersonalDataEntries_Request::CopyFrom(const CCommunity_TerminateGamePersonalDataEntries_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCommunity_TerminateGamePersonalDataEntries_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CCommunity_TerminateGamePersonalDataEntries_Request::IsInitialized() const {
  return true;
}

void CCommunity_TerminateGamePersonalDataEntries_Request::InternalSwap(CCommunity_TerminateGamePersonalDataEntries_Request* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CCommunity_TerminateGamePersonalDataEntries_Request, _impl_.appid_)
      + sizeof(CCommunity_TerminateGamePersonalDataEntries_Request::_impl_.appid_)
      - PROTOBUF_FIELD_OFFSET(CCommunity_TerminateGamePersonalDataEntries_Request, _impl_.steamid_)>(
          reinterpret_cast<char*>(&_impl_.steamid_),
          reinterpret_cast<char*>(&other->_impl_.steamid_));
}

::google::protobuf::Metadata CCommunity_TerminateGamePersonalDataEntries_Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gcsystemmsgs_2eproto_getter, &descriptor_table_gcsystemmsgs_2eproto_once,
      file_level_metadata_gcsystemmsgs_2eproto[12]);
}
// ===================================================================

class CCommunity_TerminateGamePersonalDataEntries_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CCommunity_TerminateGamePersonalDataEntries_Response>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CCommunity_TerminateGamePersonalDataEntries_Response, _impl_._has_bits_);
  static void set_has_gceresult(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CCommunity_TerminateGamePersonalDataEntries_Response::CCommunity_TerminateGamePersonalDataEntries_Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CCommunity_TerminateGamePersonalDataEntries_Response)
}
CCommunity_TerminateGamePersonalDataEntries_Response::CCommunity_TerminateGamePersonalDataEntries_Response(const CCommunity_TerminateGamePersonalDataEntries_Response& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CCommunity_TerminateGamePersonalDataEntries_Response)
}
inline void CCommunity_TerminateGamePersonalDataEntries_Response::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.gceresult_){0u},
  };
}
CCommunity_TerminateGamePersonalDataEntries_Response::~CCommunity_TerminateGamePersonalDataEntries_Response() {
  // @@protoc_insertion_point(destructor:CCommunity_TerminateGamePersonalDataEntries_Response)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CCommunity_TerminateGamePersonalDataEntries_Response::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void CCommunity_TerminateGamePersonalDataEntries_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CCommunity_TerminateGamePersonalDataEntries_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CCommunity_TerminateGamePersonalDataEntries_Response)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.gceresult_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CCommunity_TerminateGamePersonalDataEntries_Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CCommunity_TerminateGamePersonalDataEntries_Response::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CCommunity_TerminateGamePersonalDataEntries_Response, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CCommunity_TerminateGamePersonalDataEntries_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 gceresult = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CCommunity_TerminateGamePersonalDataEntries_Response, _impl_.gceresult_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CCommunity_TerminateGamePersonalDataEntries_Response, _impl_.gceresult_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 gceresult = 1;
    {PROTOBUF_FIELD_OFFSET(CCommunity_TerminateGamePersonalDataEntries_Response, _impl_.gceresult_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CCommunity_TerminateGamePersonalDataEntries_Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCommunity_TerminateGamePersonalDataEntries_Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 gceresult = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_gceresult(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCommunity_TerminateGamePersonalDataEntries_Response)
  return target;
}

::size_t CCommunity_TerminateGamePersonalDataEntries_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCommunity_TerminateGamePersonalDataEntries_Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 gceresult = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_gceresult());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CCommunity_TerminateGamePersonalDataEntries_Response::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CCommunity_TerminateGamePersonalDataEntries_Response::MergeImpl
};
const ::google::protobuf::Message::ClassData*CCommunity_TerminateGamePersonalDataEntries_Response::GetClassData() const { return &_class_data_; }


void CCommunity_TerminateGamePersonalDataEntries_Response::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CCommunity_TerminateGamePersonalDataEntries_Response*>(&to_msg);
  auto& from = static_cast<const CCommunity_TerminateGamePersonalDataEntries_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CCommunity_TerminateGamePersonalDataEntries_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_gceresult(from._internal_gceresult());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CCommunity_TerminateGamePersonalDataEntries_Response::CopyFrom(const CCommunity_TerminateGamePersonalDataEntries_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCommunity_TerminateGamePersonalDataEntries_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CCommunity_TerminateGamePersonalDataEntries_Response::IsInitialized() const {
  return true;
}

void CCommunity_TerminateGamePersonalDataEntries_Response::InternalSwap(CCommunity_TerminateGamePersonalDataEntries_Response* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.gceresult_, other->_impl_.gceresult_);
}

::google::protobuf::Metadata CCommunity_TerminateGamePersonalDataEntries_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gcsystemmsgs_2eproto_getter, &descriptor_table_gcsystemmsgs_2eproto_once,
      file_level_metadata_gcsystemmsgs_2eproto[13]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
