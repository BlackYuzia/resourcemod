// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_steamlearn.steamworkssdk.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_steammessages_5fsteamlearn_2esteamworkssdk_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_steammessages_5fsteamlearn_2esteamworkssdk_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "steammessages_unified_base.steamworkssdk.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_steammessages_5fsteamlearn_2esteamworkssdk_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
class CMsgSteamLearnData;
struct CMsgSteamLearnDataDefaultTypeInternal;
extern CMsgSteamLearnDataDefaultTypeInternal _CMsgSteamLearnData_default_instance_;
class CMsgSteamLearnDataElement;
struct CMsgSteamLearnDataElementDefaultTypeInternal;
extern CMsgSteamLearnDataElementDefaultTypeInternal _CMsgSteamLearnDataElement_default_instance_;
class CMsgSteamLearnDataList;
struct CMsgSteamLearnDataListDefaultTypeInternal;
extern CMsgSteamLearnDataListDefaultTypeInternal _CMsgSteamLearnDataList_default_instance_;
class CMsgSteamLearnDataObject;
struct CMsgSteamLearnDataObjectDefaultTypeInternal;
extern CMsgSteamLearnDataObjectDefaultTypeInternal _CMsgSteamLearnDataObject_default_instance_;
class CMsgSteamLearnDataSource;
struct CMsgSteamLearnDataSourceDefaultTypeInternal;
extern CMsgSteamLearnDataSourceDefaultTypeInternal _CMsgSteamLearnDataSource_default_instance_;
class CMsgSteamLearnDataSourceDescElement;
struct CMsgSteamLearnDataSourceDescElementDefaultTypeInternal;
extern CMsgSteamLearnDataSourceDescElementDefaultTypeInternal _CMsgSteamLearnDataSourceDescElement_default_instance_;
class CMsgSteamLearnDataSourceDescObject;
struct CMsgSteamLearnDataSourceDescObjectDefaultTypeInternal;
extern CMsgSteamLearnDataSourceDescObjectDefaultTypeInternal _CMsgSteamLearnDataSourceDescObject_default_instance_;
class CMsgSteamLearnHMACKeys;
struct CMsgSteamLearnHMACKeysDefaultTypeInternal;
extern CMsgSteamLearnHMACKeysDefaultTypeInternal _CMsgSteamLearnHMACKeys_default_instance_;
class CMsgSteamLearnHMACKeys_CacheDataKeys;
struct CMsgSteamLearnHMACKeys_CacheDataKeysDefaultTypeInternal;
extern CMsgSteamLearnHMACKeys_CacheDataKeysDefaultTypeInternal _CMsgSteamLearnHMACKeys_CacheDataKeys_default_instance_;
class CMsgSteamLearnHMACKeys_SnapshotProjectKeys;
struct CMsgSteamLearnHMACKeys_SnapshotProjectKeysDefaultTypeInternal;
extern CMsgSteamLearnHMACKeys_SnapshotProjectKeysDefaultTypeInternal _CMsgSteamLearnHMACKeys_SnapshotProjectKeys_default_instance_;
class CMsgSteamLearn_AccessData;
struct CMsgSteamLearn_AccessDataDefaultTypeInternal;
extern CMsgSteamLearn_AccessDataDefaultTypeInternal _CMsgSteamLearn_AccessData_default_instance_;
class CMsgSteamLearn_BatchOperation_Request;
struct CMsgSteamLearn_BatchOperation_RequestDefaultTypeInternal;
extern CMsgSteamLearn_BatchOperation_RequestDefaultTypeInternal _CMsgSteamLearn_BatchOperation_Request_default_instance_;
class CMsgSteamLearn_BatchOperation_Response;
struct CMsgSteamLearn_BatchOperation_ResponseDefaultTypeInternal;
extern CMsgSteamLearn_BatchOperation_ResponseDefaultTypeInternal _CMsgSteamLearn_BatchOperation_Response_default_instance_;
class CMsgSteamLearn_CacheData_Request;
struct CMsgSteamLearn_CacheData_RequestDefaultTypeInternal;
extern CMsgSteamLearn_CacheData_RequestDefaultTypeInternal _CMsgSteamLearn_CacheData_Request_default_instance_;
class CMsgSteamLearn_CacheData_Response;
struct CMsgSteamLearn_CacheData_ResponseDefaultTypeInternal;
extern CMsgSteamLearn_CacheData_ResponseDefaultTypeInternal _CMsgSteamLearn_CacheData_Response_default_instance_;
class CMsgSteamLearn_GetHMACKeys_Request;
struct CMsgSteamLearn_GetHMACKeys_RequestDefaultTypeInternal;
extern CMsgSteamLearn_GetHMACKeys_RequestDefaultTypeInternal _CMsgSteamLearn_GetHMACKeys_Request_default_instance_;
class CMsgSteamLearn_GetHMACKeys_Response;
struct CMsgSteamLearn_GetHMACKeys_ResponseDefaultTypeInternal;
extern CMsgSteamLearn_GetHMACKeys_ResponseDefaultTypeInternal _CMsgSteamLearn_GetHMACKeys_Response_default_instance_;
class CMsgSteamLearn_InferenceBackend_Response;
struct CMsgSteamLearn_InferenceBackend_ResponseDefaultTypeInternal;
extern CMsgSteamLearn_InferenceBackend_ResponseDefaultTypeInternal _CMsgSteamLearn_InferenceBackend_Response_default_instance_;
class CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput;
struct CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutputDefaultTypeInternal;
extern CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutputDefaultTypeInternal _CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput_default_instance_;
class CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput;
struct CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutputDefaultTypeInternal;
extern CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutputDefaultTypeInternal _CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput_default_instance_;
class CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput;
struct CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutputDefaultTypeInternal;
extern CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutputDefaultTypeInternal _CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput_default_instance_;
class CMsgSteamLearn_InferenceBackend_Response_Output;
struct CMsgSteamLearn_InferenceBackend_Response_OutputDefaultTypeInternal;
extern CMsgSteamLearn_InferenceBackend_Response_OutputDefaultTypeInternal _CMsgSteamLearn_InferenceBackend_Response_Output_default_instance_;
class CMsgSteamLearn_InferenceMetadataBackend_Request;
struct CMsgSteamLearn_InferenceMetadataBackend_RequestDefaultTypeInternal;
extern CMsgSteamLearn_InferenceMetadataBackend_RequestDefaultTypeInternal _CMsgSteamLearn_InferenceMetadataBackend_Request_default_instance_;
class CMsgSteamLearn_InferenceMetadata_Request;
struct CMsgSteamLearn_InferenceMetadata_RequestDefaultTypeInternal;
extern CMsgSteamLearn_InferenceMetadata_RequestDefaultTypeInternal _CMsgSteamLearn_InferenceMetadata_Request_default_instance_;
class CMsgSteamLearn_InferenceMetadata_Response;
struct CMsgSteamLearn_InferenceMetadata_ResponseDefaultTypeInternal;
extern CMsgSteamLearn_InferenceMetadata_ResponseDefaultTypeInternal _CMsgSteamLearn_InferenceMetadata_Response_default_instance_;
class CMsgSteamLearn_InferenceMetadata_Response_CompactTable;
struct CMsgSteamLearn_InferenceMetadata_Response_CompactTableDefaultTypeInternal;
extern CMsgSteamLearn_InferenceMetadata_Response_CompactTableDefaultTypeInternal _CMsgSteamLearn_InferenceMetadata_Response_CompactTable_default_instance_;
class CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry;
struct CMsgSteamLearn_InferenceMetadata_Response_CompactTable_EntryDefaultTypeInternal;
extern CMsgSteamLearn_InferenceMetadata_Response_CompactTable_EntryDefaultTypeInternal _CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry_default_instance_;
class CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry;
struct CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntryDefaultTypeInternal;
extern CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntryDefaultTypeInternal _CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry_default_instance_;
class CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry;
struct CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntryDefaultTypeInternal;
extern CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntryDefaultTypeInternal _CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry_default_instance_;
class CMsgSteamLearn_InferenceMetadata_Response_KMeans;
struct CMsgSteamLearn_InferenceMetadata_Response_KMeansDefaultTypeInternal;
extern CMsgSteamLearn_InferenceMetadata_Response_KMeansDefaultTypeInternal _CMsgSteamLearn_InferenceMetadata_Response_KMeans_default_instance_;
class CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster;
struct CMsgSteamLearn_InferenceMetadata_Response_KMeans_ClusterDefaultTypeInternal;
extern CMsgSteamLearn_InferenceMetadata_Response_KMeans_ClusterDefaultTypeInternal _CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster_default_instance_;
class CMsgSteamLearn_InferenceMetadata_Response_Range;
struct CMsgSteamLearn_InferenceMetadata_Response_RangeDefaultTypeInternal;
extern CMsgSteamLearn_InferenceMetadata_Response_RangeDefaultTypeInternal _CMsgSteamLearn_InferenceMetadata_Response_Range_default_instance_;
class CMsgSteamLearn_InferenceMetadata_Response_RowRange;
struct CMsgSteamLearn_InferenceMetadata_Response_RowRangeDefaultTypeInternal;
extern CMsgSteamLearn_InferenceMetadata_Response_RowRangeDefaultTypeInternal _CMsgSteamLearn_InferenceMetadata_Response_RowRange_default_instance_;
class CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram;
struct CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogramDefaultTypeInternal;
extern CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogramDefaultTypeInternal _CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram_default_instance_;
class CMsgSteamLearn_InferenceMetadata_Response_StdDev;
struct CMsgSteamLearn_InferenceMetadata_Response_StdDevDefaultTypeInternal;
extern CMsgSteamLearn_InferenceMetadata_Response_StdDevDefaultTypeInternal _CMsgSteamLearn_InferenceMetadata_Response_StdDev_default_instance_;
class CMsgSteamLearn_Inference_Request;
struct CMsgSteamLearn_Inference_RequestDefaultTypeInternal;
extern CMsgSteamLearn_Inference_RequestDefaultTypeInternal _CMsgSteamLearn_Inference_Request_default_instance_;
class CMsgSteamLearn_Inference_Response;
struct CMsgSteamLearn_Inference_ResponseDefaultTypeInternal;
extern CMsgSteamLearn_Inference_ResponseDefaultTypeInternal _CMsgSteamLearn_Inference_Response_default_instance_;
class CMsgSteamLearn_RegisterDataSource_Request;
struct CMsgSteamLearn_RegisterDataSource_RequestDefaultTypeInternal;
extern CMsgSteamLearn_RegisterDataSource_RequestDefaultTypeInternal _CMsgSteamLearn_RegisterDataSource_Request_default_instance_;
class CMsgSteamLearn_RegisterDataSource_Response;
struct CMsgSteamLearn_RegisterDataSource_ResponseDefaultTypeInternal;
extern CMsgSteamLearn_RegisterDataSource_ResponseDefaultTypeInternal _CMsgSteamLearn_RegisterDataSource_Response_default_instance_;
class CMsgSteamLearn_SnapshotProject_Request;
struct CMsgSteamLearn_SnapshotProject_RequestDefaultTypeInternal;
extern CMsgSteamLearn_SnapshotProject_RequestDefaultTypeInternal _CMsgSteamLearn_SnapshotProject_Request_default_instance_;
class CMsgSteamLearn_SnapshotProject_Response;
struct CMsgSteamLearn_SnapshotProject_ResponseDefaultTypeInternal;
extern CMsgSteamLearn_SnapshotProject_ResponseDefaultTypeInternal _CMsgSteamLearn_SnapshotProject_Response_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

enum ESteamLearnDataType : int {
  STEAMLEARN_DATATYPE_INVALID = 0,
  STEAMLEARN_DATATYPE_INT32 = 1,
  STEAMLEARN_DATATYPE_FLOAT32 = 2,
  STEAMLEARN_DATATYPE_BOOL = 3,
  STEAMLEARN_DATATYPE_STRING = 4,
  STEAMLEARN_DATATYPE_OBJECT = 5,
};

bool ESteamLearnDataType_IsValid(int value);
constexpr ESteamLearnDataType ESteamLearnDataType_MIN = static_cast<ESteamLearnDataType>(0);
constexpr ESteamLearnDataType ESteamLearnDataType_MAX = static_cast<ESteamLearnDataType>(5);
constexpr int ESteamLearnDataType_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
ESteamLearnDataType_descriptor();
template <typename T>
const std::string& ESteamLearnDataType_Name(T value) {
  static_assert(std::is_same<T, ESteamLearnDataType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ESteamLearnDataType_Name().");
  return ESteamLearnDataType_Name(static_cast<ESteamLearnDataType>(value));
}
template <>
inline const std::string& ESteamLearnDataType_Name(ESteamLearnDataType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ESteamLearnDataType_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool ESteamLearnDataType_Parse(absl::string_view name, ESteamLearnDataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESteamLearnDataType>(
      ESteamLearnDataType_descriptor(), name, value);
}
enum ESteammLearnRegisterDataSourceResult : int {
  STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR = 0,
  STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_SUCCESS_CREATED = 1,
  STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_SUCCESS_FOUND = 2,
  STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_GENERIC = 3,
  STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_NAME = 4,
  STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_VERSION = 5,
  STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_DATA_CHANGED = 6,
  STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_DATA_INVALID = 7,
  STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_FORBIDDEN = 8,
  STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_TIMESTAMP = 9,
  STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_DISABLED = 10,
};

bool ESteammLearnRegisterDataSourceResult_IsValid(int value);
constexpr ESteammLearnRegisterDataSourceResult ESteammLearnRegisterDataSourceResult_MIN = static_cast<ESteammLearnRegisterDataSourceResult>(0);
constexpr ESteammLearnRegisterDataSourceResult ESteammLearnRegisterDataSourceResult_MAX = static_cast<ESteammLearnRegisterDataSourceResult>(10);
constexpr int ESteammLearnRegisterDataSourceResult_ARRAYSIZE = 10 + 1;
const ::google::protobuf::EnumDescriptor*
ESteammLearnRegisterDataSourceResult_descriptor();
template <typename T>
const std::string& ESteammLearnRegisterDataSourceResult_Name(T value) {
  static_assert(std::is_same<T, ESteammLearnRegisterDataSourceResult>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ESteammLearnRegisterDataSourceResult_Name().");
  return ESteammLearnRegisterDataSourceResult_Name(static_cast<ESteammLearnRegisterDataSourceResult>(value));
}
template <>
inline const std::string& ESteammLearnRegisterDataSourceResult_Name(ESteammLearnRegisterDataSourceResult value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ESteammLearnRegisterDataSourceResult_descriptor,
                                                 0, 10>(
      static_cast<int>(value));
}
inline bool ESteammLearnRegisterDataSourceResult_Parse(absl::string_view name, ESteammLearnRegisterDataSourceResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESteammLearnRegisterDataSourceResult>(
      ESteammLearnRegisterDataSourceResult_descriptor(), name, value);
}
enum ESteamLearnCacheDataResult : int {
  STEAMLEARN_CACHE_DATA_ERROR = 0,
  STEAMLEARN_CACHE_DATA_SUCCESS = 1,
  STEAMLEARN_CACHE_DATA_ERROR_UNKNOWN_DATA_SOURCE = 2,
  STEAMLEARN_CACHE_DATA_ERROR_UNCACHED_DATA_SOURCE = 3,
  STEAMLEARN_CACHE_DATA_ERROR_INVALID_KEYS = 4,
  STEAMLEARN_CACHE_DATA_ERROR_FORBIDDEN = 5,
  STEAMLEARN_CACHE_DATA_ERROR_INVALID_TIMESTAMP = 6,
  STEAMLEARN_CACHE_DATA_DISABLED = 7,
};

bool ESteamLearnCacheDataResult_IsValid(int value);
constexpr ESteamLearnCacheDataResult ESteamLearnCacheDataResult_MIN = static_cast<ESteamLearnCacheDataResult>(0);
constexpr ESteamLearnCacheDataResult ESteamLearnCacheDataResult_MAX = static_cast<ESteamLearnCacheDataResult>(7);
constexpr int ESteamLearnCacheDataResult_ARRAYSIZE = 7 + 1;
const ::google::protobuf::EnumDescriptor*
ESteamLearnCacheDataResult_descriptor();
template <typename T>
const std::string& ESteamLearnCacheDataResult_Name(T value) {
  static_assert(std::is_same<T, ESteamLearnCacheDataResult>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ESteamLearnCacheDataResult_Name().");
  return ESteamLearnCacheDataResult_Name(static_cast<ESteamLearnCacheDataResult>(value));
}
template <>
inline const std::string& ESteamLearnCacheDataResult_Name(ESteamLearnCacheDataResult value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ESteamLearnCacheDataResult_descriptor,
                                                 0, 7>(
      static_cast<int>(value));
}
inline bool ESteamLearnCacheDataResult_Parse(absl::string_view name, ESteamLearnCacheDataResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESteamLearnCacheDataResult>(
      ESteamLearnCacheDataResult_descriptor(), name, value);
}
enum ESteamLearnSnapshotProjectResult : int {
  STEAMLEARN_SNAPSHOT_PROJECT_ERROR = 0,
  STEAMLEARN_SNAPSHOT_PROJECT_SUCCESS_STORED = 1,
  STEAMLEARN_SNAPSHOT_PROJECT_SUCCESS_QUEUED = 2,
  STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_PROJECT_ID = 3,
  STEAMLEARN_SNAPSHOT_PROJECT_ERROR_UNKNOWN_DATA_SOURCE = 4,
  STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_DATA_SOURCE_KEY = 5,
  STEAMLEARN_SNAPSHOT_PROJECT_ERROR_MISSING_CACHE_DURATION = 6,
  STEAMLEARN_SNAPSHOT_PROJECT_ERROR_NO_PUBLISHED_CONFIG = 7,
  STEAMLEARN_SNAPSHOT_PROJECT_ERROR_FORBIDDEN = 8,
  STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_TIMESTAMP = 9,
  STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INTERNAL_DATA_SOURCE_ERROR = 10,
  STEAMLEARN_SNAPSHOT_PROJECT_DISABLED = 11,
  STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_PUBLISHED_VERSION = 12,
};

bool ESteamLearnSnapshotProjectResult_IsValid(int value);
constexpr ESteamLearnSnapshotProjectResult ESteamLearnSnapshotProjectResult_MIN = static_cast<ESteamLearnSnapshotProjectResult>(0);
constexpr ESteamLearnSnapshotProjectResult ESteamLearnSnapshotProjectResult_MAX = static_cast<ESteamLearnSnapshotProjectResult>(12);
constexpr int ESteamLearnSnapshotProjectResult_ARRAYSIZE = 12 + 1;
const ::google::protobuf::EnumDescriptor*
ESteamLearnSnapshotProjectResult_descriptor();
template <typename T>
const std::string& ESteamLearnSnapshotProjectResult_Name(T value) {
  static_assert(std::is_same<T, ESteamLearnSnapshotProjectResult>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ESteamLearnSnapshotProjectResult_Name().");
  return ESteamLearnSnapshotProjectResult_Name(static_cast<ESteamLearnSnapshotProjectResult>(value));
}
template <>
inline const std::string& ESteamLearnSnapshotProjectResult_Name(ESteamLearnSnapshotProjectResult value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ESteamLearnSnapshotProjectResult_descriptor,
                                                 0, 12>(
      static_cast<int>(value));
}
inline bool ESteamLearnSnapshotProjectResult_Parse(absl::string_view name, ESteamLearnSnapshotProjectResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESteamLearnSnapshotProjectResult>(
      ESteamLearnSnapshotProjectResult_descriptor(), name, value);
}
enum ESteamLearnGetHMACKeysResult : int {
  STEAMLEARN_GET_HMAC_KEYS_SUCCESS = 0,
};

bool ESteamLearnGetHMACKeysResult_IsValid(int value);
constexpr ESteamLearnGetHMACKeysResult ESteamLearnGetHMACKeysResult_MIN = static_cast<ESteamLearnGetHMACKeysResult>(0);
constexpr ESteamLearnGetHMACKeysResult ESteamLearnGetHMACKeysResult_MAX = static_cast<ESteamLearnGetHMACKeysResult>(0);
constexpr int ESteamLearnGetHMACKeysResult_ARRAYSIZE = 0 + 1;
const ::google::protobuf::EnumDescriptor*
ESteamLearnGetHMACKeysResult_descriptor();
template <typename T>
const std::string& ESteamLearnGetHMACKeysResult_Name(T value) {
  static_assert(std::is_same<T, ESteamLearnGetHMACKeysResult>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ESteamLearnGetHMACKeysResult_Name().");
  return ESteamLearnGetHMACKeysResult_Name(static_cast<ESteamLearnGetHMACKeysResult>(value));
}
template <>
inline const std::string& ESteamLearnGetHMACKeysResult_Name(ESteamLearnGetHMACKeysResult value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ESteamLearnGetHMACKeysResult_descriptor,
                                                 0, 0>(
      static_cast<int>(value));
}
inline bool ESteamLearnGetHMACKeysResult_Parse(absl::string_view name, ESteamLearnGetHMACKeysResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESteamLearnGetHMACKeysResult>(
      ESteamLearnGetHMACKeysResult_descriptor(), name, value);
}
enum ESteamLearnInferenceResult : int {
  STEAMLEARN_INFERENCE_ERROR = 0,
  STEAMLEARN_INFERENCE_SUCCESS = 1,
  STEAMLEARN_INFERENCE_ERROR_INVALID_PROJECT_ID = 2,
  STEAMLEARN_INFERENCE_ERROR_MISSING_CACHED_SCHEMA_DATA = 3,
  STEAMLEARN_INFERENCE_ERROR_NO_PUBLISHED_CONFIG = 4,
  STEAMLEARN_INFERENCE_ERROR_FORBIDDEN = 5,
  STEAMLEARN_INFERENCE_ERROR_INVALID_TIMESTAMP = 6,
  STEAMLEARN_INFERENCE_ERROR_INVALID_PUBLISHED_VERSION = 7,
  STEAMLEARN_INFERENCE_ERROR_NO_FETCH_ID_FOUND = 8,
  STEAMLEARN_INFERENCE_ERROR_TOO_BUSY = 9,
};

bool ESteamLearnInferenceResult_IsValid(int value);
constexpr ESteamLearnInferenceResult ESteamLearnInferenceResult_MIN = static_cast<ESteamLearnInferenceResult>(0);
constexpr ESteamLearnInferenceResult ESteamLearnInferenceResult_MAX = static_cast<ESteamLearnInferenceResult>(9);
constexpr int ESteamLearnInferenceResult_ARRAYSIZE = 9 + 1;
const ::google::protobuf::EnumDescriptor*
ESteamLearnInferenceResult_descriptor();
template <typename T>
const std::string& ESteamLearnInferenceResult_Name(T value) {
  static_assert(std::is_same<T, ESteamLearnInferenceResult>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ESteamLearnInferenceResult_Name().");
  return ESteamLearnInferenceResult_Name(static_cast<ESteamLearnInferenceResult>(value));
}
template <>
inline const std::string& ESteamLearnInferenceResult_Name(ESteamLearnInferenceResult value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ESteamLearnInferenceResult_descriptor,
                                                 0, 9>(
      static_cast<int>(value));
}
inline bool ESteamLearnInferenceResult_Parse(absl::string_view name, ESteamLearnInferenceResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESteamLearnInferenceResult>(
      ESteamLearnInferenceResult_descriptor(), name, value);
}
enum ESteamLearnInferenceMetadataResult : int {
  STEAMLEARN_INFERENCE_METADATA_ERROR = 0,
  STEAMLEARN_INFERENCE_METADATA_SUCCESS = 1,
  STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_PROJECT_ID = 2,
  STEAMLEARN_INFERENCE_METADATA_ERROR_NO_PUBLISHED_CONFIG = 3,
  STEAMLEARN_INFERENCE_METADATA_ERROR_FORBIDDEN = 4,
  STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_TIMESTAMP = 5,
  STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_PUBLISHED_VERSION = 6,
  STEAMLEARN_INFERENCE_METADATA_ERROR_NO_FETCH_ID_FOUND = 7,
};

bool ESteamLearnInferenceMetadataResult_IsValid(int value);
constexpr ESteamLearnInferenceMetadataResult ESteamLearnInferenceMetadataResult_MIN = static_cast<ESteamLearnInferenceMetadataResult>(0);
constexpr ESteamLearnInferenceMetadataResult ESteamLearnInferenceMetadataResult_MAX = static_cast<ESteamLearnInferenceMetadataResult>(7);
constexpr int ESteamLearnInferenceMetadataResult_ARRAYSIZE = 7 + 1;
const ::google::protobuf::EnumDescriptor*
ESteamLearnInferenceMetadataResult_descriptor();
template <typename T>
const std::string& ESteamLearnInferenceMetadataResult_Name(T value) {
  static_assert(std::is_same<T, ESteamLearnInferenceMetadataResult>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ESteamLearnInferenceMetadataResult_Name().");
  return ESteamLearnInferenceMetadataResult_Name(static_cast<ESteamLearnInferenceMetadataResult>(value));
}
template <>
inline const std::string& ESteamLearnInferenceMetadataResult_Name(ESteamLearnInferenceMetadataResult value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ESteamLearnInferenceMetadataResult_descriptor,
                                                 0, 7>(
      static_cast<int>(value));
}
inline bool ESteamLearnInferenceMetadataResult_Parse(absl::string_view name, ESteamLearnInferenceMetadataResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESteamLearnInferenceMetadataResult>(
      ESteamLearnInferenceMetadataResult_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class CMsgSteamLearnDataSourceDescObject final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearnDataSourceDescObject) */ {
 public:
  inline CMsgSteamLearnDataSourceDescObject() : CMsgSteamLearnDataSourceDescObject(nullptr) {}
  ~CMsgSteamLearnDataSourceDescObject() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearnDataSourceDescObject(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearnDataSourceDescObject(const CMsgSteamLearnDataSourceDescObject& from);
  CMsgSteamLearnDataSourceDescObject(CMsgSteamLearnDataSourceDescObject&& from) noexcept
    : CMsgSteamLearnDataSourceDescObject() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearnDataSourceDescObject& operator=(const CMsgSteamLearnDataSourceDescObject& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearnDataSourceDescObject& operator=(CMsgSteamLearnDataSourceDescObject&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearnDataSourceDescObject& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearnDataSourceDescObject* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearnDataSourceDescObject*>(
               &_CMsgSteamLearnDataSourceDescObject_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CMsgSteamLearnDataSourceDescObject& a, CMsgSteamLearnDataSourceDescObject& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearnDataSourceDescObject* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearnDataSourceDescObject* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearnDataSourceDescObject* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearnDataSourceDescObject>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearnDataSourceDescObject& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearnDataSourceDescObject& from) {
    CMsgSteamLearnDataSourceDescObject::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearnDataSourceDescObject* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearnDataSourceDescObject";
  }
  protected:
  explicit CMsgSteamLearnDataSourceDescObject(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kElementsFieldNumber = 1,
  };
  // repeated .CMsgSteamLearnDataSourceDescElement elements = 1;
  int elements_size() const;
  private:
  int _internal_elements_size() const;

  public:
  void clear_elements() ;
  ::CMsgSteamLearnDataSourceDescElement* mutable_elements(int index);
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnDataSourceDescElement >*
      mutable_elements();
  private:
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearnDataSourceDescElement>& _internal_elements() const;
  ::google::protobuf::RepeatedPtrField<::CMsgSteamLearnDataSourceDescElement>* _internal_mutable_elements();
  public:
  const ::CMsgSteamLearnDataSourceDescElement& elements(int index) const;
  ::CMsgSteamLearnDataSourceDescElement* add_elements();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnDataSourceDescElement >&
      elements() const;
  // @@protoc_insertion_point(class_scope:CMsgSteamLearnDataSourceDescObject)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnDataSourceDescElement > elements_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearnDataSourceDescElement final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearnDataSourceDescElement) */ {
 public:
  inline CMsgSteamLearnDataSourceDescElement() : CMsgSteamLearnDataSourceDescElement(nullptr) {}
  ~CMsgSteamLearnDataSourceDescElement() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearnDataSourceDescElement(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearnDataSourceDescElement(const CMsgSteamLearnDataSourceDescElement& from);
  CMsgSteamLearnDataSourceDescElement(CMsgSteamLearnDataSourceDescElement&& from) noexcept
    : CMsgSteamLearnDataSourceDescElement() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearnDataSourceDescElement& operator=(const CMsgSteamLearnDataSourceDescElement& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearnDataSourceDescElement& operator=(CMsgSteamLearnDataSourceDescElement&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearnDataSourceDescElement& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearnDataSourceDescElement* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearnDataSourceDescElement*>(
               &_CMsgSteamLearnDataSourceDescElement_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CMsgSteamLearnDataSourceDescElement& a, CMsgSteamLearnDataSourceDescElement& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearnDataSourceDescElement* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearnDataSourceDescElement* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearnDataSourceDescElement* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearnDataSourceDescElement>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearnDataSourceDescElement& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearnDataSourceDescElement& from) {
    CMsgSteamLearnDataSourceDescElement::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearnDataSourceDescElement* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearnDataSourceDescElement";
  }
  protected:
  explicit CMsgSteamLearnDataSourceDescElement(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kObjectFieldNumber = 3,
    kDataTypeFieldNumber = 2,
    kCountFieldNumber = 4,
  };
  // optional string name = 1;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional .CMsgSteamLearnDataSourceDescObject object = 3;
  bool has_object() const;
  void clear_object() ;
  const ::CMsgSteamLearnDataSourceDescObject& object() const;
  PROTOBUF_NODISCARD ::CMsgSteamLearnDataSourceDescObject* release_object();
  ::CMsgSteamLearnDataSourceDescObject* mutable_object();
  void set_allocated_object(::CMsgSteamLearnDataSourceDescObject* value);
  void unsafe_arena_set_allocated_object(::CMsgSteamLearnDataSourceDescObject* value);
  ::CMsgSteamLearnDataSourceDescObject* unsafe_arena_release_object();

  private:
  const ::CMsgSteamLearnDataSourceDescObject& _internal_object() const;
  ::CMsgSteamLearnDataSourceDescObject* _internal_mutable_object();

  public:
  // optional .ESteamLearnDataType data_type = 2 [default = STEAMLEARN_DATATYPE_INVALID];
  bool has_data_type() const;
  void clear_data_type() ;
  ::ESteamLearnDataType data_type() const;
  void set_data_type(::ESteamLearnDataType value);

  private:
  ::ESteamLearnDataType _internal_data_type() const;
  void _internal_set_data_type(::ESteamLearnDataType value);

  public:
  // optional uint32 count = 4;
  bool has_count() const;
  void clear_count() ;
  ::uint32_t count() const;
  void set_count(::uint32_t value);

  private:
  ::uint32_t _internal_count() const;
  void _internal_set_count(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearnDataSourceDescElement)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 2, 48, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::CMsgSteamLearnDataSourceDescObject* object_;
    int data_type_;
    ::uint32_t count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearnDataSource final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearnDataSource) */ {
 public:
  inline CMsgSteamLearnDataSource() : CMsgSteamLearnDataSource(nullptr) {}
  ~CMsgSteamLearnDataSource() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearnDataSource(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearnDataSource(const CMsgSteamLearnDataSource& from);
  CMsgSteamLearnDataSource(CMsgSteamLearnDataSource&& from) noexcept
    : CMsgSteamLearnDataSource() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearnDataSource& operator=(const CMsgSteamLearnDataSource& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearnDataSource& operator=(CMsgSteamLearnDataSource&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearnDataSource& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearnDataSource* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearnDataSource*>(
               &_CMsgSteamLearnDataSource_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CMsgSteamLearnDataSource& a, CMsgSteamLearnDataSource& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearnDataSource* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearnDataSource* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearnDataSource* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearnDataSource>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearnDataSource& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearnDataSource& from) {
    CMsgSteamLearnDataSource::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearnDataSource* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearnDataSource";
  }
  protected:
  explicit CMsgSteamLearnDataSource(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kSourceDescriptionFieldNumber = 4,
    kStructureFieldNumber = 5,
    kIdFieldNumber = 1,
    kVersionFieldNumber = 3,
    kStructureCrcFieldNumber = 6,
    kCacheDurationSecondsFieldNumber = 7,
  };
  // optional string name = 2;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional string source_description = 4;
  bool has_source_description() const;
  void clear_source_description() ;
  const std::string& source_description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source_description(Arg_&& arg, Args_... args);
  std::string* mutable_source_description();
  PROTOBUF_NODISCARD std::string* release_source_description();
  void set_allocated_source_description(std::string* ptr);

  private:
  const std::string& _internal_source_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source_description(
      const std::string& value);
  std::string* _internal_mutable_source_description();

  public:
  // optional .CMsgSteamLearnDataSourceDescObject structure = 5;
  bool has_structure() const;
  void clear_structure() ;
  const ::CMsgSteamLearnDataSourceDescObject& structure() const;
  PROTOBUF_NODISCARD ::CMsgSteamLearnDataSourceDescObject* release_structure();
  ::CMsgSteamLearnDataSourceDescObject* mutable_structure();
  void set_allocated_structure(::CMsgSteamLearnDataSourceDescObject* value);
  void unsafe_arena_set_allocated_structure(::CMsgSteamLearnDataSourceDescObject* value);
  ::CMsgSteamLearnDataSourceDescObject* unsafe_arena_release_structure();

  private:
  const ::CMsgSteamLearnDataSourceDescObject& _internal_structure() const;
  ::CMsgSteamLearnDataSourceDescObject* _internal_mutable_structure();

  public:
  // optional uint32 id = 1;
  bool has_id() const;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // optional uint32 version = 3;
  bool has_version() const;
  void clear_version() ;
  ::uint32_t version() const;
  void set_version(::uint32_t value);

  private:
  ::uint32_t _internal_version() const;
  void _internal_set_version(::uint32_t value);

  public:
  // optional uint32 structure_crc = 6;
  bool has_structure_crc() const;
  void clear_structure_crc() ;
  ::uint32_t structure_crc() const;
  void set_structure_crc(::uint32_t value);

  private:
  ::uint32_t _internal_structure_crc() const;
  void _internal_set_structure_crc(::uint32_t value);

  public:
  // optional uint32 cache_duration_seconds = 7;
  bool has_cache_duration_seconds() const;
  void clear_cache_duration_seconds() ;
  ::uint32_t cache_duration_seconds() const;
  void set_cache_duration_seconds(::uint32_t value);

  private:
  ::uint32_t _internal_cache_duration_seconds() const;
  void _internal_set_cache_duration_seconds(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearnDataSource)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7, 1, 55, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr source_description_;
    ::CMsgSteamLearnDataSourceDescObject* structure_;
    ::uint32_t id_;
    ::uint32_t version_;
    ::uint32_t structure_crc_;
    ::uint32_t cache_duration_seconds_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearnDataObject final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearnDataObject) */ {
 public:
  inline CMsgSteamLearnDataObject() : CMsgSteamLearnDataObject(nullptr) {}
  ~CMsgSteamLearnDataObject() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearnDataObject(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearnDataObject(const CMsgSteamLearnDataObject& from);
  CMsgSteamLearnDataObject(CMsgSteamLearnDataObject&& from) noexcept
    : CMsgSteamLearnDataObject() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearnDataObject& operator=(const CMsgSteamLearnDataObject& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearnDataObject& operator=(CMsgSteamLearnDataObject&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearnDataObject& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearnDataObject* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearnDataObject*>(
               &_CMsgSteamLearnDataObject_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CMsgSteamLearnDataObject& a, CMsgSteamLearnDataObject& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearnDataObject* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearnDataObject* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearnDataObject* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearnDataObject>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearnDataObject& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearnDataObject& from) {
    CMsgSteamLearnDataObject::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearnDataObject* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearnDataObject";
  }
  protected:
  explicit CMsgSteamLearnDataObject(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kElementsFieldNumber = 1,
  };
  // repeated .CMsgSteamLearnDataElement elements = 1;
  int elements_size() const;
  private:
  int _internal_elements_size() const;

  public:
  void clear_elements() ;
  ::CMsgSteamLearnDataElement* mutable_elements(int index);
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnDataElement >*
      mutable_elements();
  private:
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearnDataElement>& _internal_elements() const;
  ::google::protobuf::RepeatedPtrField<::CMsgSteamLearnDataElement>* _internal_mutable_elements();
  public:
  const ::CMsgSteamLearnDataElement& elements(int index) const;
  ::CMsgSteamLearnDataElement* add_elements();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnDataElement >&
      elements() const;
  // @@protoc_insertion_point(class_scope:CMsgSteamLearnDataObject)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnDataElement > elements_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearnDataElement final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearnDataElement) */ {
 public:
  inline CMsgSteamLearnDataElement() : CMsgSteamLearnDataElement(nullptr) {}
  ~CMsgSteamLearnDataElement() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearnDataElement(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearnDataElement(const CMsgSteamLearnDataElement& from);
  CMsgSteamLearnDataElement(CMsgSteamLearnDataElement&& from) noexcept
    : CMsgSteamLearnDataElement() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearnDataElement& operator=(const CMsgSteamLearnDataElement& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearnDataElement& operator=(CMsgSteamLearnDataElement&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearnDataElement& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearnDataElement* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearnDataElement*>(
               &_CMsgSteamLearnDataElement_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CMsgSteamLearnDataElement& a, CMsgSteamLearnDataElement& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearnDataElement* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearnDataElement* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearnDataElement* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearnDataElement>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearnDataElement& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearnDataElement& from) {
    CMsgSteamLearnDataElement::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearnDataElement* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearnDataElement";
  }
  protected:
  explicit CMsgSteamLearnDataElement(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataInt32SFieldNumber = 20,
    kDataFloatsFieldNumber = 21,
    kDataBoolsFieldNumber = 22,
    kDataStringsFieldNumber = 23,
    kDataObjectsFieldNumber = 24,
    kNameFieldNumber = 1,
  };
  // repeated int32 data_int32s = 20;
  int data_int32s_size() const;
  private:
  int _internal_data_int32s_size() const;

  public:
  void clear_data_int32s() ;
  ::int32_t data_int32s(int index) const;
  void set_data_int32s(int index, ::int32_t value);
  void add_data_int32s(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& data_int32s() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_data_int32s();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_data_int32s() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_data_int32s();

  public:
  // repeated float data_floats = 21;
  int data_floats_size() const;
  private:
  int _internal_data_floats_size() const;

  public:
  void clear_data_floats() ;
  float data_floats(int index) const;
  void set_data_floats(int index, float value);
  void add_data_floats(float value);
  const ::google::protobuf::RepeatedField<float>& data_floats() const;
  ::google::protobuf::RepeatedField<float>* mutable_data_floats();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_data_floats() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_data_floats();

  public:
  // repeated bool data_bools = 22;
  int data_bools_size() const;
  private:
  int _internal_data_bools_size() const;

  public:
  void clear_data_bools() ;
  bool data_bools(int index) const;
  void set_data_bools(int index, bool value);
  void add_data_bools(bool value);
  const ::google::protobuf::RepeatedField<bool>& data_bools() const;
  ::google::protobuf::RepeatedField<bool>* mutable_data_bools();

  private:
  const ::google::protobuf::RepeatedField<bool>& _internal_data_bools() const;
  ::google::protobuf::RepeatedField<bool>* _internal_mutable_data_bools();

  public:
  // repeated string data_strings = 23;
  int data_strings_size() const;
  private:
  int _internal_data_strings_size() const;

  public:
  void clear_data_strings() ;
  const std::string& data_strings(int index) const;
  std::string* mutable_data_strings(int index);
  void set_data_strings(int index, const std::string& value);
  void set_data_strings(int index, std::string&& value);
  void set_data_strings(int index, const char* value);
  void set_data_strings(int index, const char* value, std::size_t size);
  void set_data_strings(int index, absl::string_view value);
  std::string* add_data_strings();
  void add_data_strings(const std::string& value);
  void add_data_strings(std::string&& value);
  void add_data_strings(const char* value);
  void add_data_strings(const char* value, std::size_t size);
  void add_data_strings(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& data_strings() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_data_strings();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_data_strings() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_data_strings();

  public:
  // repeated .CMsgSteamLearnDataObject data_objects = 24;
  int data_objects_size() const;
  private:
  int _internal_data_objects_size() const;

  public:
  void clear_data_objects() ;
  ::CMsgSteamLearnDataObject* mutable_data_objects(int index);
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnDataObject >*
      mutable_data_objects();
  private:
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearnDataObject>& _internal_data_objects() const;
  ::google::protobuf::RepeatedPtrField<::CMsgSteamLearnDataObject>* _internal_mutable_data_objects();
  public:
  const ::CMsgSteamLearnDataObject& data_objects(int index) const;
  ::CMsgSteamLearnDataObject* add_data_objects();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnDataObject >&
      data_objects() const;
  // optional string name = 1;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearnDataElement)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6, 1, 50, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> data_int32s_;
    ::google::protobuf::RepeatedField<float> data_floats_;
    ::google::protobuf::RepeatedField<bool> data_bools_;
    ::google::protobuf::RepeatedPtrField<std::string> data_strings_;
    ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnDataObject > data_objects_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearnData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearnData) */ {
 public:
  inline CMsgSteamLearnData() : CMsgSteamLearnData(nullptr) {}
  ~CMsgSteamLearnData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearnData(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearnData(const CMsgSteamLearnData& from);
  CMsgSteamLearnData(CMsgSteamLearnData&& from) noexcept
    : CMsgSteamLearnData() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearnData& operator=(const CMsgSteamLearnData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearnData& operator=(CMsgSteamLearnData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearnData& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearnData* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearnData*>(
               &_CMsgSteamLearnData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CMsgSteamLearnData& a, CMsgSteamLearnData& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearnData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearnData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearnData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearnData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearnData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearnData& from) {
    CMsgSteamLearnData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearnData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearnData";
  }
  protected:
  explicit CMsgSteamLearnData(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeysFieldNumber = 2,
    kDataObjectFieldNumber = 3,
    kDataSourceIdFieldNumber = 1,
  };
  // repeated uint64 keys = 2;
  int keys_size() const;
  private:
  int _internal_keys_size() const;

  public:
  void clear_keys() ;
  ::uint64_t keys(int index) const;
  void set_keys(int index, ::uint64_t value);
  void add_keys(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& keys() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_keys();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_keys() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_keys();

  public:
  // optional .CMsgSteamLearnDataObject data_object = 3;
  bool has_data_object() const;
  void clear_data_object() ;
  const ::CMsgSteamLearnDataObject& data_object() const;
  PROTOBUF_NODISCARD ::CMsgSteamLearnDataObject* release_data_object();
  ::CMsgSteamLearnDataObject* mutable_data_object();
  void set_allocated_data_object(::CMsgSteamLearnDataObject* value);
  void unsafe_arena_set_allocated_data_object(::CMsgSteamLearnDataObject* value);
  ::CMsgSteamLearnDataObject* unsafe_arena_release_data_object();

  private:
  const ::CMsgSteamLearnDataObject& _internal_data_object() const;
  ::CMsgSteamLearnDataObject* _internal_mutable_data_object();

  public:
  // optional uint32 data_source_id = 1;
  bool has_data_source_id() const;
  void clear_data_source_id() ;
  ::uint32_t data_source_id() const;
  void set_data_source_id(::uint32_t value);

  private:
  ::uint32_t _internal_data_source_id() const;
  void _internal_set_data_source_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearnData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::uint64_t> keys_;
    ::CMsgSteamLearnDataObject* data_object_;
    ::uint32_t data_source_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearnDataList final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearnDataList) */ {
 public:
  inline CMsgSteamLearnDataList() : CMsgSteamLearnDataList(nullptr) {}
  ~CMsgSteamLearnDataList() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearnDataList(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearnDataList(const CMsgSteamLearnDataList& from);
  CMsgSteamLearnDataList(CMsgSteamLearnDataList&& from) noexcept
    : CMsgSteamLearnDataList() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearnDataList& operator=(const CMsgSteamLearnDataList& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearnDataList& operator=(CMsgSteamLearnDataList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearnDataList& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearnDataList* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearnDataList*>(
               &_CMsgSteamLearnDataList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CMsgSteamLearnDataList& a, CMsgSteamLearnDataList& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearnDataList* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearnDataList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearnDataList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearnDataList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearnDataList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearnDataList& from) {
    CMsgSteamLearnDataList::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearnDataList* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearnDataList";
  }
  protected:
  explicit CMsgSteamLearnDataList(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // repeated .CMsgSteamLearnData data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;

  public:
  void clear_data() ;
  ::CMsgSteamLearnData* mutable_data(int index);
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnData >*
      mutable_data();
  private:
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearnData>& _internal_data() const;
  ::google::protobuf::RepeatedPtrField<::CMsgSteamLearnData>* _internal_mutable_data();
  public:
  const ::CMsgSteamLearnData& data(int index) const;
  ::CMsgSteamLearnData* add_data();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnData >&
      data() const;
  // @@protoc_insertion_point(class_scope:CMsgSteamLearnDataList)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnData > data_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_AccessData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_AccessData) */ {
 public:
  inline CMsgSteamLearn_AccessData() : CMsgSteamLearn_AccessData(nullptr) {}
  ~CMsgSteamLearn_AccessData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_AccessData(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_AccessData(const CMsgSteamLearn_AccessData& from);
  CMsgSteamLearn_AccessData(CMsgSteamLearn_AccessData&& from) noexcept
    : CMsgSteamLearn_AccessData() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_AccessData& operator=(const CMsgSteamLearn_AccessData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_AccessData& operator=(CMsgSteamLearn_AccessData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_AccessData& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearn_AccessData* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_AccessData*>(
               &_CMsgSteamLearn_AccessData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CMsgSteamLearn_AccessData& a, CMsgSteamLearn_AccessData& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_AccessData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_AccessData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_AccessData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_AccessData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_AccessData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_AccessData& from) {
    CMsgSteamLearn_AccessData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_AccessData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_AccessData";
  }
  protected:
  explicit CMsgSteamLearn_AccessData(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPublisherIdFieldNumber = 1,
    kTimestampFieldNumber = 2,
    kRandomValueFieldNumber = 3,
  };
  // optional uint32 publisher_id = 1;
  bool has_publisher_id() const;
  void clear_publisher_id() ;
  ::uint32_t publisher_id() const;
  void set_publisher_id(::uint32_t value);

  private:
  ::uint32_t _internal_publisher_id() const;
  void _internal_set_publisher_id(::uint32_t value);

  public:
  // optional uint32 timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp() ;
  ::uint32_t timestamp() const;
  void set_timestamp(::uint32_t value);

  private:
  ::uint32_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint32_t value);

  public:
  // optional uint64 random_value = 3;
  bool has_random_value() const;
  void clear_random_value() ;
  ::uint64_t random_value() const;
  void set_random_value(::uint64_t value);

  private:
  ::uint64_t _internal_random_value() const;
  void _internal_set_random_value(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_AccessData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t publisher_id_;
    ::uint32_t timestamp_;
    ::uint64_t random_value_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_RegisterDataSource_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_RegisterDataSource_Request) */ {
 public:
  inline CMsgSteamLearn_RegisterDataSource_Request() : CMsgSteamLearn_RegisterDataSource_Request(nullptr) {}
  ~CMsgSteamLearn_RegisterDataSource_Request() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_RegisterDataSource_Request(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_RegisterDataSource_Request(const CMsgSteamLearn_RegisterDataSource_Request& from);
  CMsgSteamLearn_RegisterDataSource_Request(CMsgSteamLearn_RegisterDataSource_Request&& from) noexcept
    : CMsgSteamLearn_RegisterDataSource_Request() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_RegisterDataSource_Request& operator=(const CMsgSteamLearn_RegisterDataSource_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_RegisterDataSource_Request& operator=(CMsgSteamLearn_RegisterDataSource_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_RegisterDataSource_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearn_RegisterDataSource_Request* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_RegisterDataSource_Request*>(
               &_CMsgSteamLearn_RegisterDataSource_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CMsgSteamLearn_RegisterDataSource_Request& a, CMsgSteamLearn_RegisterDataSource_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_RegisterDataSource_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_RegisterDataSource_Request* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_RegisterDataSource_Request* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_RegisterDataSource_Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_RegisterDataSource_Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_RegisterDataSource_Request& from) {
    CMsgSteamLearn_RegisterDataSource_Request::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_RegisterDataSource_Request* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_RegisterDataSource_Request";
  }
  protected:
  explicit CMsgSteamLearn_RegisterDataSource_Request(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccessTokenFieldNumber = 1,
    kAccessDataFieldNumber = 2,
    kDataSourceFieldNumber = 3,
  };
  // optional string access_token = 1;
  bool has_access_token() const;
  void clear_access_token() ;
  const std::string& access_token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_access_token(Arg_&& arg, Args_... args);
  std::string* mutable_access_token();
  PROTOBUF_NODISCARD std::string* release_access_token();
  void set_allocated_access_token(std::string* ptr);

  private:
  const std::string& _internal_access_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_access_token(
      const std::string& value);
  std::string* _internal_mutable_access_token();

  public:
  // optional .CMsgSteamLearn_AccessData access_data = 2;
  bool has_access_data() const;
  void clear_access_data() ;
  const ::CMsgSteamLearn_AccessData& access_data() const;
  PROTOBUF_NODISCARD ::CMsgSteamLearn_AccessData* release_access_data();
  ::CMsgSteamLearn_AccessData* mutable_access_data();
  void set_allocated_access_data(::CMsgSteamLearn_AccessData* value);
  void unsafe_arena_set_allocated_access_data(::CMsgSteamLearn_AccessData* value);
  ::CMsgSteamLearn_AccessData* unsafe_arena_release_access_data();

  private:
  const ::CMsgSteamLearn_AccessData& _internal_access_data() const;
  ::CMsgSteamLearn_AccessData* _internal_mutable_access_data();

  public:
  // optional .CMsgSteamLearnDataSource data_source = 3;
  bool has_data_source() const;
  void clear_data_source() ;
  const ::CMsgSteamLearnDataSource& data_source() const;
  PROTOBUF_NODISCARD ::CMsgSteamLearnDataSource* release_data_source();
  ::CMsgSteamLearnDataSource* mutable_data_source();
  void set_allocated_data_source(::CMsgSteamLearnDataSource* value);
  void unsafe_arena_set_allocated_data_source(::CMsgSteamLearnDataSource* value);
  ::CMsgSteamLearnDataSource* unsafe_arena_release_data_source();

  private:
  const ::CMsgSteamLearnDataSource& _internal_data_source() const;
  ::CMsgSteamLearnDataSource* _internal_mutable_data_source();

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_RegisterDataSource_Request)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 2, 62, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr access_token_;
    ::CMsgSteamLearn_AccessData* access_data_;
    ::CMsgSteamLearnDataSource* data_source_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_RegisterDataSource_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_RegisterDataSource_Response) */ {
 public:
  inline CMsgSteamLearn_RegisterDataSource_Response() : CMsgSteamLearn_RegisterDataSource_Response(nullptr) {}
  ~CMsgSteamLearn_RegisterDataSource_Response() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_RegisterDataSource_Response(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_RegisterDataSource_Response(const CMsgSteamLearn_RegisterDataSource_Response& from);
  CMsgSteamLearn_RegisterDataSource_Response(CMsgSteamLearn_RegisterDataSource_Response&& from) noexcept
    : CMsgSteamLearn_RegisterDataSource_Response() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_RegisterDataSource_Response& operator=(const CMsgSteamLearn_RegisterDataSource_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_RegisterDataSource_Response& operator=(CMsgSteamLearn_RegisterDataSource_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_RegisterDataSource_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearn_RegisterDataSource_Response* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_RegisterDataSource_Response*>(
               &_CMsgSteamLearn_RegisterDataSource_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CMsgSteamLearn_RegisterDataSource_Response& a, CMsgSteamLearn_RegisterDataSource_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_RegisterDataSource_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_RegisterDataSource_Response* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_RegisterDataSource_Response* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_RegisterDataSource_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_RegisterDataSource_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_RegisterDataSource_Response& from) {
    CMsgSteamLearn_RegisterDataSource_Response::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_RegisterDataSource_Response* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_RegisterDataSource_Response";
  }
  protected:
  explicit CMsgSteamLearn_RegisterDataSource_Response(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataSourceFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // optional .CMsgSteamLearnDataSource data_source = 2;
  bool has_data_source() const;
  void clear_data_source() ;
  const ::CMsgSteamLearnDataSource& data_source() const;
  PROTOBUF_NODISCARD ::CMsgSteamLearnDataSource* release_data_source();
  ::CMsgSteamLearnDataSource* mutable_data_source();
  void set_allocated_data_source(::CMsgSteamLearnDataSource* value);
  void unsafe_arena_set_allocated_data_source(::CMsgSteamLearnDataSource* value);
  ::CMsgSteamLearnDataSource* unsafe_arena_release_data_source();

  private:
  const ::CMsgSteamLearnDataSource& _internal_data_source() const;
  ::CMsgSteamLearnDataSource* _internal_mutable_data_source();

  public:
  // optional .ESteammLearnRegisterDataSourceResult result = 1 [default = STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR];
  bool has_result() const;
  void clear_result() ;
  ::ESteammLearnRegisterDataSourceResult result() const;
  void set_result(::ESteammLearnRegisterDataSourceResult value);

  private:
  ::ESteammLearnRegisterDataSourceResult _internal_result() const;
  void _internal_set_result(::ESteammLearnRegisterDataSourceResult value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_RegisterDataSource_Response)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 2, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::CMsgSteamLearnDataSource* data_source_;
    int result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_CacheData_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_CacheData_Request) */ {
 public:
  inline CMsgSteamLearn_CacheData_Request() : CMsgSteamLearn_CacheData_Request(nullptr) {}
  ~CMsgSteamLearn_CacheData_Request() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_CacheData_Request(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_CacheData_Request(const CMsgSteamLearn_CacheData_Request& from);
  CMsgSteamLearn_CacheData_Request(CMsgSteamLearn_CacheData_Request&& from) noexcept
    : CMsgSteamLearn_CacheData_Request() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_CacheData_Request& operator=(const CMsgSteamLearn_CacheData_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_CacheData_Request& operator=(CMsgSteamLearn_CacheData_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_CacheData_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearn_CacheData_Request* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_CacheData_Request*>(
               &_CMsgSteamLearn_CacheData_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CMsgSteamLearn_CacheData_Request& a, CMsgSteamLearn_CacheData_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_CacheData_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_CacheData_Request* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_CacheData_Request* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_CacheData_Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_CacheData_Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_CacheData_Request& from) {
    CMsgSteamLearn_CacheData_Request::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_CacheData_Request* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_CacheData_Request";
  }
  protected:
  explicit CMsgSteamLearn_CacheData_Request(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccessTokenFieldNumber = 1,
    kAccessDataFieldNumber = 2,
    kDataFieldNumber = 3,
  };
  // optional string access_token = 1;
  bool has_access_token() const;
  void clear_access_token() ;
  const std::string& access_token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_access_token(Arg_&& arg, Args_... args);
  std::string* mutable_access_token();
  PROTOBUF_NODISCARD std::string* release_access_token();
  void set_allocated_access_token(std::string* ptr);

  private:
  const std::string& _internal_access_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_access_token(
      const std::string& value);
  std::string* _internal_mutable_access_token();

  public:
  // optional .CMsgSteamLearn_AccessData access_data = 2;
  bool has_access_data() const;
  void clear_access_data() ;
  const ::CMsgSteamLearn_AccessData& access_data() const;
  PROTOBUF_NODISCARD ::CMsgSteamLearn_AccessData* release_access_data();
  ::CMsgSteamLearn_AccessData* mutable_access_data();
  void set_allocated_access_data(::CMsgSteamLearn_AccessData* value);
  void unsafe_arena_set_allocated_access_data(::CMsgSteamLearn_AccessData* value);
  ::CMsgSteamLearn_AccessData* unsafe_arena_release_access_data();

  private:
  const ::CMsgSteamLearn_AccessData& _internal_access_data() const;
  ::CMsgSteamLearn_AccessData* _internal_mutable_access_data();

  public:
  // optional .CMsgSteamLearnData data = 3;
  bool has_data() const;
  void clear_data() ;
  const ::CMsgSteamLearnData& data() const;
  PROTOBUF_NODISCARD ::CMsgSteamLearnData* release_data();
  ::CMsgSteamLearnData* mutable_data();
  void set_allocated_data(::CMsgSteamLearnData* value);
  void unsafe_arena_set_allocated_data(::CMsgSteamLearnData* value);
  ::CMsgSteamLearnData* unsafe_arena_release_data();

  private:
  const ::CMsgSteamLearnData& _internal_data() const;
  ::CMsgSteamLearnData* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_CacheData_Request)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 2, 53, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr access_token_;
    ::CMsgSteamLearn_AccessData* access_data_;
    ::CMsgSteamLearnData* data_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_CacheData_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_CacheData_Response) */ {
 public:
  inline CMsgSteamLearn_CacheData_Response() : CMsgSteamLearn_CacheData_Response(nullptr) {}
  ~CMsgSteamLearn_CacheData_Response() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_CacheData_Response(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_CacheData_Response(const CMsgSteamLearn_CacheData_Response& from);
  CMsgSteamLearn_CacheData_Response(CMsgSteamLearn_CacheData_Response&& from) noexcept
    : CMsgSteamLearn_CacheData_Response() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_CacheData_Response& operator=(const CMsgSteamLearn_CacheData_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_CacheData_Response& operator=(CMsgSteamLearn_CacheData_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_CacheData_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearn_CacheData_Response* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_CacheData_Response*>(
               &_CMsgSteamLearn_CacheData_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(CMsgSteamLearn_CacheData_Response& a, CMsgSteamLearn_CacheData_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_CacheData_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_CacheData_Response* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_CacheData_Response* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_CacheData_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_CacheData_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_CacheData_Response& from) {
    CMsgSteamLearn_CacheData_Response::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_CacheData_Response* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_CacheData_Response";
  }
  protected:
  explicit CMsgSteamLearn_CacheData_Response(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCacheDataResultFieldNumber = 1,
  };
  // optional .ESteamLearnCacheDataResult cache_data_result = 1 [default = STEAMLEARN_CACHE_DATA_ERROR];
  bool has_cache_data_result() const;
  void clear_cache_data_result() ;
  ::ESteamLearnCacheDataResult cache_data_result() const;
  void set_cache_data_result(::ESteamLearnCacheDataResult value);

  private:
  ::ESteamLearnCacheDataResult _internal_cache_data_result() const;
  void _internal_set_cache_data_result(::ESteamLearnCacheDataResult value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_CacheData_Response)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    int cache_data_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_SnapshotProject_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_SnapshotProject_Request) */ {
 public:
  inline CMsgSteamLearn_SnapshotProject_Request() : CMsgSteamLearn_SnapshotProject_Request(nullptr) {}
  ~CMsgSteamLearn_SnapshotProject_Request() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_SnapshotProject_Request(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_SnapshotProject_Request(const CMsgSteamLearn_SnapshotProject_Request& from);
  CMsgSteamLearn_SnapshotProject_Request(CMsgSteamLearn_SnapshotProject_Request&& from) noexcept
    : CMsgSteamLearn_SnapshotProject_Request() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_SnapshotProject_Request& operator=(const CMsgSteamLearn_SnapshotProject_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_SnapshotProject_Request& operator=(CMsgSteamLearn_SnapshotProject_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_SnapshotProject_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearn_SnapshotProject_Request* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_SnapshotProject_Request*>(
               &_CMsgSteamLearn_SnapshotProject_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(CMsgSteamLearn_SnapshotProject_Request& a, CMsgSteamLearn_SnapshotProject_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_SnapshotProject_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_SnapshotProject_Request* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_SnapshotProject_Request* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_SnapshotProject_Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_SnapshotProject_Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_SnapshotProject_Request& from) {
    CMsgSteamLearn_SnapshotProject_Request::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_SnapshotProject_Request* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_SnapshotProject_Request";
  }
  protected:
  explicit CMsgSteamLearn_SnapshotProject_Request(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeysFieldNumber = 4,
    kDataFieldNumber = 5,
    kAccessTokenFieldNumber = 1,
    kAccessDataFieldNumber = 2,
    kProjectIdFieldNumber = 3,
    kPendingDataLimitSecondsFieldNumber = 6,
    kPublishedVersionFieldNumber = 7,
  };
  // repeated uint64 keys = 4;
  int keys_size() const;
  private:
  int _internal_keys_size() const;

  public:
  void clear_keys() ;
  ::uint64_t keys(int index) const;
  void set_keys(int index, ::uint64_t value);
  void add_keys(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& keys() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_keys();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_keys() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_keys();

  public:
  // repeated .CMsgSteamLearnData data = 5;
  int data_size() const;
  private:
  int _internal_data_size() const;

  public:
  void clear_data() ;
  ::CMsgSteamLearnData* mutable_data(int index);
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnData >*
      mutable_data();
  private:
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearnData>& _internal_data() const;
  ::google::protobuf::RepeatedPtrField<::CMsgSteamLearnData>* _internal_mutable_data();
  public:
  const ::CMsgSteamLearnData& data(int index) const;
  ::CMsgSteamLearnData* add_data();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnData >&
      data() const;
  // optional string access_token = 1;
  bool has_access_token() const;
  void clear_access_token() ;
  const std::string& access_token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_access_token(Arg_&& arg, Args_... args);
  std::string* mutable_access_token();
  PROTOBUF_NODISCARD std::string* release_access_token();
  void set_allocated_access_token(std::string* ptr);

  private:
  const std::string& _internal_access_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_access_token(
      const std::string& value);
  std::string* _internal_mutable_access_token();

  public:
  // optional .CMsgSteamLearn_AccessData access_data = 2;
  bool has_access_data() const;
  void clear_access_data() ;
  const ::CMsgSteamLearn_AccessData& access_data() const;
  PROTOBUF_NODISCARD ::CMsgSteamLearn_AccessData* release_access_data();
  ::CMsgSteamLearn_AccessData* mutable_access_data();
  void set_allocated_access_data(::CMsgSteamLearn_AccessData* value);
  void unsafe_arena_set_allocated_access_data(::CMsgSteamLearn_AccessData* value);
  ::CMsgSteamLearn_AccessData* unsafe_arena_release_access_data();

  private:
  const ::CMsgSteamLearn_AccessData& _internal_access_data() const;
  ::CMsgSteamLearn_AccessData* _internal_mutable_access_data();

  public:
  // optional uint32 project_id = 3;
  bool has_project_id() const;
  void clear_project_id() ;
  ::uint32_t project_id() const;
  void set_project_id(::uint32_t value);

  private:
  ::uint32_t _internal_project_id() const;
  void _internal_set_project_id(::uint32_t value);

  public:
  // optional uint32 pending_data_limit_seconds = 6;
  bool has_pending_data_limit_seconds() const;
  void clear_pending_data_limit_seconds() ;
  ::uint32_t pending_data_limit_seconds() const;
  void set_pending_data_limit_seconds(::uint32_t value);

  private:
  ::uint32_t _internal_pending_data_limit_seconds() const;
  void _internal_set_pending_data_limit_seconds(::uint32_t value);

  public:
  // optional uint32 published_version = 7;
  bool has_published_version() const;
  void clear_published_version() ;
  ::uint32_t published_version() const;
  void set_published_version(::uint32_t value);

  private:
  ::uint32_t _internal_published_version() const;
  void _internal_set_published_version(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_SnapshotProject_Request)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7, 2, 59, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::uint64_t> keys_;
    ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnData > data_;
    ::google::protobuf::internal::ArenaStringPtr access_token_;
    ::CMsgSteamLearn_AccessData* access_data_;
    ::uint32_t project_id_;
    ::uint32_t pending_data_limit_seconds_;
    ::uint32_t published_version_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_SnapshotProject_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_SnapshotProject_Response) */ {
 public:
  inline CMsgSteamLearn_SnapshotProject_Response() : CMsgSteamLearn_SnapshotProject_Response(nullptr) {}
  ~CMsgSteamLearn_SnapshotProject_Response() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_SnapshotProject_Response(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_SnapshotProject_Response(const CMsgSteamLearn_SnapshotProject_Response& from);
  CMsgSteamLearn_SnapshotProject_Response(CMsgSteamLearn_SnapshotProject_Response&& from) noexcept
    : CMsgSteamLearn_SnapshotProject_Response() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_SnapshotProject_Response& operator=(const CMsgSteamLearn_SnapshotProject_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_SnapshotProject_Response& operator=(CMsgSteamLearn_SnapshotProject_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_SnapshotProject_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearn_SnapshotProject_Response* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_SnapshotProject_Response*>(
               &_CMsgSteamLearn_SnapshotProject_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(CMsgSteamLearn_SnapshotProject_Response& a, CMsgSteamLearn_SnapshotProject_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_SnapshotProject_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_SnapshotProject_Response* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_SnapshotProject_Response* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_SnapshotProject_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_SnapshotProject_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_SnapshotProject_Response& from) {
    CMsgSteamLearn_SnapshotProject_Response::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_SnapshotProject_Response* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_SnapshotProject_Response";
  }
  protected:
  explicit CMsgSteamLearn_SnapshotProject_Response(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSnapshotResultFieldNumber = 1,
  };
  // optional .ESteamLearnSnapshotProjectResult snapshot_result = 1 [default = STEAMLEARN_SNAPSHOT_PROJECT_ERROR];
  bool has_snapshot_result() const;
  void clear_snapshot_result() ;
  ::ESteamLearnSnapshotProjectResult snapshot_result() const;
  void set_snapshot_result(::ESteamLearnSnapshotProjectResult value);

  private:
  ::ESteamLearnSnapshotProjectResult _internal_snapshot_result() const;
  void _internal_set_snapshot_result(::ESteamLearnSnapshotProjectResult value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_SnapshotProject_Response)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    int snapshot_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_BatchOperation_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_BatchOperation_Request) */ {
 public:
  inline CMsgSteamLearn_BatchOperation_Request() : CMsgSteamLearn_BatchOperation_Request(nullptr) {}
  ~CMsgSteamLearn_BatchOperation_Request() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_BatchOperation_Request(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_BatchOperation_Request(const CMsgSteamLearn_BatchOperation_Request& from);
  CMsgSteamLearn_BatchOperation_Request(CMsgSteamLearn_BatchOperation_Request&& from) noexcept
    : CMsgSteamLearn_BatchOperation_Request() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_BatchOperation_Request& operator=(const CMsgSteamLearn_BatchOperation_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_BatchOperation_Request& operator=(CMsgSteamLearn_BatchOperation_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_BatchOperation_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearn_BatchOperation_Request* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_BatchOperation_Request*>(
               &_CMsgSteamLearn_BatchOperation_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(CMsgSteamLearn_BatchOperation_Request& a, CMsgSteamLearn_BatchOperation_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_BatchOperation_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_BatchOperation_Request* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_BatchOperation_Request* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_BatchOperation_Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_BatchOperation_Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_BatchOperation_Request& from) {
    CMsgSteamLearn_BatchOperation_Request::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_BatchOperation_Request* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_BatchOperation_Request";
  }
  protected:
  explicit CMsgSteamLearn_BatchOperation_Request(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCacheDataRequestsFieldNumber = 1,
    kSnapshotRequestsFieldNumber = 2,
  };
  // repeated .CMsgSteamLearn_CacheData_Request cache_data_requests = 1;
  int cache_data_requests_size() const;
  private:
  int _internal_cache_data_requests_size() const;

  public:
  void clear_cache_data_requests() ;
  ::CMsgSteamLearn_CacheData_Request* mutable_cache_data_requests(int index);
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_CacheData_Request >*
      mutable_cache_data_requests();
  private:
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_CacheData_Request>& _internal_cache_data_requests() const;
  ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_CacheData_Request>* _internal_mutable_cache_data_requests();
  public:
  const ::CMsgSteamLearn_CacheData_Request& cache_data_requests(int index) const;
  ::CMsgSteamLearn_CacheData_Request* add_cache_data_requests();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_CacheData_Request >&
      cache_data_requests() const;
  // repeated .CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;
  int snapshot_requests_size() const;
  private:
  int _internal_snapshot_requests_size() const;

  public:
  void clear_snapshot_requests() ;
  ::CMsgSteamLearn_SnapshotProject_Request* mutable_snapshot_requests(int index);
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_SnapshotProject_Request >*
      mutable_snapshot_requests();
  private:
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_SnapshotProject_Request>& _internal_snapshot_requests() const;
  ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_SnapshotProject_Request>* _internal_mutable_snapshot_requests();
  public:
  const ::CMsgSteamLearn_SnapshotProject_Request& snapshot_requests(int index) const;
  ::CMsgSteamLearn_SnapshotProject_Request* add_snapshot_requests();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_SnapshotProject_Request >&
      snapshot_requests() const;
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_BatchOperation_Request)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 2, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_CacheData_Request > cache_data_requests_;
    ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_SnapshotProject_Request > snapshot_requests_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_BatchOperation_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_BatchOperation_Response) */ {
 public:
  inline CMsgSteamLearn_BatchOperation_Response() : CMsgSteamLearn_BatchOperation_Response(nullptr) {}
  ~CMsgSteamLearn_BatchOperation_Response() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_BatchOperation_Response(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_BatchOperation_Response(const CMsgSteamLearn_BatchOperation_Response& from);
  CMsgSteamLearn_BatchOperation_Response(CMsgSteamLearn_BatchOperation_Response&& from) noexcept
    : CMsgSteamLearn_BatchOperation_Response() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_BatchOperation_Response& operator=(const CMsgSteamLearn_BatchOperation_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_BatchOperation_Response& operator=(CMsgSteamLearn_BatchOperation_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_BatchOperation_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearn_BatchOperation_Response* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_BatchOperation_Response*>(
               &_CMsgSteamLearn_BatchOperation_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(CMsgSteamLearn_BatchOperation_Response& a, CMsgSteamLearn_BatchOperation_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_BatchOperation_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_BatchOperation_Response* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_BatchOperation_Response* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_BatchOperation_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_BatchOperation_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_BatchOperation_Response& from) {
    CMsgSteamLearn_BatchOperation_Response::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_BatchOperation_Response* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_BatchOperation_Response";
  }
  protected:
  explicit CMsgSteamLearn_BatchOperation_Response(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCacheDataResponsesFieldNumber = 1,
    kSnapshotResponsesFieldNumber = 2,
  };
  // repeated .CMsgSteamLearn_CacheData_Response cache_data_responses = 1;
  int cache_data_responses_size() const;
  private:
  int _internal_cache_data_responses_size() const;

  public:
  void clear_cache_data_responses() ;
  ::CMsgSteamLearn_CacheData_Response* mutable_cache_data_responses(int index);
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_CacheData_Response >*
      mutable_cache_data_responses();
  private:
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_CacheData_Response>& _internal_cache_data_responses() const;
  ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_CacheData_Response>* _internal_mutable_cache_data_responses();
  public:
  const ::CMsgSteamLearn_CacheData_Response& cache_data_responses(int index) const;
  ::CMsgSteamLearn_CacheData_Response* add_cache_data_responses();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_CacheData_Response >&
      cache_data_responses() const;
  // repeated .CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;
  int snapshot_responses_size() const;
  private:
  int _internal_snapshot_responses_size() const;

  public:
  void clear_snapshot_responses() ;
  ::CMsgSteamLearn_SnapshotProject_Response* mutable_snapshot_responses(int index);
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_SnapshotProject_Response >*
      mutable_snapshot_responses();
  private:
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_SnapshotProject_Response>& _internal_snapshot_responses() const;
  ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_SnapshotProject_Response>* _internal_mutable_snapshot_responses();
  public:
  const ::CMsgSteamLearn_SnapshotProject_Response& snapshot_responses(int index) const;
  ::CMsgSteamLearn_SnapshotProject_Response* add_snapshot_responses();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_SnapshotProject_Response >&
      snapshot_responses() const;
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_BatchOperation_Response)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 2, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_CacheData_Response > cache_data_responses_;
    ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_SnapshotProject_Response > snapshot_responses_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearnHMACKeys_CacheDataKeys final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearnHMACKeys.CacheDataKeys) */ {
 public:
  inline CMsgSteamLearnHMACKeys_CacheDataKeys() : CMsgSteamLearnHMACKeys_CacheDataKeys(nullptr) {}
  ~CMsgSteamLearnHMACKeys_CacheDataKeys() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearnHMACKeys_CacheDataKeys(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearnHMACKeys_CacheDataKeys(const CMsgSteamLearnHMACKeys_CacheDataKeys& from);
  CMsgSteamLearnHMACKeys_CacheDataKeys(CMsgSteamLearnHMACKeys_CacheDataKeys&& from) noexcept
    : CMsgSteamLearnHMACKeys_CacheDataKeys() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearnHMACKeys_CacheDataKeys& operator=(const CMsgSteamLearnHMACKeys_CacheDataKeys& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearnHMACKeys_CacheDataKeys& operator=(CMsgSteamLearnHMACKeys_CacheDataKeys&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearnHMACKeys_CacheDataKeys& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearnHMACKeys_CacheDataKeys* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearnHMACKeys_CacheDataKeys*>(
               &_CMsgSteamLearnHMACKeys_CacheDataKeys_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(CMsgSteamLearnHMACKeys_CacheDataKeys& a, CMsgSteamLearnHMACKeys_CacheDataKeys& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearnHMACKeys_CacheDataKeys* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearnHMACKeys_CacheDataKeys* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearnHMACKeys_CacheDataKeys* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearnHMACKeys_CacheDataKeys>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearnHMACKeys_CacheDataKeys& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearnHMACKeys_CacheDataKeys& from) {
    CMsgSteamLearnHMACKeys_CacheDataKeys::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearnHMACKeys_CacheDataKeys* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearnHMACKeys.CacheDataKeys";
  }
  protected:
  explicit CMsgSteamLearnHMACKeys_CacheDataKeys(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 2,
    kDataSourceIdFieldNumber = 1,
    kVersionFieldNumber = 3,
  };
  // optional string key = 2;
  bool has_key() const;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* ptr);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // optional uint32 data_source_id = 1;
  bool has_data_source_id() const;
  void clear_data_source_id() ;
  ::uint32_t data_source_id() const;
  void set_data_source_id(::uint32_t value);

  private:
  ::uint32_t _internal_data_source_id() const;
  void _internal_set_data_source_id(::uint32_t value);

  public:
  // optional uint32 version = 3;
  bool has_version() const;
  void clear_version() ;
  ::uint32_t version() const;
  void set_version(::uint32_t value);

  private:
  ::uint32_t _internal_version() const;
  void _internal_set_version(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearnHMACKeys.CacheDataKeys)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 48, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::uint32_t data_source_id_;
    ::uint32_t version_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearnHMACKeys_SnapshotProjectKeys final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearnHMACKeys.SnapshotProjectKeys) */ {
 public:
  inline CMsgSteamLearnHMACKeys_SnapshotProjectKeys() : CMsgSteamLearnHMACKeys_SnapshotProjectKeys(nullptr) {}
  ~CMsgSteamLearnHMACKeys_SnapshotProjectKeys() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearnHMACKeys_SnapshotProjectKeys(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearnHMACKeys_SnapshotProjectKeys(const CMsgSteamLearnHMACKeys_SnapshotProjectKeys& from);
  CMsgSteamLearnHMACKeys_SnapshotProjectKeys(CMsgSteamLearnHMACKeys_SnapshotProjectKeys&& from) noexcept
    : CMsgSteamLearnHMACKeys_SnapshotProjectKeys() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearnHMACKeys_SnapshotProjectKeys& operator=(const CMsgSteamLearnHMACKeys_SnapshotProjectKeys& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearnHMACKeys_SnapshotProjectKeys& operator=(CMsgSteamLearnHMACKeys_SnapshotProjectKeys&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearnHMACKeys_SnapshotProjectKeys& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearnHMACKeys_SnapshotProjectKeys* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearnHMACKeys_SnapshotProjectKeys*>(
               &_CMsgSteamLearnHMACKeys_SnapshotProjectKeys_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(CMsgSteamLearnHMACKeys_SnapshotProjectKeys& a, CMsgSteamLearnHMACKeys_SnapshotProjectKeys& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearnHMACKeys_SnapshotProjectKeys* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearnHMACKeys_SnapshotProjectKeys* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearnHMACKeys_SnapshotProjectKeys* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearnHMACKeys_SnapshotProjectKeys>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearnHMACKeys_SnapshotProjectKeys& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearnHMACKeys_SnapshotProjectKeys& from) {
    CMsgSteamLearnHMACKeys_SnapshotProjectKeys::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearnHMACKeys_SnapshotProjectKeys* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearnHMACKeys.SnapshotProjectKeys";
  }
  protected:
  explicit CMsgSteamLearnHMACKeys_SnapshotProjectKeys(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 2,
    kProjectIdFieldNumber = 1,
    kPublishedVersionFieldNumber = 3,
  };
  // optional string key = 2;
  bool has_key() const;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* ptr);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // optional uint32 project_id = 1;
  bool has_project_id() const;
  void clear_project_id() ;
  ::uint32_t project_id() const;
  void set_project_id(::uint32_t value);

  private:
  ::uint32_t _internal_project_id() const;
  void _internal_set_project_id(::uint32_t value);

  public:
  // optional uint32 published_version = 3;
  bool has_published_version() const;
  void clear_published_version() ;
  ::uint32_t published_version() const;
  void set_published_version(::uint32_t value);

  private:
  ::uint32_t _internal_published_version() const;
  void _internal_set_published_version(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearnHMACKeys.SnapshotProjectKeys)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 54, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::uint32_t project_id_;
    ::uint32_t published_version_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearnHMACKeys final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearnHMACKeys) */ {
 public:
  inline CMsgSteamLearnHMACKeys() : CMsgSteamLearnHMACKeys(nullptr) {}
  ~CMsgSteamLearnHMACKeys() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearnHMACKeys(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearnHMACKeys(const CMsgSteamLearnHMACKeys& from);
  CMsgSteamLearnHMACKeys(CMsgSteamLearnHMACKeys&& from) noexcept
    : CMsgSteamLearnHMACKeys() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearnHMACKeys& operator=(const CMsgSteamLearnHMACKeys& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearnHMACKeys& operator=(CMsgSteamLearnHMACKeys&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearnHMACKeys& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearnHMACKeys* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearnHMACKeys*>(
               &_CMsgSteamLearnHMACKeys_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(CMsgSteamLearnHMACKeys& a, CMsgSteamLearnHMACKeys& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearnHMACKeys* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearnHMACKeys* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearnHMACKeys* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearnHMACKeys>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearnHMACKeys& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearnHMACKeys& from) {
    CMsgSteamLearnHMACKeys::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearnHMACKeys* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearnHMACKeys";
  }
  protected:
  explicit CMsgSteamLearnHMACKeys(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgSteamLearnHMACKeys_CacheDataKeys CacheDataKeys;
  typedef CMsgSteamLearnHMACKeys_SnapshotProjectKeys SnapshotProjectKeys;

  // accessors -------------------------------------------------------

  enum : int {
    kCacheDataKeysFieldNumber = 2,
    kSnapshotProjectKeysFieldNumber = 3,
    kRegisterDataSourceKeyFieldNumber = 1,
  };
  // repeated .CMsgSteamLearnHMACKeys.CacheDataKeys cache_data_keys = 2;
  int cache_data_keys_size() const;
  private:
  int _internal_cache_data_keys_size() const;

  public:
  void clear_cache_data_keys() ;
  ::CMsgSteamLearnHMACKeys_CacheDataKeys* mutable_cache_data_keys(int index);
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnHMACKeys_CacheDataKeys >*
      mutable_cache_data_keys();
  private:
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearnHMACKeys_CacheDataKeys>& _internal_cache_data_keys() const;
  ::google::protobuf::RepeatedPtrField<::CMsgSteamLearnHMACKeys_CacheDataKeys>* _internal_mutable_cache_data_keys();
  public:
  const ::CMsgSteamLearnHMACKeys_CacheDataKeys& cache_data_keys(int index) const;
  ::CMsgSteamLearnHMACKeys_CacheDataKeys* add_cache_data_keys();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnHMACKeys_CacheDataKeys >&
      cache_data_keys() const;
  // repeated .CMsgSteamLearnHMACKeys.SnapshotProjectKeys snapshot_project_keys = 3;
  int snapshot_project_keys_size() const;
  private:
  int _internal_snapshot_project_keys_size() const;

  public:
  void clear_snapshot_project_keys() ;
  ::CMsgSteamLearnHMACKeys_SnapshotProjectKeys* mutable_snapshot_project_keys(int index);
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnHMACKeys_SnapshotProjectKeys >*
      mutable_snapshot_project_keys();
  private:
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearnHMACKeys_SnapshotProjectKeys>& _internal_snapshot_project_keys() const;
  ::google::protobuf::RepeatedPtrField<::CMsgSteamLearnHMACKeys_SnapshotProjectKeys>* _internal_mutable_snapshot_project_keys();
  public:
  const ::CMsgSteamLearnHMACKeys_SnapshotProjectKeys& snapshot_project_keys(int index) const;
  ::CMsgSteamLearnHMACKeys_SnapshotProjectKeys* add_snapshot_project_keys();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnHMACKeys_SnapshotProjectKeys >&
      snapshot_project_keys() const;
  // optional string register_data_source_key = 1;
  bool has_register_data_source_key() const;
  void clear_register_data_source_key() ;
  const std::string& register_data_source_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_register_data_source_key(Arg_&& arg, Args_... args);
  std::string* mutable_register_data_source_key();
  PROTOBUF_NODISCARD std::string* release_register_data_source_key();
  void set_allocated_register_data_source_key(std::string* ptr);

  private:
  const std::string& _internal_register_data_source_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_register_data_source_key(
      const std::string& value);
  std::string* _internal_mutable_register_data_source_key();

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearnHMACKeys)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 2, 55, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnHMACKeys_CacheDataKeys > cache_data_keys_;
    ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnHMACKeys_SnapshotProjectKeys > snapshot_project_keys_;
    ::google::protobuf::internal::ArenaStringPtr register_data_source_key_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_GetHMACKeys_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_GetHMACKeys_Request) */ {
 public:
  inline CMsgSteamLearn_GetHMACKeys_Request() : CMsgSteamLearn_GetHMACKeys_Request(nullptr) {}
  ~CMsgSteamLearn_GetHMACKeys_Request() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_GetHMACKeys_Request(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_GetHMACKeys_Request(const CMsgSteamLearn_GetHMACKeys_Request& from);
  CMsgSteamLearn_GetHMACKeys_Request(CMsgSteamLearn_GetHMACKeys_Request&& from) noexcept
    : CMsgSteamLearn_GetHMACKeys_Request() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_GetHMACKeys_Request& operator=(const CMsgSteamLearn_GetHMACKeys_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_GetHMACKeys_Request& operator=(CMsgSteamLearn_GetHMACKeys_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_GetHMACKeys_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearn_GetHMACKeys_Request* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_GetHMACKeys_Request*>(
               &_CMsgSteamLearn_GetHMACKeys_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(CMsgSteamLearn_GetHMACKeys_Request& a, CMsgSteamLearn_GetHMACKeys_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_GetHMACKeys_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_GetHMACKeys_Request* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_GetHMACKeys_Request* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_GetHMACKeys_Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_GetHMACKeys_Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_GetHMACKeys_Request& from) {
    CMsgSteamLearn_GetHMACKeys_Request::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_GetHMACKeys_Request* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_GetHMACKeys_Request";
  }
  protected:
  explicit CMsgSteamLearn_GetHMACKeys_Request(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppidFieldNumber = 1,
  };
  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid() ;
  ::uint32_t appid() const;
  void set_appid(::uint32_t value);

  private:
  ::uint32_t _internal_appid() const;
  void _internal_set_appid(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_GetHMACKeys_Request)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t appid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_GetHMACKeys_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_GetHMACKeys_Response) */ {
 public:
  inline CMsgSteamLearn_GetHMACKeys_Response() : CMsgSteamLearn_GetHMACKeys_Response(nullptr) {}
  ~CMsgSteamLearn_GetHMACKeys_Response() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_GetHMACKeys_Response(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_GetHMACKeys_Response(const CMsgSteamLearn_GetHMACKeys_Response& from);
  CMsgSteamLearn_GetHMACKeys_Response(CMsgSteamLearn_GetHMACKeys_Response&& from) noexcept
    : CMsgSteamLearn_GetHMACKeys_Response() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_GetHMACKeys_Response& operator=(const CMsgSteamLearn_GetHMACKeys_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_GetHMACKeys_Response& operator=(CMsgSteamLearn_GetHMACKeys_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_GetHMACKeys_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearn_GetHMACKeys_Response* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_GetHMACKeys_Response*>(
               &_CMsgSteamLearn_GetHMACKeys_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(CMsgSteamLearn_GetHMACKeys_Response& a, CMsgSteamLearn_GetHMACKeys_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_GetHMACKeys_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_GetHMACKeys_Response* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_GetHMACKeys_Response* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_GetHMACKeys_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_GetHMACKeys_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_GetHMACKeys_Response& from) {
    CMsgSteamLearn_GetHMACKeys_Response::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_GetHMACKeys_Response* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_GetHMACKeys_Response";
  }
  protected:
  explicit CMsgSteamLearn_GetHMACKeys_Response(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeysFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // optional .CMsgSteamLearnHMACKeys keys = 2;
  bool has_keys() const;
  void clear_keys() ;
  const ::CMsgSteamLearnHMACKeys& keys() const;
  PROTOBUF_NODISCARD ::CMsgSteamLearnHMACKeys* release_keys();
  ::CMsgSteamLearnHMACKeys* mutable_keys();
  void set_allocated_keys(::CMsgSteamLearnHMACKeys* value);
  void unsafe_arena_set_allocated_keys(::CMsgSteamLearnHMACKeys* value);
  ::CMsgSteamLearnHMACKeys* unsafe_arena_release_keys();

  private:
  const ::CMsgSteamLearnHMACKeys& _internal_keys() const;
  ::CMsgSteamLearnHMACKeys* _internal_mutable_keys();

  public:
  // optional .ESteamLearnGetHMACKeysResult result = 1 [default = STEAMLEARN_GET_HMAC_KEYS_SUCCESS];
  bool has_result() const;
  void clear_result() ;
  ::ESteamLearnGetHMACKeysResult result() const;
  void set_result(::ESteamLearnGetHMACKeysResult value);

  private:
  ::ESteamLearnGetHMACKeysResult _internal_result() const;
  void _internal_set_result(::ESteamLearnGetHMACKeysResult value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_GetHMACKeys_Response)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 2, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::CMsgSteamLearnHMACKeys* keys_;
    int result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_Inference_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_Inference_Request) */ {
 public:
  inline CMsgSteamLearn_Inference_Request() : CMsgSteamLearn_Inference_Request(nullptr) {}
  ~CMsgSteamLearn_Inference_Request() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_Inference_Request(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_Inference_Request(const CMsgSteamLearn_Inference_Request& from);
  CMsgSteamLearn_Inference_Request(CMsgSteamLearn_Inference_Request&& from) noexcept
    : CMsgSteamLearn_Inference_Request() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_Inference_Request& operator=(const CMsgSteamLearn_Inference_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_Inference_Request& operator=(CMsgSteamLearn_Inference_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_Inference_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearn_Inference_Request* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_Inference_Request*>(
               &_CMsgSteamLearn_Inference_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(CMsgSteamLearn_Inference_Request& a, CMsgSteamLearn_Inference_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_Inference_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_Inference_Request* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_Inference_Request* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_Inference_Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_Inference_Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_Inference_Request& from) {
    CMsgSteamLearn_Inference_Request::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_Inference_Request* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_Inference_Request";
  }
  protected:
  explicit CMsgSteamLearn_Inference_Request(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAdditionalDataFieldNumber = 7,
    kAccessTokenFieldNumber = 1,
    kAccessDataFieldNumber = 2,
    kDataFieldNumber = 6,
    kProjectIdFieldNumber = 3,
    kPublishedVersionFieldNumber = 4,
    kOverrideTrainIdFieldNumber = 5,
  };
  // repeated float additional_data = 7;
  int additional_data_size() const;
  private:
  int _internal_additional_data_size() const;

  public:
  void clear_additional_data() ;
  float additional_data(int index) const;
  void set_additional_data(int index, float value);
  void add_additional_data(float value);
  const ::google::protobuf::RepeatedField<float>& additional_data() const;
  ::google::protobuf::RepeatedField<float>* mutable_additional_data();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_additional_data() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_additional_data();

  public:
  // optional string access_token = 1;
  bool has_access_token() const;
  void clear_access_token() ;
  const std::string& access_token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_access_token(Arg_&& arg, Args_... args);
  std::string* mutable_access_token();
  PROTOBUF_NODISCARD std::string* release_access_token();
  void set_allocated_access_token(std::string* ptr);

  private:
  const std::string& _internal_access_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_access_token(
      const std::string& value);
  std::string* _internal_mutable_access_token();

  public:
  // optional .CMsgSteamLearn_AccessData access_data = 2;
  bool has_access_data() const;
  void clear_access_data() ;
  const ::CMsgSteamLearn_AccessData& access_data() const;
  PROTOBUF_NODISCARD ::CMsgSteamLearn_AccessData* release_access_data();
  ::CMsgSteamLearn_AccessData* mutable_access_data();
  void set_allocated_access_data(::CMsgSteamLearn_AccessData* value);
  void unsafe_arena_set_allocated_access_data(::CMsgSteamLearn_AccessData* value);
  ::CMsgSteamLearn_AccessData* unsafe_arena_release_access_data();

  private:
  const ::CMsgSteamLearn_AccessData& _internal_access_data() const;
  ::CMsgSteamLearn_AccessData* _internal_mutable_access_data();

  public:
  // optional .CMsgSteamLearnDataList data = 6;
  bool has_data() const;
  void clear_data() ;
  const ::CMsgSteamLearnDataList& data() const;
  PROTOBUF_NODISCARD ::CMsgSteamLearnDataList* release_data();
  ::CMsgSteamLearnDataList* mutable_data();
  void set_allocated_data(::CMsgSteamLearnDataList* value);
  void unsafe_arena_set_allocated_data(::CMsgSteamLearnDataList* value);
  ::CMsgSteamLearnDataList* unsafe_arena_release_data();

  private:
  const ::CMsgSteamLearnDataList& _internal_data() const;
  ::CMsgSteamLearnDataList* _internal_mutable_data();

  public:
  // optional uint32 project_id = 3;
  bool has_project_id() const;
  void clear_project_id() ;
  ::uint32_t project_id() const;
  void set_project_id(::uint32_t value);

  private:
  ::uint32_t _internal_project_id() const;
  void _internal_set_project_id(::uint32_t value);

  public:
  // optional uint32 published_version = 4;
  bool has_published_version() const;
  void clear_published_version() ;
  ::uint32_t published_version() const;
  void set_published_version(::uint32_t value);

  private:
  ::uint32_t _internal_published_version() const;
  void _internal_set_published_version(::uint32_t value);

  public:
  // optional uint32 override_train_id = 5;
  bool has_override_train_id() const;
  void clear_override_train_id() ;
  ::uint32_t override_train_id() const;
  void set_override_train_id(::uint32_t value);

  private:
  ::uint32_t _internal_override_train_id() const;
  void _internal_set_override_train_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_Inference_Request)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7, 2, 53, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<float> additional_data_;
    ::google::protobuf::internal::ArenaStringPtr access_token_;
    ::CMsgSteamLearn_AccessData* access_data_;
    ::CMsgSteamLearnDataList* data_;
    ::uint32_t project_id_;
    ::uint32_t published_version_;
    ::uint32_t override_train_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_InferenceMetadata_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_InferenceMetadata_Request) */ {
 public:
  inline CMsgSteamLearn_InferenceMetadata_Request() : CMsgSteamLearn_InferenceMetadata_Request(nullptr) {}
  ~CMsgSteamLearn_InferenceMetadata_Request() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_InferenceMetadata_Request(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_InferenceMetadata_Request(const CMsgSteamLearn_InferenceMetadata_Request& from);
  CMsgSteamLearn_InferenceMetadata_Request(CMsgSteamLearn_InferenceMetadata_Request&& from) noexcept
    : CMsgSteamLearn_InferenceMetadata_Request() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_InferenceMetadata_Request& operator=(const CMsgSteamLearn_InferenceMetadata_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_InferenceMetadata_Request& operator=(CMsgSteamLearn_InferenceMetadata_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_InferenceMetadata_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearn_InferenceMetadata_Request* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_InferenceMetadata_Request*>(
               &_CMsgSteamLearn_InferenceMetadata_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(CMsgSteamLearn_InferenceMetadata_Request& a, CMsgSteamLearn_InferenceMetadata_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_InferenceMetadata_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_InferenceMetadata_Request* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_InferenceMetadata_Request* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_InferenceMetadata_Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_InferenceMetadata_Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_InferenceMetadata_Request& from) {
    CMsgSteamLearn_InferenceMetadata_Request::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_InferenceMetadata_Request* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_InferenceMetadata_Request";
  }
  protected:
  explicit CMsgSteamLearn_InferenceMetadata_Request(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccessTokenFieldNumber = 1,
    kAccessDataFieldNumber = 2,
    kProjectIdFieldNumber = 3,
    kPublishedVersionFieldNumber = 4,
    kOverrideTrainIdFieldNumber = 5,
  };
  // optional string access_token = 1;
  bool has_access_token() const;
  void clear_access_token() ;
  const std::string& access_token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_access_token(Arg_&& arg, Args_... args);
  std::string* mutable_access_token();
  PROTOBUF_NODISCARD std::string* release_access_token();
  void set_allocated_access_token(std::string* ptr);

  private:
  const std::string& _internal_access_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_access_token(
      const std::string& value);
  std::string* _internal_mutable_access_token();

  public:
  // optional .CMsgSteamLearn_AccessData access_data = 2;
  bool has_access_data() const;
  void clear_access_data() ;
  const ::CMsgSteamLearn_AccessData& access_data() const;
  PROTOBUF_NODISCARD ::CMsgSteamLearn_AccessData* release_access_data();
  ::CMsgSteamLearn_AccessData* mutable_access_data();
  void set_allocated_access_data(::CMsgSteamLearn_AccessData* value);
  void unsafe_arena_set_allocated_access_data(::CMsgSteamLearn_AccessData* value);
  ::CMsgSteamLearn_AccessData* unsafe_arena_release_access_data();

  private:
  const ::CMsgSteamLearn_AccessData& _internal_access_data() const;
  ::CMsgSteamLearn_AccessData* _internal_mutable_access_data();

  public:
  // optional uint32 project_id = 3;
  bool has_project_id() const;
  void clear_project_id() ;
  ::uint32_t project_id() const;
  void set_project_id(::uint32_t value);

  private:
  ::uint32_t _internal_project_id() const;
  void _internal_set_project_id(::uint32_t value);

  public:
  // optional uint32 published_version = 4;
  bool has_published_version() const;
  void clear_published_version() ;
  ::uint32_t published_version() const;
  void set_published_version(::uint32_t value);

  private:
  ::uint32_t _internal_published_version() const;
  void _internal_set_published_version(::uint32_t value);

  public:
  // optional uint32 override_train_id = 5;
  bool has_override_train_id() const;
  void clear_override_train_id() ;
  ::uint32_t override_train_id() const;
  void set_override_train_id(::uint32_t value);

  private:
  ::uint32_t _internal_override_train_id() const;
  void _internal_set_override_train_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceMetadata_Request)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 1, 61, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr access_token_;
    ::CMsgSteamLearn_AccessData* access_data_;
    ::uint32_t project_id_;
    ::uint32_t published_version_;
    ::uint32_t override_train_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_InferenceMetadataBackend_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_InferenceMetadataBackend_Request) */ {
 public:
  inline CMsgSteamLearn_InferenceMetadataBackend_Request() : CMsgSteamLearn_InferenceMetadataBackend_Request(nullptr) {}
  ~CMsgSteamLearn_InferenceMetadataBackend_Request() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_InferenceMetadataBackend_Request(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_InferenceMetadataBackend_Request(const CMsgSteamLearn_InferenceMetadataBackend_Request& from);
  CMsgSteamLearn_InferenceMetadataBackend_Request(CMsgSteamLearn_InferenceMetadataBackend_Request&& from) noexcept
    : CMsgSteamLearn_InferenceMetadataBackend_Request() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_InferenceMetadataBackend_Request& operator=(const CMsgSteamLearn_InferenceMetadataBackend_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_InferenceMetadataBackend_Request& operator=(CMsgSteamLearn_InferenceMetadataBackend_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_InferenceMetadataBackend_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearn_InferenceMetadataBackend_Request* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_InferenceMetadataBackend_Request*>(
               &_CMsgSteamLearn_InferenceMetadataBackend_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(CMsgSteamLearn_InferenceMetadataBackend_Request& a, CMsgSteamLearn_InferenceMetadataBackend_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_InferenceMetadataBackend_Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_InferenceMetadataBackend_Request* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_InferenceMetadataBackend_Request* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_InferenceMetadataBackend_Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_InferenceMetadataBackend_Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_InferenceMetadataBackend_Request& from) {
    CMsgSteamLearn_InferenceMetadataBackend_Request::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_InferenceMetadataBackend_Request* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_InferenceMetadataBackend_Request";
  }
  protected:
  explicit CMsgSteamLearn_InferenceMetadataBackend_Request(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProjectIdFieldNumber = 1,
    kFetchIdFieldNumber = 2,
  };
  // optional uint32 project_id = 1;
  bool has_project_id() const;
  void clear_project_id() ;
  ::uint32_t project_id() const;
  void set_project_id(::uint32_t value);

  private:
  ::uint32_t _internal_project_id() const;
  void _internal_set_project_id(::uint32_t value);

  public:
  // optional uint32 fetch_id = 2;
  bool has_fetch_id() const;
  void clear_fetch_id() ;
  ::uint32_t fetch_id() const;
  void set_fetch_id(::uint32_t value);

  private:
  ::uint32_t _internal_fetch_id() const;
  void _internal_set_fetch_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceMetadataBackend_Request)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t project_id_;
    ::uint32_t fetch_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_InferenceMetadata_Response_RowRange final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_InferenceMetadata_Response.RowRange) */ {
 public:
  inline CMsgSteamLearn_InferenceMetadata_Response_RowRange() : CMsgSteamLearn_InferenceMetadata_Response_RowRange(nullptr) {}
  ~CMsgSteamLearn_InferenceMetadata_Response_RowRange() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_InferenceMetadata_Response_RowRange(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_InferenceMetadata_Response_RowRange(const CMsgSteamLearn_InferenceMetadata_Response_RowRange& from);
  CMsgSteamLearn_InferenceMetadata_Response_RowRange(CMsgSteamLearn_InferenceMetadata_Response_RowRange&& from) noexcept
    : CMsgSteamLearn_InferenceMetadata_Response_RowRange() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_InferenceMetadata_Response_RowRange& operator=(const CMsgSteamLearn_InferenceMetadata_Response_RowRange& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_InferenceMetadata_Response_RowRange& operator=(CMsgSteamLearn_InferenceMetadata_Response_RowRange&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_InferenceMetadata_Response_RowRange& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearn_InferenceMetadata_Response_RowRange* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_InferenceMetadata_Response_RowRange*>(
               &_CMsgSteamLearn_InferenceMetadata_Response_RowRange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(CMsgSteamLearn_InferenceMetadata_Response_RowRange& a, CMsgSteamLearn_InferenceMetadata_Response_RowRange& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_InferenceMetadata_Response_RowRange* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_InferenceMetadata_Response_RowRange* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_InferenceMetadata_Response_RowRange* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_InferenceMetadata_Response_RowRange>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_InferenceMetadata_Response_RowRange& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_InferenceMetadata_Response_RowRange& from) {
    CMsgSteamLearn_InferenceMetadata_Response_RowRange::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_InferenceMetadata_Response_RowRange* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_InferenceMetadata_Response.RowRange";
  }
  protected:
  explicit CMsgSteamLearn_InferenceMetadata_Response_RowRange(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMinRowFieldNumber = 1,
    kMaxRowFieldNumber = 2,
  };
  // optional uint64 min_row = 1;
  bool has_min_row() const;
  void clear_min_row() ;
  ::uint64_t min_row() const;
  void set_min_row(::uint64_t value);

  private:
  ::uint64_t _internal_min_row() const;
  void _internal_set_min_row(::uint64_t value);

  public:
  // optional uint64 max_row = 2;
  bool has_max_row() const;
  void clear_max_row() ;
  ::uint64_t max_row() const;
  void set_max_row(::uint64_t value);

  private:
  ::uint64_t _internal_max_row() const;
  void _internal_set_max_row(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceMetadata_Response.RowRange)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t min_row_;
    ::uint64_t max_row_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_InferenceMetadata_Response_Range final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_InferenceMetadata_Response.Range) */ {
 public:
  inline CMsgSteamLearn_InferenceMetadata_Response_Range() : CMsgSteamLearn_InferenceMetadata_Response_Range(nullptr) {}
  ~CMsgSteamLearn_InferenceMetadata_Response_Range() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_InferenceMetadata_Response_Range(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_InferenceMetadata_Response_Range(const CMsgSteamLearn_InferenceMetadata_Response_Range& from);
  CMsgSteamLearn_InferenceMetadata_Response_Range(CMsgSteamLearn_InferenceMetadata_Response_Range&& from) noexcept
    : CMsgSteamLearn_InferenceMetadata_Response_Range() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_InferenceMetadata_Response_Range& operator=(const CMsgSteamLearn_InferenceMetadata_Response_Range& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_InferenceMetadata_Response_Range& operator=(CMsgSteamLearn_InferenceMetadata_Response_Range&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_InferenceMetadata_Response_Range& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearn_InferenceMetadata_Response_Range* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_InferenceMetadata_Response_Range*>(
               &_CMsgSteamLearn_InferenceMetadata_Response_Range_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(CMsgSteamLearn_InferenceMetadata_Response_Range& a, CMsgSteamLearn_InferenceMetadata_Response_Range& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_InferenceMetadata_Response_Range* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_InferenceMetadata_Response_Range* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_InferenceMetadata_Response_Range* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_InferenceMetadata_Response_Range>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_InferenceMetadata_Response_Range& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_InferenceMetadata_Response_Range& from) {
    CMsgSteamLearn_InferenceMetadata_Response_Range::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_InferenceMetadata_Response_Range* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_InferenceMetadata_Response.Range";
  }
  protected:
  explicit CMsgSteamLearn_InferenceMetadata_Response_Range(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataElementPathFieldNumber = 1,
    kMinValueFieldNumber = 2,
    kMaxValueFieldNumber = 3,
  };
  // optional string data_element_path = 1;
  bool has_data_element_path() const;
  void clear_data_element_path() ;
  const std::string& data_element_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data_element_path(Arg_&& arg, Args_... args);
  std::string* mutable_data_element_path();
  PROTOBUF_NODISCARD std::string* release_data_element_path();
  void set_allocated_data_element_path(std::string* ptr);

  private:
  const std::string& _internal_data_element_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data_element_path(
      const std::string& value);
  std::string* _internal_mutable_data_element_path();

  public:
  // optional float min_value = 2;
  bool has_min_value() const;
  void clear_min_value() ;
  float min_value() const;
  void set_min_value(float value);

  private:
  float _internal_min_value() const;
  void _internal_set_min_value(float value);

  public:
  // optional float max_value = 3;
  bool has_max_value() const;
  void clear_max_value() ;
  float max_value() const;
  void set_max_value(float value);

  private:
  float _internal_max_value() const;
  void _internal_set_max_value(float value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceMetadata_Response.Range)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 73, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr data_element_path_;
    float min_value_;
    float max_value_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_InferenceMetadata_Response_StdDev final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_InferenceMetadata_Response.StdDev) */ {
 public:
  inline CMsgSteamLearn_InferenceMetadata_Response_StdDev() : CMsgSteamLearn_InferenceMetadata_Response_StdDev(nullptr) {}
  ~CMsgSteamLearn_InferenceMetadata_Response_StdDev() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_InferenceMetadata_Response_StdDev(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_InferenceMetadata_Response_StdDev(const CMsgSteamLearn_InferenceMetadata_Response_StdDev& from);
  CMsgSteamLearn_InferenceMetadata_Response_StdDev(CMsgSteamLearn_InferenceMetadata_Response_StdDev&& from) noexcept
    : CMsgSteamLearn_InferenceMetadata_Response_StdDev() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_InferenceMetadata_Response_StdDev& operator=(const CMsgSteamLearn_InferenceMetadata_Response_StdDev& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_InferenceMetadata_Response_StdDev& operator=(CMsgSteamLearn_InferenceMetadata_Response_StdDev&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_InferenceMetadata_Response_StdDev& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearn_InferenceMetadata_Response_StdDev* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_InferenceMetadata_Response_StdDev*>(
               &_CMsgSteamLearn_InferenceMetadata_Response_StdDev_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(CMsgSteamLearn_InferenceMetadata_Response_StdDev& a, CMsgSteamLearn_InferenceMetadata_Response_StdDev& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_InferenceMetadata_Response_StdDev* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_InferenceMetadata_Response_StdDev* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_InferenceMetadata_Response_StdDev* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_InferenceMetadata_Response_StdDev>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_InferenceMetadata_Response_StdDev& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_InferenceMetadata_Response_StdDev& from) {
    CMsgSteamLearn_InferenceMetadata_Response_StdDev::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_InferenceMetadata_Response_StdDev* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_InferenceMetadata_Response.StdDev";
  }
  protected:
  explicit CMsgSteamLearn_InferenceMetadata_Response_StdDev(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataElementPathFieldNumber = 1,
    kMeanFieldNumber = 2,
    kStdDevFieldNumber = 3,
  };
  // optional string data_element_path = 1;
  bool has_data_element_path() const;
  void clear_data_element_path() ;
  const std::string& data_element_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data_element_path(Arg_&& arg, Args_... args);
  std::string* mutable_data_element_path();
  PROTOBUF_NODISCARD std::string* release_data_element_path();
  void set_allocated_data_element_path(std::string* ptr);

  private:
  const std::string& _internal_data_element_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data_element_path(
      const std::string& value);
  std::string* _internal_mutable_data_element_path();

  public:
  // optional float mean = 2;
  bool has_mean() const;
  void clear_mean() ;
  float mean() const;
  void set_mean(float value);

  private:
  float _internal_mean() const;
  void _internal_set_mean(float value);

  public:
  // optional float std_dev = 3;
  bool has_std_dev() const;
  void clear_std_dev() ;
  float std_dev() const;
  void set_std_dev(float value);

  private:
  float _internal_std_dev() const;
  void _internal_set_std_dev(float value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceMetadata_Response.StdDev)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 74, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr data_element_path_;
    float mean_;
    float std_dev_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry) */ {
 public:
  inline CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry() : CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry(nullptr) {}
  ~CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry(const CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry& from);
  CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry(CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry&& from) noexcept
    : CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry& operator=(const CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry& operator=(CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry*>(
               &_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry& a, CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry& from) {
    CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry";
  }
  protected:
  explicit CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
    kMappingFieldNumber = 2,
    kCountFieldNumber = 3,
  };
  // optional uint32 value = 1;
  bool has_value() const;
  void clear_value() ;
  ::uint32_t value() const;
  void set_value(::uint32_t value);

  private:
  ::uint32_t _internal_value() const;
  void _internal_set_value(::uint32_t value);

  public:
  // optional uint32 mapping = 2;
  bool has_mapping() const;
  void clear_mapping() ;
  ::uint32_t mapping() const;
  void set_mapping(::uint32_t value);

  private:
  ::uint32_t _internal_mapping() const;
  void _internal_set_mapping(::uint32_t value);

  public:
  // optional uint64 count = 3;
  bool has_count() const;
  void clear_count() ;
  ::uint64_t count() const;
  void set_count(::uint64_t value);

  private:
  ::uint64_t _internal_count() const;
  void _internal_set_count(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t value_;
    ::uint32_t mapping_;
    ::uint64_t count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry) */ {
 public:
  inline CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry() : CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry(nullptr) {}
  ~CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry(const CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry& from);
  CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry(CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry&& from) noexcept
    : CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry& operator=(const CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry& operator=(CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry*>(
               &_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry& a, CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry& from) {
    CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry";
  }
  protected:
  explicit CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kKeyFieldNumber = 1,
  };
  // optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;
  bool has_value() const;
  void clear_value() ;
  const ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry& value() const;
  PROTOBUF_NODISCARD ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* release_value();
  ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* mutable_value();
  void set_allocated_value(::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* value);
  void unsafe_arena_set_allocated_value(::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* value);
  ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* unsafe_arena_release_value();

  private:
  const ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry& _internal_value() const;
  ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* _internal_mutable_value();

  public:
  // optional uint32 key = 1;
  bool has_key() const;
  void clear_key() ;
  ::uint32_t key() const;
  void set_key(::uint32_t value);

  private:
  ::uint32_t _internal_key() const;
  void _internal_set_key(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* value_;
    ::uint32_t key_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry) */ {
 public:
  inline CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry() : CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry(nullptr) {}
  ~CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry(const CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry& from);
  CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry(CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry&& from) noexcept
    : CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry& operator=(const CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry& operator=(CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry*>(
               &_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry& a, CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry& from) {
    CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry";
  }
  protected:
  explicit CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kKeyFieldNumber = 1,
  };
  // optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;
  bool has_value() const;
  void clear_value() ;
  const ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry& value() const;
  PROTOBUF_NODISCARD ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* release_value();
  ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* mutable_value();
  void set_allocated_value(::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* value);
  void unsafe_arena_set_allocated_value(::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* value);
  ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* unsafe_arena_release_value();

  private:
  const ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry& _internal_value() const;
  ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* _internal_mutable_value();

  public:
  // optional uint32 key = 1;
  bool has_key() const;
  void clear_key() ;
  ::uint32_t key() const;
  void set_key(::uint32_t value);

  private:
  ::uint32_t _internal_key() const;
  void _internal_set_key(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* value_;
    ::uint32_t key_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_InferenceMetadata_Response_CompactTable final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_InferenceMetadata_Response.CompactTable) */ {
 public:
  inline CMsgSteamLearn_InferenceMetadata_Response_CompactTable() : CMsgSteamLearn_InferenceMetadata_Response_CompactTable(nullptr) {}
  ~CMsgSteamLearn_InferenceMetadata_Response_CompactTable() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_InferenceMetadata_Response_CompactTable(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_InferenceMetadata_Response_CompactTable(const CMsgSteamLearn_InferenceMetadata_Response_CompactTable& from);
  CMsgSteamLearn_InferenceMetadata_Response_CompactTable(CMsgSteamLearn_InferenceMetadata_Response_CompactTable&& from) noexcept
    : CMsgSteamLearn_InferenceMetadata_Response_CompactTable() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_InferenceMetadata_Response_CompactTable& operator=(const CMsgSteamLearn_InferenceMetadata_Response_CompactTable& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_InferenceMetadata_Response_CompactTable& operator=(CMsgSteamLearn_InferenceMetadata_Response_CompactTable&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_InferenceMetadata_Response_CompactTable& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearn_InferenceMetadata_Response_CompactTable* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_InferenceMetadata_Response_CompactTable*>(
               &_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(CMsgSteamLearn_InferenceMetadata_Response_CompactTable& a, CMsgSteamLearn_InferenceMetadata_Response_CompactTable& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_InferenceMetadata_Response_CompactTable* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_InferenceMetadata_Response_CompactTable* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_InferenceMetadata_Response_CompactTable* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_InferenceMetadata_Response_CompactTable>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_InferenceMetadata_Response_CompactTable& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_InferenceMetadata_Response_CompactTable& from) {
    CMsgSteamLearn_InferenceMetadata_Response_CompactTable::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_InferenceMetadata_Response_CompactTable* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_InferenceMetadata_Response.CompactTable";
  }
  protected:
  explicit CMsgSteamLearn_InferenceMetadata_Response_CompactTable(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry Entry;
  typedef CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry MapValuesEntry;
  typedef CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry MapMappingsEntry;

  // accessors -------------------------------------------------------

  enum : int {
    kMapValuesFieldNumber = 2,
    kMapMappingsFieldNumber = 3,
    kNameFieldNumber = 1,
  };
  // repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;
  int map_values_size() const;
  private:
  int _internal_map_values_size() const;

  public:
  void clear_map_values() ;
  ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry* mutable_map_values(int index);
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry >*
      mutable_map_values();
  private:
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry>& _internal_map_values() const;
  ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry>* _internal_mutable_map_values();
  public:
  const ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry& map_values(int index) const;
  ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry* add_map_values();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry >&
      map_values() const;
  // repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;
  int map_mappings_size() const;
  private:
  int _internal_map_mappings_size() const;

  public:
  void clear_map_mappings() ;
  ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry* mutable_map_mappings(int index);
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry >*
      mutable_map_mappings();
  private:
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry>& _internal_map_mappings() const;
  ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry>* _internal_mutable_map_mappings();
  public:
  const ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry& map_mappings(int index) const;
  ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry* add_map_mappings();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry >&
      map_mappings() const;
  // optional string name = 1;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceMetadata_Response.CompactTable)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 2, 67, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry > map_values_;
    ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry > map_mappings_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster) */ {
 public:
  inline CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster() : CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster(nullptr) {}
  ~CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster(const CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster& from);
  CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster(CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster&& from) noexcept
    : CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster& operator=(const CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster& operator=(CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster*>(
               &_CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster& a, CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster& from) {
    CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster";
  }
  protected:
  explicit CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kRadiusFieldNumber = 3,
    kRadius75PctFieldNumber = 4,
    kRadius50PctFieldNumber = 5,
    kRadius25PctFieldNumber = 6,
  };
  // optional float x = 1;
  bool has_x() const;
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // optional float y = 2;
  bool has_y() const;
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // optional float radius = 3;
  bool has_radius() const;
  void clear_radius() ;
  float radius() const;
  void set_radius(float value);

  private:
  float _internal_radius() const;
  void _internal_set_radius(float value);

  public:
  // optional float radius_75pct = 4;
  bool has_radius_75pct() const;
  void clear_radius_75pct() ;
  float radius_75pct() const;
  void set_radius_75pct(float value);

  private:
  float _internal_radius_75pct() const;
  void _internal_set_radius_75pct(float value);

  public:
  // optional float radius_50pct = 5;
  bool has_radius_50pct() const;
  void clear_radius_50pct() ;
  float radius_50pct() const;
  void set_radius_50pct(float value);

  private:
  float _internal_radius_50pct() const;
  void _internal_set_radius_50pct(float value);

  public:
  // optional float radius_25pct = 6;
  bool has_radius_25pct() const;
  void clear_radius_25pct() ;
  float radius_25pct() const;
  void set_radius_25pct(float value);

  private:
  float _internal_radius_25pct() const;
  void _internal_set_radius_25pct(float value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    float x_;
    float y_;
    float radius_;
    float radius_75pct_;
    float radius_50pct_;
    float radius_25pct_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_InferenceMetadata_Response_KMeans final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_InferenceMetadata_Response.KMeans) */ {
 public:
  inline CMsgSteamLearn_InferenceMetadata_Response_KMeans() : CMsgSteamLearn_InferenceMetadata_Response_KMeans(nullptr) {}
  ~CMsgSteamLearn_InferenceMetadata_Response_KMeans() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_InferenceMetadata_Response_KMeans(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_InferenceMetadata_Response_KMeans(const CMsgSteamLearn_InferenceMetadata_Response_KMeans& from);
  CMsgSteamLearn_InferenceMetadata_Response_KMeans(CMsgSteamLearn_InferenceMetadata_Response_KMeans&& from) noexcept
    : CMsgSteamLearn_InferenceMetadata_Response_KMeans() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_InferenceMetadata_Response_KMeans& operator=(const CMsgSteamLearn_InferenceMetadata_Response_KMeans& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_InferenceMetadata_Response_KMeans& operator=(CMsgSteamLearn_InferenceMetadata_Response_KMeans&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_InferenceMetadata_Response_KMeans& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearn_InferenceMetadata_Response_KMeans* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_InferenceMetadata_Response_KMeans*>(
               &_CMsgSteamLearn_InferenceMetadata_Response_KMeans_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(CMsgSteamLearn_InferenceMetadata_Response_KMeans& a, CMsgSteamLearn_InferenceMetadata_Response_KMeans& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_InferenceMetadata_Response_KMeans* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_InferenceMetadata_Response_KMeans* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_InferenceMetadata_Response_KMeans* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_InferenceMetadata_Response_KMeans>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_InferenceMetadata_Response_KMeans& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_InferenceMetadata_Response_KMeans& from) {
    CMsgSteamLearn_InferenceMetadata_Response_KMeans::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_InferenceMetadata_Response_KMeans* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_InferenceMetadata_Response.KMeans";
  }
  protected:
  explicit CMsgSteamLearn_InferenceMetadata_Response_KMeans(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster Cluster;

  // accessors -------------------------------------------------------

  enum : int {
    kClustersFieldNumber = 2,
    kNameFieldNumber = 1,
  };
  // repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;
  int clusters_size() const;
  private:
  int _internal_clusters_size() const;

  public:
  void clear_clusters() ;
  ::CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster* mutable_clusters(int index);
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster >*
      mutable_clusters();
  private:
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster>& _internal_clusters() const;
  ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster>* _internal_mutable_clusters();
  public:
  const ::CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster& clusters(int index) const;
  ::CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster* add_clusters();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster >&
      clusters() const;
  // optional string name = 1;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceMetadata_Response.KMeans)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 61, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster > clusters_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram) */ {
 public:
  inline CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram() : CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram(nullptr) {}
  ~CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram(const CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram& from);
  CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram(CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram&& from) noexcept
    : CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram& operator=(const CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram& operator=(CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram*>(
               &_CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram& a, CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram& from) {
    CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram";
  }
  protected:
  explicit CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBucketCountsFieldNumber = 4,
    kMinValueFieldNumber = 1,
    kMaxValueFieldNumber = 2,
    kNumBucketsFieldNumber = 3,
  };
  // repeated uint32 bucket_counts = 4;
  int bucket_counts_size() const;
  private:
  int _internal_bucket_counts_size() const;

  public:
  void clear_bucket_counts() ;
  ::uint32_t bucket_counts(int index) const;
  void set_bucket_counts(int index, ::uint32_t value);
  void add_bucket_counts(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& bucket_counts() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_bucket_counts();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_bucket_counts() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_bucket_counts();

  public:
  // optional float min_value = 1;
  bool has_min_value() const;
  void clear_min_value() ;
  float min_value() const;
  void set_min_value(float value);

  private:
  float _internal_min_value() const;
  void _internal_set_min_value(float value);

  public:
  // optional float max_value = 2;
  bool has_max_value() const;
  void clear_max_value() ;
  float max_value() const;
  void set_max_value(float value);

  private:
  float _internal_max_value() const;
  void _internal_set_max_value(float value);

  public:
  // optional uint32 num_buckets = 3;
  bool has_num_buckets() const;
  void clear_num_buckets() ;
  ::uint32_t num_buckets() const;
  void set_num_buckets(::uint32_t value);

  private:
  ::uint32_t _internal_num_buckets() const;
  void _internal_set_num_buckets(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::uint32_t> bucket_counts_;
    float min_value_;
    float max_value_;
    ::uint32_t num_buckets_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_InferenceMetadata_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_InferenceMetadata_Response) */ {
 public:
  inline CMsgSteamLearn_InferenceMetadata_Response() : CMsgSteamLearn_InferenceMetadata_Response(nullptr) {}
  ~CMsgSteamLearn_InferenceMetadata_Response() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_InferenceMetadata_Response(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_InferenceMetadata_Response(const CMsgSteamLearn_InferenceMetadata_Response& from);
  CMsgSteamLearn_InferenceMetadata_Response(CMsgSteamLearn_InferenceMetadata_Response&& from) noexcept
    : CMsgSteamLearn_InferenceMetadata_Response() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_InferenceMetadata_Response& operator=(const CMsgSteamLearn_InferenceMetadata_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_InferenceMetadata_Response& operator=(CMsgSteamLearn_InferenceMetadata_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_InferenceMetadata_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearn_InferenceMetadata_Response* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_InferenceMetadata_Response*>(
               &_CMsgSteamLearn_InferenceMetadata_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(CMsgSteamLearn_InferenceMetadata_Response& a, CMsgSteamLearn_InferenceMetadata_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_InferenceMetadata_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_InferenceMetadata_Response* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_InferenceMetadata_Response* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_InferenceMetadata_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_InferenceMetadata_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_InferenceMetadata_Response& from) {
    CMsgSteamLearn_InferenceMetadata_Response::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_InferenceMetadata_Response* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_InferenceMetadata_Response";
  }
  protected:
  explicit CMsgSteamLearn_InferenceMetadata_Response(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgSteamLearn_InferenceMetadata_Response_RowRange RowRange;
  typedef CMsgSteamLearn_InferenceMetadata_Response_Range Range;
  typedef CMsgSteamLearn_InferenceMetadata_Response_StdDev StdDev;
  typedef CMsgSteamLearn_InferenceMetadata_Response_CompactTable CompactTable;
  typedef CMsgSteamLearn_InferenceMetadata_Response_KMeans KMeans;
  typedef CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram SnapshotHistogram;

  // accessors -------------------------------------------------------

  enum : int {
    kRangesFieldNumber = 3,
    kStdDevsFieldNumber = 4,
    kCompactTablesFieldNumber = 5,
    kKmeansFieldNumber = 6,
    kRowRangeFieldNumber = 2,
    kSnapshotHistogramFieldNumber = 7,
    kInferenceMetadataResultFieldNumber = 1,
  };
  // repeated .CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;
  int ranges_size() const;
  private:
  int _internal_ranges_size() const;

  public:
  void clear_ranges() ;
  ::CMsgSteamLearn_InferenceMetadata_Response_Range* mutable_ranges(int index);
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_Range >*
      mutable_ranges();
  private:
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceMetadata_Response_Range>& _internal_ranges() const;
  ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceMetadata_Response_Range>* _internal_mutable_ranges();
  public:
  const ::CMsgSteamLearn_InferenceMetadata_Response_Range& ranges(int index) const;
  ::CMsgSteamLearn_InferenceMetadata_Response_Range* add_ranges();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_Range >&
      ranges() const;
  // repeated .CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;
  int std_devs_size() const;
  private:
  int _internal_std_devs_size() const;

  public:
  void clear_std_devs() ;
  ::CMsgSteamLearn_InferenceMetadata_Response_StdDev* mutable_std_devs(int index);
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_StdDev >*
      mutable_std_devs();
  private:
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceMetadata_Response_StdDev>& _internal_std_devs() const;
  ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceMetadata_Response_StdDev>* _internal_mutable_std_devs();
  public:
  const ::CMsgSteamLearn_InferenceMetadata_Response_StdDev& std_devs(int index) const;
  ::CMsgSteamLearn_InferenceMetadata_Response_StdDev* add_std_devs();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_StdDev >&
      std_devs() const;
  // repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;
  int compact_tables_size() const;
  private:
  int _internal_compact_tables_size() const;

  public:
  void clear_compact_tables() ;
  ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable* mutable_compact_tables(int index);
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable >*
      mutable_compact_tables();
  private:
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceMetadata_Response_CompactTable>& _internal_compact_tables() const;
  ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceMetadata_Response_CompactTable>* _internal_mutable_compact_tables();
  public:
  const ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable& compact_tables(int index) const;
  ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable* add_compact_tables();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable >&
      compact_tables() const;
  // repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;
  int kmeans_size() const;
  private:
  int _internal_kmeans_size() const;

  public:
  void clear_kmeans() ;
  ::CMsgSteamLearn_InferenceMetadata_Response_KMeans* mutable_kmeans(int index);
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_KMeans >*
      mutable_kmeans();
  private:
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceMetadata_Response_KMeans>& _internal_kmeans() const;
  ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceMetadata_Response_KMeans>* _internal_mutable_kmeans();
  public:
  const ::CMsgSteamLearn_InferenceMetadata_Response_KMeans& kmeans(int index) const;
  ::CMsgSteamLearn_InferenceMetadata_Response_KMeans* add_kmeans();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_KMeans >&
      kmeans() const;
  // optional .CMsgSteamLearn_InferenceMetadata_Response.RowRange row_range = 2;
  bool has_row_range() const;
  void clear_row_range() ;
  const ::CMsgSteamLearn_InferenceMetadata_Response_RowRange& row_range() const;
  PROTOBUF_NODISCARD ::CMsgSteamLearn_InferenceMetadata_Response_RowRange* release_row_range();
  ::CMsgSteamLearn_InferenceMetadata_Response_RowRange* mutable_row_range();
  void set_allocated_row_range(::CMsgSteamLearn_InferenceMetadata_Response_RowRange* value);
  void unsafe_arena_set_allocated_row_range(::CMsgSteamLearn_InferenceMetadata_Response_RowRange* value);
  ::CMsgSteamLearn_InferenceMetadata_Response_RowRange* unsafe_arena_release_row_range();

  private:
  const ::CMsgSteamLearn_InferenceMetadata_Response_RowRange& _internal_row_range() const;
  ::CMsgSteamLearn_InferenceMetadata_Response_RowRange* _internal_mutable_row_range();

  public:
  // optional .CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram snapshot_histogram = 7;
  bool has_snapshot_histogram() const;
  void clear_snapshot_histogram() ;
  const ::CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram& snapshot_histogram() const;
  PROTOBUF_NODISCARD ::CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram* release_snapshot_histogram();
  ::CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram* mutable_snapshot_histogram();
  void set_allocated_snapshot_histogram(::CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram* value);
  void unsafe_arena_set_allocated_snapshot_histogram(::CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram* value);
  ::CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram* unsafe_arena_release_snapshot_histogram();

  private:
  const ::CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram& _internal_snapshot_histogram() const;
  ::CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram* _internal_mutable_snapshot_histogram();

  public:
  // optional .ESteamLearnInferenceMetadataResult inference_metadata_result = 1 [default = STEAMLEARN_INFERENCE_METADATA_ERROR];
  bool has_inference_metadata_result() const;
  void clear_inference_metadata_result() ;
  ::ESteamLearnInferenceMetadataResult inference_metadata_result() const;
  void set_inference_metadata_result(::ESteamLearnInferenceMetadataResult value);

  private:
  ::ESteamLearnInferenceMetadataResult _internal_inference_metadata_result() const;
  void _internal_set_inference_metadata_result(::ESteamLearnInferenceMetadataResult value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceMetadata_Response)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7, 7, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_Range > ranges_;
    ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_StdDev > std_devs_;
    ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable > compact_tables_;
    ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_KMeans > kmeans_;
    ::CMsgSteamLearn_InferenceMetadata_Response_RowRange* row_range_;
    ::CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram* snapshot_histogram_;
    int inference_metadata_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput) */ {
 public:
  inline CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput() : CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput(nullptr) {}
  ~CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput(const CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput& from);
  CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput(CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput&& from) noexcept
    : CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput& operator=(const CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput& operator=(CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput*>(
               &_CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput& a, CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput& from) {
    CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput";
  }
  protected:
  explicit CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // optional float value = 1;
  bool has_value() const;
  void clear_value() ;
  float value() const;
  void set_value(float value);

  private:
  float _internal_value() const;
  void _internal_set_value(float value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    float value_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput) */ {
 public:
  inline CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput() : CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput(nullptr) {}
  ~CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput(const CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput& from);
  CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput(CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput&& from) noexcept
    : CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput& operator=(const CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput& operator=(CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput*>(
               &_CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput& a, CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput& from) {
    CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput";
  }
  protected:
  explicit CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWeightFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // repeated float weight = 1;
  int weight_size() const;
  private:
  int _internal_weight_size() const;

  public:
  void clear_weight() ;
  float weight(int index) const;
  void set_weight(int index, float value);
  void add_weight(float value);
  const ::google::protobuf::RepeatedField<float>& weight() const;
  ::google::protobuf::RepeatedField<float>* mutable_weight();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_weight() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_weight();

  public:
  // repeated float value = 2;
  int value_size() const;
  private:
  int _internal_value_size() const;

  public:
  void clear_value() ;
  float value(int index) const;
  void set_value(int index, float value);
  void add_value(float value);
  const ::google::protobuf::RepeatedField<float>& value() const;
  ::google::protobuf::RepeatedField<float>* mutable_value();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_value() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> weight_;
    ::google::protobuf::RepeatedField<float> value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput) */ {
 public:
  inline CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput() : CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput(nullptr) {}
  ~CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput(const CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput& from);
  CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput(CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput&& from) noexcept
    : CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput& operator=(const CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput& operator=(CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput*>(
               &_CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput& a, CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput& from) {
    CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput";
  }
  protected:
  explicit CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWeightFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // repeated float weight = 1;
  int weight_size() const;
  private:
  int _internal_weight_size() const;

  public:
  void clear_weight() ;
  float weight(int index) const;
  void set_weight(int index, float value);
  void add_weight(float value);
  const ::google::protobuf::RepeatedField<float>& weight() const;
  ::google::protobuf::RepeatedField<float>* mutable_weight();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_weight() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_weight();

  public:
  // repeated float value = 2;
  int value_size() const;
  private:
  int _internal_value_size() const;

  public:
  void clear_value() ;
  float value(int index) const;
  void set_value(int index, float value);
  void add_value(float value);
  const ::google::protobuf::RepeatedField<float>& value() const;
  ::google::protobuf::RepeatedField<float>* mutable_value();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_value() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> weight_;
    ::google::protobuf::RepeatedField<float> value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_InferenceBackend_Response_Output final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_InferenceBackend_Response.Output) */ {
 public:
  inline CMsgSteamLearn_InferenceBackend_Response_Output() : CMsgSteamLearn_InferenceBackend_Response_Output(nullptr) {}
  ~CMsgSteamLearn_InferenceBackend_Response_Output() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_InferenceBackend_Response_Output(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_InferenceBackend_Response_Output(const CMsgSteamLearn_InferenceBackend_Response_Output& from);
  CMsgSteamLearn_InferenceBackend_Response_Output(CMsgSteamLearn_InferenceBackend_Response_Output&& from) noexcept
    : CMsgSteamLearn_InferenceBackend_Response_Output() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_InferenceBackend_Response_Output& operator=(const CMsgSteamLearn_InferenceBackend_Response_Output& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_InferenceBackend_Response_Output& operator=(CMsgSteamLearn_InferenceBackend_Response_Output&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_InferenceBackend_Response_Output& default_instance() {
    return *internal_default_instance();
  }
  enum ResponseTypeCase {
    kBinaryCrossentropy = 1,
    kCategoricalCrossentropy = 2,
    kMultiBinaryCrossentropy = 3,
    RESPONSETYPE_NOT_SET = 0,
  };

  static inline const CMsgSteamLearn_InferenceBackend_Response_Output* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_InferenceBackend_Response_Output*>(
               &_CMsgSteamLearn_InferenceBackend_Response_Output_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(CMsgSteamLearn_InferenceBackend_Response_Output& a, CMsgSteamLearn_InferenceBackend_Response_Output& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_InferenceBackend_Response_Output* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_InferenceBackend_Response_Output* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_InferenceBackend_Response_Output* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_InferenceBackend_Response_Output>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_InferenceBackend_Response_Output& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_InferenceBackend_Response_Output& from) {
    CMsgSteamLearn_InferenceBackend_Response_Output::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_InferenceBackend_Response_Output* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_InferenceBackend_Response.Output";
  }
  protected:
  explicit CMsgSteamLearn_InferenceBackend_Response_Output(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBinaryCrossentropyFieldNumber = 1,
    kCategoricalCrossentropyFieldNumber = 2,
    kMultiBinaryCrossentropyFieldNumber = 3,
  };
  // .CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput binary_crossentropy = 1;
  bool has_binary_crossentropy() const;
  private:
  bool _internal_has_binary_crossentropy() const;

  public:
  void clear_binary_crossentropy() ;
  const ::CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput& binary_crossentropy() const;
  PROTOBUF_NODISCARD ::CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput* release_binary_crossentropy();
  ::CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput* mutable_binary_crossentropy();
  void set_allocated_binary_crossentropy(::CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput* value);
  void unsafe_arena_set_allocated_binary_crossentropy(::CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput* value);
  ::CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput* unsafe_arena_release_binary_crossentropy();

  private:
  const ::CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput& _internal_binary_crossentropy() const;
  ::CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput* _internal_mutable_binary_crossentropy();

  public:
  // .CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput categorical_crossentropy = 2;
  bool has_categorical_crossentropy() const;
  private:
  bool _internal_has_categorical_crossentropy() const;

  public:
  void clear_categorical_crossentropy() ;
  const ::CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput& categorical_crossentropy() const;
  PROTOBUF_NODISCARD ::CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput* release_categorical_crossentropy();
  ::CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput* mutable_categorical_crossentropy();
  void set_allocated_categorical_crossentropy(::CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput* value);
  void unsafe_arena_set_allocated_categorical_crossentropy(::CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput* value);
  ::CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput* unsafe_arena_release_categorical_crossentropy();

  private:
  const ::CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput& _internal_categorical_crossentropy() const;
  ::CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput* _internal_mutable_categorical_crossentropy();

  public:
  // .CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput multi_binary_crossentropy = 3;
  bool has_multi_binary_crossentropy() const;
  private:
  bool _internal_has_multi_binary_crossentropy() const;

  public:
  void clear_multi_binary_crossentropy() ;
  const ::CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput& multi_binary_crossentropy() const;
  PROTOBUF_NODISCARD ::CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput* release_multi_binary_crossentropy();
  ::CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput* mutable_multi_binary_crossentropy();
  void set_allocated_multi_binary_crossentropy(::CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput* value);
  void unsafe_arena_set_allocated_multi_binary_crossentropy(::CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput* value);
  ::CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput* unsafe_arena_release_multi_binary_crossentropy();

  private:
  const ::CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput& _internal_multi_binary_crossentropy() const;
  ::CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput* _internal_mutable_multi_binary_crossentropy();

  public:
  void clear_ResponseType();
  ResponseTypeCase ResponseType_case() const;
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceBackend_Response.Output)
 private:
  class _Internal;
  void set_has_binary_crossentropy();
  void set_has_categorical_crossentropy();
  void set_has_multi_binary_crossentropy();

  inline bool has_ResponseType() const;
  inline void clear_has_ResponseType();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 3, 3, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    union ResponseTypeUnion {
      constexpr ResponseTypeUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput* binary_crossentropy_;
      ::CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput* categorical_crossentropy_;
      ::CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput* multi_binary_crossentropy_;
    } ResponseType_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_InferenceBackend_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_InferenceBackend_Response) */ {
 public:
  inline CMsgSteamLearn_InferenceBackend_Response() : CMsgSteamLearn_InferenceBackend_Response(nullptr) {}
  ~CMsgSteamLearn_InferenceBackend_Response() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_InferenceBackend_Response(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_InferenceBackend_Response(const CMsgSteamLearn_InferenceBackend_Response& from);
  CMsgSteamLearn_InferenceBackend_Response(CMsgSteamLearn_InferenceBackend_Response&& from) noexcept
    : CMsgSteamLearn_InferenceBackend_Response() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_InferenceBackend_Response& operator=(const CMsgSteamLearn_InferenceBackend_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_InferenceBackend_Response& operator=(CMsgSteamLearn_InferenceBackend_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_InferenceBackend_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearn_InferenceBackend_Response* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_InferenceBackend_Response*>(
               &_CMsgSteamLearn_InferenceBackend_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(CMsgSteamLearn_InferenceBackend_Response& a, CMsgSteamLearn_InferenceBackend_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_InferenceBackend_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_InferenceBackend_Response* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_InferenceBackend_Response* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_InferenceBackend_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_InferenceBackend_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_InferenceBackend_Response& from) {
    CMsgSteamLearn_InferenceBackend_Response::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_InferenceBackend_Response* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_InferenceBackend_Response";
  }
  protected:
  explicit CMsgSteamLearn_InferenceBackend_Response(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput BinaryCrossEntropyOutput;
  typedef CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput MutliBinaryCrossEntropyOutput;
  typedef CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput CategoricalCrossEntropyOutput;
  typedef CMsgSteamLearn_InferenceBackend_Response_Output Output;

  // accessors -------------------------------------------------------

  enum : int {
    kOutputsFieldNumber = 1,
  };
  // repeated .CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;
  int outputs_size() const;
  private:
  int _internal_outputs_size() const;

  public:
  void clear_outputs() ;
  ::CMsgSteamLearn_InferenceBackend_Response_Output* mutable_outputs(int index);
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceBackend_Response_Output >*
      mutable_outputs();
  private:
  const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceBackend_Response_Output>& _internal_outputs() const;
  ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceBackend_Response_Output>* _internal_mutable_outputs();
  public:
  const ::CMsgSteamLearn_InferenceBackend_Response_Output& outputs(int index) const;
  ::CMsgSteamLearn_InferenceBackend_Response_Output* add_outputs();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceBackend_Response_Output >&
      outputs() const;
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceBackend_Response)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceBackend_Response_Output > outputs_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};// -------------------------------------------------------------------

class CMsgSteamLearn_Inference_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamLearn_Inference_Response) */ {
 public:
  inline CMsgSteamLearn_Inference_Response() : CMsgSteamLearn_Inference_Response(nullptr) {}
  ~CMsgSteamLearn_Inference_Response() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgSteamLearn_Inference_Response(::google::protobuf::internal::ConstantInitialized);

  CMsgSteamLearn_Inference_Response(const CMsgSteamLearn_Inference_Response& from);
  CMsgSteamLearn_Inference_Response(CMsgSteamLearn_Inference_Response&& from) noexcept
    : CMsgSteamLearn_Inference_Response() {
    *this = ::std::move(from);
  }

  inline CMsgSteamLearn_Inference_Response& operator=(const CMsgSteamLearn_Inference_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSteamLearn_Inference_Response& operator=(CMsgSteamLearn_Inference_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgSteamLearn_Inference_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSteamLearn_Inference_Response* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamLearn_Inference_Response*>(
               &_CMsgSteamLearn_Inference_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(CMsgSteamLearn_Inference_Response& a, CMsgSteamLearn_Inference_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSteamLearn_Inference_Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSteamLearn_Inference_Response* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgSteamLearn_Inference_Response* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgSteamLearn_Inference_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgSteamLearn_Inference_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CMsgSteamLearn_Inference_Response& from) {
    CMsgSteamLearn_Inference_Response::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamLearn_Inference_Response* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CMsgSteamLearn_Inference_Response";
  }
  protected:
  explicit CMsgSteamLearn_Inference_Response(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBackendResponseFieldNumber = 2,
    kInferenceResultFieldNumber = 1,
  };
  // optional .CMsgSteamLearn_InferenceBackend_Response backend_response = 2;
  bool has_backend_response() const;
  void clear_backend_response() ;
  const ::CMsgSteamLearn_InferenceBackend_Response& backend_response() const;
  PROTOBUF_NODISCARD ::CMsgSteamLearn_InferenceBackend_Response* release_backend_response();
  ::CMsgSteamLearn_InferenceBackend_Response* mutable_backend_response();
  void set_allocated_backend_response(::CMsgSteamLearn_InferenceBackend_Response* value);
  void unsafe_arena_set_allocated_backend_response(::CMsgSteamLearn_InferenceBackend_Response* value);
  ::CMsgSteamLearn_InferenceBackend_Response* unsafe_arena_release_backend_response();

  private:
  const ::CMsgSteamLearn_InferenceBackend_Response& _internal_backend_response() const;
  ::CMsgSteamLearn_InferenceBackend_Response* _internal_mutable_backend_response();

  public:
  // optional .ESteamLearnInferenceResult inference_result = 1 [default = STEAMLEARN_INFERENCE_ERROR];
  bool has_inference_result() const;
  void clear_inference_result() ;
  ::ESteamLearnInferenceResult inference_result() const;
  void set_inference_result(::ESteamLearnInferenceResult value);

  private:
  ::ESteamLearnInferenceResult _internal_inference_result() const;
  void _internal_set_inference_result(::ESteamLearnInferenceResult value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgSteamLearn_Inference_Response)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 2, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::CMsgSteamLearn_InferenceBackend_Response* backend_response_;
    int inference_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_5fsteamlearn_2esteamworkssdk_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CMsgSteamLearnDataSourceDescObject

// repeated .CMsgSteamLearnDataSourceDescElement elements = 1;
inline int CMsgSteamLearnDataSourceDescObject::_internal_elements_size() const {
  return _internal_elements().size();
}
inline int CMsgSteamLearnDataSourceDescObject::elements_size() const {
  return _internal_elements_size();
}
inline void CMsgSteamLearnDataSourceDescObject::clear_elements() {
  _internal_mutable_elements()->Clear();
}
inline ::CMsgSteamLearnDataSourceDescElement* CMsgSteamLearnDataSourceDescObject::mutable_elements(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearnDataSourceDescObject.elements)
  return _internal_mutable_elements()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnDataSourceDescElement >*
CMsgSteamLearnDataSourceDescObject::mutable_elements() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearnDataSourceDescObject.elements)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_elements();
}
inline const ::CMsgSteamLearnDataSourceDescElement& CMsgSteamLearnDataSourceDescObject::elements(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnDataSourceDescObject.elements)
    return _internal_elements().Get(index);
}
inline ::CMsgSteamLearnDataSourceDescElement* CMsgSteamLearnDataSourceDescObject::add_elements() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::CMsgSteamLearnDataSourceDescElement* _add = _internal_mutable_elements()->Add();
  // @@protoc_insertion_point(field_add:CMsgSteamLearnDataSourceDescObject.elements)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnDataSourceDescElement >&
CMsgSteamLearnDataSourceDescObject::elements() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearnDataSourceDescObject.elements)
  return _internal_elements();
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearnDataSourceDescElement>&
CMsgSteamLearnDataSourceDescObject::_internal_elements() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.elements_;
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamLearnDataSourceDescElement>*
CMsgSteamLearnDataSourceDescObject::_internal_mutable_elements() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.elements_;
}

// -------------------------------------------------------------------

// CMsgSteamLearnDataSourceDescElement

// optional string name = 1;
inline bool CMsgSteamLearnDataSourceDescElement::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamLearnDataSourceDescElement::clear_name() {
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamLearnDataSourceDescElement::name() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnDataSourceDescElement.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CMsgSteamLearnDataSourceDescElement::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgSteamLearnDataSourceDescElement.name)
}
inline std::string* CMsgSteamLearnDataSourceDescElement::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearnDataSourceDescElement.name)
  return _s;
}
inline const std::string& CMsgSteamLearnDataSourceDescElement::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void CMsgSteamLearnDataSourceDescElement::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgSteamLearnDataSourceDescElement::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* CMsgSteamLearnDataSourceDescElement::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearnDataSourceDescElement.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CMsgSteamLearnDataSourceDescElement::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearnDataSourceDescElement.name)
}

// optional .ESteamLearnDataType data_type = 2 [default = STEAMLEARN_DATATYPE_INVALID];
inline bool CMsgSteamLearnDataSourceDescElement::has_data_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamLearnDataSourceDescElement::clear_data_type() {
  _impl_.data_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::ESteamLearnDataType CMsgSteamLearnDataSourceDescElement::data_type() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnDataSourceDescElement.data_type)
  return _internal_data_type();
}
inline void CMsgSteamLearnDataSourceDescElement::set_data_type(::ESteamLearnDataType value) {
  _internal_set_data_type(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearnDataSourceDescElement.data_type)
}
inline ::ESteamLearnDataType CMsgSteamLearnDataSourceDescElement::_internal_data_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::ESteamLearnDataType>(_impl_.data_type_);
}
inline void CMsgSteamLearnDataSourceDescElement::_internal_set_data_type(::ESteamLearnDataType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::ESteamLearnDataType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.data_type_ = value;
}

// optional .CMsgSteamLearnDataSourceDescObject object = 3;
inline bool CMsgSteamLearnDataSourceDescElement::has_object() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.object_ != nullptr);
  return value;
}
inline void CMsgSteamLearnDataSourceDescElement::clear_object() {
  if (_impl_.object_ != nullptr) _impl_.object_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::CMsgSteamLearnDataSourceDescObject& CMsgSteamLearnDataSourceDescElement::_internal_object() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::CMsgSteamLearnDataSourceDescObject* p = _impl_.object_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamLearnDataSourceDescObject&>(::_CMsgSteamLearnDataSourceDescObject_default_instance_);
}
inline const ::CMsgSteamLearnDataSourceDescObject& CMsgSteamLearnDataSourceDescElement::object() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnDataSourceDescElement.object)
  return _internal_object();
}
inline void CMsgSteamLearnDataSourceDescElement::unsafe_arena_set_allocated_object(::CMsgSteamLearnDataSourceDescObject* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.object_);
  }
  _impl_.object_ = reinterpret_cast<::CMsgSteamLearnDataSourceDescObject*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamLearnDataSourceDescElement.object)
}
inline ::CMsgSteamLearnDataSourceDescObject* CMsgSteamLearnDataSourceDescElement::release_object() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamLearnDataSourceDescObject* released = _impl_.object_;
  _impl_.object_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgSteamLearnDataSourceDescObject* CMsgSteamLearnDataSourceDescElement::unsafe_arena_release_object() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearnDataSourceDescElement.object)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamLearnDataSourceDescObject* temp = _impl_.object_;
  _impl_.object_ = nullptr;
  return temp;
}
inline ::CMsgSteamLearnDataSourceDescObject* CMsgSteamLearnDataSourceDescElement::_internal_mutable_object() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.object_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSteamLearnDataSourceDescObject>(GetArenaForAllocation());
    _impl_.object_ = reinterpret_cast<::CMsgSteamLearnDataSourceDescObject*>(p);
  }
  return _impl_.object_;
}
inline ::CMsgSteamLearnDataSourceDescObject* CMsgSteamLearnDataSourceDescElement::mutable_object() {
  ::CMsgSteamLearnDataSourceDescObject* _msg = _internal_mutable_object();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearnDataSourceDescElement.object)
  return _msg;
}
inline void CMsgSteamLearnDataSourceDescElement::set_allocated_object(::CMsgSteamLearnDataSourceDescObject* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::CMsgSteamLearnDataSourceDescObject*>(_impl_.object_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::CMsgSteamLearnDataSourceDescObject*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.object_ = reinterpret_cast<::CMsgSteamLearnDataSourceDescObject*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearnDataSourceDescElement.object)
}

// optional uint32 count = 4;
inline bool CMsgSteamLearnDataSourceDescElement::has_count() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgSteamLearnDataSourceDescElement::clear_count() {
  _impl_.count_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t CMsgSteamLearnDataSourceDescElement::count() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnDataSourceDescElement.count)
  return _internal_count();
}
inline void CMsgSteamLearnDataSourceDescElement::set_count(::uint32_t value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearnDataSourceDescElement.count)
}
inline ::uint32_t CMsgSteamLearnDataSourceDescElement::_internal_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.count_;
}
inline void CMsgSteamLearnDataSourceDescElement::_internal_set_count(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.count_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamLearnDataSource

// optional uint32 id = 1;
inline bool CMsgSteamLearnDataSource::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgSteamLearnDataSource::clear_id() {
  _impl_.id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t CMsgSteamLearnDataSource::id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnDataSource.id)
  return _internal_id();
}
inline void CMsgSteamLearnDataSource::set_id(::uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearnDataSource.id)
}
inline ::uint32_t CMsgSteamLearnDataSource::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void CMsgSteamLearnDataSource::_internal_set_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.id_ = value;
}

// optional string name = 2;
inline bool CMsgSteamLearnDataSource::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamLearnDataSource::clear_name() {
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamLearnDataSource::name() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnDataSource.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CMsgSteamLearnDataSource::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgSteamLearnDataSource.name)
}
inline std::string* CMsgSteamLearnDataSource::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearnDataSource.name)
  return _s;
}
inline const std::string& CMsgSteamLearnDataSource::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void CMsgSteamLearnDataSource::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgSteamLearnDataSource::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* CMsgSteamLearnDataSource::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearnDataSource.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CMsgSteamLearnDataSource::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearnDataSource.name)
}

// optional uint32 version = 3;
inline bool CMsgSteamLearnDataSource::has_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgSteamLearnDataSource::clear_version() {
  _impl_.version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t CMsgSteamLearnDataSource::version() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnDataSource.version)
  return _internal_version();
}
inline void CMsgSteamLearnDataSource::set_version(::uint32_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearnDataSource.version)
}
inline ::uint32_t CMsgSteamLearnDataSource::_internal_version() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.version_;
}
inline void CMsgSteamLearnDataSource::_internal_set_version(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.version_ = value;
}

// optional string source_description = 4;
inline bool CMsgSteamLearnDataSource::has_source_description() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamLearnDataSource::clear_source_description() {
  _impl_.source_description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgSteamLearnDataSource::source_description() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnDataSource.source_description)
  return _internal_source_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CMsgSteamLearnDataSource::set_source_description(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.source_description_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgSteamLearnDataSource.source_description)
}
inline std::string* CMsgSteamLearnDataSource::mutable_source_description() {
  std::string* _s = _internal_mutable_source_description();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearnDataSource.source_description)
  return _s;
}
inline const std::string& CMsgSteamLearnDataSource::_internal_source_description() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.source_description_.Get();
}
inline void CMsgSteamLearnDataSource::_internal_set_source_description(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.source_description_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgSteamLearnDataSource::_internal_mutable_source_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.source_description_.Mutable( GetArenaForAllocation());
}
inline std::string* CMsgSteamLearnDataSource::release_source_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearnDataSource.source_description)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.source_description_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.source_description_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CMsgSteamLearnDataSource::set_allocated_source_description(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.source_description_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.source_description_.IsDefault()) {
          _impl_.source_description_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearnDataSource.source_description)
}

// optional .CMsgSteamLearnDataSourceDescObject structure = 5;
inline bool CMsgSteamLearnDataSource::has_structure() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.structure_ != nullptr);
  return value;
}
inline void CMsgSteamLearnDataSource::clear_structure() {
  if (_impl_.structure_ != nullptr) _impl_.structure_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::CMsgSteamLearnDataSourceDescObject& CMsgSteamLearnDataSource::_internal_structure() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::CMsgSteamLearnDataSourceDescObject* p = _impl_.structure_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamLearnDataSourceDescObject&>(::_CMsgSteamLearnDataSourceDescObject_default_instance_);
}
inline const ::CMsgSteamLearnDataSourceDescObject& CMsgSteamLearnDataSource::structure() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnDataSource.structure)
  return _internal_structure();
}
inline void CMsgSteamLearnDataSource::unsafe_arena_set_allocated_structure(::CMsgSteamLearnDataSourceDescObject* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.structure_);
  }
  _impl_.structure_ = reinterpret_cast<::CMsgSteamLearnDataSourceDescObject*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamLearnDataSource.structure)
}
inline ::CMsgSteamLearnDataSourceDescObject* CMsgSteamLearnDataSource::release_structure() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgSteamLearnDataSourceDescObject* released = _impl_.structure_;
  _impl_.structure_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgSteamLearnDataSourceDescObject* CMsgSteamLearnDataSource::unsafe_arena_release_structure() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearnDataSource.structure)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgSteamLearnDataSourceDescObject* temp = _impl_.structure_;
  _impl_.structure_ = nullptr;
  return temp;
}
inline ::CMsgSteamLearnDataSourceDescObject* CMsgSteamLearnDataSource::_internal_mutable_structure() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.structure_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSteamLearnDataSourceDescObject>(GetArenaForAllocation());
    _impl_.structure_ = reinterpret_cast<::CMsgSteamLearnDataSourceDescObject*>(p);
  }
  return _impl_.structure_;
}
inline ::CMsgSteamLearnDataSourceDescObject* CMsgSteamLearnDataSource::mutable_structure() {
  ::CMsgSteamLearnDataSourceDescObject* _msg = _internal_mutable_structure();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearnDataSource.structure)
  return _msg;
}
inline void CMsgSteamLearnDataSource::set_allocated_structure(::CMsgSteamLearnDataSourceDescObject* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::CMsgSteamLearnDataSourceDescObject*>(_impl_.structure_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::CMsgSteamLearnDataSourceDescObject*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.structure_ = reinterpret_cast<::CMsgSteamLearnDataSourceDescObject*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearnDataSource.structure)
}

// optional uint32 structure_crc = 6;
inline bool CMsgSteamLearnDataSource::has_structure_crc() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CMsgSteamLearnDataSource::clear_structure_crc() {
  _impl_.structure_crc_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t CMsgSteamLearnDataSource::structure_crc() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnDataSource.structure_crc)
  return _internal_structure_crc();
}
inline void CMsgSteamLearnDataSource::set_structure_crc(::uint32_t value) {
  _internal_set_structure_crc(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearnDataSource.structure_crc)
}
inline ::uint32_t CMsgSteamLearnDataSource::_internal_structure_crc() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.structure_crc_;
}
inline void CMsgSteamLearnDataSource::_internal_set_structure_crc(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.structure_crc_ = value;
}

// optional uint32 cache_duration_seconds = 7;
inline bool CMsgSteamLearnDataSource::has_cache_duration_seconds() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void CMsgSteamLearnDataSource::clear_cache_duration_seconds() {
  _impl_.cache_duration_seconds_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t CMsgSteamLearnDataSource::cache_duration_seconds() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnDataSource.cache_duration_seconds)
  return _internal_cache_duration_seconds();
}
inline void CMsgSteamLearnDataSource::set_cache_duration_seconds(::uint32_t value) {
  _internal_set_cache_duration_seconds(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearnDataSource.cache_duration_seconds)
}
inline ::uint32_t CMsgSteamLearnDataSource::_internal_cache_duration_seconds() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cache_duration_seconds_;
}
inline void CMsgSteamLearnDataSource::_internal_set_cache_duration_seconds(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.cache_duration_seconds_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamLearnDataObject

// repeated .CMsgSteamLearnDataElement elements = 1;
inline int CMsgSteamLearnDataObject::_internal_elements_size() const {
  return _internal_elements().size();
}
inline int CMsgSteamLearnDataObject::elements_size() const {
  return _internal_elements_size();
}
inline void CMsgSteamLearnDataObject::clear_elements() {
  _internal_mutable_elements()->Clear();
}
inline ::CMsgSteamLearnDataElement* CMsgSteamLearnDataObject::mutable_elements(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearnDataObject.elements)
  return _internal_mutable_elements()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnDataElement >*
CMsgSteamLearnDataObject::mutable_elements() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearnDataObject.elements)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_elements();
}
inline const ::CMsgSteamLearnDataElement& CMsgSteamLearnDataObject::elements(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnDataObject.elements)
    return _internal_elements().Get(index);
}
inline ::CMsgSteamLearnDataElement* CMsgSteamLearnDataObject::add_elements() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::CMsgSteamLearnDataElement* _add = _internal_mutable_elements()->Add();
  // @@protoc_insertion_point(field_add:CMsgSteamLearnDataObject.elements)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnDataElement >&
CMsgSteamLearnDataObject::elements() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearnDataObject.elements)
  return _internal_elements();
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearnDataElement>&
CMsgSteamLearnDataObject::_internal_elements() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.elements_;
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamLearnDataElement>*
CMsgSteamLearnDataObject::_internal_mutable_elements() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.elements_;
}

// -------------------------------------------------------------------

// CMsgSteamLearnDataElement

// optional string name = 1;
inline bool CMsgSteamLearnDataElement::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamLearnDataElement::clear_name() {
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamLearnDataElement::name() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnDataElement.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CMsgSteamLearnDataElement::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgSteamLearnDataElement.name)
}
inline std::string* CMsgSteamLearnDataElement::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearnDataElement.name)
  return _s;
}
inline const std::string& CMsgSteamLearnDataElement::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void CMsgSteamLearnDataElement::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgSteamLearnDataElement::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* CMsgSteamLearnDataElement::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearnDataElement.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CMsgSteamLearnDataElement::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearnDataElement.name)
}

// repeated int32 data_int32s = 20;
inline int CMsgSteamLearnDataElement::_internal_data_int32s_size() const {
  return _internal_data_int32s().size();
}
inline int CMsgSteamLearnDataElement::data_int32s_size() const {
  return _internal_data_int32s_size();
}
inline void CMsgSteamLearnDataElement::clear_data_int32s() {
  _internal_mutable_data_int32s()->Clear();
}
inline ::int32_t CMsgSteamLearnDataElement::data_int32s(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnDataElement.data_int32s)
  return _internal_data_int32s().Get(index);
}
inline void CMsgSteamLearnDataElement::set_data_int32s(int index, ::int32_t value) {
  _internal_mutable_data_int32s()->Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearnDataElement.data_int32s)
}
inline void CMsgSteamLearnDataElement::add_data_int32s(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_data_int32s()->Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamLearnDataElement.data_int32s)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& CMsgSteamLearnDataElement::data_int32s() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearnDataElement.data_int32s)
  return _internal_data_int32s();
}
inline ::google::protobuf::RepeatedField<::int32_t>* CMsgSteamLearnDataElement::mutable_data_int32s() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearnDataElement.data_int32s)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_data_int32s();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& CMsgSteamLearnDataElement::_internal_data_int32s() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_int32s_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* CMsgSteamLearnDataElement::_internal_mutable_data_int32s() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.data_int32s_;
}

// repeated float data_floats = 21;
inline int CMsgSteamLearnDataElement::_internal_data_floats_size() const {
  return _internal_data_floats().size();
}
inline int CMsgSteamLearnDataElement::data_floats_size() const {
  return _internal_data_floats_size();
}
inline void CMsgSteamLearnDataElement::clear_data_floats() {
  _internal_mutable_data_floats()->Clear();
}
inline float CMsgSteamLearnDataElement::data_floats(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnDataElement.data_floats)
  return _internal_data_floats().Get(index);
}
inline void CMsgSteamLearnDataElement::set_data_floats(int index, float value) {
  _internal_mutable_data_floats()->Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearnDataElement.data_floats)
}
inline void CMsgSteamLearnDataElement::add_data_floats(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_data_floats()->Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamLearnDataElement.data_floats)
}
inline const ::google::protobuf::RepeatedField<float>& CMsgSteamLearnDataElement::data_floats() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearnDataElement.data_floats)
  return _internal_data_floats();
}
inline ::google::protobuf::RepeatedField<float>* CMsgSteamLearnDataElement::mutable_data_floats() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearnDataElement.data_floats)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_data_floats();
}

inline const ::google::protobuf::RepeatedField<float>& CMsgSteamLearnDataElement::_internal_data_floats() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_floats_;
}
inline ::google::protobuf::RepeatedField<float>* CMsgSteamLearnDataElement::_internal_mutable_data_floats() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.data_floats_;
}

// repeated bool data_bools = 22;
inline int CMsgSteamLearnDataElement::_internal_data_bools_size() const {
  return _internal_data_bools().size();
}
inline int CMsgSteamLearnDataElement::data_bools_size() const {
  return _internal_data_bools_size();
}
inline void CMsgSteamLearnDataElement::clear_data_bools() {
  _internal_mutable_data_bools()->Clear();
}
inline bool CMsgSteamLearnDataElement::data_bools(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnDataElement.data_bools)
  return _internal_data_bools().Get(index);
}
inline void CMsgSteamLearnDataElement::set_data_bools(int index, bool value) {
  _internal_mutable_data_bools()->Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearnDataElement.data_bools)
}
inline void CMsgSteamLearnDataElement::add_data_bools(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_data_bools()->Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamLearnDataElement.data_bools)
}
inline const ::google::protobuf::RepeatedField<bool>& CMsgSteamLearnDataElement::data_bools() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearnDataElement.data_bools)
  return _internal_data_bools();
}
inline ::google::protobuf::RepeatedField<bool>* CMsgSteamLearnDataElement::mutable_data_bools() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearnDataElement.data_bools)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_data_bools();
}

inline const ::google::protobuf::RepeatedField<bool>& CMsgSteamLearnDataElement::_internal_data_bools() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_bools_;
}
inline ::google::protobuf::RepeatedField<bool>* CMsgSteamLearnDataElement::_internal_mutable_data_bools() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.data_bools_;
}

// repeated string data_strings = 23;
inline int CMsgSteamLearnDataElement::_internal_data_strings_size() const {
  return _internal_data_strings().size();
}
inline int CMsgSteamLearnDataElement::data_strings_size() const {
  return _internal_data_strings_size();
}
inline void CMsgSteamLearnDataElement::clear_data_strings() {
  _internal_mutable_data_strings()->Clear();
}
inline std::string* CMsgSteamLearnDataElement::add_data_strings() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_data_strings()->Add();
  // @@protoc_insertion_point(field_add_mutable:CMsgSteamLearnDataElement.data_strings)
  return _s;
}
inline const std::string& CMsgSteamLearnDataElement::data_strings(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnDataElement.data_strings)
  return _internal_data_strings().Get(index);
}
inline std::string* CMsgSteamLearnDataElement::mutable_data_strings(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearnDataElement.data_strings)
  return _internal_mutable_data_strings()->Mutable(index);
}
inline void CMsgSteamLearnDataElement::set_data_strings(int index, const std::string& value) {
  _internal_mutable_data_strings()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearnDataElement.data_strings)
}
inline void CMsgSteamLearnDataElement::set_data_strings(int index, std::string&& value) {
  _internal_mutable_data_strings()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CMsgSteamLearnDataElement.data_strings)
}
inline void CMsgSteamLearnDataElement::set_data_strings(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_data_strings()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgSteamLearnDataElement.data_strings)
}
inline void CMsgSteamLearnDataElement::set_data_strings(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_data_strings()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgSteamLearnDataElement.data_strings)
}
inline void CMsgSteamLearnDataElement::set_data_strings(int index, absl::string_view value) {
  _internal_mutable_data_strings()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:CMsgSteamLearnDataElement.data_strings)
}
inline void CMsgSteamLearnDataElement::add_data_strings(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_data_strings()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgSteamLearnDataElement.data_strings)
}
inline void CMsgSteamLearnDataElement::add_data_strings(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_data_strings()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:CMsgSteamLearnDataElement.data_strings)
}
inline void CMsgSteamLearnDataElement::add_data_strings(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_data_strings()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgSteamLearnDataElement.data_strings)
}
inline void CMsgSteamLearnDataElement::add_data_strings(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_data_strings()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgSteamLearnDataElement.data_strings)
}
inline void CMsgSteamLearnDataElement::add_data_strings(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_data_strings()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:CMsgSteamLearnDataElement.data_strings)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
CMsgSteamLearnDataElement::data_strings() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearnDataElement.data_strings)
  return _internal_data_strings();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* CMsgSteamLearnDataElement::mutable_data_strings() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearnDataElement.data_strings)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_data_strings();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
CMsgSteamLearnDataElement::_internal_data_strings() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_strings_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
CMsgSteamLearnDataElement::_internal_mutable_data_strings() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.data_strings_;
}

// repeated .CMsgSteamLearnDataObject data_objects = 24;
inline int CMsgSteamLearnDataElement::_internal_data_objects_size() const {
  return _internal_data_objects().size();
}
inline int CMsgSteamLearnDataElement::data_objects_size() const {
  return _internal_data_objects_size();
}
inline void CMsgSteamLearnDataElement::clear_data_objects() {
  _internal_mutable_data_objects()->Clear();
}
inline ::CMsgSteamLearnDataObject* CMsgSteamLearnDataElement::mutable_data_objects(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearnDataElement.data_objects)
  return _internal_mutable_data_objects()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnDataObject >*
CMsgSteamLearnDataElement::mutable_data_objects() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearnDataElement.data_objects)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_data_objects();
}
inline const ::CMsgSteamLearnDataObject& CMsgSteamLearnDataElement::data_objects(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnDataElement.data_objects)
    return _internal_data_objects().Get(index);
}
inline ::CMsgSteamLearnDataObject* CMsgSteamLearnDataElement::add_data_objects() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::CMsgSteamLearnDataObject* _add = _internal_mutable_data_objects()->Add();
  // @@protoc_insertion_point(field_add:CMsgSteamLearnDataElement.data_objects)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnDataObject >&
CMsgSteamLearnDataElement::data_objects() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearnDataElement.data_objects)
  return _internal_data_objects();
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearnDataObject>&
CMsgSteamLearnDataElement::_internal_data_objects() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_objects_;
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamLearnDataObject>*
CMsgSteamLearnDataElement::_internal_mutable_data_objects() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.data_objects_;
}

// -------------------------------------------------------------------

// CMsgSteamLearnData

// optional uint32 data_source_id = 1;
inline bool CMsgSteamLearnData::has_data_source_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamLearnData::clear_data_source_id() {
  _impl_.data_source_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CMsgSteamLearnData::data_source_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnData.data_source_id)
  return _internal_data_source_id();
}
inline void CMsgSteamLearnData::set_data_source_id(::uint32_t value) {
  _internal_set_data_source_id(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearnData.data_source_id)
}
inline ::uint32_t CMsgSteamLearnData::_internal_data_source_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_source_id_;
}
inline void CMsgSteamLearnData::_internal_set_data_source_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.data_source_id_ = value;
}

// repeated uint64 keys = 2;
inline int CMsgSteamLearnData::_internal_keys_size() const {
  return _internal_keys().size();
}
inline int CMsgSteamLearnData::keys_size() const {
  return _internal_keys_size();
}
inline void CMsgSteamLearnData::clear_keys() {
  _internal_mutable_keys()->Clear();
}
inline ::uint64_t CMsgSteamLearnData::keys(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnData.keys)
  return _internal_keys().Get(index);
}
inline void CMsgSteamLearnData::set_keys(int index, ::uint64_t value) {
  _internal_mutable_keys()->Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearnData.keys)
}
inline void CMsgSteamLearnData::add_keys(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keys()->Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamLearnData.keys)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& CMsgSteamLearnData::keys() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearnData.keys)
  return _internal_keys();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* CMsgSteamLearnData::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearnData.keys)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_keys();
}

inline const ::google::protobuf::RepeatedField<::uint64_t>& CMsgSteamLearnData::_internal_keys() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.keys_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* CMsgSteamLearnData::_internal_mutable_keys() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.keys_;
}

// optional .CMsgSteamLearnDataObject data_object = 3;
inline bool CMsgSteamLearnData::has_data_object() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.data_object_ != nullptr);
  return value;
}
inline void CMsgSteamLearnData::clear_data_object() {
  if (_impl_.data_object_ != nullptr) _impl_.data_object_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgSteamLearnDataObject& CMsgSteamLearnData::_internal_data_object() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::CMsgSteamLearnDataObject* p = _impl_.data_object_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamLearnDataObject&>(::_CMsgSteamLearnDataObject_default_instance_);
}
inline const ::CMsgSteamLearnDataObject& CMsgSteamLearnData::data_object() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnData.data_object)
  return _internal_data_object();
}
inline void CMsgSteamLearnData::unsafe_arena_set_allocated_data_object(::CMsgSteamLearnDataObject* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.data_object_);
  }
  _impl_.data_object_ = reinterpret_cast<::CMsgSteamLearnDataObject*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamLearnData.data_object)
}
inline ::CMsgSteamLearnDataObject* CMsgSteamLearnData::release_data_object() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSteamLearnDataObject* released = _impl_.data_object_;
  _impl_.data_object_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgSteamLearnDataObject* CMsgSteamLearnData::unsafe_arena_release_data_object() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearnData.data_object)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSteamLearnDataObject* temp = _impl_.data_object_;
  _impl_.data_object_ = nullptr;
  return temp;
}
inline ::CMsgSteamLearnDataObject* CMsgSteamLearnData::_internal_mutable_data_object() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.data_object_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSteamLearnDataObject>(GetArenaForAllocation());
    _impl_.data_object_ = reinterpret_cast<::CMsgSteamLearnDataObject*>(p);
  }
  return _impl_.data_object_;
}
inline ::CMsgSteamLearnDataObject* CMsgSteamLearnData::mutable_data_object() {
  ::CMsgSteamLearnDataObject* _msg = _internal_mutable_data_object();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearnData.data_object)
  return _msg;
}
inline void CMsgSteamLearnData::set_allocated_data_object(::CMsgSteamLearnDataObject* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::CMsgSteamLearnDataObject*>(_impl_.data_object_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::CMsgSteamLearnDataObject*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.data_object_ = reinterpret_cast<::CMsgSteamLearnDataObject*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearnData.data_object)
}

// -------------------------------------------------------------------

// CMsgSteamLearnDataList

// repeated .CMsgSteamLearnData data = 1;
inline int CMsgSteamLearnDataList::_internal_data_size() const {
  return _internal_data().size();
}
inline int CMsgSteamLearnDataList::data_size() const {
  return _internal_data_size();
}
inline void CMsgSteamLearnDataList::clear_data() {
  _internal_mutable_data()->Clear();
}
inline ::CMsgSteamLearnData* CMsgSteamLearnDataList::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearnDataList.data)
  return _internal_mutable_data()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnData >*
CMsgSteamLearnDataList::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearnDataList.data)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_data();
}
inline const ::CMsgSteamLearnData& CMsgSteamLearnDataList::data(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnDataList.data)
    return _internal_data().Get(index);
}
inline ::CMsgSteamLearnData* CMsgSteamLearnDataList::add_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::CMsgSteamLearnData* _add = _internal_mutable_data()->Add();
  // @@protoc_insertion_point(field_add:CMsgSteamLearnDataList.data)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnData >&
CMsgSteamLearnDataList::data() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearnDataList.data)
  return _internal_data();
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearnData>&
CMsgSteamLearnDataList::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_;
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamLearnData>*
CMsgSteamLearnDataList::_internal_mutable_data() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.data_;
}

// -------------------------------------------------------------------

// CMsgSteamLearn_AccessData

// optional uint32 publisher_id = 1;
inline bool CMsgSteamLearn_AccessData::has_publisher_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamLearn_AccessData::clear_publisher_id() {
  _impl_.publisher_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t CMsgSteamLearn_AccessData::publisher_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_AccessData.publisher_id)
  return _internal_publisher_id();
}
inline void CMsgSteamLearn_AccessData::set_publisher_id(::uint32_t value) {
  _internal_set_publisher_id(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_AccessData.publisher_id)
}
inline ::uint32_t CMsgSteamLearn_AccessData::_internal_publisher_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.publisher_id_;
}
inline void CMsgSteamLearn_AccessData::_internal_set_publisher_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.publisher_id_ = value;
}

// optional uint32 timestamp = 2;
inline bool CMsgSteamLearn_AccessData::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamLearn_AccessData::clear_timestamp() {
  _impl_.timestamp_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CMsgSteamLearn_AccessData::timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_AccessData.timestamp)
  return _internal_timestamp();
}
inline void CMsgSteamLearn_AccessData::set_timestamp(::uint32_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_AccessData.timestamp)
}
inline ::uint32_t CMsgSteamLearn_AccessData::_internal_timestamp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.timestamp_;
}
inline void CMsgSteamLearn_AccessData::_internal_set_timestamp(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.timestamp_ = value;
}

// optional uint64 random_value = 3;
inline bool CMsgSteamLearn_AccessData::has_random_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamLearn_AccessData::clear_random_value() {
  _impl_.random_value_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint64_t CMsgSteamLearn_AccessData::random_value() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_AccessData.random_value)
  return _internal_random_value();
}
inline void CMsgSteamLearn_AccessData::set_random_value(::uint64_t value) {
  _internal_set_random_value(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_AccessData.random_value)
}
inline ::uint64_t CMsgSteamLearn_AccessData::_internal_random_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.random_value_;
}
inline void CMsgSteamLearn_AccessData::_internal_set_random_value(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.random_value_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamLearn_RegisterDataSource_Request

// optional string access_token = 1;
inline bool CMsgSteamLearn_RegisterDataSource_Request::has_access_token() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamLearn_RegisterDataSource_Request::clear_access_token() {
  _impl_.access_token_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamLearn_RegisterDataSource_Request::access_token() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_RegisterDataSource_Request.access_token)
  return _internal_access_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CMsgSteamLearn_RegisterDataSource_Request::set_access_token(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.access_token_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_RegisterDataSource_Request.access_token)
}
inline std::string* CMsgSteamLearn_RegisterDataSource_Request::mutable_access_token() {
  std::string* _s = _internal_mutable_access_token();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_RegisterDataSource_Request.access_token)
  return _s;
}
inline const std::string& CMsgSteamLearn_RegisterDataSource_Request::_internal_access_token() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.access_token_.Get();
}
inline void CMsgSteamLearn_RegisterDataSource_Request::_internal_set_access_token(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.access_token_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgSteamLearn_RegisterDataSource_Request::_internal_mutable_access_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.access_token_.Mutable( GetArenaForAllocation());
}
inline std::string* CMsgSteamLearn_RegisterDataSource_Request::release_access_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearn_RegisterDataSource_Request.access_token)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.access_token_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.access_token_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CMsgSteamLearn_RegisterDataSource_Request::set_allocated_access_token(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.access_token_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.access_token_.IsDefault()) {
          _impl_.access_token_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearn_RegisterDataSource_Request.access_token)
}

// optional .CMsgSteamLearn_AccessData access_data = 2;
inline bool CMsgSteamLearn_RegisterDataSource_Request::has_access_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.access_data_ != nullptr);
  return value;
}
inline void CMsgSteamLearn_RegisterDataSource_Request::clear_access_data() {
  if (_impl_.access_data_ != nullptr) _impl_.access_data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::CMsgSteamLearn_AccessData& CMsgSteamLearn_RegisterDataSource_Request::_internal_access_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::CMsgSteamLearn_AccessData* p = _impl_.access_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamLearn_AccessData&>(::_CMsgSteamLearn_AccessData_default_instance_);
}
inline const ::CMsgSteamLearn_AccessData& CMsgSteamLearn_RegisterDataSource_Request::access_data() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_RegisterDataSource_Request.access_data)
  return _internal_access_data();
}
inline void CMsgSteamLearn_RegisterDataSource_Request::unsafe_arena_set_allocated_access_data(::CMsgSteamLearn_AccessData* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.access_data_);
  }
  _impl_.access_data_ = reinterpret_cast<::CMsgSteamLearn_AccessData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamLearn_RegisterDataSource_Request.access_data)
}
inline ::CMsgSteamLearn_AccessData* CMsgSteamLearn_RegisterDataSource_Request::release_access_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamLearn_AccessData* released = _impl_.access_data_;
  _impl_.access_data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgSteamLearn_AccessData* CMsgSteamLearn_RegisterDataSource_Request::unsafe_arena_release_access_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearn_RegisterDataSource_Request.access_data)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamLearn_AccessData* temp = _impl_.access_data_;
  _impl_.access_data_ = nullptr;
  return temp;
}
inline ::CMsgSteamLearn_AccessData* CMsgSteamLearn_RegisterDataSource_Request::_internal_mutable_access_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.access_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSteamLearn_AccessData>(GetArenaForAllocation());
    _impl_.access_data_ = reinterpret_cast<::CMsgSteamLearn_AccessData*>(p);
  }
  return _impl_.access_data_;
}
inline ::CMsgSteamLearn_AccessData* CMsgSteamLearn_RegisterDataSource_Request::mutable_access_data() {
  ::CMsgSteamLearn_AccessData* _msg = _internal_mutable_access_data();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_RegisterDataSource_Request.access_data)
  return _msg;
}
inline void CMsgSteamLearn_RegisterDataSource_Request::set_allocated_access_data(::CMsgSteamLearn_AccessData* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::CMsgSteamLearn_AccessData*>(_impl_.access_data_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::CMsgSteamLearn_AccessData*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.access_data_ = reinterpret_cast<::CMsgSteamLearn_AccessData*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearn_RegisterDataSource_Request.access_data)
}

// optional .CMsgSteamLearnDataSource data_source = 3;
inline bool CMsgSteamLearn_RegisterDataSource_Request::has_data_source() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.data_source_ != nullptr);
  return value;
}
inline void CMsgSteamLearn_RegisterDataSource_Request::clear_data_source() {
  if (_impl_.data_source_ != nullptr) _impl_.data_source_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::CMsgSteamLearnDataSource& CMsgSteamLearn_RegisterDataSource_Request::_internal_data_source() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::CMsgSteamLearnDataSource* p = _impl_.data_source_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamLearnDataSource&>(::_CMsgSteamLearnDataSource_default_instance_);
}
inline const ::CMsgSteamLearnDataSource& CMsgSteamLearn_RegisterDataSource_Request::data_source() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_RegisterDataSource_Request.data_source)
  return _internal_data_source();
}
inline void CMsgSteamLearn_RegisterDataSource_Request::unsafe_arena_set_allocated_data_source(::CMsgSteamLearnDataSource* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.data_source_);
  }
  _impl_.data_source_ = reinterpret_cast<::CMsgSteamLearnDataSource*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamLearn_RegisterDataSource_Request.data_source)
}
inline ::CMsgSteamLearnDataSource* CMsgSteamLearn_RegisterDataSource_Request::release_data_source() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgSteamLearnDataSource* released = _impl_.data_source_;
  _impl_.data_source_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgSteamLearnDataSource* CMsgSteamLearn_RegisterDataSource_Request::unsafe_arena_release_data_source() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearn_RegisterDataSource_Request.data_source)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgSteamLearnDataSource* temp = _impl_.data_source_;
  _impl_.data_source_ = nullptr;
  return temp;
}
inline ::CMsgSteamLearnDataSource* CMsgSteamLearn_RegisterDataSource_Request::_internal_mutable_data_source() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.data_source_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSteamLearnDataSource>(GetArenaForAllocation());
    _impl_.data_source_ = reinterpret_cast<::CMsgSteamLearnDataSource*>(p);
  }
  return _impl_.data_source_;
}
inline ::CMsgSteamLearnDataSource* CMsgSteamLearn_RegisterDataSource_Request::mutable_data_source() {
  ::CMsgSteamLearnDataSource* _msg = _internal_mutable_data_source();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_RegisterDataSource_Request.data_source)
  return _msg;
}
inline void CMsgSteamLearn_RegisterDataSource_Request::set_allocated_data_source(::CMsgSteamLearnDataSource* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::CMsgSteamLearnDataSource*>(_impl_.data_source_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::CMsgSteamLearnDataSource*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.data_source_ = reinterpret_cast<::CMsgSteamLearnDataSource*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearn_RegisterDataSource_Request.data_source)
}

// -------------------------------------------------------------------

// CMsgSteamLearn_RegisterDataSource_Response

// optional .ESteammLearnRegisterDataSourceResult result = 1 [default = STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR];
inline bool CMsgSteamLearn_RegisterDataSource_Response::has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamLearn_RegisterDataSource_Response::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::ESteammLearnRegisterDataSourceResult CMsgSteamLearn_RegisterDataSource_Response::result() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_RegisterDataSource_Response.result)
  return _internal_result();
}
inline void CMsgSteamLearn_RegisterDataSource_Response::set_result(::ESteammLearnRegisterDataSourceResult value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_RegisterDataSource_Response.result)
}
inline ::ESteammLearnRegisterDataSourceResult CMsgSteamLearn_RegisterDataSource_Response::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::ESteammLearnRegisterDataSourceResult>(_impl_.result_);
}
inline void CMsgSteamLearn_RegisterDataSource_Response::_internal_set_result(::ESteammLearnRegisterDataSourceResult value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::ESteammLearnRegisterDataSourceResult_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.result_ = value;
}

// optional .CMsgSteamLearnDataSource data_source = 2;
inline bool CMsgSteamLearn_RegisterDataSource_Response::has_data_source() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.data_source_ != nullptr);
  return value;
}
inline void CMsgSteamLearn_RegisterDataSource_Response::clear_data_source() {
  if (_impl_.data_source_ != nullptr) _impl_.data_source_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgSteamLearnDataSource& CMsgSteamLearn_RegisterDataSource_Response::_internal_data_source() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::CMsgSteamLearnDataSource* p = _impl_.data_source_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamLearnDataSource&>(::_CMsgSteamLearnDataSource_default_instance_);
}
inline const ::CMsgSteamLearnDataSource& CMsgSteamLearn_RegisterDataSource_Response::data_source() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_RegisterDataSource_Response.data_source)
  return _internal_data_source();
}
inline void CMsgSteamLearn_RegisterDataSource_Response::unsafe_arena_set_allocated_data_source(::CMsgSteamLearnDataSource* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.data_source_);
  }
  _impl_.data_source_ = reinterpret_cast<::CMsgSteamLearnDataSource*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamLearn_RegisterDataSource_Response.data_source)
}
inline ::CMsgSteamLearnDataSource* CMsgSteamLearn_RegisterDataSource_Response::release_data_source() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSteamLearnDataSource* released = _impl_.data_source_;
  _impl_.data_source_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgSteamLearnDataSource* CMsgSteamLearn_RegisterDataSource_Response::unsafe_arena_release_data_source() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearn_RegisterDataSource_Response.data_source)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSteamLearnDataSource* temp = _impl_.data_source_;
  _impl_.data_source_ = nullptr;
  return temp;
}
inline ::CMsgSteamLearnDataSource* CMsgSteamLearn_RegisterDataSource_Response::_internal_mutable_data_source() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.data_source_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSteamLearnDataSource>(GetArenaForAllocation());
    _impl_.data_source_ = reinterpret_cast<::CMsgSteamLearnDataSource*>(p);
  }
  return _impl_.data_source_;
}
inline ::CMsgSteamLearnDataSource* CMsgSteamLearn_RegisterDataSource_Response::mutable_data_source() {
  ::CMsgSteamLearnDataSource* _msg = _internal_mutable_data_source();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_RegisterDataSource_Response.data_source)
  return _msg;
}
inline void CMsgSteamLearn_RegisterDataSource_Response::set_allocated_data_source(::CMsgSteamLearnDataSource* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::CMsgSteamLearnDataSource*>(_impl_.data_source_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::CMsgSteamLearnDataSource*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.data_source_ = reinterpret_cast<::CMsgSteamLearnDataSource*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearn_RegisterDataSource_Response.data_source)
}

// -------------------------------------------------------------------

// CMsgSteamLearn_CacheData_Request

// optional string access_token = 1;
inline bool CMsgSteamLearn_CacheData_Request::has_access_token() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamLearn_CacheData_Request::clear_access_token() {
  _impl_.access_token_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamLearn_CacheData_Request::access_token() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_CacheData_Request.access_token)
  return _internal_access_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CMsgSteamLearn_CacheData_Request::set_access_token(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.access_token_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_CacheData_Request.access_token)
}
inline std::string* CMsgSteamLearn_CacheData_Request::mutable_access_token() {
  std::string* _s = _internal_mutable_access_token();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_CacheData_Request.access_token)
  return _s;
}
inline const std::string& CMsgSteamLearn_CacheData_Request::_internal_access_token() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.access_token_.Get();
}
inline void CMsgSteamLearn_CacheData_Request::_internal_set_access_token(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.access_token_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgSteamLearn_CacheData_Request::_internal_mutable_access_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.access_token_.Mutable( GetArenaForAllocation());
}
inline std::string* CMsgSteamLearn_CacheData_Request::release_access_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearn_CacheData_Request.access_token)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.access_token_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.access_token_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CMsgSteamLearn_CacheData_Request::set_allocated_access_token(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.access_token_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.access_token_.IsDefault()) {
          _impl_.access_token_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearn_CacheData_Request.access_token)
}

// optional .CMsgSteamLearn_AccessData access_data = 2;
inline bool CMsgSteamLearn_CacheData_Request::has_access_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.access_data_ != nullptr);
  return value;
}
inline void CMsgSteamLearn_CacheData_Request::clear_access_data() {
  if (_impl_.access_data_ != nullptr) _impl_.access_data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::CMsgSteamLearn_AccessData& CMsgSteamLearn_CacheData_Request::_internal_access_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::CMsgSteamLearn_AccessData* p = _impl_.access_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamLearn_AccessData&>(::_CMsgSteamLearn_AccessData_default_instance_);
}
inline const ::CMsgSteamLearn_AccessData& CMsgSteamLearn_CacheData_Request::access_data() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_CacheData_Request.access_data)
  return _internal_access_data();
}
inline void CMsgSteamLearn_CacheData_Request::unsafe_arena_set_allocated_access_data(::CMsgSteamLearn_AccessData* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.access_data_);
  }
  _impl_.access_data_ = reinterpret_cast<::CMsgSteamLearn_AccessData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamLearn_CacheData_Request.access_data)
}
inline ::CMsgSteamLearn_AccessData* CMsgSteamLearn_CacheData_Request::release_access_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamLearn_AccessData* released = _impl_.access_data_;
  _impl_.access_data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgSteamLearn_AccessData* CMsgSteamLearn_CacheData_Request::unsafe_arena_release_access_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearn_CacheData_Request.access_data)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamLearn_AccessData* temp = _impl_.access_data_;
  _impl_.access_data_ = nullptr;
  return temp;
}
inline ::CMsgSteamLearn_AccessData* CMsgSteamLearn_CacheData_Request::_internal_mutable_access_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.access_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSteamLearn_AccessData>(GetArenaForAllocation());
    _impl_.access_data_ = reinterpret_cast<::CMsgSteamLearn_AccessData*>(p);
  }
  return _impl_.access_data_;
}
inline ::CMsgSteamLearn_AccessData* CMsgSteamLearn_CacheData_Request::mutable_access_data() {
  ::CMsgSteamLearn_AccessData* _msg = _internal_mutable_access_data();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_CacheData_Request.access_data)
  return _msg;
}
inline void CMsgSteamLearn_CacheData_Request::set_allocated_access_data(::CMsgSteamLearn_AccessData* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::CMsgSteamLearn_AccessData*>(_impl_.access_data_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::CMsgSteamLearn_AccessData*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.access_data_ = reinterpret_cast<::CMsgSteamLearn_AccessData*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearn_CacheData_Request.access_data)
}

// optional .CMsgSteamLearnData data = 3;
inline bool CMsgSteamLearn_CacheData_Request::has_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.data_ != nullptr);
  return value;
}
inline void CMsgSteamLearn_CacheData_Request::clear_data() {
  if (_impl_.data_ != nullptr) _impl_.data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::CMsgSteamLearnData& CMsgSteamLearn_CacheData_Request::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::CMsgSteamLearnData* p = _impl_.data_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamLearnData&>(::_CMsgSteamLearnData_default_instance_);
}
inline const ::CMsgSteamLearnData& CMsgSteamLearn_CacheData_Request::data() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_CacheData_Request.data)
  return _internal_data();
}
inline void CMsgSteamLearn_CacheData_Request::unsafe_arena_set_allocated_data(::CMsgSteamLearnData* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.data_);
  }
  _impl_.data_ = reinterpret_cast<::CMsgSteamLearnData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamLearn_CacheData_Request.data)
}
inline ::CMsgSteamLearnData* CMsgSteamLearn_CacheData_Request::release_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgSteamLearnData* released = _impl_.data_;
  _impl_.data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgSteamLearnData* CMsgSteamLearn_CacheData_Request::unsafe_arena_release_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearn_CacheData_Request.data)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgSteamLearnData* temp = _impl_.data_;
  _impl_.data_ = nullptr;
  return temp;
}
inline ::CMsgSteamLearnData* CMsgSteamLearn_CacheData_Request::_internal_mutable_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.data_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSteamLearnData>(GetArenaForAllocation());
    _impl_.data_ = reinterpret_cast<::CMsgSteamLearnData*>(p);
  }
  return _impl_.data_;
}
inline ::CMsgSteamLearnData* CMsgSteamLearn_CacheData_Request::mutable_data() {
  ::CMsgSteamLearnData* _msg = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_CacheData_Request.data)
  return _msg;
}
inline void CMsgSteamLearn_CacheData_Request::set_allocated_data(::CMsgSteamLearnData* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::CMsgSteamLearnData*>(_impl_.data_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::CMsgSteamLearnData*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.data_ = reinterpret_cast<::CMsgSteamLearnData*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearn_CacheData_Request.data)
}

// -------------------------------------------------------------------

// CMsgSteamLearn_CacheData_Response

// optional .ESteamLearnCacheDataResult cache_data_result = 1 [default = STEAMLEARN_CACHE_DATA_ERROR];
inline bool CMsgSteamLearn_CacheData_Response::has_cache_data_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamLearn_CacheData_Response::clear_cache_data_result() {
  _impl_.cache_data_result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::ESteamLearnCacheDataResult CMsgSteamLearn_CacheData_Response::cache_data_result() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_CacheData_Response.cache_data_result)
  return _internal_cache_data_result();
}
inline void CMsgSteamLearn_CacheData_Response::set_cache_data_result(::ESteamLearnCacheDataResult value) {
  _internal_set_cache_data_result(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_CacheData_Response.cache_data_result)
}
inline ::ESteamLearnCacheDataResult CMsgSteamLearn_CacheData_Response::_internal_cache_data_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::ESteamLearnCacheDataResult>(_impl_.cache_data_result_);
}
inline void CMsgSteamLearn_CacheData_Response::_internal_set_cache_data_result(::ESteamLearnCacheDataResult value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::ESteamLearnCacheDataResult_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.cache_data_result_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamLearn_SnapshotProject_Request

// optional string access_token = 1;
inline bool CMsgSteamLearn_SnapshotProject_Request::has_access_token() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamLearn_SnapshotProject_Request::clear_access_token() {
  _impl_.access_token_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamLearn_SnapshotProject_Request::access_token() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_SnapshotProject_Request.access_token)
  return _internal_access_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CMsgSteamLearn_SnapshotProject_Request::set_access_token(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.access_token_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_SnapshotProject_Request.access_token)
}
inline std::string* CMsgSteamLearn_SnapshotProject_Request::mutable_access_token() {
  std::string* _s = _internal_mutable_access_token();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_SnapshotProject_Request.access_token)
  return _s;
}
inline const std::string& CMsgSteamLearn_SnapshotProject_Request::_internal_access_token() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.access_token_.Get();
}
inline void CMsgSteamLearn_SnapshotProject_Request::_internal_set_access_token(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.access_token_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgSteamLearn_SnapshotProject_Request::_internal_mutable_access_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.access_token_.Mutable( GetArenaForAllocation());
}
inline std::string* CMsgSteamLearn_SnapshotProject_Request::release_access_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearn_SnapshotProject_Request.access_token)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.access_token_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.access_token_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CMsgSteamLearn_SnapshotProject_Request::set_allocated_access_token(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.access_token_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.access_token_.IsDefault()) {
          _impl_.access_token_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearn_SnapshotProject_Request.access_token)
}

// optional .CMsgSteamLearn_AccessData access_data = 2;
inline bool CMsgSteamLearn_SnapshotProject_Request::has_access_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.access_data_ != nullptr);
  return value;
}
inline void CMsgSteamLearn_SnapshotProject_Request::clear_access_data() {
  if (_impl_.access_data_ != nullptr) _impl_.access_data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::CMsgSteamLearn_AccessData& CMsgSteamLearn_SnapshotProject_Request::_internal_access_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::CMsgSteamLearn_AccessData* p = _impl_.access_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamLearn_AccessData&>(::_CMsgSteamLearn_AccessData_default_instance_);
}
inline const ::CMsgSteamLearn_AccessData& CMsgSteamLearn_SnapshotProject_Request::access_data() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_SnapshotProject_Request.access_data)
  return _internal_access_data();
}
inline void CMsgSteamLearn_SnapshotProject_Request::unsafe_arena_set_allocated_access_data(::CMsgSteamLearn_AccessData* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.access_data_);
  }
  _impl_.access_data_ = reinterpret_cast<::CMsgSteamLearn_AccessData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamLearn_SnapshotProject_Request.access_data)
}
inline ::CMsgSteamLearn_AccessData* CMsgSteamLearn_SnapshotProject_Request::release_access_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamLearn_AccessData* released = _impl_.access_data_;
  _impl_.access_data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgSteamLearn_AccessData* CMsgSteamLearn_SnapshotProject_Request::unsafe_arena_release_access_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearn_SnapshotProject_Request.access_data)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamLearn_AccessData* temp = _impl_.access_data_;
  _impl_.access_data_ = nullptr;
  return temp;
}
inline ::CMsgSteamLearn_AccessData* CMsgSteamLearn_SnapshotProject_Request::_internal_mutable_access_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.access_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSteamLearn_AccessData>(GetArenaForAllocation());
    _impl_.access_data_ = reinterpret_cast<::CMsgSteamLearn_AccessData*>(p);
  }
  return _impl_.access_data_;
}
inline ::CMsgSteamLearn_AccessData* CMsgSteamLearn_SnapshotProject_Request::mutable_access_data() {
  ::CMsgSteamLearn_AccessData* _msg = _internal_mutable_access_data();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_SnapshotProject_Request.access_data)
  return _msg;
}
inline void CMsgSteamLearn_SnapshotProject_Request::set_allocated_access_data(::CMsgSteamLearn_AccessData* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::CMsgSteamLearn_AccessData*>(_impl_.access_data_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::CMsgSteamLearn_AccessData*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.access_data_ = reinterpret_cast<::CMsgSteamLearn_AccessData*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearn_SnapshotProject_Request.access_data)
}

// optional uint32 project_id = 3;
inline bool CMsgSteamLearn_SnapshotProject_Request::has_project_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamLearn_SnapshotProject_Request::clear_project_id() {
  _impl_.project_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CMsgSteamLearn_SnapshotProject_Request::project_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_SnapshotProject_Request.project_id)
  return _internal_project_id();
}
inline void CMsgSteamLearn_SnapshotProject_Request::set_project_id(::uint32_t value) {
  _internal_set_project_id(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_SnapshotProject_Request.project_id)
}
inline ::uint32_t CMsgSteamLearn_SnapshotProject_Request::_internal_project_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.project_id_;
}
inline void CMsgSteamLearn_SnapshotProject_Request::_internal_set_project_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.project_id_ = value;
}

// optional uint32 published_version = 7;
inline bool CMsgSteamLearn_SnapshotProject_Request::has_published_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgSteamLearn_SnapshotProject_Request::clear_published_version() {
  _impl_.published_version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t CMsgSteamLearn_SnapshotProject_Request::published_version() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_SnapshotProject_Request.published_version)
  return _internal_published_version();
}
inline void CMsgSteamLearn_SnapshotProject_Request::set_published_version(::uint32_t value) {
  _internal_set_published_version(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_SnapshotProject_Request.published_version)
}
inline ::uint32_t CMsgSteamLearn_SnapshotProject_Request::_internal_published_version() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.published_version_;
}
inline void CMsgSteamLearn_SnapshotProject_Request::_internal_set_published_version(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.published_version_ = value;
}

// repeated uint64 keys = 4;
inline int CMsgSteamLearn_SnapshotProject_Request::_internal_keys_size() const {
  return _internal_keys().size();
}
inline int CMsgSteamLearn_SnapshotProject_Request::keys_size() const {
  return _internal_keys_size();
}
inline void CMsgSteamLearn_SnapshotProject_Request::clear_keys() {
  _internal_mutable_keys()->Clear();
}
inline ::uint64_t CMsgSteamLearn_SnapshotProject_Request::keys(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_SnapshotProject_Request.keys)
  return _internal_keys().Get(index);
}
inline void CMsgSteamLearn_SnapshotProject_Request::set_keys(int index, ::uint64_t value) {
  _internal_mutable_keys()->Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_SnapshotProject_Request.keys)
}
inline void CMsgSteamLearn_SnapshotProject_Request::add_keys(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keys()->Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamLearn_SnapshotProject_Request.keys)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& CMsgSteamLearn_SnapshotProject_Request::keys() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearn_SnapshotProject_Request.keys)
  return _internal_keys();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* CMsgSteamLearn_SnapshotProject_Request::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearn_SnapshotProject_Request.keys)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_keys();
}

inline const ::google::protobuf::RepeatedField<::uint64_t>& CMsgSteamLearn_SnapshotProject_Request::_internal_keys() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.keys_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* CMsgSteamLearn_SnapshotProject_Request::_internal_mutable_keys() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.keys_;
}

// repeated .CMsgSteamLearnData data = 5;
inline int CMsgSteamLearn_SnapshotProject_Request::_internal_data_size() const {
  return _internal_data().size();
}
inline int CMsgSteamLearn_SnapshotProject_Request::data_size() const {
  return _internal_data_size();
}
inline void CMsgSteamLearn_SnapshotProject_Request::clear_data() {
  _internal_mutable_data()->Clear();
}
inline ::CMsgSteamLearnData* CMsgSteamLearn_SnapshotProject_Request::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_SnapshotProject_Request.data)
  return _internal_mutable_data()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnData >*
CMsgSteamLearn_SnapshotProject_Request::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearn_SnapshotProject_Request.data)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_data();
}
inline const ::CMsgSteamLearnData& CMsgSteamLearn_SnapshotProject_Request::data(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_SnapshotProject_Request.data)
    return _internal_data().Get(index);
}
inline ::CMsgSteamLearnData* CMsgSteamLearn_SnapshotProject_Request::add_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::CMsgSteamLearnData* _add = _internal_mutable_data()->Add();
  // @@protoc_insertion_point(field_add:CMsgSteamLearn_SnapshotProject_Request.data)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnData >&
CMsgSteamLearn_SnapshotProject_Request::data() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearn_SnapshotProject_Request.data)
  return _internal_data();
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearnData>&
CMsgSteamLearn_SnapshotProject_Request::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_;
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamLearnData>*
CMsgSteamLearn_SnapshotProject_Request::_internal_mutable_data() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.data_;
}

// optional uint32 pending_data_limit_seconds = 6;
inline bool CMsgSteamLearn_SnapshotProject_Request::has_pending_data_limit_seconds() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgSteamLearn_SnapshotProject_Request::clear_pending_data_limit_seconds() {
  _impl_.pending_data_limit_seconds_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t CMsgSteamLearn_SnapshotProject_Request::pending_data_limit_seconds() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_SnapshotProject_Request.pending_data_limit_seconds)
  return _internal_pending_data_limit_seconds();
}
inline void CMsgSteamLearn_SnapshotProject_Request::set_pending_data_limit_seconds(::uint32_t value) {
  _internal_set_pending_data_limit_seconds(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_SnapshotProject_Request.pending_data_limit_seconds)
}
inline ::uint32_t CMsgSteamLearn_SnapshotProject_Request::_internal_pending_data_limit_seconds() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pending_data_limit_seconds_;
}
inline void CMsgSteamLearn_SnapshotProject_Request::_internal_set_pending_data_limit_seconds(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.pending_data_limit_seconds_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamLearn_SnapshotProject_Response

// optional .ESteamLearnSnapshotProjectResult snapshot_result = 1 [default = STEAMLEARN_SNAPSHOT_PROJECT_ERROR];
inline bool CMsgSteamLearn_SnapshotProject_Response::has_snapshot_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamLearn_SnapshotProject_Response::clear_snapshot_result() {
  _impl_.snapshot_result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::ESteamLearnSnapshotProjectResult CMsgSteamLearn_SnapshotProject_Response::snapshot_result() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_SnapshotProject_Response.snapshot_result)
  return _internal_snapshot_result();
}
inline void CMsgSteamLearn_SnapshotProject_Response::set_snapshot_result(::ESteamLearnSnapshotProjectResult value) {
  _internal_set_snapshot_result(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_SnapshotProject_Response.snapshot_result)
}
inline ::ESteamLearnSnapshotProjectResult CMsgSteamLearn_SnapshotProject_Response::_internal_snapshot_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::ESteamLearnSnapshotProjectResult>(_impl_.snapshot_result_);
}
inline void CMsgSteamLearn_SnapshotProject_Response::_internal_set_snapshot_result(::ESteamLearnSnapshotProjectResult value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::ESteamLearnSnapshotProjectResult_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.snapshot_result_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamLearn_BatchOperation_Request

// repeated .CMsgSteamLearn_CacheData_Request cache_data_requests = 1;
inline int CMsgSteamLearn_BatchOperation_Request::_internal_cache_data_requests_size() const {
  return _internal_cache_data_requests().size();
}
inline int CMsgSteamLearn_BatchOperation_Request::cache_data_requests_size() const {
  return _internal_cache_data_requests_size();
}
inline void CMsgSteamLearn_BatchOperation_Request::clear_cache_data_requests() {
  _internal_mutable_cache_data_requests()->Clear();
}
inline ::CMsgSteamLearn_CacheData_Request* CMsgSteamLearn_BatchOperation_Request::mutable_cache_data_requests(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_BatchOperation_Request.cache_data_requests)
  return _internal_mutable_cache_data_requests()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_CacheData_Request >*
CMsgSteamLearn_BatchOperation_Request::mutable_cache_data_requests() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearn_BatchOperation_Request.cache_data_requests)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cache_data_requests();
}
inline const ::CMsgSteamLearn_CacheData_Request& CMsgSteamLearn_BatchOperation_Request::cache_data_requests(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_BatchOperation_Request.cache_data_requests)
    return _internal_cache_data_requests().Get(index);
}
inline ::CMsgSteamLearn_CacheData_Request* CMsgSteamLearn_BatchOperation_Request::add_cache_data_requests() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::CMsgSteamLearn_CacheData_Request* _add = _internal_mutable_cache_data_requests()->Add();
  // @@protoc_insertion_point(field_add:CMsgSteamLearn_BatchOperation_Request.cache_data_requests)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_CacheData_Request >&
CMsgSteamLearn_BatchOperation_Request::cache_data_requests() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearn_BatchOperation_Request.cache_data_requests)
  return _internal_cache_data_requests();
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_CacheData_Request>&
CMsgSteamLearn_BatchOperation_Request::_internal_cache_data_requests() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cache_data_requests_;
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_CacheData_Request>*
CMsgSteamLearn_BatchOperation_Request::_internal_mutable_cache_data_requests() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cache_data_requests_;
}

// repeated .CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;
inline int CMsgSteamLearn_BatchOperation_Request::_internal_snapshot_requests_size() const {
  return _internal_snapshot_requests().size();
}
inline int CMsgSteamLearn_BatchOperation_Request::snapshot_requests_size() const {
  return _internal_snapshot_requests_size();
}
inline void CMsgSteamLearn_BatchOperation_Request::clear_snapshot_requests() {
  _internal_mutable_snapshot_requests()->Clear();
}
inline ::CMsgSteamLearn_SnapshotProject_Request* CMsgSteamLearn_BatchOperation_Request::mutable_snapshot_requests(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_BatchOperation_Request.snapshot_requests)
  return _internal_mutable_snapshot_requests()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_SnapshotProject_Request >*
CMsgSteamLearn_BatchOperation_Request::mutable_snapshot_requests() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearn_BatchOperation_Request.snapshot_requests)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_snapshot_requests();
}
inline const ::CMsgSteamLearn_SnapshotProject_Request& CMsgSteamLearn_BatchOperation_Request::snapshot_requests(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_BatchOperation_Request.snapshot_requests)
    return _internal_snapshot_requests().Get(index);
}
inline ::CMsgSteamLearn_SnapshotProject_Request* CMsgSteamLearn_BatchOperation_Request::add_snapshot_requests() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::CMsgSteamLearn_SnapshotProject_Request* _add = _internal_mutable_snapshot_requests()->Add();
  // @@protoc_insertion_point(field_add:CMsgSteamLearn_BatchOperation_Request.snapshot_requests)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_SnapshotProject_Request >&
CMsgSteamLearn_BatchOperation_Request::snapshot_requests() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearn_BatchOperation_Request.snapshot_requests)
  return _internal_snapshot_requests();
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_SnapshotProject_Request>&
CMsgSteamLearn_BatchOperation_Request::_internal_snapshot_requests() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.snapshot_requests_;
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_SnapshotProject_Request>*
CMsgSteamLearn_BatchOperation_Request::_internal_mutable_snapshot_requests() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.snapshot_requests_;
}

// -------------------------------------------------------------------

// CMsgSteamLearn_BatchOperation_Response

// repeated .CMsgSteamLearn_CacheData_Response cache_data_responses = 1;
inline int CMsgSteamLearn_BatchOperation_Response::_internal_cache_data_responses_size() const {
  return _internal_cache_data_responses().size();
}
inline int CMsgSteamLearn_BatchOperation_Response::cache_data_responses_size() const {
  return _internal_cache_data_responses_size();
}
inline void CMsgSteamLearn_BatchOperation_Response::clear_cache_data_responses() {
  _internal_mutable_cache_data_responses()->Clear();
}
inline ::CMsgSteamLearn_CacheData_Response* CMsgSteamLearn_BatchOperation_Response::mutable_cache_data_responses(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_BatchOperation_Response.cache_data_responses)
  return _internal_mutable_cache_data_responses()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_CacheData_Response >*
CMsgSteamLearn_BatchOperation_Response::mutable_cache_data_responses() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearn_BatchOperation_Response.cache_data_responses)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cache_data_responses();
}
inline const ::CMsgSteamLearn_CacheData_Response& CMsgSteamLearn_BatchOperation_Response::cache_data_responses(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_BatchOperation_Response.cache_data_responses)
    return _internal_cache_data_responses().Get(index);
}
inline ::CMsgSteamLearn_CacheData_Response* CMsgSteamLearn_BatchOperation_Response::add_cache_data_responses() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::CMsgSteamLearn_CacheData_Response* _add = _internal_mutable_cache_data_responses()->Add();
  // @@protoc_insertion_point(field_add:CMsgSteamLearn_BatchOperation_Response.cache_data_responses)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_CacheData_Response >&
CMsgSteamLearn_BatchOperation_Response::cache_data_responses() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearn_BatchOperation_Response.cache_data_responses)
  return _internal_cache_data_responses();
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_CacheData_Response>&
CMsgSteamLearn_BatchOperation_Response::_internal_cache_data_responses() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cache_data_responses_;
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_CacheData_Response>*
CMsgSteamLearn_BatchOperation_Response::_internal_mutable_cache_data_responses() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cache_data_responses_;
}

// repeated .CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;
inline int CMsgSteamLearn_BatchOperation_Response::_internal_snapshot_responses_size() const {
  return _internal_snapshot_responses().size();
}
inline int CMsgSteamLearn_BatchOperation_Response::snapshot_responses_size() const {
  return _internal_snapshot_responses_size();
}
inline void CMsgSteamLearn_BatchOperation_Response::clear_snapshot_responses() {
  _internal_mutable_snapshot_responses()->Clear();
}
inline ::CMsgSteamLearn_SnapshotProject_Response* CMsgSteamLearn_BatchOperation_Response::mutable_snapshot_responses(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_BatchOperation_Response.snapshot_responses)
  return _internal_mutable_snapshot_responses()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_SnapshotProject_Response >*
CMsgSteamLearn_BatchOperation_Response::mutable_snapshot_responses() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearn_BatchOperation_Response.snapshot_responses)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_snapshot_responses();
}
inline const ::CMsgSteamLearn_SnapshotProject_Response& CMsgSteamLearn_BatchOperation_Response::snapshot_responses(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_BatchOperation_Response.snapshot_responses)
    return _internal_snapshot_responses().Get(index);
}
inline ::CMsgSteamLearn_SnapshotProject_Response* CMsgSteamLearn_BatchOperation_Response::add_snapshot_responses() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::CMsgSteamLearn_SnapshotProject_Response* _add = _internal_mutable_snapshot_responses()->Add();
  // @@protoc_insertion_point(field_add:CMsgSteamLearn_BatchOperation_Response.snapshot_responses)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_SnapshotProject_Response >&
CMsgSteamLearn_BatchOperation_Response::snapshot_responses() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearn_BatchOperation_Response.snapshot_responses)
  return _internal_snapshot_responses();
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_SnapshotProject_Response>&
CMsgSteamLearn_BatchOperation_Response::_internal_snapshot_responses() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.snapshot_responses_;
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_SnapshotProject_Response>*
CMsgSteamLearn_BatchOperation_Response::_internal_mutable_snapshot_responses() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.snapshot_responses_;
}

// -------------------------------------------------------------------

// CMsgSteamLearnHMACKeys_CacheDataKeys

// optional uint32 data_source_id = 1;
inline bool CMsgSteamLearnHMACKeys_CacheDataKeys::has_data_source_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamLearnHMACKeys_CacheDataKeys::clear_data_source_id() {
  _impl_.data_source_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CMsgSteamLearnHMACKeys_CacheDataKeys::data_source_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnHMACKeys.CacheDataKeys.data_source_id)
  return _internal_data_source_id();
}
inline void CMsgSteamLearnHMACKeys_CacheDataKeys::set_data_source_id(::uint32_t value) {
  _internal_set_data_source_id(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearnHMACKeys.CacheDataKeys.data_source_id)
}
inline ::uint32_t CMsgSteamLearnHMACKeys_CacheDataKeys::_internal_data_source_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_source_id_;
}
inline void CMsgSteamLearnHMACKeys_CacheDataKeys::_internal_set_data_source_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.data_source_id_ = value;
}

// optional uint32 version = 3;
inline bool CMsgSteamLearnHMACKeys_CacheDataKeys::has_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamLearnHMACKeys_CacheDataKeys::clear_version() {
  _impl_.version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CMsgSteamLearnHMACKeys_CacheDataKeys::version() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnHMACKeys.CacheDataKeys.version)
  return _internal_version();
}
inline void CMsgSteamLearnHMACKeys_CacheDataKeys::set_version(::uint32_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearnHMACKeys.CacheDataKeys.version)
}
inline ::uint32_t CMsgSteamLearnHMACKeys_CacheDataKeys::_internal_version() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.version_;
}
inline void CMsgSteamLearnHMACKeys_CacheDataKeys::_internal_set_version(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.version_ = value;
}

// optional string key = 2;
inline bool CMsgSteamLearnHMACKeys_CacheDataKeys::has_key() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamLearnHMACKeys_CacheDataKeys::clear_key() {
  _impl_.key_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamLearnHMACKeys_CacheDataKeys::key() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnHMACKeys.CacheDataKeys.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CMsgSteamLearnHMACKeys_CacheDataKeys::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgSteamLearnHMACKeys.CacheDataKeys.key)
}
inline std::string* CMsgSteamLearnHMACKeys_CacheDataKeys::mutable_key() {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearnHMACKeys.CacheDataKeys.key)
  return _s;
}
inline const std::string& CMsgSteamLearnHMACKeys_CacheDataKeys::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void CMsgSteamLearnHMACKeys_CacheDataKeys::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.key_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgSteamLearnHMACKeys_CacheDataKeys::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.key_.Mutable( GetArenaForAllocation());
}
inline std::string* CMsgSteamLearnHMACKeys_CacheDataKeys::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearnHMACKeys.CacheDataKeys.key)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.key_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.key_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CMsgSteamLearnHMACKeys_CacheDataKeys::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.key_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearnHMACKeys.CacheDataKeys.key)
}

// -------------------------------------------------------------------

// CMsgSteamLearnHMACKeys_SnapshotProjectKeys

// optional uint32 project_id = 1;
inline bool CMsgSteamLearnHMACKeys_SnapshotProjectKeys::has_project_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamLearnHMACKeys_SnapshotProjectKeys::clear_project_id() {
  _impl_.project_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CMsgSteamLearnHMACKeys_SnapshotProjectKeys::project_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnHMACKeys.SnapshotProjectKeys.project_id)
  return _internal_project_id();
}
inline void CMsgSteamLearnHMACKeys_SnapshotProjectKeys::set_project_id(::uint32_t value) {
  _internal_set_project_id(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearnHMACKeys.SnapshotProjectKeys.project_id)
}
inline ::uint32_t CMsgSteamLearnHMACKeys_SnapshotProjectKeys::_internal_project_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.project_id_;
}
inline void CMsgSteamLearnHMACKeys_SnapshotProjectKeys::_internal_set_project_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.project_id_ = value;
}

// optional uint32 published_version = 3;
inline bool CMsgSteamLearnHMACKeys_SnapshotProjectKeys::has_published_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamLearnHMACKeys_SnapshotProjectKeys::clear_published_version() {
  _impl_.published_version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CMsgSteamLearnHMACKeys_SnapshotProjectKeys::published_version() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnHMACKeys.SnapshotProjectKeys.published_version)
  return _internal_published_version();
}
inline void CMsgSteamLearnHMACKeys_SnapshotProjectKeys::set_published_version(::uint32_t value) {
  _internal_set_published_version(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearnHMACKeys.SnapshotProjectKeys.published_version)
}
inline ::uint32_t CMsgSteamLearnHMACKeys_SnapshotProjectKeys::_internal_published_version() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.published_version_;
}
inline void CMsgSteamLearnHMACKeys_SnapshotProjectKeys::_internal_set_published_version(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.published_version_ = value;
}

// optional string key = 2;
inline bool CMsgSteamLearnHMACKeys_SnapshotProjectKeys::has_key() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamLearnHMACKeys_SnapshotProjectKeys::clear_key() {
  _impl_.key_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamLearnHMACKeys_SnapshotProjectKeys::key() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnHMACKeys.SnapshotProjectKeys.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CMsgSteamLearnHMACKeys_SnapshotProjectKeys::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgSteamLearnHMACKeys.SnapshotProjectKeys.key)
}
inline std::string* CMsgSteamLearnHMACKeys_SnapshotProjectKeys::mutable_key() {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearnHMACKeys.SnapshotProjectKeys.key)
  return _s;
}
inline const std::string& CMsgSteamLearnHMACKeys_SnapshotProjectKeys::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void CMsgSteamLearnHMACKeys_SnapshotProjectKeys::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.key_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgSteamLearnHMACKeys_SnapshotProjectKeys::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.key_.Mutable( GetArenaForAllocation());
}
inline std::string* CMsgSteamLearnHMACKeys_SnapshotProjectKeys::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearnHMACKeys.SnapshotProjectKeys.key)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.key_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.key_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CMsgSteamLearnHMACKeys_SnapshotProjectKeys::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.key_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearnHMACKeys.SnapshotProjectKeys.key)
}

// -------------------------------------------------------------------

// CMsgSteamLearnHMACKeys

// optional string register_data_source_key = 1;
inline bool CMsgSteamLearnHMACKeys::has_register_data_source_key() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamLearnHMACKeys::clear_register_data_source_key() {
  _impl_.register_data_source_key_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamLearnHMACKeys::register_data_source_key() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnHMACKeys.register_data_source_key)
  return _internal_register_data_source_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CMsgSteamLearnHMACKeys::set_register_data_source_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.register_data_source_key_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgSteamLearnHMACKeys.register_data_source_key)
}
inline std::string* CMsgSteamLearnHMACKeys::mutable_register_data_source_key() {
  std::string* _s = _internal_mutable_register_data_source_key();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearnHMACKeys.register_data_source_key)
  return _s;
}
inline const std::string& CMsgSteamLearnHMACKeys::_internal_register_data_source_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.register_data_source_key_.Get();
}
inline void CMsgSteamLearnHMACKeys::_internal_set_register_data_source_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.register_data_source_key_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgSteamLearnHMACKeys::_internal_mutable_register_data_source_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.register_data_source_key_.Mutable( GetArenaForAllocation());
}
inline std::string* CMsgSteamLearnHMACKeys::release_register_data_source_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearnHMACKeys.register_data_source_key)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.register_data_source_key_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.register_data_source_key_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CMsgSteamLearnHMACKeys::set_allocated_register_data_source_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.register_data_source_key_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.register_data_source_key_.IsDefault()) {
          _impl_.register_data_source_key_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearnHMACKeys.register_data_source_key)
}

// repeated .CMsgSteamLearnHMACKeys.CacheDataKeys cache_data_keys = 2;
inline int CMsgSteamLearnHMACKeys::_internal_cache_data_keys_size() const {
  return _internal_cache_data_keys().size();
}
inline int CMsgSteamLearnHMACKeys::cache_data_keys_size() const {
  return _internal_cache_data_keys_size();
}
inline void CMsgSteamLearnHMACKeys::clear_cache_data_keys() {
  _internal_mutable_cache_data_keys()->Clear();
}
inline ::CMsgSteamLearnHMACKeys_CacheDataKeys* CMsgSteamLearnHMACKeys::mutable_cache_data_keys(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearnHMACKeys.cache_data_keys)
  return _internal_mutable_cache_data_keys()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnHMACKeys_CacheDataKeys >*
CMsgSteamLearnHMACKeys::mutable_cache_data_keys() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearnHMACKeys.cache_data_keys)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cache_data_keys();
}
inline const ::CMsgSteamLearnHMACKeys_CacheDataKeys& CMsgSteamLearnHMACKeys::cache_data_keys(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnHMACKeys.cache_data_keys)
    return _internal_cache_data_keys().Get(index);
}
inline ::CMsgSteamLearnHMACKeys_CacheDataKeys* CMsgSteamLearnHMACKeys::add_cache_data_keys() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::CMsgSteamLearnHMACKeys_CacheDataKeys* _add = _internal_mutable_cache_data_keys()->Add();
  // @@protoc_insertion_point(field_add:CMsgSteamLearnHMACKeys.cache_data_keys)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnHMACKeys_CacheDataKeys >&
CMsgSteamLearnHMACKeys::cache_data_keys() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearnHMACKeys.cache_data_keys)
  return _internal_cache_data_keys();
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearnHMACKeys_CacheDataKeys>&
CMsgSteamLearnHMACKeys::_internal_cache_data_keys() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cache_data_keys_;
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamLearnHMACKeys_CacheDataKeys>*
CMsgSteamLearnHMACKeys::_internal_mutable_cache_data_keys() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cache_data_keys_;
}

// repeated .CMsgSteamLearnHMACKeys.SnapshotProjectKeys snapshot_project_keys = 3;
inline int CMsgSteamLearnHMACKeys::_internal_snapshot_project_keys_size() const {
  return _internal_snapshot_project_keys().size();
}
inline int CMsgSteamLearnHMACKeys::snapshot_project_keys_size() const {
  return _internal_snapshot_project_keys_size();
}
inline void CMsgSteamLearnHMACKeys::clear_snapshot_project_keys() {
  _internal_mutable_snapshot_project_keys()->Clear();
}
inline ::CMsgSteamLearnHMACKeys_SnapshotProjectKeys* CMsgSteamLearnHMACKeys::mutable_snapshot_project_keys(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearnHMACKeys.snapshot_project_keys)
  return _internal_mutable_snapshot_project_keys()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnHMACKeys_SnapshotProjectKeys >*
CMsgSteamLearnHMACKeys::mutable_snapshot_project_keys() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearnHMACKeys.snapshot_project_keys)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_snapshot_project_keys();
}
inline const ::CMsgSteamLearnHMACKeys_SnapshotProjectKeys& CMsgSteamLearnHMACKeys::snapshot_project_keys(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearnHMACKeys.snapshot_project_keys)
    return _internal_snapshot_project_keys().Get(index);
}
inline ::CMsgSteamLearnHMACKeys_SnapshotProjectKeys* CMsgSteamLearnHMACKeys::add_snapshot_project_keys() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::CMsgSteamLearnHMACKeys_SnapshotProjectKeys* _add = _internal_mutable_snapshot_project_keys()->Add();
  // @@protoc_insertion_point(field_add:CMsgSteamLearnHMACKeys.snapshot_project_keys)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearnHMACKeys_SnapshotProjectKeys >&
CMsgSteamLearnHMACKeys::snapshot_project_keys() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearnHMACKeys.snapshot_project_keys)
  return _internal_snapshot_project_keys();
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearnHMACKeys_SnapshotProjectKeys>&
CMsgSteamLearnHMACKeys::_internal_snapshot_project_keys() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.snapshot_project_keys_;
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamLearnHMACKeys_SnapshotProjectKeys>*
CMsgSteamLearnHMACKeys::_internal_mutable_snapshot_project_keys() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.snapshot_project_keys_;
}

// -------------------------------------------------------------------

// CMsgSteamLearn_GetHMACKeys_Request

// optional uint32 appid = 1;
inline bool CMsgSteamLearn_GetHMACKeys_Request::has_appid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamLearn_GetHMACKeys_Request::clear_appid() {
  _impl_.appid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t CMsgSteamLearn_GetHMACKeys_Request::appid() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_GetHMACKeys_Request.appid)
  return _internal_appid();
}
inline void CMsgSteamLearn_GetHMACKeys_Request::set_appid(::uint32_t value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_GetHMACKeys_Request.appid)
}
inline ::uint32_t CMsgSteamLearn_GetHMACKeys_Request::_internal_appid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.appid_;
}
inline void CMsgSteamLearn_GetHMACKeys_Request::_internal_set_appid(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.appid_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamLearn_GetHMACKeys_Response

// optional .ESteamLearnGetHMACKeysResult result = 1 [default = STEAMLEARN_GET_HMAC_KEYS_SUCCESS];
inline bool CMsgSteamLearn_GetHMACKeys_Response::has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamLearn_GetHMACKeys_Response::clear_result() {
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::ESteamLearnGetHMACKeysResult CMsgSteamLearn_GetHMACKeys_Response::result() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_GetHMACKeys_Response.result)
  return _internal_result();
}
inline void CMsgSteamLearn_GetHMACKeys_Response::set_result(::ESteamLearnGetHMACKeysResult value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_GetHMACKeys_Response.result)
}
inline ::ESteamLearnGetHMACKeysResult CMsgSteamLearn_GetHMACKeys_Response::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::ESteamLearnGetHMACKeysResult>(_impl_.result_);
}
inline void CMsgSteamLearn_GetHMACKeys_Response::_internal_set_result(::ESteamLearnGetHMACKeysResult value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::ESteamLearnGetHMACKeysResult_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.result_ = value;
}

// optional .CMsgSteamLearnHMACKeys keys = 2;
inline bool CMsgSteamLearn_GetHMACKeys_Response::has_keys() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.keys_ != nullptr);
  return value;
}
inline void CMsgSteamLearn_GetHMACKeys_Response::clear_keys() {
  if (_impl_.keys_ != nullptr) _impl_.keys_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgSteamLearnHMACKeys& CMsgSteamLearn_GetHMACKeys_Response::_internal_keys() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::CMsgSteamLearnHMACKeys* p = _impl_.keys_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamLearnHMACKeys&>(::_CMsgSteamLearnHMACKeys_default_instance_);
}
inline const ::CMsgSteamLearnHMACKeys& CMsgSteamLearn_GetHMACKeys_Response::keys() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_GetHMACKeys_Response.keys)
  return _internal_keys();
}
inline void CMsgSteamLearn_GetHMACKeys_Response::unsafe_arena_set_allocated_keys(::CMsgSteamLearnHMACKeys* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.keys_);
  }
  _impl_.keys_ = reinterpret_cast<::CMsgSteamLearnHMACKeys*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamLearn_GetHMACKeys_Response.keys)
}
inline ::CMsgSteamLearnHMACKeys* CMsgSteamLearn_GetHMACKeys_Response::release_keys() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSteamLearnHMACKeys* released = _impl_.keys_;
  _impl_.keys_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgSteamLearnHMACKeys* CMsgSteamLearn_GetHMACKeys_Response::unsafe_arena_release_keys() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearn_GetHMACKeys_Response.keys)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSteamLearnHMACKeys* temp = _impl_.keys_;
  _impl_.keys_ = nullptr;
  return temp;
}
inline ::CMsgSteamLearnHMACKeys* CMsgSteamLearn_GetHMACKeys_Response::_internal_mutable_keys() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.keys_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSteamLearnHMACKeys>(GetArenaForAllocation());
    _impl_.keys_ = reinterpret_cast<::CMsgSteamLearnHMACKeys*>(p);
  }
  return _impl_.keys_;
}
inline ::CMsgSteamLearnHMACKeys* CMsgSteamLearn_GetHMACKeys_Response::mutable_keys() {
  ::CMsgSteamLearnHMACKeys* _msg = _internal_mutable_keys();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_GetHMACKeys_Response.keys)
  return _msg;
}
inline void CMsgSteamLearn_GetHMACKeys_Response::set_allocated_keys(::CMsgSteamLearnHMACKeys* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::CMsgSteamLearnHMACKeys*>(_impl_.keys_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::CMsgSteamLearnHMACKeys*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.keys_ = reinterpret_cast<::CMsgSteamLearnHMACKeys*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearn_GetHMACKeys_Response.keys)
}

// -------------------------------------------------------------------

// CMsgSteamLearn_Inference_Request

// optional string access_token = 1;
inline bool CMsgSteamLearn_Inference_Request::has_access_token() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamLearn_Inference_Request::clear_access_token() {
  _impl_.access_token_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamLearn_Inference_Request::access_token() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_Inference_Request.access_token)
  return _internal_access_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CMsgSteamLearn_Inference_Request::set_access_token(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.access_token_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_Inference_Request.access_token)
}
inline std::string* CMsgSteamLearn_Inference_Request::mutable_access_token() {
  std::string* _s = _internal_mutable_access_token();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_Inference_Request.access_token)
  return _s;
}
inline const std::string& CMsgSteamLearn_Inference_Request::_internal_access_token() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.access_token_.Get();
}
inline void CMsgSteamLearn_Inference_Request::_internal_set_access_token(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.access_token_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgSteamLearn_Inference_Request::_internal_mutable_access_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.access_token_.Mutable( GetArenaForAllocation());
}
inline std::string* CMsgSteamLearn_Inference_Request::release_access_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearn_Inference_Request.access_token)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.access_token_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.access_token_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CMsgSteamLearn_Inference_Request::set_allocated_access_token(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.access_token_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.access_token_.IsDefault()) {
          _impl_.access_token_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearn_Inference_Request.access_token)
}

// optional .CMsgSteamLearn_AccessData access_data = 2;
inline bool CMsgSteamLearn_Inference_Request::has_access_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.access_data_ != nullptr);
  return value;
}
inline void CMsgSteamLearn_Inference_Request::clear_access_data() {
  if (_impl_.access_data_ != nullptr) _impl_.access_data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::CMsgSteamLearn_AccessData& CMsgSteamLearn_Inference_Request::_internal_access_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::CMsgSteamLearn_AccessData* p = _impl_.access_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamLearn_AccessData&>(::_CMsgSteamLearn_AccessData_default_instance_);
}
inline const ::CMsgSteamLearn_AccessData& CMsgSteamLearn_Inference_Request::access_data() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_Inference_Request.access_data)
  return _internal_access_data();
}
inline void CMsgSteamLearn_Inference_Request::unsafe_arena_set_allocated_access_data(::CMsgSteamLearn_AccessData* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.access_data_);
  }
  _impl_.access_data_ = reinterpret_cast<::CMsgSteamLearn_AccessData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamLearn_Inference_Request.access_data)
}
inline ::CMsgSteamLearn_AccessData* CMsgSteamLearn_Inference_Request::release_access_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamLearn_AccessData* released = _impl_.access_data_;
  _impl_.access_data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgSteamLearn_AccessData* CMsgSteamLearn_Inference_Request::unsafe_arena_release_access_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearn_Inference_Request.access_data)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamLearn_AccessData* temp = _impl_.access_data_;
  _impl_.access_data_ = nullptr;
  return temp;
}
inline ::CMsgSteamLearn_AccessData* CMsgSteamLearn_Inference_Request::_internal_mutable_access_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.access_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSteamLearn_AccessData>(GetArenaForAllocation());
    _impl_.access_data_ = reinterpret_cast<::CMsgSteamLearn_AccessData*>(p);
  }
  return _impl_.access_data_;
}
inline ::CMsgSteamLearn_AccessData* CMsgSteamLearn_Inference_Request::mutable_access_data() {
  ::CMsgSteamLearn_AccessData* _msg = _internal_mutable_access_data();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_Inference_Request.access_data)
  return _msg;
}
inline void CMsgSteamLearn_Inference_Request::set_allocated_access_data(::CMsgSteamLearn_AccessData* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::CMsgSteamLearn_AccessData*>(_impl_.access_data_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::CMsgSteamLearn_AccessData*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.access_data_ = reinterpret_cast<::CMsgSteamLearn_AccessData*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearn_Inference_Request.access_data)
}

// optional uint32 project_id = 3;
inline bool CMsgSteamLearn_Inference_Request::has_project_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgSteamLearn_Inference_Request::clear_project_id() {
  _impl_.project_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t CMsgSteamLearn_Inference_Request::project_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_Inference_Request.project_id)
  return _internal_project_id();
}
inline void CMsgSteamLearn_Inference_Request::set_project_id(::uint32_t value) {
  _internal_set_project_id(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_Inference_Request.project_id)
}
inline ::uint32_t CMsgSteamLearn_Inference_Request::_internal_project_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.project_id_;
}
inline void CMsgSteamLearn_Inference_Request::_internal_set_project_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.project_id_ = value;
}

// optional uint32 published_version = 4;
inline bool CMsgSteamLearn_Inference_Request::has_published_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgSteamLearn_Inference_Request::clear_published_version() {
  _impl_.published_version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t CMsgSteamLearn_Inference_Request::published_version() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_Inference_Request.published_version)
  return _internal_published_version();
}
inline void CMsgSteamLearn_Inference_Request::set_published_version(::uint32_t value) {
  _internal_set_published_version(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_Inference_Request.published_version)
}
inline ::uint32_t CMsgSteamLearn_Inference_Request::_internal_published_version() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.published_version_;
}
inline void CMsgSteamLearn_Inference_Request::_internal_set_published_version(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.published_version_ = value;
}

// optional uint32 override_train_id = 5;
inline bool CMsgSteamLearn_Inference_Request::has_override_train_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CMsgSteamLearn_Inference_Request::clear_override_train_id() {
  _impl_.override_train_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t CMsgSteamLearn_Inference_Request::override_train_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_Inference_Request.override_train_id)
  return _internal_override_train_id();
}
inline void CMsgSteamLearn_Inference_Request::set_override_train_id(::uint32_t value) {
  _internal_set_override_train_id(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_Inference_Request.override_train_id)
}
inline ::uint32_t CMsgSteamLearn_Inference_Request::_internal_override_train_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.override_train_id_;
}
inline void CMsgSteamLearn_Inference_Request::_internal_set_override_train_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.override_train_id_ = value;
}

// optional .CMsgSteamLearnDataList data = 6;
inline bool CMsgSteamLearn_Inference_Request::has_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.data_ != nullptr);
  return value;
}
inline void CMsgSteamLearn_Inference_Request::clear_data() {
  if (_impl_.data_ != nullptr) _impl_.data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::CMsgSteamLearnDataList& CMsgSteamLearn_Inference_Request::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::CMsgSteamLearnDataList* p = _impl_.data_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamLearnDataList&>(::_CMsgSteamLearnDataList_default_instance_);
}
inline const ::CMsgSteamLearnDataList& CMsgSteamLearn_Inference_Request::data() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_Inference_Request.data)
  return _internal_data();
}
inline void CMsgSteamLearn_Inference_Request::unsafe_arena_set_allocated_data(::CMsgSteamLearnDataList* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.data_);
  }
  _impl_.data_ = reinterpret_cast<::CMsgSteamLearnDataList*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamLearn_Inference_Request.data)
}
inline ::CMsgSteamLearnDataList* CMsgSteamLearn_Inference_Request::release_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgSteamLearnDataList* released = _impl_.data_;
  _impl_.data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgSteamLearnDataList* CMsgSteamLearn_Inference_Request::unsafe_arena_release_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearn_Inference_Request.data)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgSteamLearnDataList* temp = _impl_.data_;
  _impl_.data_ = nullptr;
  return temp;
}
inline ::CMsgSteamLearnDataList* CMsgSteamLearn_Inference_Request::_internal_mutable_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.data_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSteamLearnDataList>(GetArenaForAllocation());
    _impl_.data_ = reinterpret_cast<::CMsgSteamLearnDataList*>(p);
  }
  return _impl_.data_;
}
inline ::CMsgSteamLearnDataList* CMsgSteamLearn_Inference_Request::mutable_data() {
  ::CMsgSteamLearnDataList* _msg = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_Inference_Request.data)
  return _msg;
}
inline void CMsgSteamLearn_Inference_Request::set_allocated_data(::CMsgSteamLearnDataList* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::CMsgSteamLearnDataList*>(_impl_.data_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::CMsgSteamLearnDataList*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.data_ = reinterpret_cast<::CMsgSteamLearnDataList*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearn_Inference_Request.data)
}

// repeated float additional_data = 7;
inline int CMsgSteamLearn_Inference_Request::_internal_additional_data_size() const {
  return _internal_additional_data().size();
}
inline int CMsgSteamLearn_Inference_Request::additional_data_size() const {
  return _internal_additional_data_size();
}
inline void CMsgSteamLearn_Inference_Request::clear_additional_data() {
  _internal_mutable_additional_data()->Clear();
}
inline float CMsgSteamLearn_Inference_Request::additional_data(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_Inference_Request.additional_data)
  return _internal_additional_data().Get(index);
}
inline void CMsgSteamLearn_Inference_Request::set_additional_data(int index, float value) {
  _internal_mutable_additional_data()->Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_Inference_Request.additional_data)
}
inline void CMsgSteamLearn_Inference_Request::add_additional_data(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_additional_data()->Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamLearn_Inference_Request.additional_data)
}
inline const ::google::protobuf::RepeatedField<float>& CMsgSteamLearn_Inference_Request::additional_data() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearn_Inference_Request.additional_data)
  return _internal_additional_data();
}
inline ::google::protobuf::RepeatedField<float>* CMsgSteamLearn_Inference_Request::mutable_additional_data() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearn_Inference_Request.additional_data)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_additional_data();
}

inline const ::google::protobuf::RepeatedField<float>& CMsgSteamLearn_Inference_Request::_internal_additional_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.additional_data_;
}
inline ::google::protobuf::RepeatedField<float>* CMsgSteamLearn_Inference_Request::_internal_mutable_additional_data() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.additional_data_;
}

// -------------------------------------------------------------------

// CMsgSteamLearn_InferenceMetadata_Request

// optional string access_token = 1;
inline bool CMsgSteamLearn_InferenceMetadata_Request::has_access_token() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Request::clear_access_token() {
  _impl_.access_token_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamLearn_InferenceMetadata_Request::access_token() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Request.access_token)
  return _internal_access_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CMsgSteamLearn_InferenceMetadata_Request::set_access_token(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.access_token_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadata_Request.access_token)
}
inline std::string* CMsgSteamLearn_InferenceMetadata_Request::mutable_access_token() {
  std::string* _s = _internal_mutable_access_token();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_InferenceMetadata_Request.access_token)
  return _s;
}
inline const std::string& CMsgSteamLearn_InferenceMetadata_Request::_internal_access_token() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.access_token_.Get();
}
inline void CMsgSteamLearn_InferenceMetadata_Request::_internal_set_access_token(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.access_token_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgSteamLearn_InferenceMetadata_Request::_internal_mutable_access_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.access_token_.Mutable( GetArenaForAllocation());
}
inline std::string* CMsgSteamLearn_InferenceMetadata_Request::release_access_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearn_InferenceMetadata_Request.access_token)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.access_token_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.access_token_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CMsgSteamLearn_InferenceMetadata_Request::set_allocated_access_token(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.access_token_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.access_token_.IsDefault()) {
          _impl_.access_token_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearn_InferenceMetadata_Request.access_token)
}

// optional .CMsgSteamLearn_AccessData access_data = 2;
inline bool CMsgSteamLearn_InferenceMetadata_Request::has_access_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.access_data_ != nullptr);
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Request::clear_access_data() {
  if (_impl_.access_data_ != nullptr) _impl_.access_data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::CMsgSteamLearn_AccessData& CMsgSteamLearn_InferenceMetadata_Request::_internal_access_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::CMsgSteamLearn_AccessData* p = _impl_.access_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamLearn_AccessData&>(::_CMsgSteamLearn_AccessData_default_instance_);
}
inline const ::CMsgSteamLearn_AccessData& CMsgSteamLearn_InferenceMetadata_Request::access_data() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Request.access_data)
  return _internal_access_data();
}
inline void CMsgSteamLearn_InferenceMetadata_Request::unsafe_arena_set_allocated_access_data(::CMsgSteamLearn_AccessData* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.access_data_);
  }
  _impl_.access_data_ = reinterpret_cast<::CMsgSteamLearn_AccessData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamLearn_InferenceMetadata_Request.access_data)
}
inline ::CMsgSteamLearn_AccessData* CMsgSteamLearn_InferenceMetadata_Request::release_access_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamLearn_AccessData* released = _impl_.access_data_;
  _impl_.access_data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgSteamLearn_AccessData* CMsgSteamLearn_InferenceMetadata_Request::unsafe_arena_release_access_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearn_InferenceMetadata_Request.access_data)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamLearn_AccessData* temp = _impl_.access_data_;
  _impl_.access_data_ = nullptr;
  return temp;
}
inline ::CMsgSteamLearn_AccessData* CMsgSteamLearn_InferenceMetadata_Request::_internal_mutable_access_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.access_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSteamLearn_AccessData>(GetArenaForAllocation());
    _impl_.access_data_ = reinterpret_cast<::CMsgSteamLearn_AccessData*>(p);
  }
  return _impl_.access_data_;
}
inline ::CMsgSteamLearn_AccessData* CMsgSteamLearn_InferenceMetadata_Request::mutable_access_data() {
  ::CMsgSteamLearn_AccessData* _msg = _internal_mutable_access_data();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_InferenceMetadata_Request.access_data)
  return _msg;
}
inline void CMsgSteamLearn_InferenceMetadata_Request::set_allocated_access_data(::CMsgSteamLearn_AccessData* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::CMsgSteamLearn_AccessData*>(_impl_.access_data_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::CMsgSteamLearn_AccessData*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.access_data_ = reinterpret_cast<::CMsgSteamLearn_AccessData*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearn_InferenceMetadata_Request.access_data)
}

// optional uint32 project_id = 3;
inline bool CMsgSteamLearn_InferenceMetadata_Request::has_project_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Request::clear_project_id() {
  _impl_.project_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CMsgSteamLearn_InferenceMetadata_Request::project_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Request.project_id)
  return _internal_project_id();
}
inline void CMsgSteamLearn_InferenceMetadata_Request::set_project_id(::uint32_t value) {
  _internal_set_project_id(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadata_Request.project_id)
}
inline ::uint32_t CMsgSteamLearn_InferenceMetadata_Request::_internal_project_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.project_id_;
}
inline void CMsgSteamLearn_InferenceMetadata_Request::_internal_set_project_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.project_id_ = value;
}

// optional uint32 published_version = 4;
inline bool CMsgSteamLearn_InferenceMetadata_Request::has_published_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Request::clear_published_version() {
  _impl_.published_version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t CMsgSteamLearn_InferenceMetadata_Request::published_version() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Request.published_version)
  return _internal_published_version();
}
inline void CMsgSteamLearn_InferenceMetadata_Request::set_published_version(::uint32_t value) {
  _internal_set_published_version(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadata_Request.published_version)
}
inline ::uint32_t CMsgSteamLearn_InferenceMetadata_Request::_internal_published_version() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.published_version_;
}
inline void CMsgSteamLearn_InferenceMetadata_Request::_internal_set_published_version(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.published_version_ = value;
}

// optional uint32 override_train_id = 5;
inline bool CMsgSteamLearn_InferenceMetadata_Request::has_override_train_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Request::clear_override_train_id() {
  _impl_.override_train_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t CMsgSteamLearn_InferenceMetadata_Request::override_train_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Request.override_train_id)
  return _internal_override_train_id();
}
inline void CMsgSteamLearn_InferenceMetadata_Request::set_override_train_id(::uint32_t value) {
  _internal_set_override_train_id(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadata_Request.override_train_id)
}
inline ::uint32_t CMsgSteamLearn_InferenceMetadata_Request::_internal_override_train_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.override_train_id_;
}
inline void CMsgSteamLearn_InferenceMetadata_Request::_internal_set_override_train_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.override_train_id_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamLearn_InferenceMetadataBackend_Request

// optional uint32 project_id = 1;
inline bool CMsgSteamLearn_InferenceMetadataBackend_Request::has_project_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadataBackend_Request::clear_project_id() {
  _impl_.project_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t CMsgSteamLearn_InferenceMetadataBackend_Request::project_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadataBackend_Request.project_id)
  return _internal_project_id();
}
inline void CMsgSteamLearn_InferenceMetadataBackend_Request::set_project_id(::uint32_t value) {
  _internal_set_project_id(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadataBackend_Request.project_id)
}
inline ::uint32_t CMsgSteamLearn_InferenceMetadataBackend_Request::_internal_project_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.project_id_;
}
inline void CMsgSteamLearn_InferenceMetadataBackend_Request::_internal_set_project_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.project_id_ = value;
}

// optional uint32 fetch_id = 2;
inline bool CMsgSteamLearn_InferenceMetadataBackend_Request::has_fetch_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadataBackend_Request::clear_fetch_id() {
  _impl_.fetch_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CMsgSteamLearn_InferenceMetadataBackend_Request::fetch_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadataBackend_Request.fetch_id)
  return _internal_fetch_id();
}
inline void CMsgSteamLearn_InferenceMetadataBackend_Request::set_fetch_id(::uint32_t value) {
  _internal_set_fetch_id(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadataBackend_Request.fetch_id)
}
inline ::uint32_t CMsgSteamLearn_InferenceMetadataBackend_Request::_internal_fetch_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fetch_id_;
}
inline void CMsgSteamLearn_InferenceMetadataBackend_Request::_internal_set_fetch_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.fetch_id_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamLearn_InferenceMetadata_Response_RowRange

// optional uint64 min_row = 1;
inline bool CMsgSteamLearn_InferenceMetadata_Response_RowRange::has_min_row() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_RowRange::clear_min_row() {
  _impl_.min_row_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t CMsgSteamLearn_InferenceMetadata_Response_RowRange::min_row() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.RowRange.min_row)
  return _internal_min_row();
}
inline void CMsgSteamLearn_InferenceMetadata_Response_RowRange::set_min_row(::uint64_t value) {
  _internal_set_min_row(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadata_Response.RowRange.min_row)
}
inline ::uint64_t CMsgSteamLearn_InferenceMetadata_Response_RowRange::_internal_min_row() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.min_row_;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_RowRange::_internal_set_min_row(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.min_row_ = value;
}

// optional uint64 max_row = 2;
inline bool CMsgSteamLearn_InferenceMetadata_Response_RowRange::has_max_row() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_RowRange::clear_max_row() {
  _impl_.max_row_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t CMsgSteamLearn_InferenceMetadata_Response_RowRange::max_row() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.RowRange.max_row)
  return _internal_max_row();
}
inline void CMsgSteamLearn_InferenceMetadata_Response_RowRange::set_max_row(::uint64_t value) {
  _internal_set_max_row(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadata_Response.RowRange.max_row)
}
inline ::uint64_t CMsgSteamLearn_InferenceMetadata_Response_RowRange::_internal_max_row() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.max_row_;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_RowRange::_internal_set_max_row(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.max_row_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamLearn_InferenceMetadata_Response_Range

// optional string data_element_path = 1;
inline bool CMsgSteamLearn_InferenceMetadata_Response_Range::has_data_element_path() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_Range::clear_data_element_path() {
  _impl_.data_element_path_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamLearn_InferenceMetadata_Response_Range::data_element_path() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.Range.data_element_path)
  return _internal_data_element_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CMsgSteamLearn_InferenceMetadata_Response_Range::set_data_element_path(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_element_path_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadata_Response.Range.data_element_path)
}
inline std::string* CMsgSteamLearn_InferenceMetadata_Response_Range::mutable_data_element_path() {
  std::string* _s = _internal_mutable_data_element_path();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_InferenceMetadata_Response.Range.data_element_path)
  return _s;
}
inline const std::string& CMsgSteamLearn_InferenceMetadata_Response_Range::_internal_data_element_path() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_element_path_.Get();
}
inline void CMsgSteamLearn_InferenceMetadata_Response_Range::_internal_set_data_element_path(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_element_path_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgSteamLearn_InferenceMetadata_Response_Range::_internal_mutable_data_element_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.data_element_path_.Mutable( GetArenaForAllocation());
}
inline std::string* CMsgSteamLearn_InferenceMetadata_Response_Range::release_data_element_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearn_InferenceMetadata_Response.Range.data_element_path)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.data_element_path_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.data_element_path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_Range::set_allocated_data_element_path(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.data_element_path_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_element_path_.IsDefault()) {
          _impl_.data_element_path_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearn_InferenceMetadata_Response.Range.data_element_path)
}

// optional float min_value = 2;
inline bool CMsgSteamLearn_InferenceMetadata_Response_Range::has_min_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_Range::clear_min_value() {
  _impl_.min_value_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float CMsgSteamLearn_InferenceMetadata_Response_Range::min_value() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.Range.min_value)
  return _internal_min_value();
}
inline void CMsgSteamLearn_InferenceMetadata_Response_Range::set_min_value(float value) {
  _internal_set_min_value(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadata_Response.Range.min_value)
}
inline float CMsgSteamLearn_InferenceMetadata_Response_Range::_internal_min_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.min_value_;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_Range::_internal_set_min_value(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.min_value_ = value;
}

// optional float max_value = 3;
inline bool CMsgSteamLearn_InferenceMetadata_Response_Range::has_max_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_Range::clear_max_value() {
  _impl_.max_value_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float CMsgSteamLearn_InferenceMetadata_Response_Range::max_value() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.Range.max_value)
  return _internal_max_value();
}
inline void CMsgSteamLearn_InferenceMetadata_Response_Range::set_max_value(float value) {
  _internal_set_max_value(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadata_Response.Range.max_value)
}
inline float CMsgSteamLearn_InferenceMetadata_Response_Range::_internal_max_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.max_value_;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_Range::_internal_set_max_value(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.max_value_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamLearn_InferenceMetadata_Response_StdDev

// optional string data_element_path = 1;
inline bool CMsgSteamLearn_InferenceMetadata_Response_StdDev::has_data_element_path() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_StdDev::clear_data_element_path() {
  _impl_.data_element_path_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamLearn_InferenceMetadata_Response_StdDev::data_element_path() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.StdDev.data_element_path)
  return _internal_data_element_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CMsgSteamLearn_InferenceMetadata_Response_StdDev::set_data_element_path(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_element_path_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadata_Response.StdDev.data_element_path)
}
inline std::string* CMsgSteamLearn_InferenceMetadata_Response_StdDev::mutable_data_element_path() {
  std::string* _s = _internal_mutable_data_element_path();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_InferenceMetadata_Response.StdDev.data_element_path)
  return _s;
}
inline const std::string& CMsgSteamLearn_InferenceMetadata_Response_StdDev::_internal_data_element_path() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_element_path_.Get();
}
inline void CMsgSteamLearn_InferenceMetadata_Response_StdDev::_internal_set_data_element_path(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_element_path_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgSteamLearn_InferenceMetadata_Response_StdDev::_internal_mutable_data_element_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.data_element_path_.Mutable( GetArenaForAllocation());
}
inline std::string* CMsgSteamLearn_InferenceMetadata_Response_StdDev::release_data_element_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearn_InferenceMetadata_Response.StdDev.data_element_path)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.data_element_path_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.data_element_path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_StdDev::set_allocated_data_element_path(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.data_element_path_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_element_path_.IsDefault()) {
          _impl_.data_element_path_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearn_InferenceMetadata_Response.StdDev.data_element_path)
}

// optional float mean = 2;
inline bool CMsgSteamLearn_InferenceMetadata_Response_StdDev::has_mean() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_StdDev::clear_mean() {
  _impl_.mean_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float CMsgSteamLearn_InferenceMetadata_Response_StdDev::mean() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.StdDev.mean)
  return _internal_mean();
}
inline void CMsgSteamLearn_InferenceMetadata_Response_StdDev::set_mean(float value) {
  _internal_set_mean(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadata_Response.StdDev.mean)
}
inline float CMsgSteamLearn_InferenceMetadata_Response_StdDev::_internal_mean() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mean_;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_StdDev::_internal_set_mean(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.mean_ = value;
}

// optional float std_dev = 3;
inline bool CMsgSteamLearn_InferenceMetadata_Response_StdDev::has_std_dev() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_StdDev::clear_std_dev() {
  _impl_.std_dev_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float CMsgSteamLearn_InferenceMetadata_Response_StdDev::std_dev() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.StdDev.std_dev)
  return _internal_std_dev();
}
inline void CMsgSteamLearn_InferenceMetadata_Response_StdDev::set_std_dev(float value) {
  _internal_set_std_dev(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadata_Response.StdDev.std_dev)
}
inline float CMsgSteamLearn_InferenceMetadata_Response_StdDev::_internal_std_dev() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.std_dev_;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_StdDev::_internal_set_std_dev(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.std_dev_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry

// optional uint32 value = 1;
inline bool CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry::has_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry::clear_value() {
  _impl_.value_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry::value() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.value)
  return _internal_value();
}
inline void CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry::set_value(::uint32_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.value)
}
inline ::uint32_t CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry::_internal_set_value(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.value_ = value;
}

// optional uint32 mapping = 2;
inline bool CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry::has_mapping() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry::clear_mapping() {
  _impl_.mapping_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry::mapping() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.mapping)
  return _internal_mapping();
}
inline void CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry::set_mapping(::uint32_t value) {
  _internal_set_mapping(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.mapping)
}
inline ::uint32_t CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry::_internal_mapping() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mapping_;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry::_internal_set_mapping(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.mapping_ = value;
}

// optional uint64 count = 3;
inline bool CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry::has_count() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry::clear_count() {
  _impl_.count_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint64_t CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry::count() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.count)
  return _internal_count();
}
inline void CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry::set_count(::uint64_t value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.count)
}
inline ::uint64_t CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry::_internal_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.count_;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry::_internal_set_count(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.count_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry

// optional uint32 key = 1;
inline bool CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry::has_key() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry::clear_key() {
  _impl_.key_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry::key() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry.key)
  return _internal_key();
}
inline void CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry::set_key(::uint32_t value) {
  _internal_set_key(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry.key)
}
inline ::uint32_t CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry::_internal_set_key(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.key_ = value;
}

// optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;
inline bool CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry::has_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.value_ != nullptr);
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry::clear_value() {
  if (_impl_.value_ != nullptr) _impl_.value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry& CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* p = _impl_.value_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry&>(::_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry_default_instance_);
}
inline const ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry& CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry::value() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry.value)
  return _internal_value();
}
inline void CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry::unsafe_arena_set_allocated_value(::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.value_);
  }
  _impl_.value_ = reinterpret_cast<::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry.value)
}
inline ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry::release_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* released = _impl_.value_;
  _impl_.value_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry::unsafe_arena_release_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry.value)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* temp = _impl_.value_;
  _impl_.value_ = nullptr;
  return temp;
}
inline ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry::_internal_mutable_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.value_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry>(GetArenaForAllocation());
    _impl_.value_ = reinterpret_cast<::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry*>(p);
  }
  return _impl_.value_;
}
inline ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry::mutable_value() {
  ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* _msg = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry.value)
  return _msg;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry::set_allocated_value(::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry*>(_impl_.value_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.value_ = reinterpret_cast<::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry.value)
}

// -------------------------------------------------------------------

// CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry

// optional uint32 key = 1;
inline bool CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry::has_key() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry::clear_key() {
  _impl_.key_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry::key() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry.key)
  return _internal_key();
}
inline void CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry::set_key(::uint32_t value) {
  _internal_set_key(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry.key)
}
inline ::uint32_t CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry::_internal_set_key(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.key_ = value;
}

// optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;
inline bool CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry::has_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.value_ != nullptr);
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry::clear_value() {
  if (_impl_.value_ != nullptr) _impl_.value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry& CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* p = _impl_.value_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry&>(::_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry_default_instance_);
}
inline const ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry& CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry::value() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry.value)
  return _internal_value();
}
inline void CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry::unsafe_arena_set_allocated_value(::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.value_);
  }
  _impl_.value_ = reinterpret_cast<::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry.value)
}
inline ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry::release_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* released = _impl_.value_;
  _impl_.value_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry::unsafe_arena_release_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry.value)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* temp = _impl_.value_;
  _impl_.value_ = nullptr;
  return temp;
}
inline ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry::_internal_mutable_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.value_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry>(GetArenaForAllocation());
    _impl_.value_ = reinterpret_cast<::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry*>(p);
  }
  return _impl_.value_;
}
inline ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry::mutable_value() {
  ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* _msg = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry.value)
  return _msg;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry::set_allocated_value(::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry*>(_impl_.value_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.value_ = reinterpret_cast<::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry.value)
}

// -------------------------------------------------------------------

// CMsgSteamLearn_InferenceMetadata_Response_CompactTable

// optional string name = 1;
inline bool CMsgSteamLearn_InferenceMetadata_Response_CompactTable::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_CompactTable::clear_name() {
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamLearn_InferenceMetadata_Response_CompactTable::name() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CMsgSteamLearn_InferenceMetadata_Response_CompactTable::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.name)
}
inline std::string* CMsgSteamLearn_InferenceMetadata_Response_CompactTable::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.name)
  return _s;
}
inline const std::string& CMsgSteamLearn_InferenceMetadata_Response_CompactTable::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void CMsgSteamLearn_InferenceMetadata_Response_CompactTable::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgSteamLearn_InferenceMetadata_Response_CompactTable::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* CMsgSteamLearn_InferenceMetadata_Response_CompactTable::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_CompactTable::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.name)
}

// repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;
inline int CMsgSteamLearn_InferenceMetadata_Response_CompactTable::_internal_map_values_size() const {
  return _internal_map_values().size();
}
inline int CMsgSteamLearn_InferenceMetadata_Response_CompactTable::map_values_size() const {
  return _internal_map_values_size();
}
inline void CMsgSteamLearn_InferenceMetadata_Response_CompactTable::clear_map_values() {
  _internal_mutable_map_values()->Clear();
}
inline ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry* CMsgSteamLearn_InferenceMetadata_Response_CompactTable::mutable_map_values(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.map_values)
  return _internal_mutable_map_values()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry >*
CMsgSteamLearn_InferenceMetadata_Response_CompactTable::mutable_map_values() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.map_values)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_map_values();
}
inline const ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry& CMsgSteamLearn_InferenceMetadata_Response_CompactTable::map_values(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.map_values)
    return _internal_map_values().Get(index);
}
inline ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry* CMsgSteamLearn_InferenceMetadata_Response_CompactTable::add_map_values() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry* _add = _internal_mutable_map_values()->Add();
  // @@protoc_insertion_point(field_add:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.map_values)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry >&
CMsgSteamLearn_InferenceMetadata_Response_CompactTable::map_values() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.map_values)
  return _internal_map_values();
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry>&
CMsgSteamLearn_InferenceMetadata_Response_CompactTable::_internal_map_values() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_values_;
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry>*
CMsgSteamLearn_InferenceMetadata_Response_CompactTable::_internal_mutable_map_values() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.map_values_;
}

// repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;
inline int CMsgSteamLearn_InferenceMetadata_Response_CompactTable::_internal_map_mappings_size() const {
  return _internal_map_mappings().size();
}
inline int CMsgSteamLearn_InferenceMetadata_Response_CompactTable::map_mappings_size() const {
  return _internal_map_mappings_size();
}
inline void CMsgSteamLearn_InferenceMetadata_Response_CompactTable::clear_map_mappings() {
  _internal_mutable_map_mappings()->Clear();
}
inline ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry* CMsgSteamLearn_InferenceMetadata_Response_CompactTable::mutable_map_mappings(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.map_mappings)
  return _internal_mutable_map_mappings()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry >*
CMsgSteamLearn_InferenceMetadata_Response_CompactTable::mutable_map_mappings() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.map_mappings)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_map_mappings();
}
inline const ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry& CMsgSteamLearn_InferenceMetadata_Response_CompactTable::map_mappings(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.map_mappings)
    return _internal_map_mappings().Get(index);
}
inline ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry* CMsgSteamLearn_InferenceMetadata_Response_CompactTable::add_map_mappings() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry* _add = _internal_mutable_map_mappings()->Add();
  // @@protoc_insertion_point(field_add:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.map_mappings)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry >&
CMsgSteamLearn_InferenceMetadata_Response_CompactTable::map_mappings() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.map_mappings)
  return _internal_map_mappings();
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry>&
CMsgSteamLearn_InferenceMetadata_Response_CompactTable::_internal_map_mappings() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_mappings_;
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry>*
CMsgSteamLearn_InferenceMetadata_Response_CompactTable::_internal_mutable_map_mappings() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.map_mappings_;
}

// -------------------------------------------------------------------

// CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster

// optional float x = 1;
inline bool CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::has_x() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::clear_x() {
  _impl_.x_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::x() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.x)
  return _internal_x();
}
inline void CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.x)
}
inline float CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::_internal_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.x_;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::_internal_set_x(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.x_ = value;
}

// optional float y = 2;
inline bool CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::has_y() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::clear_y() {
  _impl_.y_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::y() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.y)
  return _internal_y();
}
inline void CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.y)
}
inline float CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::_internal_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.y_;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::_internal_set_y(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.y_ = value;
}

// optional float radius = 3;
inline bool CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::has_radius() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::clear_radius() {
  _impl_.radius_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::radius() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.radius)
  return _internal_radius();
}
inline void CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::set_radius(float value) {
  _internal_set_radius(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.radius)
}
inline float CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::_internal_radius() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.radius_;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::_internal_set_radius(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.radius_ = value;
}

// optional float radius_75pct = 4;
inline bool CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::has_radius_75pct() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::clear_radius_75pct() {
  _impl_.radius_75pct_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::radius_75pct() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.radius_75pct)
  return _internal_radius_75pct();
}
inline void CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::set_radius_75pct(float value) {
  _internal_set_radius_75pct(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.radius_75pct)
}
inline float CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::_internal_radius_75pct() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.radius_75pct_;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::_internal_set_radius_75pct(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.radius_75pct_ = value;
}

// optional float radius_50pct = 5;
inline bool CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::has_radius_50pct() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::clear_radius_50pct() {
  _impl_.radius_50pct_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::radius_50pct() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.radius_50pct)
  return _internal_radius_50pct();
}
inline void CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::set_radius_50pct(float value) {
  _internal_set_radius_50pct(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.radius_50pct)
}
inline float CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::_internal_radius_50pct() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.radius_50pct_;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::_internal_set_radius_50pct(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.radius_50pct_ = value;
}

// optional float radius_25pct = 6;
inline bool CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::has_radius_25pct() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::clear_radius_25pct() {
  _impl_.radius_25pct_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline float CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::radius_25pct() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.radius_25pct)
  return _internal_radius_25pct();
}
inline void CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::set_radius_25pct(float value) {
  _internal_set_radius_25pct(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.radius_25pct)
}
inline float CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::_internal_radius_25pct() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.radius_25pct_;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster::_internal_set_radius_25pct(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.radius_25pct_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamLearn_InferenceMetadata_Response_KMeans

// optional string name = 1;
inline bool CMsgSteamLearn_InferenceMetadata_Response_KMeans::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_KMeans::clear_name() {
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSteamLearn_InferenceMetadata_Response_KMeans::name() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.KMeans.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CMsgSteamLearn_InferenceMetadata_Response_KMeans::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadata_Response.KMeans.name)
}
inline std::string* CMsgSteamLearn_InferenceMetadata_Response_KMeans::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_InferenceMetadata_Response.KMeans.name)
  return _s;
}
inline const std::string& CMsgSteamLearn_InferenceMetadata_Response_KMeans::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void CMsgSteamLearn_InferenceMetadata_Response_KMeans::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgSteamLearn_InferenceMetadata_Response_KMeans::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* CMsgSteamLearn_InferenceMetadata_Response_KMeans::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearn_InferenceMetadata_Response.KMeans.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_KMeans::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearn_InferenceMetadata_Response.KMeans.name)
}

// repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;
inline int CMsgSteamLearn_InferenceMetadata_Response_KMeans::_internal_clusters_size() const {
  return _internal_clusters().size();
}
inline int CMsgSteamLearn_InferenceMetadata_Response_KMeans::clusters_size() const {
  return _internal_clusters_size();
}
inline void CMsgSteamLearn_InferenceMetadata_Response_KMeans::clear_clusters() {
  _internal_mutable_clusters()->Clear();
}
inline ::CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster* CMsgSteamLearn_InferenceMetadata_Response_KMeans::mutable_clusters(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_InferenceMetadata_Response.KMeans.clusters)
  return _internal_mutable_clusters()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster >*
CMsgSteamLearn_InferenceMetadata_Response_KMeans::mutable_clusters() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearn_InferenceMetadata_Response.KMeans.clusters)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_clusters();
}
inline const ::CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster& CMsgSteamLearn_InferenceMetadata_Response_KMeans::clusters(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.KMeans.clusters)
    return _internal_clusters().Get(index);
}
inline ::CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster* CMsgSteamLearn_InferenceMetadata_Response_KMeans::add_clusters() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster* _add = _internal_mutable_clusters()->Add();
  // @@protoc_insertion_point(field_add:CMsgSteamLearn_InferenceMetadata_Response.KMeans.clusters)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster >&
CMsgSteamLearn_InferenceMetadata_Response_KMeans::clusters() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearn_InferenceMetadata_Response.KMeans.clusters)
  return _internal_clusters();
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster>&
CMsgSteamLearn_InferenceMetadata_Response_KMeans::_internal_clusters() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.clusters_;
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster>*
CMsgSteamLearn_InferenceMetadata_Response_KMeans::_internal_mutable_clusters() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.clusters_;
}

// -------------------------------------------------------------------

// CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram

// optional float min_value = 1;
inline bool CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram::has_min_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram::clear_min_value() {
  _impl_.min_value_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram::min_value() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram.min_value)
  return _internal_min_value();
}
inline void CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram::set_min_value(float value) {
  _internal_set_min_value(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram.min_value)
}
inline float CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram::_internal_min_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.min_value_;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram::_internal_set_min_value(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.min_value_ = value;
}

// optional float max_value = 2;
inline bool CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram::has_max_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram::clear_max_value() {
  _impl_.max_value_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram::max_value() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram.max_value)
  return _internal_max_value();
}
inline void CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram::set_max_value(float value) {
  _internal_set_max_value(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram.max_value)
}
inline float CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram::_internal_max_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.max_value_;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram::_internal_set_max_value(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.max_value_ = value;
}

// optional uint32 num_buckets = 3;
inline bool CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram::has_num_buckets() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram::clear_num_buckets() {
  _impl_.num_buckets_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram::num_buckets() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram.num_buckets)
  return _internal_num_buckets();
}
inline void CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram::set_num_buckets(::uint32_t value) {
  _internal_set_num_buckets(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram.num_buckets)
}
inline ::uint32_t CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram::_internal_num_buckets() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.num_buckets_;
}
inline void CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram::_internal_set_num_buckets(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.num_buckets_ = value;
}

// repeated uint32 bucket_counts = 4;
inline int CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram::_internal_bucket_counts_size() const {
  return _internal_bucket_counts().size();
}
inline int CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram::bucket_counts_size() const {
  return _internal_bucket_counts_size();
}
inline void CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram::clear_bucket_counts() {
  _internal_mutable_bucket_counts()->Clear();
}
inline ::uint32_t CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram::bucket_counts(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram.bucket_counts)
  return _internal_bucket_counts().Get(index);
}
inline void CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram::set_bucket_counts(int index, ::uint32_t value) {
  _internal_mutable_bucket_counts()->Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram.bucket_counts)
}
inline void CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram::add_bucket_counts(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_bucket_counts()->Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram.bucket_counts)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram::bucket_counts() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram.bucket_counts)
  return _internal_bucket_counts();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram::mutable_bucket_counts() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram.bucket_counts)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_bucket_counts();
}

inline const ::google::protobuf::RepeatedField<::uint32_t>& CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram::_internal_bucket_counts() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bucket_counts_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram::_internal_mutable_bucket_counts() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.bucket_counts_;
}

// -------------------------------------------------------------------

// CMsgSteamLearn_InferenceMetadata_Response

// optional .ESteamLearnInferenceMetadataResult inference_metadata_result = 1 [default = STEAMLEARN_INFERENCE_METADATA_ERROR];
inline bool CMsgSteamLearn_InferenceMetadata_Response::has_inference_metadata_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Response::clear_inference_metadata_result() {
  _impl_.inference_metadata_result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::ESteamLearnInferenceMetadataResult CMsgSteamLearn_InferenceMetadata_Response::inference_metadata_result() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.inference_metadata_result)
  return _internal_inference_metadata_result();
}
inline void CMsgSteamLearn_InferenceMetadata_Response::set_inference_metadata_result(::ESteamLearnInferenceMetadataResult value) {
  _internal_set_inference_metadata_result(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceMetadata_Response.inference_metadata_result)
}
inline ::ESteamLearnInferenceMetadataResult CMsgSteamLearn_InferenceMetadata_Response::_internal_inference_metadata_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::ESteamLearnInferenceMetadataResult>(_impl_.inference_metadata_result_);
}
inline void CMsgSteamLearn_InferenceMetadata_Response::_internal_set_inference_metadata_result(::ESteamLearnInferenceMetadataResult value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::ESteamLearnInferenceMetadataResult_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.inference_metadata_result_ = value;
}

// optional .CMsgSteamLearn_InferenceMetadata_Response.RowRange row_range = 2;
inline bool CMsgSteamLearn_InferenceMetadata_Response::has_row_range() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.row_range_ != nullptr);
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Response::clear_row_range() {
  if (_impl_.row_range_ != nullptr) _impl_.row_range_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgSteamLearn_InferenceMetadata_Response_RowRange& CMsgSteamLearn_InferenceMetadata_Response::_internal_row_range() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::CMsgSteamLearn_InferenceMetadata_Response_RowRange* p = _impl_.row_range_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamLearn_InferenceMetadata_Response_RowRange&>(::_CMsgSteamLearn_InferenceMetadata_Response_RowRange_default_instance_);
}
inline const ::CMsgSteamLearn_InferenceMetadata_Response_RowRange& CMsgSteamLearn_InferenceMetadata_Response::row_range() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.row_range)
  return _internal_row_range();
}
inline void CMsgSteamLearn_InferenceMetadata_Response::unsafe_arena_set_allocated_row_range(::CMsgSteamLearn_InferenceMetadata_Response_RowRange* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.row_range_);
  }
  _impl_.row_range_ = reinterpret_cast<::CMsgSteamLearn_InferenceMetadata_Response_RowRange*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamLearn_InferenceMetadata_Response.row_range)
}
inline ::CMsgSteamLearn_InferenceMetadata_Response_RowRange* CMsgSteamLearn_InferenceMetadata_Response::release_row_range() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSteamLearn_InferenceMetadata_Response_RowRange* released = _impl_.row_range_;
  _impl_.row_range_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgSteamLearn_InferenceMetadata_Response_RowRange* CMsgSteamLearn_InferenceMetadata_Response::unsafe_arena_release_row_range() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearn_InferenceMetadata_Response.row_range)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSteamLearn_InferenceMetadata_Response_RowRange* temp = _impl_.row_range_;
  _impl_.row_range_ = nullptr;
  return temp;
}
inline ::CMsgSteamLearn_InferenceMetadata_Response_RowRange* CMsgSteamLearn_InferenceMetadata_Response::_internal_mutable_row_range() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.row_range_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSteamLearn_InferenceMetadata_Response_RowRange>(GetArenaForAllocation());
    _impl_.row_range_ = reinterpret_cast<::CMsgSteamLearn_InferenceMetadata_Response_RowRange*>(p);
  }
  return _impl_.row_range_;
}
inline ::CMsgSteamLearn_InferenceMetadata_Response_RowRange* CMsgSteamLearn_InferenceMetadata_Response::mutable_row_range() {
  ::CMsgSteamLearn_InferenceMetadata_Response_RowRange* _msg = _internal_mutable_row_range();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_InferenceMetadata_Response.row_range)
  return _msg;
}
inline void CMsgSteamLearn_InferenceMetadata_Response::set_allocated_row_range(::CMsgSteamLearn_InferenceMetadata_Response_RowRange* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::CMsgSteamLearn_InferenceMetadata_Response_RowRange*>(_impl_.row_range_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::CMsgSteamLearn_InferenceMetadata_Response_RowRange*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.row_range_ = reinterpret_cast<::CMsgSteamLearn_InferenceMetadata_Response_RowRange*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearn_InferenceMetadata_Response.row_range)
}

// repeated .CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;
inline int CMsgSteamLearn_InferenceMetadata_Response::_internal_ranges_size() const {
  return _internal_ranges().size();
}
inline int CMsgSteamLearn_InferenceMetadata_Response::ranges_size() const {
  return _internal_ranges_size();
}
inline void CMsgSteamLearn_InferenceMetadata_Response::clear_ranges() {
  _internal_mutable_ranges()->Clear();
}
inline ::CMsgSteamLearn_InferenceMetadata_Response_Range* CMsgSteamLearn_InferenceMetadata_Response::mutable_ranges(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_InferenceMetadata_Response.ranges)
  return _internal_mutable_ranges()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_Range >*
CMsgSteamLearn_InferenceMetadata_Response::mutable_ranges() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearn_InferenceMetadata_Response.ranges)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_ranges();
}
inline const ::CMsgSteamLearn_InferenceMetadata_Response_Range& CMsgSteamLearn_InferenceMetadata_Response::ranges(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.ranges)
    return _internal_ranges().Get(index);
}
inline ::CMsgSteamLearn_InferenceMetadata_Response_Range* CMsgSteamLearn_InferenceMetadata_Response::add_ranges() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::CMsgSteamLearn_InferenceMetadata_Response_Range* _add = _internal_mutable_ranges()->Add();
  // @@protoc_insertion_point(field_add:CMsgSteamLearn_InferenceMetadata_Response.ranges)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_Range >&
CMsgSteamLearn_InferenceMetadata_Response::ranges() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearn_InferenceMetadata_Response.ranges)
  return _internal_ranges();
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceMetadata_Response_Range>&
CMsgSteamLearn_InferenceMetadata_Response::_internal_ranges() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ranges_;
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceMetadata_Response_Range>*
CMsgSteamLearn_InferenceMetadata_Response::_internal_mutable_ranges() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.ranges_;
}

// repeated .CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;
inline int CMsgSteamLearn_InferenceMetadata_Response::_internal_std_devs_size() const {
  return _internal_std_devs().size();
}
inline int CMsgSteamLearn_InferenceMetadata_Response::std_devs_size() const {
  return _internal_std_devs_size();
}
inline void CMsgSteamLearn_InferenceMetadata_Response::clear_std_devs() {
  _internal_mutable_std_devs()->Clear();
}
inline ::CMsgSteamLearn_InferenceMetadata_Response_StdDev* CMsgSteamLearn_InferenceMetadata_Response::mutable_std_devs(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_InferenceMetadata_Response.std_devs)
  return _internal_mutable_std_devs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_StdDev >*
CMsgSteamLearn_InferenceMetadata_Response::mutable_std_devs() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearn_InferenceMetadata_Response.std_devs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_std_devs();
}
inline const ::CMsgSteamLearn_InferenceMetadata_Response_StdDev& CMsgSteamLearn_InferenceMetadata_Response::std_devs(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.std_devs)
    return _internal_std_devs().Get(index);
}
inline ::CMsgSteamLearn_InferenceMetadata_Response_StdDev* CMsgSteamLearn_InferenceMetadata_Response::add_std_devs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::CMsgSteamLearn_InferenceMetadata_Response_StdDev* _add = _internal_mutable_std_devs()->Add();
  // @@protoc_insertion_point(field_add:CMsgSteamLearn_InferenceMetadata_Response.std_devs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_StdDev >&
CMsgSteamLearn_InferenceMetadata_Response::std_devs() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearn_InferenceMetadata_Response.std_devs)
  return _internal_std_devs();
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceMetadata_Response_StdDev>&
CMsgSteamLearn_InferenceMetadata_Response::_internal_std_devs() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.std_devs_;
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceMetadata_Response_StdDev>*
CMsgSteamLearn_InferenceMetadata_Response::_internal_mutable_std_devs() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.std_devs_;
}

// repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;
inline int CMsgSteamLearn_InferenceMetadata_Response::_internal_compact_tables_size() const {
  return _internal_compact_tables().size();
}
inline int CMsgSteamLearn_InferenceMetadata_Response::compact_tables_size() const {
  return _internal_compact_tables_size();
}
inline void CMsgSteamLearn_InferenceMetadata_Response::clear_compact_tables() {
  _internal_mutable_compact_tables()->Clear();
}
inline ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable* CMsgSteamLearn_InferenceMetadata_Response::mutable_compact_tables(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_InferenceMetadata_Response.compact_tables)
  return _internal_mutable_compact_tables()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable >*
CMsgSteamLearn_InferenceMetadata_Response::mutable_compact_tables() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearn_InferenceMetadata_Response.compact_tables)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_compact_tables();
}
inline const ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable& CMsgSteamLearn_InferenceMetadata_Response::compact_tables(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.compact_tables)
    return _internal_compact_tables().Get(index);
}
inline ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable* CMsgSteamLearn_InferenceMetadata_Response::add_compact_tables() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable* _add = _internal_mutable_compact_tables()->Add();
  // @@protoc_insertion_point(field_add:CMsgSteamLearn_InferenceMetadata_Response.compact_tables)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_CompactTable >&
CMsgSteamLearn_InferenceMetadata_Response::compact_tables() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearn_InferenceMetadata_Response.compact_tables)
  return _internal_compact_tables();
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceMetadata_Response_CompactTable>&
CMsgSteamLearn_InferenceMetadata_Response::_internal_compact_tables() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.compact_tables_;
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceMetadata_Response_CompactTable>*
CMsgSteamLearn_InferenceMetadata_Response::_internal_mutable_compact_tables() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.compact_tables_;
}

// repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;
inline int CMsgSteamLearn_InferenceMetadata_Response::_internal_kmeans_size() const {
  return _internal_kmeans().size();
}
inline int CMsgSteamLearn_InferenceMetadata_Response::kmeans_size() const {
  return _internal_kmeans_size();
}
inline void CMsgSteamLearn_InferenceMetadata_Response::clear_kmeans() {
  _internal_mutable_kmeans()->Clear();
}
inline ::CMsgSteamLearn_InferenceMetadata_Response_KMeans* CMsgSteamLearn_InferenceMetadata_Response::mutable_kmeans(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_InferenceMetadata_Response.kmeans)
  return _internal_mutable_kmeans()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_KMeans >*
CMsgSteamLearn_InferenceMetadata_Response::mutable_kmeans() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearn_InferenceMetadata_Response.kmeans)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kmeans();
}
inline const ::CMsgSteamLearn_InferenceMetadata_Response_KMeans& CMsgSteamLearn_InferenceMetadata_Response::kmeans(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.kmeans)
    return _internal_kmeans().Get(index);
}
inline ::CMsgSteamLearn_InferenceMetadata_Response_KMeans* CMsgSteamLearn_InferenceMetadata_Response::add_kmeans() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::CMsgSteamLearn_InferenceMetadata_Response_KMeans* _add = _internal_mutable_kmeans()->Add();
  // @@protoc_insertion_point(field_add:CMsgSteamLearn_InferenceMetadata_Response.kmeans)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceMetadata_Response_KMeans >&
CMsgSteamLearn_InferenceMetadata_Response::kmeans() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearn_InferenceMetadata_Response.kmeans)
  return _internal_kmeans();
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceMetadata_Response_KMeans>&
CMsgSteamLearn_InferenceMetadata_Response::_internal_kmeans() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kmeans_;
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceMetadata_Response_KMeans>*
CMsgSteamLearn_InferenceMetadata_Response::_internal_mutable_kmeans() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kmeans_;
}

// optional .CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram snapshot_histogram = 7;
inline bool CMsgSteamLearn_InferenceMetadata_Response::has_snapshot_histogram() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.snapshot_histogram_ != nullptr);
  return value;
}
inline void CMsgSteamLearn_InferenceMetadata_Response::clear_snapshot_histogram() {
  if (_impl_.snapshot_histogram_ != nullptr) _impl_.snapshot_histogram_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram& CMsgSteamLearn_InferenceMetadata_Response::_internal_snapshot_histogram() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram* p = _impl_.snapshot_histogram_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram&>(::_CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram_default_instance_);
}
inline const ::CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram& CMsgSteamLearn_InferenceMetadata_Response::snapshot_histogram() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceMetadata_Response.snapshot_histogram)
  return _internal_snapshot_histogram();
}
inline void CMsgSteamLearn_InferenceMetadata_Response::unsafe_arena_set_allocated_snapshot_histogram(::CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.snapshot_histogram_);
  }
  _impl_.snapshot_histogram_ = reinterpret_cast<::CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamLearn_InferenceMetadata_Response.snapshot_histogram)
}
inline ::CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram* CMsgSteamLearn_InferenceMetadata_Response::release_snapshot_histogram() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram* released = _impl_.snapshot_histogram_;
  _impl_.snapshot_histogram_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram* CMsgSteamLearn_InferenceMetadata_Response::unsafe_arena_release_snapshot_histogram() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearn_InferenceMetadata_Response.snapshot_histogram)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram* temp = _impl_.snapshot_histogram_;
  _impl_.snapshot_histogram_ = nullptr;
  return temp;
}
inline ::CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram* CMsgSteamLearn_InferenceMetadata_Response::_internal_mutable_snapshot_histogram() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.snapshot_histogram_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram>(GetArenaForAllocation());
    _impl_.snapshot_histogram_ = reinterpret_cast<::CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram*>(p);
  }
  return _impl_.snapshot_histogram_;
}
inline ::CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram* CMsgSteamLearn_InferenceMetadata_Response::mutable_snapshot_histogram() {
  ::CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram* _msg = _internal_mutable_snapshot_histogram();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_InferenceMetadata_Response.snapshot_histogram)
  return _msg;
}
inline void CMsgSteamLearn_InferenceMetadata_Response::set_allocated_snapshot_histogram(::CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram*>(_impl_.snapshot_histogram_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.snapshot_histogram_ = reinterpret_cast<::CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearn_InferenceMetadata_Response.snapshot_histogram)
}

// -------------------------------------------------------------------

// CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput

// optional float value = 1;
inline bool CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput::has_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput::clear_value() {
  _impl_.value_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput::value() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput.value)
  return _internal_value();
}
inline void CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput::set_value(float value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput.value)
}
inline float CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_;
}
inline void CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput::_internal_set_value(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput

// repeated float weight = 1;
inline int CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput::_internal_weight_size() const {
  return _internal_weight().size();
}
inline int CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput::weight_size() const {
  return _internal_weight_size();
}
inline void CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput::clear_weight() {
  _internal_mutable_weight()->Clear();
}
inline float CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput::weight(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.weight)
  return _internal_weight().Get(index);
}
inline void CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput::set_weight(int index, float value) {
  _internal_mutable_weight()->Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.weight)
}
inline void CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput::add_weight(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_weight()->Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.weight)
}
inline const ::google::protobuf::RepeatedField<float>& CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput::weight() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.weight)
  return _internal_weight();
}
inline ::google::protobuf::RepeatedField<float>* CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput::mutable_weight() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.weight)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_weight();
}

inline const ::google::protobuf::RepeatedField<float>& CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput::_internal_weight() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.weight_;
}
inline ::google::protobuf::RepeatedField<float>* CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput::_internal_mutable_weight() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.weight_;
}

// repeated float value = 2;
inline int CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput::_internal_value_size() const {
  return _internal_value().size();
}
inline int CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput::value_size() const {
  return _internal_value_size();
}
inline void CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput::clear_value() {
  _internal_mutable_value()->Clear();
}
inline float CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput::value(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.value)
  return _internal_value().Get(index);
}
inline void CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput::set_value(int index, float value) {
  _internal_mutable_value()->Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.value)
}
inline void CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput::add_value(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_value()->Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.value)
}
inline const ::google::protobuf::RepeatedField<float>& CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput::value() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.value)
  return _internal_value();
}
inline ::google::protobuf::RepeatedField<float>* CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.value)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_value();
}

inline const ::google::protobuf::RepeatedField<float>& CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_;
}
inline ::google::protobuf::RepeatedField<float>* CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput::_internal_mutable_value() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.value_;
}

// -------------------------------------------------------------------

// CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput

// repeated float weight = 1;
inline int CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput::_internal_weight_size() const {
  return _internal_weight().size();
}
inline int CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput::weight_size() const {
  return _internal_weight_size();
}
inline void CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput::clear_weight() {
  _internal_mutable_weight()->Clear();
}
inline float CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput::weight(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.weight)
  return _internal_weight().Get(index);
}
inline void CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput::set_weight(int index, float value) {
  _internal_mutable_weight()->Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.weight)
}
inline void CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput::add_weight(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_weight()->Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.weight)
}
inline const ::google::protobuf::RepeatedField<float>& CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput::weight() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.weight)
  return _internal_weight();
}
inline ::google::protobuf::RepeatedField<float>* CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput::mutable_weight() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.weight)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_weight();
}

inline const ::google::protobuf::RepeatedField<float>& CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput::_internal_weight() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.weight_;
}
inline ::google::protobuf::RepeatedField<float>* CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput::_internal_mutable_weight() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.weight_;
}

// repeated float value = 2;
inline int CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput::_internal_value_size() const {
  return _internal_value().size();
}
inline int CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput::value_size() const {
  return _internal_value_size();
}
inline void CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput::clear_value() {
  _internal_mutable_value()->Clear();
}
inline float CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput::value(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.value)
  return _internal_value().Get(index);
}
inline void CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput::set_value(int index, float value) {
  _internal_mutable_value()->Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.value)
}
inline void CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput::add_value(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_value()->Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.value)
}
inline const ::google::protobuf::RepeatedField<float>& CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput::value() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.value)
  return _internal_value();
}
inline ::google::protobuf::RepeatedField<float>* CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.value)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_value();
}

inline const ::google::protobuf::RepeatedField<float>& CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_;
}
inline ::google::protobuf::RepeatedField<float>* CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput::_internal_mutable_value() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.value_;
}

// -------------------------------------------------------------------

// CMsgSteamLearn_InferenceBackend_Response_Output

// .CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput binary_crossentropy = 1;
inline bool CMsgSteamLearn_InferenceBackend_Response_Output::has_binary_crossentropy() const {
  return ResponseType_case() == kBinaryCrossentropy;
}
inline bool CMsgSteamLearn_InferenceBackend_Response_Output::_internal_has_binary_crossentropy() const {
  return ResponseType_case() == kBinaryCrossentropy;
}
inline void CMsgSteamLearn_InferenceBackend_Response_Output::set_has_binary_crossentropy() {
  _impl_._oneof_case_[0] = kBinaryCrossentropy;
}
inline void CMsgSteamLearn_InferenceBackend_Response_Output::clear_binary_crossentropy() {
  if (ResponseType_case() == kBinaryCrossentropy) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.ResponseType_.binary_crossentropy_;
    }
    clear_has_ResponseType();
  }
}
inline ::CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput* CMsgSteamLearn_InferenceBackend_Response_Output::release_binary_crossentropy() {
  // @@protoc_insertion_point(field_release:CMsgSteamLearn_InferenceBackend_Response.Output.binary_crossentropy)
  if (ResponseType_case() == kBinaryCrossentropy) {
    clear_has_ResponseType();
    ::CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput* temp = _impl_.ResponseType_.binary_crossentropy_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.ResponseType_.binary_crossentropy_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput& CMsgSteamLearn_InferenceBackend_Response_Output::_internal_binary_crossentropy() const {
  return ResponseType_case() == kBinaryCrossentropy
      ? *_impl_.ResponseType_.binary_crossentropy_
      : reinterpret_cast<::CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput&>(::_CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput_default_instance_);
}
inline const ::CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput& CMsgSteamLearn_InferenceBackend_Response_Output::binary_crossentropy() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceBackend_Response.Output.binary_crossentropy)
  return _internal_binary_crossentropy();
}
inline ::CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput* CMsgSteamLearn_InferenceBackend_Response_Output::unsafe_arena_release_binary_crossentropy() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgSteamLearn_InferenceBackend_Response.Output.binary_crossentropy)
  if (ResponseType_case() == kBinaryCrossentropy) {
    clear_has_ResponseType();
    ::CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput* temp = _impl_.ResponseType_.binary_crossentropy_;
    _impl_.ResponseType_.binary_crossentropy_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgSteamLearn_InferenceBackend_Response_Output::unsafe_arena_set_allocated_binary_crossentropy(::CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput* binary_crossentropy) {
  clear_ResponseType();
  if (binary_crossentropy) {
    set_has_binary_crossentropy();
    _impl_.ResponseType_.binary_crossentropy_ = binary_crossentropy;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamLearn_InferenceBackend_Response.Output.binary_crossentropy)
}
inline ::CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput* CMsgSteamLearn_InferenceBackend_Response_Output::_internal_mutable_binary_crossentropy() {
  if (ResponseType_case() != kBinaryCrossentropy) {
    clear_ResponseType();
    set_has_binary_crossentropy();
    _impl_.ResponseType_.binary_crossentropy_ = CreateMaybeMessage< ::CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput >(GetArenaForAllocation());
  }
  return _impl_.ResponseType_.binary_crossentropy_;
}
inline ::CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput* CMsgSteamLearn_InferenceBackend_Response_Output::mutable_binary_crossentropy() {
  ::CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput* _msg = _internal_mutable_binary_crossentropy();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_InferenceBackend_Response.Output.binary_crossentropy)
  return _msg;
}

// .CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput categorical_crossentropy = 2;
inline bool CMsgSteamLearn_InferenceBackend_Response_Output::has_categorical_crossentropy() const {
  return ResponseType_case() == kCategoricalCrossentropy;
}
inline bool CMsgSteamLearn_InferenceBackend_Response_Output::_internal_has_categorical_crossentropy() const {
  return ResponseType_case() == kCategoricalCrossentropy;
}
inline void CMsgSteamLearn_InferenceBackend_Response_Output::set_has_categorical_crossentropy() {
  _impl_._oneof_case_[0] = kCategoricalCrossentropy;
}
inline void CMsgSteamLearn_InferenceBackend_Response_Output::clear_categorical_crossentropy() {
  if (ResponseType_case() == kCategoricalCrossentropy) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.ResponseType_.categorical_crossentropy_;
    }
    clear_has_ResponseType();
  }
}
inline ::CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput* CMsgSteamLearn_InferenceBackend_Response_Output::release_categorical_crossentropy() {
  // @@protoc_insertion_point(field_release:CMsgSteamLearn_InferenceBackend_Response.Output.categorical_crossentropy)
  if (ResponseType_case() == kCategoricalCrossentropy) {
    clear_has_ResponseType();
    ::CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput* temp = _impl_.ResponseType_.categorical_crossentropy_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.ResponseType_.categorical_crossentropy_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput& CMsgSteamLearn_InferenceBackend_Response_Output::_internal_categorical_crossentropy() const {
  return ResponseType_case() == kCategoricalCrossentropy
      ? *_impl_.ResponseType_.categorical_crossentropy_
      : reinterpret_cast<::CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput&>(::_CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput_default_instance_);
}
inline const ::CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput& CMsgSteamLearn_InferenceBackend_Response_Output::categorical_crossentropy() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceBackend_Response.Output.categorical_crossentropy)
  return _internal_categorical_crossentropy();
}
inline ::CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput* CMsgSteamLearn_InferenceBackend_Response_Output::unsafe_arena_release_categorical_crossentropy() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgSteamLearn_InferenceBackend_Response.Output.categorical_crossentropy)
  if (ResponseType_case() == kCategoricalCrossentropy) {
    clear_has_ResponseType();
    ::CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput* temp = _impl_.ResponseType_.categorical_crossentropy_;
    _impl_.ResponseType_.categorical_crossentropy_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgSteamLearn_InferenceBackend_Response_Output::unsafe_arena_set_allocated_categorical_crossentropy(::CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput* categorical_crossentropy) {
  clear_ResponseType();
  if (categorical_crossentropy) {
    set_has_categorical_crossentropy();
    _impl_.ResponseType_.categorical_crossentropy_ = categorical_crossentropy;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamLearn_InferenceBackend_Response.Output.categorical_crossentropy)
}
inline ::CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput* CMsgSteamLearn_InferenceBackend_Response_Output::_internal_mutable_categorical_crossentropy() {
  if (ResponseType_case() != kCategoricalCrossentropy) {
    clear_ResponseType();
    set_has_categorical_crossentropy();
    _impl_.ResponseType_.categorical_crossentropy_ = CreateMaybeMessage< ::CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput >(GetArenaForAllocation());
  }
  return _impl_.ResponseType_.categorical_crossentropy_;
}
inline ::CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput* CMsgSteamLearn_InferenceBackend_Response_Output::mutable_categorical_crossentropy() {
  ::CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput* _msg = _internal_mutable_categorical_crossentropy();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_InferenceBackend_Response.Output.categorical_crossentropy)
  return _msg;
}

// .CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput multi_binary_crossentropy = 3;
inline bool CMsgSteamLearn_InferenceBackend_Response_Output::has_multi_binary_crossentropy() const {
  return ResponseType_case() == kMultiBinaryCrossentropy;
}
inline bool CMsgSteamLearn_InferenceBackend_Response_Output::_internal_has_multi_binary_crossentropy() const {
  return ResponseType_case() == kMultiBinaryCrossentropy;
}
inline void CMsgSteamLearn_InferenceBackend_Response_Output::set_has_multi_binary_crossentropy() {
  _impl_._oneof_case_[0] = kMultiBinaryCrossentropy;
}
inline void CMsgSteamLearn_InferenceBackend_Response_Output::clear_multi_binary_crossentropy() {
  if (ResponseType_case() == kMultiBinaryCrossentropy) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.ResponseType_.multi_binary_crossentropy_;
    }
    clear_has_ResponseType();
  }
}
inline ::CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput* CMsgSteamLearn_InferenceBackend_Response_Output::release_multi_binary_crossentropy() {
  // @@protoc_insertion_point(field_release:CMsgSteamLearn_InferenceBackend_Response.Output.multi_binary_crossentropy)
  if (ResponseType_case() == kMultiBinaryCrossentropy) {
    clear_has_ResponseType();
    ::CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput* temp = _impl_.ResponseType_.multi_binary_crossentropy_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.ResponseType_.multi_binary_crossentropy_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput& CMsgSteamLearn_InferenceBackend_Response_Output::_internal_multi_binary_crossentropy() const {
  return ResponseType_case() == kMultiBinaryCrossentropy
      ? *_impl_.ResponseType_.multi_binary_crossentropy_
      : reinterpret_cast<::CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput&>(::_CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput_default_instance_);
}
inline const ::CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput& CMsgSteamLearn_InferenceBackend_Response_Output::multi_binary_crossentropy() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceBackend_Response.Output.multi_binary_crossentropy)
  return _internal_multi_binary_crossentropy();
}
inline ::CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput* CMsgSteamLearn_InferenceBackend_Response_Output::unsafe_arena_release_multi_binary_crossentropy() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgSteamLearn_InferenceBackend_Response.Output.multi_binary_crossentropy)
  if (ResponseType_case() == kMultiBinaryCrossentropy) {
    clear_has_ResponseType();
    ::CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput* temp = _impl_.ResponseType_.multi_binary_crossentropy_;
    _impl_.ResponseType_.multi_binary_crossentropy_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgSteamLearn_InferenceBackend_Response_Output::unsafe_arena_set_allocated_multi_binary_crossentropy(::CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput* multi_binary_crossentropy) {
  clear_ResponseType();
  if (multi_binary_crossentropy) {
    set_has_multi_binary_crossentropy();
    _impl_.ResponseType_.multi_binary_crossentropy_ = multi_binary_crossentropy;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamLearn_InferenceBackend_Response.Output.multi_binary_crossentropy)
}
inline ::CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput* CMsgSteamLearn_InferenceBackend_Response_Output::_internal_mutable_multi_binary_crossentropy() {
  if (ResponseType_case() != kMultiBinaryCrossentropy) {
    clear_ResponseType();
    set_has_multi_binary_crossentropy();
    _impl_.ResponseType_.multi_binary_crossentropy_ = CreateMaybeMessage< ::CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput >(GetArenaForAllocation());
  }
  return _impl_.ResponseType_.multi_binary_crossentropy_;
}
inline ::CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput* CMsgSteamLearn_InferenceBackend_Response_Output::mutable_multi_binary_crossentropy() {
  ::CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput* _msg = _internal_mutable_multi_binary_crossentropy();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_InferenceBackend_Response.Output.multi_binary_crossentropy)
  return _msg;
}

inline bool CMsgSteamLearn_InferenceBackend_Response_Output::has_ResponseType() const {
  return ResponseType_case() != RESPONSETYPE_NOT_SET;
}
inline void CMsgSteamLearn_InferenceBackend_Response_Output::clear_has_ResponseType() {
  _impl_._oneof_case_[0] = RESPONSETYPE_NOT_SET;
}
inline CMsgSteamLearn_InferenceBackend_Response_Output::ResponseTypeCase CMsgSteamLearn_InferenceBackend_Response_Output::ResponseType_case() const {
  return CMsgSteamLearn_InferenceBackend_Response_Output::ResponseTypeCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// CMsgSteamLearn_InferenceBackend_Response

// repeated .CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;
inline int CMsgSteamLearn_InferenceBackend_Response::_internal_outputs_size() const {
  return _internal_outputs().size();
}
inline int CMsgSteamLearn_InferenceBackend_Response::outputs_size() const {
  return _internal_outputs_size();
}
inline void CMsgSteamLearn_InferenceBackend_Response::clear_outputs() {
  _internal_mutable_outputs()->Clear();
}
inline ::CMsgSteamLearn_InferenceBackend_Response_Output* CMsgSteamLearn_InferenceBackend_Response::mutable_outputs(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_InferenceBackend_Response.outputs)
  return _internal_mutable_outputs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceBackend_Response_Output >*
CMsgSteamLearn_InferenceBackend_Response::mutable_outputs() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamLearn_InferenceBackend_Response.outputs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_outputs();
}
inline const ::CMsgSteamLearn_InferenceBackend_Response_Output& CMsgSteamLearn_InferenceBackend_Response::outputs(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_InferenceBackend_Response.outputs)
    return _internal_outputs().Get(index);
}
inline ::CMsgSteamLearn_InferenceBackend_Response_Output* CMsgSteamLearn_InferenceBackend_Response::add_outputs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::CMsgSteamLearn_InferenceBackend_Response_Output* _add = _internal_mutable_outputs()->Add();
  // @@protoc_insertion_point(field_add:CMsgSteamLearn_InferenceBackend_Response.outputs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamLearn_InferenceBackend_Response_Output >&
CMsgSteamLearn_InferenceBackend_Response::outputs() const {
  // @@protoc_insertion_point(field_list:CMsgSteamLearn_InferenceBackend_Response.outputs)
  return _internal_outputs();
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceBackend_Response_Output>&
CMsgSteamLearn_InferenceBackend_Response::_internal_outputs() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.outputs_;
}
inline ::google::protobuf::RepeatedPtrField<::CMsgSteamLearn_InferenceBackend_Response_Output>*
CMsgSteamLearn_InferenceBackend_Response::_internal_mutable_outputs() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.outputs_;
}

// -------------------------------------------------------------------

// CMsgSteamLearn_Inference_Response

// optional .ESteamLearnInferenceResult inference_result = 1 [default = STEAMLEARN_INFERENCE_ERROR];
inline bool CMsgSteamLearn_Inference_Response::has_inference_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgSteamLearn_Inference_Response::clear_inference_result() {
  _impl_.inference_result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::ESteamLearnInferenceResult CMsgSteamLearn_Inference_Response::inference_result() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_Inference_Response.inference_result)
  return _internal_inference_result();
}
inline void CMsgSteamLearn_Inference_Response::set_inference_result(::ESteamLearnInferenceResult value) {
  _internal_set_inference_result(value);
  // @@protoc_insertion_point(field_set:CMsgSteamLearn_Inference_Response.inference_result)
}
inline ::ESteamLearnInferenceResult CMsgSteamLearn_Inference_Response::_internal_inference_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::ESteamLearnInferenceResult>(_impl_.inference_result_);
}
inline void CMsgSteamLearn_Inference_Response::_internal_set_inference_result(::ESteamLearnInferenceResult value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::ESteamLearnInferenceResult_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.inference_result_ = value;
}

// optional .CMsgSteamLearn_InferenceBackend_Response backend_response = 2;
inline bool CMsgSteamLearn_Inference_Response::has_backend_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.backend_response_ != nullptr);
  return value;
}
inline void CMsgSteamLearn_Inference_Response::clear_backend_response() {
  if (_impl_.backend_response_ != nullptr) _impl_.backend_response_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgSteamLearn_InferenceBackend_Response& CMsgSteamLearn_Inference_Response::_internal_backend_response() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::CMsgSteamLearn_InferenceBackend_Response* p = _impl_.backend_response_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSteamLearn_InferenceBackend_Response&>(::_CMsgSteamLearn_InferenceBackend_Response_default_instance_);
}
inline const ::CMsgSteamLearn_InferenceBackend_Response& CMsgSteamLearn_Inference_Response::backend_response() const {
  // @@protoc_insertion_point(field_get:CMsgSteamLearn_Inference_Response.backend_response)
  return _internal_backend_response();
}
inline void CMsgSteamLearn_Inference_Response::unsafe_arena_set_allocated_backend_response(::CMsgSteamLearn_InferenceBackend_Response* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.backend_response_);
  }
  _impl_.backend_response_ = reinterpret_cast<::CMsgSteamLearn_InferenceBackend_Response*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSteamLearn_Inference_Response.backend_response)
}
inline ::CMsgSteamLearn_InferenceBackend_Response* CMsgSteamLearn_Inference_Response::release_backend_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSteamLearn_InferenceBackend_Response* released = _impl_.backend_response_;
  _impl_.backend_response_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgSteamLearn_InferenceBackend_Response* CMsgSteamLearn_Inference_Response::unsafe_arena_release_backend_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CMsgSteamLearn_Inference_Response.backend_response)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSteamLearn_InferenceBackend_Response* temp = _impl_.backend_response_;
  _impl_.backend_response_ = nullptr;
  return temp;
}
inline ::CMsgSteamLearn_InferenceBackend_Response* CMsgSteamLearn_Inference_Response::_internal_mutable_backend_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.backend_response_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSteamLearn_InferenceBackend_Response>(GetArenaForAllocation());
    _impl_.backend_response_ = reinterpret_cast<::CMsgSteamLearn_InferenceBackend_Response*>(p);
  }
  return _impl_.backend_response_;
}
inline ::CMsgSteamLearn_InferenceBackend_Response* CMsgSteamLearn_Inference_Response::mutable_backend_response() {
  ::CMsgSteamLearn_InferenceBackend_Response* _msg = _internal_mutable_backend_response();
  // @@protoc_insertion_point(field_mutable:CMsgSteamLearn_Inference_Response.backend_response)
  return _msg;
}
inline void CMsgSteamLearn_Inference_Response::set_allocated_backend_response(::CMsgSteamLearn_InferenceBackend_Response* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::CMsgSteamLearn_InferenceBackend_Response*>(_impl_.backend_response_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::CMsgSteamLearn_InferenceBackend_Response*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.backend_response_ = reinterpret_cast<::CMsgSteamLearn_InferenceBackend_Response*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamLearn_Inference_Response.backend_response)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::ESteamLearnDataType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ESteamLearnDataType>() {
  return ::ESteamLearnDataType_descriptor();
}
template <>
struct is_proto_enum<::ESteammLearnRegisterDataSourceResult> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ESteammLearnRegisterDataSourceResult>() {
  return ::ESteammLearnRegisterDataSourceResult_descriptor();
}
template <>
struct is_proto_enum<::ESteamLearnCacheDataResult> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ESteamLearnCacheDataResult>() {
  return ::ESteamLearnCacheDataResult_descriptor();
}
template <>
struct is_proto_enum<::ESteamLearnSnapshotProjectResult> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ESteamLearnSnapshotProjectResult>() {
  return ::ESteamLearnSnapshotProjectResult_descriptor();
}
template <>
struct is_proto_enum<::ESteamLearnGetHMACKeysResult> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ESteamLearnGetHMACKeysResult>() {
  return ::ESteamLearnGetHMACKeysResult_descriptor();
}
template <>
struct is_proto_enum<::ESteamLearnInferenceResult> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ESteamLearnInferenceResult>() {
  return ::ESteamLearnInferenceResult_descriptor();
}
template <>
struct is_proto_enum<::ESteamLearnInferenceMetadataResult> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ESteamLearnInferenceMetadataResult>() {
  return ::ESteamLearnInferenceMetadataResult_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_steammessages_5fsteamlearn_2esteamworkssdk_2eproto_2epb_2eh
